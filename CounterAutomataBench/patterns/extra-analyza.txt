                              # Contains metachars\n                (?: \\A | [^\\\\] )\n                (?: \\\\{2} )*\n                \\\\ [tnrfae0xcNLuLUEQ]\n            
                        [yY] (?= \\p{IsVowel} ) 
            # Example:\n          ^([^\\n]+)\\n            #   jsapp/models/user.js\n          ((
            ^.*\"                   # start with quotation mark\n            (?P<symbol>[ -~])# printable ASCII symbol used in the actual pixmap: 'space' to '~'\n            \\s+                    # white-space separated\n            c\\s+                   # 'c' to prefix colour??\n            (?P<color>\\#[0-9A-F]+) # colour as hex string (always??)\n            \\s*\"                   # close with quotes\n            \\s*/\\*\\s*              # white space then opening C-comment /*\n            \"                      # start new string\n            (?P<value>.*)          # description/value as free form string\n            \"                      # ... terminated by quotes\n            
        /\n                (?<class_U_explicit>\\\\U)\n                \\{\n                    (?<class_U_repetition>[0-9]+)\n                \\}\n            |\n                (?<class_U_implicit>\\\\U)\n            |\n                \\[\n                    (?<range_token_explicit>[^]]+)\n                \\]\n                \\{\n                    (?<range_repetition>[0-9]+)\n                \\}\n            |\n                \\[\n                    (?<range_token_implicit>[^]]+)\n                \\]\n            |\n                (?<literal_string>[^\\\\[]+)\n\n        /x
      @^\\s*                           # Start at the beginning of a line, ignoring leading whitespace\n      ((?:\n        [^=;\\[\\]]|                    # Key names cannot contain equal signs, semi-colons or square brackets,\n        \\[[^\\[\\]]*\\]                  # unless they are balanced and not nested\n      )+?)\n      \\s*=\\s*                         # Key/value pairs are separated by equal signs (ignoring white-space)\n      (?:\n        (\"(?:[^\"]|(?<=\\\\)\")*\")|     # Double-quoted string, which may contain slash-escaped quotes/slashes\n        ('(?:[^']|(?<=\\\\)')*')| # Single-quoted string, which may contain slash-escaped quotes/slashes\n        ([^\\r\\n]*?)                   # Non-quoted string\n      )\\s*$                           # Stop at the next end of a line, ignoring trailing whitespace
    ([^\\s\\\\]+) \\((.*)\\n
    ([^\\s\\\\]+):(.*)\\n
    at[^]*
   ( \\p{IsUpper} )
   ([^\\s\\\\]+):(.*)\\n
   // [^\\n\\\\]* (?: \\\\. [^\\n\\\\]* )* | /\\* (?: .*? \\*/ | .* ) 
 - - \\[(.*?)\\].*?(
 ' ( (?: '' )++ | [^']++ ) ' 
 ' ( [^'\\\\]*(?:\\\\.[^'\\\\]*)* ) ' 
  (.*)(^|[^\\\\]) \\Q$exp
 - (?P<season>\\d+)(\\xaa|a|st|nd|rd|th) (temporada|season)
 ' ([^'\\\\]* (?:\\\\.[^'\\\\]*)*) ' 
  ([a-zA-Z0-9\\.\\-\\_]*\\.pkg)\n
  .*(\\/|\\\\)api\\.node
  \\G  (?>\\s*\\S+)  (?<!\\Q$pat\\E)   
  \\\\item (.*) [(](.*)[)]((?:(?:, \\d+)|(?:, \\\\[a-z]*\\{\\d+\\}))+)
  \n                ( \\p
  ^ \\h* \\N{NUMBER SIGN} 
 # :nodoc:\n      \\\\A\n      (
 # EXAMPLE: <a rel=\"nofollow\" href=\"{mailto}webmaster\"\n\n        (?P<markup><\\s*[^\\>]*   # <a rel=\"nofollow\" href=   --> markup\n            (?:href|src|poster|data|cite|formaction|action)\\s*=)\n\n        (?P<quote>[\"\\'])        # \"                         --> quote\n        \\{(?P<cmd>.*?)\\}        # {mailto}                  --> cmd\n        (?P<url>.*?)            # webmaster                 --> __url (see path)\n        \\2                      # \"                         <-- quote\n\n        
 # Example:\n          ^\\d+\\)\\n    #   1)\n          (.*?)\\n     #   invalid signature on line 4: <unsupported expression>\n          (.*?)\\n     #   jsapp/models/user.js\n        
 # replace template vars\n\t\t\t\\Q$VAR_START_TAG\\E\n\t\t\t\\s*([\\w.-]+)\\s*\n\t\t\t\\Q$VAR_END_TAG\\E\n\t\t
 # Rev:20110220_1200 github.com\\/jmrware\\/LinkifyURL\n    # Match http & ftp URL that is not already linkified.\n      # Alternative 1: URL delimited by (parentheses).\n      (\\()                       # $1     \"(\" start delimiter.\n      ((?:ht|f)tps?:\\/\\/[a-z0-9\\-._~!$&'()*+,;=:\\/?#[\\]@%]+)  # $2: URL.\n      (\\))                       # $3: \")\" end delimiter.\n    | # Alternative 2: URL delimited by [square brackets].\n      (\\[)                       # $4: \"[\" start delimiter.\n      ((?:ht|f)tps?:\\/\\/[a-z0-9\\-._~!$&'()*+,;=:\\/?#[\\]@%]+)  # $5: URL.\n      (\\])                       # $6: \"]\" end delimiter.\n    | # Alternative 3: URL delimited by {curly braces}.\n      (\\{)                       # $7: \"{\" start delimiter.\n      ((?:ht|f)tps?:\\/\\/[a-z0-9\\-._~!$&'()*+,;=:\\/?#[\\]@%]+)  # $8: URL.\n      (\\})                       # $9: \"}\" end delimiter.\n    | # Alternative 4: URL delimited by <angle brackets>.\n      (<|&(?:lt|\\#60|\\#x3c);)  # $10: \"<\" start delimiter (or HTML entity).\n      ((?:ht|f)tps?:\\/\\/[a-z0-9\\-._~!$&'()*+,;=:\\/?#[\\]@%]+)  # $11: URL.\n      (>|&(?:gt|\\#62|\\#x3e);)  # $12: \">\" end delimiter (or HTML entity).\n    | # Alternative 5: URL not delimited by (), [], {} or <>.\n      (                           # $13: Prefix proving URL not already linked.\n        (?: ^                   # Can be a beginning of line or string, or\n        | [^=\\s'\"\\]]           # a non-\"=\", non-quote, non-\"]\", followed by\n        ) \\s*['\"]?               # optional whitespace and optional quote;\n      | [^=\\s]\\s+               # or... a non-equals sign followed by whitespace.\n      )                           # End $13. Non-prelinkified-proof prefix.\n      ( \\b                       # $14: Other non-delimited URL.\n        (?:ht|f)tps?:\\/\\/       # Required literal http, https, ftp or ftps prefix.\n        [a-z0-9\\-._~!$'()*+,;=:\\/?#[\\]@%]+ # All URI chars except \"&\" (normal*).\n        (?:                       # Either on a \"&\" or at the end of URI.\n          (?!                   # Allow a \"&\" char only if not start of an...\n            &(?:gt|\\#0*62|\\#x0*3e);                     # HTML \">\" entity, or\n          | &(?:amp|apos|quot|\\#0*3[49]|\\#x0*2[27]); # a [&'\"] entity if\n            [.!&',:?;]?        # followed by optional punctuation then\n            (?:[^a-z0-9\\-._~!$&'()*+,;=:\\/?#[\\]@%]|$)    # a non-URI char or EOS.\n          ) &                   # If neg-assertion true, match \"&\" (special).\n          [a-z0-9\\-._~!$'()*+,;=:\\/?#[\\]@%]* # More non-& URI chars (normal*).\n        )*                       # Unroll-the-loop (special normal*)*.\n        [a-z0-9\\-_~$()*+=\\/#[\\]@%]    # Last char can't be [.!&',;:?]\n      )                           # End $14. Other non-delimited URL.\n    
 # Rev:20110220_1200\n                ^\\s*+  # This regex validates well-formed list content.\n                (?:\n                \\[\\*\\]\n                [^[]*+(?:(?!\\[/?\\*\\])\\[[^[]*+)*+\n                \\[/\\*\\]\\s*+\n                )++\n                $\n                
 $markers->[0]\n                          \\s* ELSE (?:_|\\s+)\n                          \\Q$tag\\E \\s*\n                          $markers->[1]\n                          (.*)\n                        
 $maxwij) * 100)); \n\t}, @seq);\n\t$VB::form-> show;\n\t$VB::inspector-> {selectorChanging}-- if $VB::inspector;\n\tPrima::VB::ObjectInspector::renew_widgets;\n\tupdate_menu();\n\t$self-> text( $oldtxt);\n\t$VB::form-> notify(q(Load));\n\t$_-> notify(q(Load)) for $VB::form-> widgets;\n}\n\nsub open\n{\n\tmy $self = $_[0];\n\n\treturn if $VB::form and !$VB::form-> can_close;\n\n\tmy $d = VB::open_dialog(\n\t\tfilter => [['Form files' => '*.fm'], [ 'All files' => '*']],\n\t);\n\treturn unless $d-> execute;\n\t$self-> load_file( $d-> fileName);\n}\n\nsub write_form\n{\n\tmy ( $self, $partialExport) = @_;\n\t$VB::writeMode = 0;\n\n\tmy @cmp = $partialExport ? \n\t\t$VB::form-> marked_widgets : $VB::form-> widgets;\n\tmy %preload_modules;\n\n\tmy $header = <<PREHEAD;\n# VBForm version file=$Prima::VB::VBLoader::fileVersion builder=$VBVersion\nPREHEAD\n\n\tmy $c = <<STARTSUB;\nsub\n{\n\\treturn (\nSTARTSUB\n\n\tmy $main = $VB::form-> prf( 'name');\n\tpush( @cmp, $VB::form) unless $partialExport;\n\t@cmp = sort { $a-> {creationOrder} <=> $b-> {creationOrder}} @cmp;\n\n\tfor ( @cmp) {\n\t\tmy ( $class, $module) = @{$_}{'class','module'};\n\t\t$class = $_-> {realClass} if defined $_-> {realClass};\n\t\tmy $types = $_-> {types};\n\t\tmy $name = $_-> prf( 'name');\n\t\t$Prima::VB::VBLoader::eventContext[0] = $name;\n\t\t$c .= <<MEDI;\n\\t'$name' => {\n\\t\\tclass   => '$class',\n\\t\\tmodule  => '$module',\nMEDI\n\t\tif ( $_ == $VB::form) {\n\t\t\tPrima::VB::CodeEditor::sync_code;\n\t\t\t$c .= \"\\t\\tparent => 1,\\n\";\n\t\t\t$c .= \"\\t\\tcode => Prima::VB::VBLoader::GO_SUB(\\'\".\n\t\t\t\tPrima::VB::Types::generic::quotable($VB::code). \"'),\\n\";\n\t\t}\n\t\tmy %extras    = $_-> ext_profile;\n\t\tif ( scalar keys %extras) {\n\t\t\t$c .= \"\\t\\textras => {\\n\";\n\t\t\tfor ( sort keys %extras) {\n\t\t\t\tmy $val  = $extras{$_};\n\t\t\t\tmy $type = $self-> get_typerec( $types-> {$_}, \\$val);\n\t\t\t\t$val = defined($val) ? $type-> write( $_, $val) : 'undef';\n\t\t\t\t$c .= \"\\t\\t\\t$_ => $val,\\n\";\n\t\t\t}\n\t\t\t$c .= \"\\t\\t},\\n\";\n\t\t}\n\t\t%extras    = $_-> act_profile;\n\t\tif ( scalar keys %extras) {\n\t\t\t$c .= \"\\t\\tactions => {\\n\";\n\t\t\tfor ( sort keys %extras) {\n\t\t\t\tmy $val  = $extras{$_};\n\t\t\t\tmy $type = $self-> get_typerec( $types-> {$_}, \\$val);\n\t\t\t\t$val = defined($val) ? $type-> write( $_, $val) : 'undef';\n\t\t\t\t$c .= \"\\t\\t\\t$_ => $val,\\n\";\n\t\t\t}\n\t\t\t$c .= \"\\t\\t},\\n\";\n\t\t}\n\t\tmy %Handle_props = map { $_ => 1 } $_-> {prf_types}-> {Handle} ? @{$_-> {prf_types}-> {Handle}} : ();\n\t\tdelete $Handle_props{owner};\n\t\tif ( scalar keys %Handle_props) {\n\t\t\t$c .= \"\\t\\tsiblings => [qw(\" . join(' ', sort keys %Handle_props) . \")],\\n\";\n\t\t}\n\t\t$c .= \"\\t\\tprofile => {\\n\";\n\t\tmy ( $x,$prf) = ($_, $_-> {profile});\n\t\tmy @o = $_-> get_o_delta;\n\t\tfor( sort keys %{$prf}) {\n\t\t\tmy $val = $prf-> {$_};\n\t\t\tif ( $_ eq 'origin' && defined $val) {\n\t\t\t\tmy @nval = (\n\t\t\t\t\t$$val[0] - $o[0],\n\t\t\t\t\t$$val[1] - $o[1],\n\t\t\t\t);\n\t\t\t\t$val = \\@nval;\n\t\t\t}\n\t\t\tmy $type = $self-> get_typerec( $types-> {$_}, \\$val);\n\t\t\t$val = defined($val) ? $type-> write( $_, $val) : 'undef';\n\t\t\t$preload_modules{$_} = 1 for $type-> preload_modules();\n\t\t\t$c .= \"\\t\\t\\t$_ => $val,\\n\";\n\t\t}\n\t\t$c .= \"\\t}},\\n\";\n\t}\n\n$c .= <<POSTHEAD;\n\\t);\n}\nPOSTHEAD\n\t$header .= '# [preload] ' . join( ' ', sort keys %preload_modules) . \"\\n\";\n\treturn $header . $c;\n}\n\nsub write_PL\n{\n\tmy $self = $_[0];\n\tmy $main = $VB::form-> prf( 'name');\n\tmy @cmp = $VB::form-> widgets;\n\t$VB::writeMode = 1;\n\n\tmy $header = <<PREPREHEAD;\npackage ${main}Window;\n\nuse Prima;\nuse Prima::Classes;\nuse vars qw(\\@ISA);\n\\@ISA = qw(Prima::MainWindow);\n\nPREPREHEAD\n\n\tmy %modules = map { $_-> {module} => 1 } @cmp;\n\n\tPrima::VB::CodeEditor::sync_code;\n\t\n\tmy $c = <<PREHEAD;\n\n$VB::code\n\nsub profile_default\n{\n\tmy \\$def = \\$_[ 0]-> SUPER::profile_default;\n\tmy \\%prf = (\nPREHEAD\n\tmy $prf   = $VB::form-> {profile};\n\tmy $types = $VB::form-> {types};\n\tfor ( sort keys %$prf) {\n\t\tmy $val = $prf-> {$_};\n\t\tmy $type = $self-> get_typerec( $types-> {$_}, \\$val);\n\t\t$val = defined($val) ? $type-> write( $_, $val) : 'undef';\n\t\t$c .= \"\\t\\t$_ => $val,\\n\";\n\t}\n\n\t# size
 $parts)} @_; #
 $per) ] }, $_ for @$self;\n  }\n  my $cls = blessed_or_pkg($self);\n  $cls->new( map {; $cls->new(@$_) } @parts )\n}\n\nsub tuples {\n  my ($self, $size, $type, $bless) = @_;\n  $size = 2 unless defined $size;\n  Carp::confess \"Expected a positive integer size but got $size\"\n    if $size < 1;\n\n  # Autoboxed? Need to be blessed if we're to _try_coerce:\n  my $cls = blessed_or_pkg($self);\n  $self = $cls->new(@$self)\n    if defined $type and not Scalar::Util::blessed $self;\n\n  my $itr = do {\n    my @copy = @$self;\n    sub { CORE::splice @copy, 0, $size }\n  };\n  my @res;\n  while (my @nxt = $itr->()) {\n    @nxt = CORE::map {; $self->_try_coerce($type, $_) } @nxt\n      if defined $type;\n    CORE::push @res, $bless ? $cls->new(@nxt) : [ @nxt ];\n  }\n\n  $cls->new(@res)\n}\n\n\n=for Pod::Coverage fold_left foldl fold_right\n\n=cut\n\n{ no warnings 'once'; *foldl = *reduce; *fold_left = *reduce; }\nsub reduce {\n  my $pkg = caller;\n  no strict 'refs';\n  my $cb = $_[1];\n  List::Util::reduce { \n    local (*{\"${pkg}::a\"}, *{\"${pkg}::b\"}) = (\\$a, \\$b);\n    $a->$cb($b)\n  } @{ $_[0] }\n}\n\n{ no warnings 'once'; *fold_right = *foldr; }\nsub foldr {\n  my $pkg = caller;\n  no strict 'refs';\n  my $cb = $_[1];\n  List::Util::reduce {\n    local (*{\"${pkg}::a\"}, *{\"${pkg}::b\"}) = (\\$b, \\$a);\n    $a->$cb($b)\n  } CORE::reverse @{ $_[0] }\n}\n\nsub rotate {\n  my ($self, %params) = @_;\n  $params{left} && $params{right} ?\n    Carp::confess \"Cannot rotate in both directions!\"\n  : $params{right} ?\n    blessed_or_pkg($self)->new(\n      @$self ? ($self->[-1], @{ $self }[0 .. ($#$self - 1)]) : ()\n    )\n  : blessed_or_pkg($self)->new(\n      @$self ? (@{ $self }[1 .. $#$self], $self->[0]) : ()\n    )\n}\n\nsub rotate_in_place {\n  $_[0] = Scalar::Util::blessed $_[0] ?\n    $_[0]->rotate(@_[1 .. $#_]) : rotate(@_)\n}\n\nsub items_after {\n  my ($started, $lag);\n  blessed_or_pkg($_[0])->new(\n    CORE::grep $started ||= do { \n      my $x = $lag; $lag = $_[1]->(); $x \n    }, @{ $_[0] }\n  )\n}\n\nsub items_after_incl {\n  my $started;\n  blessed_or_pkg($_[0])->new(\n    CORE::grep $started ||= $_[1]->(), @{ $_[0] }\n  )\n}\n\nsub items_before {\n  my $more = 1;\n  blessed_or_pkg($_[0])->new(\n    CORE::grep $more &&= !$_[1]->(), @{ $_[0] }\n  )\n}\n\nsub items_before_incl {\n  my $more = 1; my $lag = 1;\n  blessed_or_pkg($_[0])->new(\n    CORE::grep $more &&= do { my $x = $lag; $lag = !$_[1]->(); $x }, \n      @{ $_[0] }\n  )\n}\n\nsub pick {\n  return $_[0]->shuffle if $_[1] >= @{ $_[0] };\n  my %idx;\n  $idx{ int rand @{ $_[0] } } = 1 until keys %idx == $_[1];\n  blessed_or_pkg($_[0])->new(\n    @{ $_[0] }[keys %idx]\n  )\n}\n\nsub roll {\n  blessed_or_pkg($_[0])->new(\n    @{ $_[0] }[ \n      map {; int rand @{ $_[0] } }\n        0 ..  (defined $_[1] ? $_[1] : @{ $_[0] }) - 1\n    ]\n  )\n}\n\nsub shuffle {\n  blessed_or_pkg($_[0])->new(\n    List::Util::shuffle( @{ $_[0] } )\n  )\n}\n\n=for Pod::Coverage squish\n\n=cut\n\n{ no warnings 'once'; *squish = *squished; }\nsub squished {\n  # @last is a single-item array to make tracking undefs saner ->\n  my (@last, @res);\n  ITEM: for (@{ $_[0] }) {\n    if (!@last) {\n      # No items seen yet.\n      $last[0] = $_; CORE::push @res, $_; next ITEM\n    } elsif (!defined $_) {\n      # Possibly two undefs in a row:\n      next ITEM if not defined $last[0];\n      # .. or not:\n      $last[0] = $_; CORE::push @res, $_; next ITEM\n    } elsif (!defined $last[0]) {\n      # Previous was an undef (but this isn't)\n      $last[0] = $_; CORE::push @res, $_; next ITEM\n    }\n    next ITEM if $_ eq $last[0];\n    $last[0] = $_; CORE::push @res, $_;\n  }\n  blessed_or_pkg($_[0])->new(@res)\n}\n\nsub uniq {\n  my %s;\n  blessed_or_pkg($_[0])->new( CORE::grep {; not $s{$_}++ } @{ $_[0] } )\n}\n\nsub repeated {\n  my %s;\n  blessed_or_pkg($_[0])->new( CORE::grep {; $s{$_}++ == 1 } @{ $_[0] } )\n}\n\nsub sort_by {\n  blessed_or_pkg($_[0])->new(\n    __sort_by( $_[1], @{ $_[0] } )\n  )\n}\n\nsub nsort_by {\n  blessed_or_pkg($_[0])->new(\n    __nsort_by( $_[1], @{ $_[0] } )\n  )\n}\n\nsub uniq_by {\n  blessed_or_pkg($_[0])->new(\n    __uniq_by( $_[1], @{ $_[0] } )\n  )\n}\n\nsub flatten_all {\n  CORE::map {;  __flatten_all($_)  } @{ $_[0] }\n}\n\nsub flatten {\n  __flatten( \n    ( defined $_[1] ? $_[1] : 0 ),\n    @{ $_[0] } \n  )\n}\n\nprint\n  qq[<Schroedingers_hat> My sleeping pattern is cryptographically secure.\\n]\nunless caller;\n1;\n\n=pod\n\n=head1 NAME\n\nList::Objects::WithUtils::Role::Array - Array manipulation methods\n\n=head1 SYNOPSIS\n\n  ## Via List::Objects::WithUtils::Array ->\n  use List::Objects::WithUtils 'array';\n\n  my $array = array(qw
 $reg{$e}->{$t}->[$p-1] $
 $reg{$edg}->{$t}->[$p-1] $
 $reg{$edg2}->{$t}->[$p-1] $
 $self->{GENE_COUNT}) } @$pvals; # 
 $total) * 100), ( $i 
 (   \n\t    # allow a plus or minus\n\t    # let them use any kind of dash but em and en\n\t    (?:\n\t\t(?! [\\N
 (
 ( $bar * ( $bat 
 ( (?: [^0-9@#.,E'] | (?: ' [^']* ' )++ )+ ) $ 
 ( [:;] \\s+ ) (\\pL[\\pL']* ) 
 ( [\"
 ( ['\\\\] ) 
 ( [A-Za-z0-9,@*!_'\"\\$. -]+  |\n       [\\xC0-\\xDF][\\x80-\\xBF]    |\n       [\\xE0-\\xEF][\\x80-\\xBF]
 ( \\P
 ($RE
 ($vpat+) ($cpat?) ($endg{$t}->[$p-1]) $
 ((?:[DEVAST ]{6})|(?:[DEVASTFB ]{8})|(?:[DEVASIL\\.]{6})) ([A-Za-z0-9\\_]+) (.+)
 ((\\\\*) ((\\\\)|(\\$)) (\\{)?(\\w (?(6)(.*)\\}|(\\w*)) )) }\n          
 (.*?)           # contained\n                           ( $markers->[2]\n                             \\s* \\Q$tag\\E \\s*  # \"our\" tag\n                             $markers->[3]\n                           )\n                         
 (.*?)(^|[^\\\\]) \\Q$exp
 (?!
 (?:
 (?: (?<=\\() | \\s ) \\Q$quote_col\\E\\z
 (?: (?=0) (?: 
 (?: ['
 (?: [szx] | [sc]h ) \\K $
 (?: \\A | [^\\\\] ) (?: \\\\\\\\)* [\\$\\@] 
 (?: \\A | [^\\\\] ) (?: \\\\{2} )* \" \\z 
 (?| \\b ( [IVX]+    ) \\b \n         | \\b ( [IVX]
 (?<!\\\\) \\# [^\\n]*
 (?<!\\\\) \\$ (?: \\{ (.*?) \\} | ([\\w-]+) ) (?: \\[(-?\\d+)\\] )? }
 (?<!\\\\) \\\\, 
 (?<!\\\\) \\\\n 
 (?<= \\p{IsConsonant} ) [yY]                   
 (?<= \\p{IsVowel} )     [yY] (?= \\p{IsVowel} ) 
 (?<=\\p{IsAlpha}) \\s+ (?=\\p{IsUpper}\\.) 
 (?<list>(?&PerlParenthesesList)) $PPR::GRAMMAR 
 (?<string> \n\t\t\t(?: \\S+ \\h* | \\S* )\n\t\t\t(?<char> \\P{ASCII} ) \n\t\t\t(?: \\h* \\S+ | \\S* )\n\t\t       )\n\t             
 (?<WHOLE>\n            # allow a plus or minus\n            # let them use any kind of dash but em and en\n            (?:\n                (?! [\\N
 (?= 
 (?= [
 (?=[hfnmg]) \n\t\t\t(?:http|file|ftp|news|mailto|gopher) \n\t\t\t:// \n                        [\\w\\d\\.\\%\\_\\/\\:\\-]+ \n                        (?<!\\.) \\.$ \n                      
 (?m: \\/\\* (?: .*? \\*\\/ | .* ) ) | (?://|\\#) .*? (?=
 (?P<date>(1|2)\\d{3}) 
-- (?P<iosVersionSection>.*) --
 ([$vocs]) ($cpat?) ($endg{cpres}->[$p-1]) $
 ([\"\\\\]) 
 ([\\\"\\']) ( (?: \\\\. | (?! \\1 ) [^\\\\] )* ) \\1 
 ([\\_\\-]) (?= [^\\_\\-]+ \\z )
 ([\\+\\-])?         # Sign\n               P                 # 'P' for period? This is our magic character)\n               (?:\n                   (?:(\\d+)W)?   # Weeks\n                   (?:(\\d+)D)?   # Days\n               )?\n               (?: T             # Time prefix\n                   (?:(\\d+)H)?   # Hours\n                   (?:(\\d+)M)?   # Minutes\n                   (?:(\\d+)S)?   # Seconds\n               )?\n             
 (\\\\)* \\[ (\\^?) (.+) ] 
 (\\\\)?\\[\\[([
 (\\A|\\G|[^\\\\]) [\\\\] (.) 
 (\\d) ( \\d
 (\\P{IsWord}+) 
 (\\P{IsWord}+)$
 (\\pL[\\pL']*)$
 (\\Q$ql\\E)? \\0 (\\Q$qr\\E)? 
 (\\QKHTML, like Gecko\\E) 
 (\\w|_\\p{Alpha}+) ([0-9]+)? (r)? ([.\\-+,\\/_=])? } 
 (\\w+) \\( ( [^\\)\\\\]* ( \\\\. [^\\)\\\\]* )* ) 
 (\\w+) \\( ( [^\\)\\\\]* ( \\\\. [^\\)\\\\]* )* ) \\)? 
 (^|[^\\\\]) (\\\\\\\\)* \\$(\\{)?(\\w+)(\\})? }\n              
 (5\\.0\\d
 (if|while) \\s++ \\[\\s++-\\w
 );\n        my %a_freq_of    :ATTR( :get<a_freq
 *((['\"]?).*?[^\\\\]\\2)(?=( |\\z))
 *(/.*?(?<!\\\\)/|[^/][^,]*) *,?
 *(?<!\\\\), *
 *(?<!\\\\)\\| *
 // [^\\n\\\\]* (?: \\\\. [^\\n\\\\]* )* | /\\* (?: .*? \\*/ | .* ) 
 // [^\\n\\\\]* (?: \\\\. [^\\n\\\\]* )* | /\\* (?: .*? \\*/ | .*() ) 
 ?\\Q$y\\E$
 [\\\\] n \\z 
 [^\\\"\\\\]* (?: \\\\. [^\\\"\\\\]* )* 
 [^\"\\\\]* (?: \\\\. [^\"\\\\]* )* 
 [^\\\\] (?: \\\\{2} )* (?: \\\\ | ' .* ) ' \\z 
 [^\\\\] (?: \\\\{2} )*? \\\\ ([^\\\\']) 
 [^\\\\] (?: \\\\{2} )*? \\\\ \" \\z 
 [^\\\\] \\# .* 
 [^\\\\]*\\\\(.*)
 [^\\\\\\n]+? (?= \\\\ | $ | 
 [^\\t\\P{Cntrl}] 
 \\\\\\\\
 \\\\ ( [\\\\tnr\"] | u.
 \\\\ ( \\p{Lower} | R ) 
 \\\\ (?: 
 \" ( [^\"\\\\]*(?:\\\\.[^\"\\\\]*)* ) \" 
 \" ([^\"\\\\]* (?:\\\\.[^\"\\\\]*)*) \" 
 \"(?: (?!\")\n                                      (?: 
 \\$ (?: 
 \\\\( $ldx | $rdx ) 
 \\\\($WORDMAC_RE)(?: \\{\\} | \\s+ | \\b) 
 \\\\(.) | ['\"] 
 \\\\(\\d{1,3}) 
 \\\\(\\w+)
 \\{ \\| \n      \\s*+ [a-zA-Z_]\\w*+ \\s*+ \n        (,\\s*+[a-zA-Z_]\\w*+\\s*+)*+\n      \\|
 \\{ \\| \\s*+ [a-zA-Z_]\\w*+ \\s*+ (,\\s*+[a-zA-Z_]\\w*+\\s*+)*+ \\|
 \\{\\\\($WORDMAC_RE)\\} 
 \\A ( 
 \\A ( (?! \\R ) \\X )+ \\R* \\z 
 \\A (\\\\+) ([^\\\\] .*)? \\z 
 \\A (\\X) \\z 
 \\A .* / \\Q$username\\E \\z 
 \\A [\\h\\v] + \\z 
 \\A \\p{IsLowercaseRoman}+ \\z 
 \\A \\p{IsUppercaseRoman}+ \\z 
 \\A \\Q$_\\E 
 \\A \\Q$BASE_URL\\E \\d+ \\z 
 \\A \\Q$header\\E 
 \\A \\Q<configuration>\\E \\s+ \\Q<property>\\E
 \\b Strict[/\\\\]Perl\\.pm \\z
 \\G ' ([^'\\\\]* (?:\\\\.[^'\\\\]*)*) '\n\t\t\t\t     | \\G \" ([^\"\\\\]* (?:\\\\.[^\"\\\\]*)*) \"\n\t\t\t\t     | \\G ` ([^`\\\\]* (?:\\\\.[^`\\\\]*)*) `\n\t\t\t\t     
 \\G ([[({<]) }xgc;\n\n    if (${&Rx} =~ m{ \\G ( [a-fA-F0-9]+ ) }xgc) {\n      return $S->force_object(anyof_char => chr(hex $1), \"\\\\x$1\") if $cc;\n      return $S->object(exact => chr(hex $1), \"\\\\x$1\");\n    }\n\n    $S->warn(0, \"Illegal hexadecimal digit '%s' ignored\", substr(${&Rx}, &RxPOS, 1));\n    return $S->force_object(anyof_char => \"\\0\", \"\\\\x[0]\") if $cc;\n    return $S->object(exact => \"\\0\", \"\\\\x[0]\");\n  
 \\G ([[({<]) }xgc;\n\n    if (${&Rx} =~ m{ \\G ( [a-fA-F0-9]+ ) }xgc) {\n      return $S->force_object(anyof_char_comp => chr(hex $1), \"\\\\X$1\") if $cc;\n      return $S->object(exact_comp => chr(hex $1), \"\\\\X$1\");\n    }\n\n    $S->warn(0, \"Illegal hexadecimal digit '%s' ignored\", substr(${&Rx}, &RxPOS, 1));\n    return $S->force_object(anyof_char_comp => \"\\0\", \"\\\\X[0]\") if $cc;\n    return $S->object(exact_comp => \"\\0\", \"\\\\X[0]\");\n  
 \\G ([\\\"\\']) (|.*?[^\\\\]) \\1 \\s* 
 \\G (\\w|_\\p{IsAlpha}+) ([0-9]+)? (r)? ([.\\-+,\\/_=]*)? } 
 \n        ( [\\x
 \\N
 \\N{GREEK CAPITAL LETTER ALPHA}       
 \\N{GREEK CAPITAL LETTER BETA}        
 \\N{GREEK CAPITAL LETTER DELTA}       
 \\N{GREEK CAPITAL LETTER EPSILON}     
 \\N{GREEK CAPITAL LETTER ETA}         
 \\N{GREEK CAPITAL LETTER GAMMA}       
 \\N{GREEK CAPITAL LETTER CHI}         
 \\N{GREEK CAPITAL LETTER IOTA}        
 \\N{GREEK CAPITAL LETTER KAPPA}       
 \\N{GREEK CAPITAL LETTER LAMDA}       
 \\N{GREEK CAPITAL LETTER MU}          
 \\N{GREEK CAPITAL LETTER NU}          
 \\N{GREEK CAPITAL LETTER OMEGA}       
 \\N{GREEK CAPITAL LETTER OMICRON}     
 \\N{GREEK CAPITAL LETTER PHI}         
 \\N{GREEK CAPITAL LETTER PI}          
 \\N{GREEK CAPITAL LETTER PSI}         
 \\N{GREEK CAPITAL LETTER RHO}         
 \\N{GREEK CAPITAL LETTER SIGMA}       
 \\N{GREEK CAPITAL LETTER TAU}         
 \\N{GREEK CAPITAL LETTER THETA}       
 \\N{GREEK CAPITAL LETTER UPSILON}     
 \\N{GREEK CAPITAL LETTER XI}          
 \\N{GREEK CAPITAL LETTER ZETA}        
 \\N{GREEK SMALL LETTER ALPHA}         
 \\N{GREEK SMALL LETTER BETA}          
 \\N{GREEK SMALL LETTER DELTA}         
 \\N{GREEK SMALL LETTER EPSILON}       
 \\N{GREEK SMALL LETTER ETA}           
 \\N{GREEK SMALL LETTER FINAL SIGMA}   
 \\N{GREEK SMALL LETTER GAMMA}         
 \\N{GREEK SMALL LETTER CHI}           
 \\N{GREEK SMALL LETTER IOTA}          
 \\N{GREEK SMALL LETTER KAPPA}         
 \\N{GREEK SMALL LETTER LAMDA}         
 \\N{GREEK SMALL LETTER MU}            
 \\N{GREEK SMALL LETTER NU}            
 \\N{GREEK SMALL LETTER OMEGA}         
 \\N{GREEK SMALL LETTER OMICRON}       
 \\N{GREEK SMALL LETTER PHI}           
 \\N{GREEK SMALL LETTER PI}            
 \\N{GREEK SMALL LETTER PSI}           
 \\N{GREEK SMALL LETTER RHO}           
 \\N{GREEK SMALL LETTER SIGMA}         
 \\N{GREEK SMALL LETTER TAU}           
 \\N{GREEK SMALL LETTER THETA}         
 \\N{GREEK SMALL LETTER UPSILON}       
 \\N{GREEK SMALL LETTER XI}            
 \\N{GREEK SMALL LETTER ZETA}          
 \\p
 \\p{Han}                  
 \\p{InHangulSyllables}    
 \\p{IsUpper} 
 \\p{PrivateUse}           
 \\p{Unassigned}           
 \\P{whitespace}
 \\Q$/\\E $ 
 \\Q$_\\E(?:,|$)
 \\Q$file\\E in \\@INC 
 \\Q$initial\\E [^\\\\$initial]* (\\\\.[^\\\\$initial]*)* \\Q$initial\\E 
 \\Q$lensSpecPrt\\E( \\(|$)
 \\Q$operator\\E 
 \\Q$other\\E 
 \\Q$rule\\E\\b
 \\Q$sep\\E 
 \\Q$y\\E 
 \\Q/**\\E .*? \\*?\\Q*/\\E 
 \\Qnot a known type constraint\\E 
 \\Q-oozie-oozi-W\\E \\z 
 \\R
 \\s{42}(?P<value>.+)
 \\s+ \\Q$INPUT_RECORD_SEPARATOR\\E 
 \\S+[\\/|\\\\]ts-loader[\\/|\\\\]index.js
 \\w{10,}+$
 ^ ( 
 ^ ( (?:\\p{Alpha}\\.)+ ) ( \\p{Alpha}{3,} ) $ 
 ^ ( (?> (?: [\\x00-\\x7F\\xF5-\\xFF]      |\n\t                         [\\xC0-\\xDF][\\x80-\\xBF]    |\n\t                         [\\xE0-\\xEF][\\x80-\\xBF]
 ^ \\p{IsUpper} \\.? $ 
 ^ \\Q$p->[0]\\E / (.+) $ 
 ^(\\$(?:\\_[\\w:]|::)) 
 ^\n        (?P<year>-?[0-9]{4}) - (?P<month>[0-9]{2}) - (?P<day>[0-9]{2})\n        T (?P<hour>[0-9]{2}) : (?P<minute>[0-9]{2}) : (?P<second>[0-9]{2})\n        (?P<microsecond>\\.[0-9]{1,6})?\n        (?P<tz>\n        Z | (?P<tz_hr>[-+][0-9]{2}) : (?P<tz_min>[0-9]{2})\n        )?\n        $ 
 ^\\s*\n        b(?:reak)?\n        (?: \\s+ 
 ` ([^`\\\\]* (?:\\\\.[^`\\\\]*)*) ` 
 |\\_
 +|[\\(\\)]|([,\\\\])|(#.*)
 ++
 = \\($src->[RS]);   # emacs syntax higlighting breaks here
 => (?P<path>.+)\\[\\+0x(?P<offset>.\\S*)\\] \\<(?P<pos>.\\S+)\\>
 => (?P<symbol>.+) \\<(?P<pos>.\\S+)\\>
 3 ) % $c_count ];\n    }\n\n    return \\%metadata;\n} # }}}\n\n1;\n\n__END__\n\n=back\n\n=head1 LICENCE\n\nCopyright 2009-2011, Bart\u00c5\u0082omiej Sygu\u00c5\u0082a (perl@bs502.pl)\n\nThis is free software. It is licensed, and can be distributed under the same terms as Perl itself.\n\nFor more, see my website: http:
 4) + 1) if $retries > 0;\n    if ($retries-- <= 0) {\n      warn \"spamd start failed: log: $spamdlog\";\n      warn \"\\n\\nMaybe you need to kill a running spamd process?\\n\\n\";\n      return 0;\n    }\n  }\n\n  1;\n}\n\nsub stop_spamd {\n  die \"NO_SPAMD_REQUIRED in stop_spamd! oops\" if $NO_SPAMD_REQUIRED;\n  return 0 if ( defined($spamd_already_killed) || $SKIP_SPAMD_TESTS);\n\n  $spamd_pid ||= 0;\n  if ( $spamd_pid <= 1) {\n    print (\"Invalid spamd pid: $spamd_pid. Spamd not started
 4) + 1) if $retries > 0;\n    if ($retries-- <= 0) {\n      warn \"spamd start failed: log: $spamdlog\";\n      warn \"\\n\\nMaybe you need to kill a running spamd process?\\n\\n\";\n      return 0;\n    }\n  }\n\n  1;\n}\n\nsub stop_spamd {\n  return 0 if defined($spamd_never_started);\n  return 0 if defined($spamd_already_killed);\n\n  $spamd_pid ||= 0;\n  if ( $spamd_pid <= 1) {\n    print (\"Invalid spamd pid: $spamd_pid. Spamd not started
 4) + 1) if $retries > 0;\n    if ($retries-- <= 0) {\n      warn \"spamd start failed: log: $spamdlog\";\n      warn \"\\n\\nMaybe you need to kill a running spamd process?\\n\\n\";\n      return 0;\n    }\n  }\n\n  1;\n}\n\nsub stop_spamd {\n  return 0 if ( defined($spamd_already_killed) || $SKIP_SPAMD_TESTS);\n\n  $spamd_pid ||= 0;\n  if ( $spamd_pid <= 1) {\n    print (\"Invalid spamd pid: $spamd_pid. Spamd not started
 4) + 1) if $retries > 0;\n\n    if ($retries-- <= 0) {\n      warn \"spamd start failed: log: $spamdlog\";\n      warn \"\\n\\nMaybe you need to kill a running spamd process?\\n\";\n      warn \"started at $startat, gave up at \".time.\"\\n\\n\";\n      return 0;\n    }\n  }\n\n  1;\n}\n\nsub stop_spamd {\n  return 0 if ( defined($spamd_already_killed) || $SKIP_SPAMD_TESTS);\n  die \"NO_SPAMD_REQUIRED in stop_spamd! oops\" if $NO_SPAMD_REQUIRED;\n\n  $spamd_pid ||= 0;\n  if ( $spamd_pid <= 1) {\n    print (\"Invalid spamd pid: $spamd_pid. Spamd not started
 4) + 1);\n    warn \"spam_pid not found: Sleeping $sleep - Retry # $retries\\n\";\n\n    sleep $sleep if $retries > 0;\n\n    if ($retries-- <= 0) {\n      warn \"spamd start failed - Could not find a valid PID.\\nEnd Debug log -------------------\\n$spamdlog\\nEnd Debug log -------------------\";\n      warn \"\\n\\nMaybe you need to kill a running spamd process?\\n\";\n      warn \"Or the start took too long. Started at $startat, gave up at \".time.\"\\n\\n\";\n      return 0;\n    }\n  }\n\n  1;\n}\n\nsub stop_spamd {\n  return 0 if ( defined($spamd_already_killed) || $SKIP_SPAMD_TESTS);\n  die \"NO_SPAMD_REQUIRED in stop_spamd! oops\" if $NO_SPAMD_REQUIRED;\n\n  $spamd_pid ||= 0;\n  if ( $spamd_pid <= 1) {\n    print (\"Invalid spamd pid: $spamd_pid. Spamd not started
 4;\nmy number $bax = $foo % ( $bar * ( $bat 
 at [A-Za-z0-9\\/\\_\\-\\.]+ line [0-9]+.\\n
 at \\K.*? line \\d+.*
 at \\Q$0\\E line \\d+\\n
 at \\Q$caller->[1]\\E line $caller->[2]\\.\\n$
 at \\Q$file\\E .*\\n
 at \\Q$file\\E line $line.*
 at \\Q$file\\E line \\d+.\\n$
-- Data for Name: (?P<table>.*?); Type: TABLE DATA; Schema: (?P<schema>.*?);
 FEED\\[<=>([^\\(]*)(
 FEED\\[<=>[^\\]*\\].*feed gen-server crashed
 FEED\\[<=>[^\\]*\\].*feed.*stale
 href=([\\\"\\'])(?:
 ID IPH: X*(?P<iph_id>\\d{0,14});
 L?' (?: [^\\'\\n\\\\] | \\\\ 
 L?' (?: [^\\'\\n\\\\] | \\\\ (?: 
 LIMIT \\Q$sf->{o}{G}{max_rows}\\E\\z
 method ([\\w\\\\]+)::(\\w+)\\(\\), did you mean (\\w+)\\(
 name: (?P<CN>.*)
 nonce=\"[a-fA-F0-9]{32}\
 of the package(s
 property ([\\w\\\\]+)::\\$(\\w+), did you mean \\$(\\w+)
 silence_end: (?P<end>[0-9]+(\\.?[0-9]*)) 
 silence_start: (?P<start>[0-9]+(\\.?[0-9]*))$
 SSID.+: (?P<ssid>.+)\\r
 SSID: (?P<ssid>.+)
!(
!(?:\\[(.+?)\\])?\\h*\\(<?(.*?)>?(?:\\h*\"(.*?)\"\\h*)?\\)
!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])
!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?
!\\[(.+?)\\]\\((?!\\w++://)(\\S*(?:\\s*+\".+?\")?)\\)
!3m1!1s0x(\\h{16}):0x(\\h{16})
# Ganga configuration file \\(\\$[N]ame: (?P<version>\\S+) \\$\\)
# noqa(?:: (?P<codes>([A-Z][0-9]+(?:[,\\s]+)?)+))?
# noqa(?:: (?P<codes>([a-z0-9-:@]+(?:[,\\s]+)?)+))?
# This capture group is optional because it will only be present in signed cleartext messages\n                         (^-{5}BEGIN\\ PGP\\ SIGNED\\ MESSAGE-{5}(?:\\r?\\n)\n                          (Hash:\\ (?P<hashes>[A-Za-z0-9\\-,]+)(?:\\r?\\n){2})?\n                          (?P<cleartext>(.*\\r?\\n)*(.*(?=\\r?\\n-{5})))(?:\\r?\\n)\n                         )?\n                         # armor header line; capture the variable part of the magic text\n                         ^-{5}BEGIN\\ PGP\\ (?P<magic>[A-Z0-9 ,]+)-{5}(?:\\r?\\n)\n                         # try to capture all the headers into one capture group\n                         # if this doesn't match, m['headers'] will be None\n                         (?P<headers>(^.+:\\ .+(?:\\r?\\n))+)?(?:\\r?\\n)?\n                         # capture all lines of the body, up to 76 characters long,\n                         # including the newline, and the pad character(s)\n                         (?P<body>([A-Za-z0-9+/]{1,75}={,2}(?:\\r?\\n))+)\n                         # capture the armored CRC24 value\n                         ^=(?P<crc>[A-Za-z0-9+/]{4})(?:\\r?\\n)\n                         # finally, capture the armor tail line, which must match the armor header line\n                         ^-{5}END\\ PGP\\ (?P=magic)-{5}(?:\\r?\\n)?\n                         
# trying to cheat with cpants game ;)\nuse strict;\nuse warnings;\n
# Valid absolute URI having a non-empty, valid DNS host.\n        ^\n        (?P<scheme>[A-Za-z][A-Za-z0-9+\\-.]*):\\/\\/\n        (?P<authority>\n          (?:(?P<userinfo>(?:[A-Za-z0-9\\-._~!$&'()*+,;=:]|%[0-9A-Fa-f]{2})*)@)?\n          (?P<host>\n            (?P<IP_literal>\n              \\[\n              (?:\n                (?P<IPV6address>\n                  (?:                                                 (?:[0-9A-Fa-f]{1,4}:){6}\n                  |                                                   ::(?:[0-9A-Fa-f]{1,4}:){5}\n                  | (?:                             [0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){4}\n                  | (?:(?:[0-9A-Fa-f]{1,4}:){0,1}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){3}\n                  | (?:(?:[0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})?::(?:[0-9A-Fa-f]{1,4}:){2}\n                  | (?:(?:[0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})?::    [0-9A-Fa-f]{1,4}:\n                  | (?:(?:[0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})?::\n                  )\n                  (?P<ls32>[0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}\n                  | (?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}\n                       (?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\n                  )\n                |    (?:(?:[0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})?::    [0-9A-Fa-f]{1,4}\n                |    (?:(?:[0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})?::\n                )\n              | (?P<IPvFuture>[Vv][0-9A-Fa-f]+\\.[A-Za-z0-9\\-._~!$&'()*+,;=:]+)\n              )\n              \\]\n            )\n          | (?P<IPv4address>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}\n                               (?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))\n          | (?P<regname>(?:[A-Za-z0-9\\-._~!$&'()*+,;=]|%[0-9A-Fa-f]{2})+)\n          )\n          (?::(?P<port>[0-9]*))?\n        )\n        (?P<path_abempty>(?:\\/(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@]|%[0-9A-Fa-f]{2})*)*)\n        (?:\\?(?P<query>          (?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*))?\n        (?:\\#(?P<fragment>      (?:[A-Za-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9A-Fa-f]{2})*))?\n        $\n        
#!.*(
#!\\/.*\\n|#.*coding[:=]\\s*(?P<enc>[-\\w.]+).*
## time resolution: (?P<fs>\\d+\\.?\\d*)
### API PAGES START[^]+### API PAGES END
###([^#](?:[^#]*+|#{1,2}[^#])+)###
###\\s*md5:(
##(?P<key>.+?)=(?P<val>.+)
##teamcity\\[testFailed name='(?P<TaskName>.*)' message='(?P<TaskOutPut>.*)']
##teamcity\\[testFinished name='(?P<TaskName>.*)' duration='(?P<TaskOutPut>.*)']
#(
#( )*-\\*-( )*(encoding|coding):( )*(?P<encoding>[\\w-]+)( )*-\\*-
#((?:-[A-Za-z_-]|[A-Za-z_]|\\\\[^A-F0-9U]|\\\\[A-F0-9]{1,6}\\s?|\\\\U[0-9A-F]{2}(?:A[1-9A-F]|[B-F][0-9A-F]))(?:\\\\[A-F0-9]{1,6}\\s?|[A-Za-z0-9_-]|\\\\:)*)
#((?:\\pL|[0-9_])+)
#(.*) (.*)\\_\\_H\\_
#(?:
#(?P<id>[^\\s]+)
#(?P<id>\\d+): act=
#(?P<tag>[\\w-]+)(:(?P<value>.+))?
#([\\pL-_+]+)
#([A-Z]+)[:\\h]\\h*(.*)$
#([a-zA-Z0-9_\\.:\\\\]+)#
#(\"[^\"]*\"|
#(\\d++)$
#(\\h)(\\h)(\\h)
#(\\h{2})(\\h{2})(\\h{2})
#(\\p{javaJavaIdentifierStart}(?:\\p{javaJavaIdentifierPart})*)(?:\\((.*)\\))?$
#.*\\Q$keyword\\E isa ($CLASS)
#.*chef:silence_deprecation($|[^:]|:
#/(?P<scope>.+)/(?P<name>[^/]+)$
#: (?P<code>\\w+:?\\d*:?\\d*)(\\((?P<options>.+)\\))?$
#?(?P<hex>[0-9a-f]{3,8})|rgba?\\((?P<r>[0-9]+)\\s*,\\s*(?P<g>[0-9]+)\\s*,\\s*(?P<b>[0-9]+)(?:\\s*,\\s*(?P<a>\\.?[0-9]+))?\\)
#\\\\
#\\\\([()\\/'\"._!\\$%& ?=+-]{1}|[a-z0-9]+)
#\\[test\\]\\s*\\n\\s*fn\\s*(?P<name>\\w+)
#\\{\\s*([\\w\\.\\_]+)\\s*\\}
#\\{|\\(\\(|\\\\\\\\
#\\{ENV\\[[\"']RS_ATTACH_DIR[\"']\\]\\}[/\\\\]+([^\\t\\n\\f\\r \"]+)
#\\|\\p{Blank}*\"
#\\h+
#\\s*(
#\\s*([a-zA-Z0-9_]+)\\s*\\{(\\s*(((\"([^\"\\\\]|\\\\\")*\")|\\[\\s*((\"([^\"\\\\]|\\\\\")*\"\\s*),?)*\\])\\s*,?\\s*)*\\s*)\\}
#\\s*Description:\\s+(.*?)(#\\s*(
#{|\\/\\/\\/|\\\\
#|,|?|?|?|?
#~#host=(?P<exechost>.*?)#~#
#~#id=(?P<jobid>(?P<jobidNumber>.*?))#~#
#~#id=(?P<jobid>(?P<jobidNumber>.*?))#~#state=(?P<state>.*?)(?:#~#time_rem=(?P<remainingWalltime>.*?))?#~#
#<[A-Z]\\w+ id: \\d+\\K.*?>
#<Async::Node:0x\\h+>\\n
#<Object:\\dx\\h+>
#<Proc:\\w+(@
#<ProductDecorator:0x\\h+ .+>
#define (?P<define>GLFW_[^\\s]+)
#define \\_(.*)\\_H\\_
#define +(?P<id>[A-Z0-9_]+(ext)?) +\\(\\([A-Za-z0-9_]+_TypeDef \\*\\) (?P<id2>[A-Za-z0-9_]+)\\)($| +/\\*)
#define +(?P<id>[A-Z0-9_]+) +(?:\\(\\(uint32_t\\))?(?P<hex>0x[0-9A-F]+)U?(?:\\))?($| +/\\*)
#define +(?P<id>[A-Z0-9_]+) +(?P<id2>[A-Z0-9_]+)($| +/\\*)
#define +(?P<id>[A-Za-z0-9_]+) +\\((?P<id2>[A-Z0-9_]+) \\+ (?P<hex>0x[0-9A-F]+)U?\\)($| +/\\*)
#define\\s+(
#define\\s+(?P<KEY>.*_.*)\\s+(?P<VALUE>\\d+)
#endif /\\* \\_(.*)\\_H\\_
#ifdef __cplusplus(?P<code>.*)#endif(\\s*//\\s*!?\\s*__cplusplus)*
#ifndef \\_(.*)\\_H\\_
#ifndef SWIG(?P<code>.*)#endif(\\s*//\\s*!?\\s*SWIG)*
#undef\\s+(?P<FEATURE>.*_.*)
$\\R?^
${\\( $args{contact_type} )}
${\\( COLUMNS_FORMAT_ROW )}
${\\( COLUMNS_FORMAT_ROW_SEPARATE )}
${\\( COLUMNS_SEPARATE )}
${\\( PART_SEPERATOR )}
${\\( SEPERATOR )}
${\\(BACK_REF)}
${\\(BRACKETS)}
${\\(ENDCHAR)}$
${\\(ESCAPE_BRACKETS)}
${\\(ESCAPE_CHARS)}
${\\(Google::Ads::AdWords::Constants::QUERY_LIMIT_REGEX)}
${\\(RE_EOL)}
${\\__PACKAGE__}\\s+-\\s+(.+)\\n
${\\join '|', keys %direm}
${\\quotemeta($qq->string)}
${repcons}\\1e\\Z
$a | tee $result\" if -e \"$a\";\n  prove ($a, $result, $i, $t, $backend);\n  $i++;\n}\n\nsub prove {\n  my ($a, $result, $i, $t, $backend) = @_;\n  if ( -e \"$a\" and -s $result) {\n    system(qq[prove -Q --exec cat $result || echo -n \"n\";echo \"ok $i - $backend $t\"]);\n  } else {\n    print \"not ok $i - $backend $t\\n\";\n  }\n}\n\nmy @runtests = qw(C CC BC);\nif ($ARGV[0] and $ARGV[0] =~ 
$abbr(\\W*)\\Q$pbm\\E\\s*([a-z])
$arr_str[$index-1]
$attr_name=([\"'])\\Q$$attr
$auth_type\\_$auth_name=([^;]+)
$C\\Kle(?:ness)?$
$C\\Kre$
$C\\Ky
$C\\Ky$
$C\\Ky(?=$C)
$case_ign\\Q$text_line\\E
$case_re\\Q$attr_text_search\\E
$case_re\\Q$tag_text_search\\E
$case_re\\Q$text_forbid\\E
$case_re\\Q$text_require\\E
$casei^\\Q$_\\E$
$casei^\\Q$action\\E
$CaseSensitive\\Q$term
$delim_RE}[\n                
$delim_RE}[\n        defined $args->
$end\\K\\b$regex$
$end\\Q$spliter\\E$end
$EOS(\\s*(?:\\x{05D5}-?(?:\\w|\\s)*)?['\"\\p{OpenPunctuation}]\\s*\\p{IsEndOfSentenceCharacter}+['\"\\p{ClosePunctuation}]\\s*)
$escape\\_
$event_from(.*?)\\Q<!-- TOPIC: end -->\\E
$form_id\\_
$fpat\\Q$;\\E(.*)
$FullMenu->{$MenuUnit_hash_ref}[5]{\n                  $all_menu_items_array[$picknum-1]}
$groupname\\_page\\_\\d+\\.pdf$
$key:\\\\
$mark\\h+(?:begin|end)\\h+\\Q$section\\E\\N*\\R
$mark\\N*\\R
$modifier\\Q$ft\\E
$operator\\Q$left\\E(.*)\\Q$right\\E
$p\\_
$prefix\\K\\b$regex\\b
$re_scan_jis)\n    {\n    my 
$re_scan_jis)\n    {\n\tmy 
$re_scan_jis){\n        my 
$RE{balanced}{-parens=>'(){}[]'}{-keep}
$self->{sections}->[$self->{current_section} - 1]->[0]
$self->{separator}->{release}([$self->{sep_class}])
$SHRINK_VARS->{PREFIX}\\Q$cnt\\E\\b
$source\\_kidl
$species\\_$seqid
$t\\_$n\\_(\\w+)_out_chk$
$table\\L_(.*?)_seq
$Text::Template::Compact::ExprParser::token_re|\"(?:[^\"]|\"\")*\"|[\\w_]+|\\p{IsWord}+
$V$C+\\Ke$
$V\\Ky
$V\\Ky(?=$V)
%%(?P<name>[^%]+?)%%
%%|%([^%\\s]++)%
%(
%((?:(?P<ord>\\d+)\\$|\\((?P<key>\\w+)\\))?(?P<fullvar>[+#-]*(?:\\d+)?(?:\\.\\d+)?(hh\\|h\\|l\\|ll)?(?P<type>[\\w%])))
%(?![
%(?!\\h\\h)
%(?!23)([[:xdigit:]]
%(?:\\((?P<key>.*?)\\))?(?P<modifiers>[-#0-9 +*.hlL]*?)[eEfFgGdiouxXcrs%]
%(-?\\d*(?:\\.\\d+)?) \n                       ([$self->{CSPECS}])\n                       (?:{(.*?)})*
%(?P<idx>\\d+\\$)?(?P<flags>[-+# 0,]+)?(?P<width>[0-9]+)?(?P<precision>\\.[0-9]+)?(?P<convers>[scdoxefgn])
%(?P<pad>\\d+)?(?P<var>\\w+)
%(?P<reference>[^%]+)%
%(?P<VAR>[^%/\\\\]*)%
%([^/\\\\]+)%
%([0-9a-fA-F]
%([a-zA-Z]+)|\\\\([\\u0000-\\uffff])
%(-|!)?([a-zA-Z]{1})(:[^]+)?
%(-|!)?[A-Z]{1}(:[^]+)?
%.*?(?:\\{(.*?)\\})?([
%[^'\"\\\\]
%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}
%\\((?P<name>[^)]+)\\)s
%\\((?P<name>[^\\)]+)\\)s
%\\?\\s*\\Q$lvalue\\E\\s*\\Q$operator\\E\\s*\\Q$operand\\E\\s*%\\Q$truesub%$falsesub%\\E
%\\{(
%\\h\\h
%{([a-z]+)(?::(.*?[^\\\\]))?}
%25(?P<hex>[0-9a-fA-F][0-9a-fA-F])
%25\\p{XDigit}{2}
%escape(\\(([^()]*+|(?1))+\\))
%link:(?P<link>[\\w/-]+)%
%modify(Content)?(\\(([^()]*+|(?2))+\\))
%prec (
%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}
%-RT_FLOW_SESSION_CREATE: session created (?P<src>([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+))/(?P<srcport>[0-9]+)->(?P<dst>([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+))/(?P<dstport>[0-9]+) (?P<service>\\S+) (?P<src2>([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+))/(?P<srcport2>[0-9]+)->(?P<dst2>([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+))/(?P<dstport2>[0-9]+) (?P<srcnatrule>\\S+) (?P<dstnatrule>\\S+) (?P<protocol>\\S+) (?P<policy>\\S+) (?P<srczone>\\S+) (?P<dstzone>\\S+) (?P<sessionid>\\S+) N/A\\(N/A\\) (?P<interface>\\S+)(\\n)?
%-RT_FLOW_SESSION_DENY: session denied (?P<src>([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+))/(?P<srcport>[0-9]+)->(?P<dst>([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+))/(?P<dstport>[0-9]+) (?P<service>\\S+) (?P<proto>[0-9]+)\\((?P<prototype>[0-9]+)\\) (?P<policy>\\S+) (?P<srczone>\\S+) (?P<dstzone>\\S+) UNKNOWN UNKNOWN N/A\\(N/A\\) (?P<interface>\\S+)(\\n)?
%start%([^]+?)%end%
%static:(?P<link>[\\w/.-]+)%
%url:(?P<link>[\\w/-]+)%
%VAR_(
&##&(?P<p>[.!?])
&#(?:(\\d+)|x([0-9A-Fa-f]
&#(?P<char>[0-9]+[^0-9]|x[0-9a-fA-F]+[^0-9a-fA-F])
&#(x)?([\\h]+);
&#x[0-9a-fA-F]*;|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{3}|\\\\[abtnvfr]
&(
&((?P<named>[a-z\\d]+)|#(?P<dec>\\d+)|#x(?P<hex>[a-f\\d]+))(?P<semicolon>;?)
&(.*?);]{\n        local $_ = $1;\n        /^amp$/i           ? \"&\" :\n        /^quot$/i          ? '\"' :\n        /^gt$/i            ? \">\" :\n        /^lt$/i            ? \"<\" :\n        /^#(\\d+)$/         && $latin  ? chr($1) :\n        /^#(\\d+)$/         && $ebcdic ? chr($UTIL->{'a2e'}->
&(?!
&(?!\\w+;)|[\"<>\\\\]
&(?!\\w+;)|[\"'<>\\\\]
&(?:#(\\d{2,6})|(
&(?:(
&(?:[a-z][a-z]+\\d{0,2}|#\\d\\d\\d{0,4}|#x[\\da-f][\\da-f][\\da-f]{0,3});|[^ \\p{Word}\\-.]+?
&([^>]++)>
&([a-z]{
&,&(?P<p>[.!?])
&:extend\\((
&?(
&?\\Q$conf{q_name}=\\E[^&]+
&[Aa]lpha;|?|alpha|&#945;|&#x3B1;|&#913;|&#x391;
&[Bb]eta;|?|beta|&#946;|&#x3B2;|&#914;|&#x392;
&\\$&(?P<p>[.!?])
&\\*\\*&(?P<p>[.!?])
&\\^&(?P<p>[.!?])
&=&(?P<p>[.!?])
&==&(?P<p>[.!?])
&imgrefurl=(?P<domain>.*)&h=\\d+&w=\\d+&
&imgurl=(?P<domain>.*)$
&lt;(/?[a-z][a-z0-9,_=;-]*+)&gt;
&lt;([^[]*+)(\\[)([^]]*+)(\\])&gt;
&lt;\\/?(?:
&lt;\\/?[a-z][^]*?&gt;
( 
(  |\\\\\\\\)(?=\\n)
(
('
--(
( (?:[^0-9@#.,E'] | (?: ' [^']* ' )++ )+ ) $
( *)([a-zA-Z0-9\\_\\-\\.]+)=?(([a-zA-Z0-9\\.\\-\\_\\.]+)|(\"([^\\\"]+)\"))?
( *\"
( *\\\\)$
( *|\\\\)\\n
( *attr_
( [\\#\\$\\%\\&\\_\\{\\}] )
( [A-Za-z0-9\\-\\_]+=[\"|']{1})([^=]*?)({{abe .*?[\"|'| ]}})[\"|']
( [A-Za-z0-9\\-\\_]+=\"*{{.*?}})
( {0,
( |\\/|\\\\)
( |\u00a0)(
(!?\\[)(
(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])
(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))
(!\\[.+?\\]\\()(?!\\w++://)(\\S*(?:\\s*+\".+?\")?\\))
(# encoding: UTF-8
(## API\\s+)([^]+)(## Changelog)
(#((.|\\r|\\n)*?)[^\\\\\\\\])\\r{0,1}\\n{0,1};\\r{0,1}(\\n|$)
(#(\\h{3}|\\h{6}))(?!\\h)
(#(\\h{3}|\\h{6}|\\h{8}))(?!\\h)
(#)\\s*+([a-z][a-zA-Z\\d@_]*+)
(#)\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(\\.)\\s*+([a-z][a-zA-Z\\d@_]*+)
(#)\\s*+([a-z][a-zA-Z\\d@_]*+|'[^']*+')
(#)\\s*+([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(\\.)\\s*+([a-z][a-zA-Z\\d@_]*+|'[^']*+')
(#?(?!default)(?![[:upper:]])
(#[a-z_]+\\{(?:[^\\{\\}]|(?R))+\\})
(#\")(\\\\)?.(\")
(#\\s*(
(#|\\.|:|\\b)([_-\\w][_-\\w\\d]*)
(#if\\s+)(\\S*)([^]*)
(#x\\h+)(.*)$
($
($_\\.\\s+)\\Q$marker\\E
(${rsquo}[\\xA0\\s]+)\"(?!\\PZ)
($context?)\\Q$entity\\E($context?)
($e)\\_($f)
($e)\\_\\_($f)
($HankakuKatakanaRE)[\u00e3\u0082\u009b\\x
($HankakuKatakanaRE)[\u00e3\u0082\u009c\\x
($month\\.\\s+)\\Q$marker\\E(\\d+)
($p)\\_($s)
($p)\\_\\_($s)
($pattern->
($q|\\\\)
($RE
($species\\_chr\\d+\\_\\d+\\_$target)\\.gff
($species\\_chr\\d+\\_\\d+\\_\\d+)\\.gff
($species\\_chr\\d+\\_0\\_00)\\.gff
($tail\\Q$prevfooter\\E)\\Z
(%?
(%\\{
(%|\\\\)?.|%%
(%5C|\\\\)
(%x)(\\W|\\_)
(&#x([0-9a-f]
(&[\\w#]*)\\Q$o\\E(?:\\Q$c\\E)?(${safe})\\Q$c\\E([\\w#]*;)
(&\\p{Word}{2,3};)|([\\p{Word}']+)
(&lt;|<)\\Q?php\\E(&nbsp;)?
((
(((
((((([^\",\\\\{}\\s]|NULL)+|\"([^\"\\\\]|\\\\\"|\\\\\\\\)*\")))(,)?)
((((abc.+?:)
((((http|https)://)|www\\.|((^|[ ])[0-9A-Za-z_\\-]+(\\.com|\\.net|\\.org|\\.info|\\.biz|\\.de))))(?U:.*)([ ]+|$)
(((?!\\\\).)+\\\\\\.\\.(\\\\|$))
(((?:[^
(((??|??)?([0-9?-?]{2,4})?|??|??|??)|[^?]|^)([0-9?-?]{1,2}|?|?|?)?([0-9?-?]{1,2})?\\s*(?:\\((?:?|?|?|?|?|?|?)\\))?
(((?<!\\d))([0-3][0-9]|[1-9])(?=(?|?)))|((?<=?)([0-3][0-9]|[1-9])(?=(?|?))?)
((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))
((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?
(((\"[^\"]*+\")+|(?:`[^`]*+`)+)|(\\S+))(\\s+(ASC|DESC))?(,\\s*|$)
(((\\\\)begin)(\\{)(lstlisting)(\\})(?:(\\[).*(\\]))?(\\s*%\\s*(?i:Java)\\n?))
(((\\\\)begin)(\\{)(lstlisting)(\\})(?:(\\[).*(\\]))?(\\s*%\\s*(?i:Python)\\n?))
(((\\\\)end)(\\{)(lstlisting)(\\}))
(((^[@#])|([^a-z0-9\\W]|\\s)([@|#]))([a-z0-9\\_]+))
(((^|\\n)\\s*\\|(?P<down>.*))|((^|\\n)\\s*\\^(?P<up>.*)))
(((Database|Namespace)\\ (?P<schema>.+))|(Table\\ (?P<table>.+)))\\ not\\ found\\.
(((teach|show|how|what|advise|enlighten|give).*(me|does|information|about|how|is|are)\\s((\\'|\\\")?(?P<command>\\w*)(\\'|\\\")?).*(works?|means?)*\\??)|(\\w*)\\?)
((')([^']*)(')\\s*)(:)\\s*+(?!function)
((.)(\\2){5,}+)
((.*)(\\/|\\\\|\\\\\\\\))?(.*?\\..*$)?
((.*)\\\\)?(.*)
((.*)_)?(
((.+)\\\\)?(.+)
((:\\w+)|[\\*
((?![\u5e74\u6708\u65e5\u53f7])\\p{Han})([a-zA-Z0-9+$@#\\[\\(\\/\u2018\u201c])
((?!\\\\))\\?
((?!<((\\/)?
((?&PerlAssignment)) ${grammar_re}
((?:
((?: (?:for|in|on) (?:
((?: |^).{15,
((?:$latin1_as_utf8)
((?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")) *: *require\\(((?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")))\\)(?: *, *((?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")) *: *require\\(((?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")))\\))*
((?:(?:([^'\\\"\\s]+)(?=[\\s\\\"']))|(?:\\\"((?:[^\\\"]|(?<=\\\\)\\\")*)\\\"|(?:'((?:[^']|'(?! )[^']*')*)')|^[^\\s]+$|^[^\\s]+(?= )|(?<= )[^ ]+$)[^\\s\\\"']*))
((?:(?:\"(?:[^\\\\\"]|(\\\\\\\\)*\\\\\")*\")|(?:\\'(?:[^\\\\\"]|(\\\\\\\\)*\\\\\\')*\\')|[^#])*)(#.*)$
'''((?:(?:'|'')?(?:[^'\\\\])+)*)'''
((?:(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+
((?:(?P<ifo>[A-Z]\\d))?|[\\w-]+):(?:(?P<system>[a-zA-Z0-9]+))?(?:[-_](?P<subsystem>[a-zA-Z0-9]+))?(?:[-_](?P<signal>[a-zA-Z0-9_-]+?))?(?:[\\.-](?P<trend>[a-z]+))?(?:,(?P<type>([a-z]-)?[a-z]+))?$
((?:(http|https|Http|Https|rtsp|Rtsp):\\/\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,\\;\\?\\&\\=]|(?:\\%[a-fA-F0-9]{2})){1,64}(?:\\:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,\\;\\?\\&\\=]|(?:\\%[a-fA-F0-9]{2})){1,25})?\\@)?)?(?:(((([a-zA-Z0-9][a-zA-Z0-9\\-]*)*[a-zA-Z0-9]\\.)+((aero|arpa|asia|a[cdefgilmnoqrstuwxz])|(biz|b[abdefghijmnorstvwyz])|(cat|com|coop|c[acdfghiklmnoruvxyz])|d[ejkmoz]|(edu|e[cegrstu])|f[ijkmor]|(gov|g[abdefghilmnpqrstuwy])|h[kmnrtu]|(info|int|i[delmnoqrst])|(jobs|j[emop])|k[eghimnprwyz]|l[abcikrstuvy]|(mil|mobi|museum|m[acdeghklmnopqrstuvwxyz])|(name|net|n[acefgilopruz])|(org|om)|(pro|p[aefghklmnrstwy])|qa|r[eosuw]|s[abcdeghijklmnortuvyz]|(tel|travel|t[cdfghjklmnoprtvwz])|u[agksyz]|v[aceginu]|w[fs]|(??????|?????????|??|???|????|???????|??????|??????|???????|????????|??????|??????|?????|????|?????|??????|???|???|???????|????|????|????|????|???????|??????|???????????|???????|?????|????|???|???|??|??|??|??|???|??|??|??|???|??|xn\\-\\-0zwm56d|xn\\-\\-11b5bs3a9aj6g|xn\\-\\-3e0b707e|xn\\-\\-45brj9c|xn\\-\\-80akhbyknj4f|xn\\-\\-90a3ac|xn\\-\\-9t4b11yi5a|xn\\-\\-clchc0ea0b2g2a9gcd|xn\\-\\-deba0ad|xn\\-\\-fiqs8s|xn\\-\\-fiqz9s|xn\\-\\-fpcrj9c3d|xn\\-\\-fzc2c9e2c|xn\\-\\-g6w251d|xn\\-\\-gecrj9c|xn\\-\\-h2brj9c|xn\\-\\-hgbk6aj7f53bba|xn\\-\\-hlcj6aya9esc7a|xn\\-\\-j6w193g|xn\\-\\-jxalpdlp|xn\\-\\-kgbechtv|xn\\-\\-kprw13d|xn\\-\\-kpry57d|xn\\-\\-lgbbat1ad8j|xn\\-\\-mgbaam7a8h|xn\\-\\-mgbayh7gpa|xn\\-\\-mgbbh1a71e|xn\\-\\-mgbc0a9azcg|xn\\-\\-mgberp4a5d4ar|xn\\-\\-o3cw4h|xn\\-\\-ogbpf8fl|xn\\-\\-p1ai|xn\\-\\-pgbs0dh|xn\\-\\-s9brj9c|xn\\-\\-wgbh1c|xn\\-\\-wgbl6a|xn\\-\\-xkc2al3hye2a|xn\\-\\-xkc2dl3a5ee0h|xn\\-\\-yfro4i67o|xn\\-\\-ygbi2ammx|xn\\-\\-zckzah|xxx)|y[et]|z[amw]))|((25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[0-9]))))(?:\\:\\d{1,5})?)(\\/(?:(?:[a-zA-Z0-9\\;\\/\\?\\:\\@\\&\\=\\#\\~\\-\\.\\+\\!\\*\\'\\(\\)\\,\\_])|(?:\\%[a-fA-F0-9]{2}))*)?
((?:.(?:\\e\\[\\dm)*){1,
((?://|#|--|;;) ?)?(\\\\)?&lt;!?(|--)(\\d+|\\.)\\3&gt;(?=(?: ?\\\\?&lt;!?\\3(?:\\d+|\\.)\\3&gt;)*
((?://|#|--|;;) ?)?(\\\\)?<!?(|--)(\\d+|\\.)\\3>(?=(?: ?\\\\?<!?\\3(?:\\d+|\\.)\\3>)*$)
((?:[*~^$|]?=))([^]*)
((?:[?&])
((?:[\\/]?[a-zA-Z0-9\\_]*)*)
((?:[\\w|\\\\]+(?:\\[\\])*\\|?)+)(?:\\s+(.*))?
((?:[\\w|\\\\]+(?:\\[\\])*\\|?)+)(?:\\s+(\\$\\S+))?(?:\\s+(.*))?
((?:[^$\\\\]|\\\\.)*)(?:\\s|^)(\\$(?:[^$\\\\]|\\\\.)*\\$)(?:\\s|$)
((?:[^*\\\\]|\\\\.)*)(?:\\s|^)(\\*(?:[^*\\\\]|\\\\.)*\\*)(?:\\s|$)
((?:[^@\\\\]|\\\\.)*)(?:\\s|^)(@(?:[^@\\\\]|\\\\.)*@)(?:\\s|$)
((?:[^\"\\\\]+|\\\\.)*)
((?:[^\\\\(\\[\\]$^]+|\\\\(?:[CM]-)*[^CMZA])*)
('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\") *: +([^\\n]*)
('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*`)
((?:[^\\\\]|^)(?:[\\\\]{2})*)\\\\u(?:([\\da-fA-F]{4})|\\{([\\da-fA-F]{1,6})\\})
((?:[^\\\\]|^)(?:\\\\\\\\)*)\\\\u([a-z0-9]{4})(?!\\d)
'((?:[^\\n\\r\\f\\']|\\\\(?:\\$|\\n|[0-9a-fA-F]{1,6}\\s?))*)(:?'|$)
((?:[^\\s\\\\]|(?:\\\\\\s))+)\\s*|(\\S+)\\s*|\\s+
((?:[^+\\\\]|\\\\.)*)(?:\\s|^)(\\+(?:[^+\\\\]|\\\\.)*\\+)(?:\\s|$)
((?:\"(?:(?:[^\"\\\\]|\\\\.)+)\")|(?:'(?:[^'\\\\]|\\\\.)+')|[^ ]+)
((?:\"([^\"]*)\"\\s*)?<?((?:http|https|ftp|irc|file):(?:\\/\\/)?[\\;\\/\\?\\:\\@\\&\\=\\+\\$\\,\\[\\]\\#A-Za-z0-9\\-\\_\\.\\!\\~\\*\\'\\(\\)]+[A-Za-z0-9\\/#])>?)
((?:\\$(?:this|initializer|instance)->)?(?:publicProperties|initializer|valueHolder))[0-9a-f]++
((?:\\$|@@?)?
((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^[\\]]*\\]|['\"][^'\"]*['\"]|[^[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?
((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^[\\]]*\\]|['\"][^'\"]*['\"]|[^[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)
((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^\\[\\]]*\\]|['\"][^'\"]*['\"]|[^\\[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)
((?:\\((?P<id>[0-9]+|RX|CR)\\))*)(?P<str>.+)?
((?:\\\\\\\\)*)(\\\\?)#
((?:\\\\\\\\)*)\\\\`
((?:\\\\\\\\)+)|\\\\[^\\S\\n]*\\n\\s*
((?:\\\\.|[^= ]+)*)=(\"(?:\\\\.|[^\"\\\\]+)*\"|(?:\\\\.|[^ \"\\\\]+)*)
((?:\\\\.|[^=\\s]+)*)=(\"(?:\\\\.|[^\"\\\\]+)*\"|(?:\\\\.|[^\\s\"\\\\]+)*)
((?:\\\\.|\\#(?!\\{)|[^
((?:\\/|[A-Z]:\\\\)[^:\\s]+:(\\d+)(?::(\\d+))?)
((?:\\:[a-z0-9\\.\\_\\-]+)|\\d+)\\s*\\=\\s*
((?:\\?|&amp;)
((?:\\\\[\\\\abfnrtv\"'])|(?:\\\\N\\{.*?\\})|(?:\\\\u[a-fA-F0-9]{4})|(?:\\\\U[a-fA-F0-9]{8})|(?:\\\\x[a-fA-F0-9]{2})|(?:\\\\[0-7]{1,3}))
((?:\\\\[^\\r\\n]|\\#(?!\\{)|[^#\\\\\\\"\\r\\n])+)|(\\\\(?:\\r\\n|\\n|\\r))|((?:\\r\\n|\\n|\\r))|(\\\"|\\#\\{)
((?:\\\\[^\\r\\n]|\\$(?![\\{a-zA-Z_$@])|[^$\\\\\\`\\r\\n])+)|(\\\\(?:\\r\\n|\\n|\\r))|((?:\\r\\n|\\n|\\r))|(\\`|\\$\\{|\\$(?=[a-zA-Z_$@]))
((?:\\[|:|,)\\s*)'((?:\\\\'|[^'])*?[^\\\\])?'(?=\\s*(?:\\]|}|,))
'((?:\\\\['nrbt\\\\\\\\\\\\$]|[^'\\\\])*)'(.*)
'((?:\\\\['nrbt\\\\\\\\\\\\@]|[^'\\\\])*)'(.*)
((?:\\A|\\G|[^\\\\]))\\\\([^aAbBeEfFrRnNtT\\\\\\\"\\$\\@])
((?:\\A|\\G|[^\\\\]))\\\\([0-7]{1,3})
((?:\\A|\\G|[^\\\\]))\\\\([aAbBeEfFrRnNtT\\\\\\\"\\$\\@])
((?:\\A|\\G|[^\\\\]))\\\\([rRnNtT\\\"\\\\]|[x]?[\\da-fA-F]{2})
((?:\\A|\\G|[^\\\\]))\\\\u([\\da-fA-F]{4})
((?:\\A|\\G|[^\\\\]))\\\\x([\\da-fA-F]{1,2})
((?:\\A|\\G|[^\\\\]))\\\\x\\{([\\da-fA-F]{1,4})\\}
((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+
((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+
((?:\\bnode\\s+|[^\\s\\w\\\\]\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)
((?:\\G|^|[^\\\\])(?:\\\\\\\\)*)\\\\n
((?:\\G|^|[^\\\\])(?:\\\\\\\\)*)\\\\t
((?:\\Q$thing$op$op\\E;)
((?:\\\\\\s)|(?:[^\\\\]))\\s+$
((?:\\w:)?(((?:\\/|\\\\)[\\w\\-\\.\\s]+)+))
((?:\\\\x(?:[0-9a-fA-f]{2}|\\{[0-9a-fA-f]+\\}))+)
((?:\\\\x[0-9A-F]{2})+)
((?:\\\\x[0-9a-fA-F]{2})+)
((?:\\\\x\\{[\\da-f]+\\})+)
((?:^[0-9a-f]{3}$)|(?:^[0-9A-Fa-f]{6}$)){1}(?!.*\\H)
((?:^\\h{3}$)|(?:^\\h{6}$)){1}(?!.*\\H)
((?:^|[^\\\\])(?:\\\\\\\\)*)((?:\\\\n)+)
((?:^|[^\\\\])(?:\\\\\\\\)*),
((?:^|[^\\\\])(?:\\\\\\\\)*)\\\\(x[a-f\\d]{2}|u[a-f\\d]{4}|u\\{(?:[a-f\\d]{1,})\\}|c[a-z])
((?:^|[^\\\\])(?:\\\\\\\\)*)\\\\n
((?:^|[^\\\\])(?:\\\\\\\\)*)\\\\x
((?:^|[^\\\\])(?:\\\\{2})*)\\\\u001[bB]
'''((?:'|'')?(?:[^'\\\\]|
((?:<[^>]*+>)++(?:%a_str%(?:<[^>]*+>)++)?+)
((?:action|href)=[\"'])(?P<url>[^\"']*)([\"'])
((?:foo){
((?:gi\\|(\\d+)\\|)?        # optional GI\n                     (\\w+)\\|([A-Z\\d\\.\\_]+) # main \n                     (\\|[A-Z\\d\\_]+)?) # optional secondary ID
((?:po)?mi(?:\u0119|e)dzy)\\s+(?P<start>.+)\\s+(a)\\s+(?P<stop>.+)
((?:W/)?\"(?:[^\"\\\\]|\\\\.)*\")\\s*,
((??)|(??[1-7])|(??[1-31]??)|??)
((-?\\d+(?:\\.\\d+)?)|'(.*?(?<!\\\\))'|NULL);
((?|?|?|?)+(?|??)([?????????]|[1-7])?)
((?<![\\\\])['\\\"])((?:.(?!(?<![\\\\])\\1))*.?)\\1
((?<!\\\\)%[mMdDfFxX])
((?<!\\\\)(?:\\\\{2})*)(\\\\\")
((?<!\\\\)(['\"`]).*?[^\\\\]\\2|\\?)
((?<!\\\\)(\\\\\\\\)*)\\.
((?<!\\\\))\\.
((?<!\\\\)'.*?(?<!\\\\)')
((?<!\\\\)'''.*?(?<!\\\\)''')
((?<!\\\\)'.*?(?<!\\\\)'|(?<!\\\\)\".*?(?<!\\\\)\")|(\\=\\ \\$\\d+)
((?<!\\\\);)(?=(?:[^\"]|\"[^\"]*\")*$).*
((?<!\\\\)[&?!])
((?<!\\\\)[\\\"'])
((?<!\\\\)[\\*\\+\\.|])|((?<![\\(\\\\])\\?)
((?<!\\\\)[\\s;|,=\\\"'])
((?<!\\\\)\".*?(?<!\\\\)\")
((?<!\\\\)\"\"\".*?(?<!\\\\)\"\"\")
((?<!\\\\)\\*)|((?<!\\\\)\\?)
((?<!\\\\)\\*{1,2})(.+?)\\1
((?<!\\\\)\\.)
((?<!\\\\)\\/)
((?<!\\\\)\\:|\\s)(\\-?)(\\d?\\.\\d+?)0+([^\\d])
((?<!\\\\)\\:|\\s)(\\-?)0+(\\.?\\d+)
((?<!\\\\)\\:|\\s)(\\-?\\d+)\\.0([^\\d])
((?<!\\\\)\\:|\\s)\\-?\\.?0+([^\\d])
((?<!\\\\)\\:|\\s)\\-?0(?:em|ex|ch|rem|vw|vh|vm|vmin|cm|mm|in|px|pt|pc|%)
((?<!\\\\)\\:|\\s)\\+(\\.?\\d+)
((?<!\\\\)\\?)
((?<!\\\\)\\\\u{.*})
((?<!\\\\){.*?(?<!\\\\)})
((?<!\\d))((10)|(11)|(12)|([1-9]))(?=?)
((?<!\\S)(?:\\S+\\.)?)\\Q$self->{name}\\E\\.(?=$|\\s)
((?<=[\\?\\_\\%])|(?=[\\?\\_\\%]))
((?<=[^\\\\])[?*]|^[?*])
((?<=RFunction\\[StanFunction == \").+?(?=\")|(?<=grepl\\(\").+?(?=\", StanFunction\\))|(?<= \\<\\- \").+?(?=\"\\)))|NA\\_character\\_
((?>(?:(?>[^\"\\\\]+)|\\\\.)*))\"
((?>(?:(?>[^'\\\\]+)|\\\\.)*))'
((?>/\\*.*?\\*/\\s*))^\\s*(\\#\\s*define\\s+
((?>/\\*.*?\\*/\\s*)?)\n            ((?:(?:static|SWIGINTERN)\\s+)?\n             (?:intern\\s+)?VALUE\\s+
((?>/\\*.*?\\*/\\s+))\n                                rb_define_attr\\((?:\\s*
((?>/\\*.*?\\*/\\s+))\n                         ([\\w\\. \\t]+ = \\s+)?rb_define_(class|module)_under[\\t\\w, (]*?\"(
((?>/\\*.*?\\*/\\s+))\n                         ([\\w\\.\\s]+\\s* = \\s+)?rb_define_(class|module)[\\t (]*?\"(
((?>/\\*.*?\\*/\\s+))\n                      rb_define_attr\\((?:\\s*
((?>/\\*.*?\\*/\\s+)?)\n            ((?:(?:static\\s*)?(?:\\s*const)?(?:\\s*unsigned)?(?:\\s*struct)?\\s+)?\n             (VALUE|\\w+)(\\s+\\*|\\*\\s+|\\s+)
((?i)\\Q$pat\\E)
((?i)can)(?P<id>\\d+)
((?i)CAN_DataFrame)_(?P<id>\\d+)
((?P<cdata_s><!\\[CDATA\\[)(?P<cdata_d>.*?)(?P<cdata_e>\\]\\]>))
((?P<days>\\d+)\\s*(days|day|d)\\s*,?)?\\s*((?P<hours>\\d+)\\s*:\\s*(?P<minutes>\\d+)\\s*:\\s*(?P<seconds>\\d+))?\\s*
((?P<days>\\d+?)d|(?P<months>\\d+?)m|(?P<years>\\d+?)y)?
((?P<encoded>(=[a-zA-Z0-9][a-zA-Z0-9]))|(?P<char>([^=])))
((?P<h>[0-9]+))([^0-9 ]+(?P<m>[0-9 ]+))?([^0-9ap ]+(?P<s>[0-9]*))?((?P<d>[ap]m))?
((?P<host>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\:)?((?P<hport>\\d{1,5})?)?(\\:(?P<cport>\\d{1,5}))?(\\/(?P<proto>\\w{3}))?
((?P<hostname>[\\w\\.\\-]+))
((?P<hours>-?\\d+?)h)?((?P<minutes>-?\\d+?)m)?((?P<seconds>-?\\d+?)s)?
((?P<hours>\\d+?)hr)?((?P<minutes>\\d+?)m)?((?P<seconds>\\d+?)s)?
((?P<label>[^+]+)\\+)?(?P<userid>[a-z0-9$%=_~-]+(?:\\.[a-z0-9$%+=_~-]+)*)@(?P<domain>(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9]))?
((?P<name>[ -~]+),)?(?P<ver>[0-9]+)
((?P<name>\\d\\d) | R(?P<namenew>\\d\\d)(RR?|LL?|C)?/?)\n                                ((?P<special> SNOCLO|CLRD(\\d\\d|//)) |\n                                 (?P<deposit>(\\d|/))\n                                 (?P<extent>(\\d|/))\n                                 (?P<depth>(\\d\\d|//))\n                                 (?P<friction>(\\d\\d|//)))\\s+
((?P<namespace>[^:]+):)?(?P<name>.+)
((?P<package>\\A[[:alnum:]]+[[:alnum:]/]+)/)*(?P<target>[[:alnum:]]+.[[:alnum:]]+)
((?P<prefix>[$@%\\\\*&]+)\\s*)?(?P<scope>(::)?\\b((?!\\d)\\w*?(::|'))*)(?P<name>(?!\\d)\\w+)$
((?P<prefix>\\w+)-)?v?(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)
((?P<Sign>((?P<Ch>[\\+\\-]))?)(?P<Whole>[0-9]*)(?P<Period>\\.?)(?P<Frac>[0-9]+)(?P<Exponent>((?i:E)(?P<Sign>((?P<Ch>[\\+\\-]))?)(?P<Num>[0-9]+))?))
((?P<single_quoted>'[^']*')|(?P<double_quoted>\"([^\"\\\\]|\\\\.)*\")|(?P<hash_path>(?P<path>([A-Za-z][A-Za-z0-9\\.-]*://([^\\'\"\\s\\\\]|\\\\.)+)|([^\\'\":=\\s\\\\]|\\\\.)*([^\\'\":=\\s\\\\/]|\\\\.))(?P<path_slash>/)?#(?P<name>([^\\'\":;><|=/#\\s\\\\]|\\\\.)*)(?P<name_slash>/)?)|(?P<unquoted>([^\\'\":=\\s\\\\]|\\\\.)+)|(?P<colon_or_equals>[:=])|(?P<whitespace>\\s+)|(?P<error>.+))
((?P<title>[A-Za-z/\\.0-9\\-_ ]+): )?(?P<url>http(s)?://.*)
((?P<title>[A-Za-z/\\.0-9\\-_ ]+): )?<a .*href=['\\\"](?P<url>http(s)?://.+)['\\\"].*>(?P<value>.+)</a>
((?P<to>.*)?(?P<to_email>\\<.*\\>))
((?P<username>\\w+)@)?((?P<hostname>[\\w\\.\\-]+))[\\:\\/]{1,2}(?P<pathname>((?P<owner>\\w+)/)?((?P<name>[\\w\\-]+)(\\.git)?)?)
((?P<years>\\d+)y ?)?((?P<days>\\d+)d ?)?((?P<hours>\\d+)h ?)?((?P<minutes>\\d+)m ?)?((?P<seconds>\\d+)s ?)?
((?U)[^\\w\\.\\'\\-\\/,&])
(([!#$%&'*+.0-9A-Zdiff^_`a-z{|}~-]*)\\*)(\\d*)=(\\s*\".*?[^\\\\]\";?|\\S*)
(([!#\\$%&*-~]|
((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyu]{1,5}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])
((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])
((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyu]{1,5}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|((?:0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?))|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]{1,6}\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-*\\/%&|^]|<{1,2}|>{1,3}|!=?|={1,2})=?|[?:~]|[;,.[\\](){}])|(\\s+)|(^$|[\\s\\S])
((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyu]{1,5}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]{1,6}\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-*\\/%&|^]|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])
((['\"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\'\"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyu]{1,5}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]{1,6}\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])
(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*
(([-\\'\\\"\\(\\[\\{</: \\\\])|(__?)(?=$MARK_END_TRAILER|\\n))
(([\\x0-\\x1f]|[\\\\\\/bfnrt]|\\\\u[0-9a-fA-F]{4}|[\\x20-\\xff])*)
(([^%\\d])(\\$(
(([^/\\\\]|\\\\\\/)+)$
(([^\\\\])-(.)|.)
('([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")
('([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|\\S+)\\s*
(([^\\\\]|^|[^\\\\])([\\\\]{2})*[$]+|\\|?\\s*-?
('([^'\\\\]++|''\\.)')|stdClass::__set_state
(([^=]+)=(.*?[^\\\\])\\s*,)(.*)
(([^0-9,^-]+)?)(?P<number>-?[0-9]+[.]?[0-9]+)
(([a-z][a-zA-Z\\d@_]*+)\\s*+(:)\\s*+)?([a-z][a-zA-Z\\d@_]*+)\\s*+(\\()
(([a-z][a-zA-Z\\d@_]*+)|(_))\\s*+(=)
(([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(:)\\s*+)?([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(\\()
(([a-z][a-zA-Z\\d@_]*+|'[^']*+')|(_))\\s*+(=|::)
(([A-z]+)\\s+\\$(
(([A-Za-z\\$\\_][0-9A-Za-z\\$\\_]*|`)\\:[^,\\}]+,?)
(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)
(([a-zA-Z0-9\\_\\-\\.\\+]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))
(([a-zA-Z0-9\\_\\-\\.\\+]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))(\\?subject=\\S+)?
((\"([^\"\\\\]|\\\\\")*\")|\\[\\s*((\"([^\"\\\\]|\\\\\")*\"\\s*),?)*\\])\\s*
((\")([^\"]*)(\")\\s*)(:)\\s*+(?!function)
((\"[^\"]*+\")+|[a-z0-9_]+)\\s+text\\s+COLLATE\\s+('[^']+'|\\S+)
((\"|')[^\"']+\\.(
((\\\\(.|\\n))|([^\"\\\\]))*
((\\\\(.|\\n))|([^\"\\\\])|(\"(?!\"\"))|\\n)*
((\\\\(.|\\n))|([^'\\\\]))*
((\\\\(.|\\n))|([^'\\\\])|('(?!''))|\\n)*
((\\\\([a-z]*?)bou)\\{(?:\\w|(?:\\\\UTF\\{[0-9a-fA-F]+\\}|\\\\CID\\{[0-9]+\\}))+?)(\\\\ajD?Kunoji)\\{\\}((?:\\w|(?:\\\\UTF\\{[0-9a-fA-F]+\\}|\\\\CID\\{[0-9]+\\}))*?)\\}
((\\(\\(.*?\\)\\))(?!\\))|([
((\\\\)(?:.))
((\\\\)(?:\\w*[r|R]ef\\*?))(\\{)
((\\\\)(?:alias|docType|keyword|name|title))(\\{)
((\\\\)(?:alias|docType|keyword|name|title|description|value|note|concept|keyword|details|format|references|source|arguments|seealso|author))(\\{)
((\\\\)(?:author))(\\{)(?:\\n)?
((\\\\)(?:author))(\\{)([\\w\\s]+?)\\s+(<)([^>]*)(>)
((\\\\)(?:details|format|references|source))(\\{)
((\\\\)(?:examples))(\\{)(?:\\n)?
((\\\\)(?:include|input))(\\{)
((\\\\)(?:usage))(\\{)(?:\\n)?
((\\\\)(?:usepackage|documentclass))(?:(\\[)([^\\]]*)(\\]))?(\\{)
((\\\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S|q|Q|WW?W?W?)(?![^\\[]*\\]))
((\\\\)|(\\*)|(\\$))
((\\\\)begin)(\\{)(lstlisting)(\\})(?:(\\[).*(\\]))?(\\s*%.*\\n?)?
((\\\\)catcode)`(?:\\\\)?.(=)(\\d+)
((\\\\)emph)(\\{)
((\\\\)end)(\\{)(\\4)(\\})
((\\\\)end)(\\{)(\\4)(\\})(?:\\s*\\n)?
((\\\\)end)(\\{)(alltt)(\\})
((\\\\)end)(\\{)(frame)(\\})
((\\\\)end)(\\{)(lstlisting)(\\})
((\\\\)end)(\\{)(tikzpicture)(\\})(?:\\s*\\n)?
((\\\\)footnote)((?:\\[[^\\[]*?\\])*)(\\{)
((\\\\)footnote)(\\{)
((\\\\)frametitle)(\\{)(.*)(\\})
((\\\\)header)\\s*({)
((\\\\)label)(\\{)
((\\\\)marginpar)(\\{)
((\\\\)relative)\\s*(?:([a-h][',]*)\\s*)?(?={)
((\\\\)Sexpr(\\{))
((\\\\)Sexpr)(\\{)
((\\\\)skip)\\s+(64|32|16|8|4|2|1)
((\\\\)textbf)(\\{)
((\\\\)textit)(\\{)
((\\\\)texttt)(\\{)
((\\\\)times)\\s*(?:([1-9][0-9]*/[1-9][0-9])\\s*)(?={)
((\\\\)times)\\s*(?:([1-9][0-9]*\\/[1-9][0-9])\\s*)(?={)
((\\\\)verb[\\*]?)\\s*((?<=\\s)\\S|[^a-zA-Z])(.*?)(\\3|$)
((\\\\)verb[\\*]?)\\s*((\\\\)scantokens)(\\{)
((\\\\.|[^.\\\\])*)
((\\:|\\?)(?P<name>[a-z0-9_]+))(?=(?:\\z|\\s|\\)))
((\\[.*?(?<!\\\\)\\])|(.))
((\\}))\\s*+(\\))\\s*+(\\.)
((\\A|\\s)\\P{IsAlpha}+|\\P{IsAlpha}+(\\s|\\Z))
((\\n.*
((\\p{$script}|[-0-9:])*)
((\\s+)\\$(
((\\s+)global\\s+\\$(
((\\s+?)}\\s*catch\\s*\\(\\s*(
((\\s+?)foreach\\s*\\((.+?)\\s+as\\s+\\$(
((\\s+|\\(|!)
((\\w)|(\\\\\\s)|(\\.))+(?=\\s?+(=|:))
((\\w+):(\\w+\\pL.))+\\s?
((^[\\/\\\\])\\..)|(\\.js$)|(\\.map$)|(\\.metadata\\.json)
((^|[^\\\\])(\\\\\\\\))*,
((^|[^\\\\])(\\\\\\\\)*)#.*
((^|[^\\\\])(\\\\\\\\)*)\\%
((^|[^\\\\])(\\\\\\\\)*)\\\\(?=[1-9])
((^|[^\\\\])(\\\\\\\\)*)\\\\([[:alpha:]])
((^|\\n)\\s*)#\\s*[a-z]+([^\\n\\\\]|\\\\.|\\\\\\r*\\n)*
((e|E)(g|G)(y|Y)(p|P)(t|T))|???
((erlang)\\s*+(:)\\s*+)?(is_atom|is_binary|is_constant|is_float|is_function|is_integer|is_list|is_number|is_pid|is_port|is_reference|is_tuple|is_record|abs|element|hd|length|node|round|self|size|tl|trunc)\\s*+(\\()
((http|ftp):\\/\\/([\\w\\d\\_\\.\\-])+\\/(([\\w\\d\\_\\.\\-])+?\\/)*\\s*?([\\w\\d\\_\\.\\-]\\s?){1,10}\\s*)$
((https?):((//)|(\\\\\\\\))+([\\w\\d:#@%/;$()~_?\\+-=\\\\\\.&](#!)?)*)
((https?|ftp|gopher|telnet|file):((//)|(\\\\))+[\\w\\d:#@%/;$()~_?\\+-=\\\\\\.&]*)
((https?|ftp|gopher|telnet|file|notes|ms-help):((//)|(\\\\))+[\\w\\d:#@%/;$()~_?\\+-=\\\\.&]*)
((T|V|G)(\\_[0-9])+)
(')(.|\\\\.|\\\\u[\\dA-Fa-f]{4})\\1
()(:
(')([^\\\\]|\\\\(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\\d\\d|[bnrt'\"\\\\]))(')
(')[^'\\\\]*(')
()\\\\( )
()\\\\([$%;#_&])(\\{\\})?
()\\\\(~)\\{\\}
(')|(\\\\)
()<>@,;:\\\"/[]?={} \t
(*ANYCRLF)^[\\s]*([0-9]+)[\\s]+([0-9]+)[\\s]+obj
(*BSR_ANYCRLF)(*ANYCRLF)^.*(?:\\R\\s+\\*.*)+$
(*BSR_ANYCRLF)\\R
(*MARK:A)a
(*UTF8)([\\w+])-([a-z0-9]+)\\s+\\b([\\w\\s]+)\\b
(*UTF8)(vimeo\\.com)
(*UTF8)(youtube\\.com|youtu\\.be)
(*UTF8)[^\\p{L}]
(*UTF8)[^\\p{L}0-9]
(*UTF8)[^\\p{L}0-9_-]
(*UTF8)[^A-Za-z0-9]
(*UTF8)^'(.*)'$
(*UTF8)^\"(.*)\"$
(*UTF8)^http:
(*UTF8){{.*}}
(*UTF8){{\\s*[&{]
(*UTF8){{\\s*>
(*UTF8)api\\.soundcloud\\.com/tracks/(\\d+)
(*UTF8)extension \\.js script$
(*UTF8)facebook\\.com/.*/posts/\\d+/?
(*UTF8)facebook\\.com/.*/videos
(*UTF8)facebook\\.com/.*photos.*
(*UTF8)facebook\\.com/photo\\.php.*
(*UTF8)facebook\\.com/video\\.php.*
(*UTF8)instagram.com/p/([^/]+)/?
(*UTF8)Line(?:.*?)(\\d+)(?:.*?)Col(?:.*?)(\\d+)(?:.*?)Unexpected characters in attribute name: (.*)
(*UTF8)script$
(*UTF8)twitter.com/.*/status(?:es)?/([^/]+)
(*UTF8)w\\.soundcloud\\.com/player/?\\?
(,)\\s*+(?=\\})
(,)|(\\[|{)|(}|])|\"(?:[^\"\\\\\\r\\n]|\\\\[\"\\\\\\/bfnrt]|\\\\u[\\da-fA-F]{4})*\"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)
(,|:)([^\\p{Digit}])
(,|;|&|?|?|?)(.*)
(,|\\.|\\+|-|\\*|\\/|<|>|%|&&|\\|\\||<<|\\(|\\[|\\{|=|and|or|\\\\)\\s*(?:#(?![{$@]).*)?$
(.
(. )+[/\\\\]+
(.)(\\-|\\_|\\.|\\s)+(.)?
(.)(\\p{Upper})
(.)[\u00e3\u0082\u009b\\x
(.)[\u00e3\u0082\u009c\\x
(.)[][\\x0D\\\\]
(.*
(.*(--?\\S* *(((?!\\[default *:|\\[env *:)\\S*) *(\\.{3})?)?)|(^\\s*)?\\[(default|env): (\"(?:[^\"\\\\]|\\\\.)*\"\\s*|.*)*\\])
(.*(?P<expr>))
(.*) at ${\\__FILE__} .*$
(.*) at \\Q$filename\\E line $line.
(.*)(
(.*)((?<!\\\\)\\[.*)
(.*)(/|\\\\)([^\\\\/]+)$
(.*)(?:^|(?:(?!\\\\).))\\#(?!\\{).*$
(.*)(?|&)piklist_demo_workflow=[^&]+?(&)(.*)
(.*)(?<!\\\\)\\(.+(?<!\\\\)\\)(.*)
(.*)(?P<dependency_link>https?.*$)
(.*)([^\\\\]*)$
(.*): posts ((small)|(big)|(small \\& big)) blind(s)? (
(.*): posts the ante (
(.*)::\\p{Word}+$
(.*)@([^/\\\\]*)(.*)
(.*)@ORM\\\\Table(.*)\\n(.*)@ORM\\\\Entity(.*)\\n
(.*)@var(.*)\\n(.*)\\n(.*)@ORM\\\\Column(.*)\\n
(.*)@var(.*)\\n(.*)\\n(.*)@ORM\\\\Column(.*)\\n(.*)@ORM\\\\Id\\n(.*)@ORM\\\\GeneratedValue(.*)\\n
(.*)[/\\\\]
(.*)[/\\\\]([^/\\\\]+)$
(.*)[/\\\\].*
(.*)[\\/\\\\]
(.*)[\\/\\\\](.*?\\.\\w+)$
(.*)[\\/\\\\]([^\\/\\\\]+)
(.*)\\\\
(.*)\\\\(.*)
(.*)\\\\(.*)Checkout$
(.*)\\\\([^\\\\]*)
(.*)\\\\([^\\\\]+)$
(.*)\\/([a-z0-9\\-\\_]+)$
(.*)\\[(X|\\s|\\_|\\-)\\]\\s(.*)
(.*)\\\\Controller\\\\(.*)
(.*)\\\\Entity\\\\(.*)
(.*)\\Field(.*)Field$
(.*)\\\\Model\\\\(.*)
(.*)\\Q$next_boundary\\E\\r\\n
(.*)\\Q$start\\E
(.*)\\s\\\\(\\w+)=(.*)
(.*)\\s\\[(
(.*)_\\Q$by\\E$
(.*){([^\\\\].*)}
(.*){1}?((?<![\\^\\\\])\\r?\\n).*
(.*)=(\"(?P<QVALUE>([^\"]*))\"|(?P<VALUE>(.*)))$
(.*)src[/\\\\]codeintel[/\\\\](src[/\\\\](?:codeintel|modules))(.*)
(.*/)?(?P<paste_id>[a-zA-Z0-9]+)(\\?rev=.*)?
(.*/\\..*)|(.*[a-f0-9]{8}+$)|(.*\\.tmp$)|(.*atmp[0-9]+$)|(.*\\.wbk$)|(.*\\.bak$)|(.*\\~$)|(.*backup.*\\.do[ct]{1}[x]?[m]?$)|(.*\\.sb\\-\\w{8}\\-\\w{6}$)
(.*?
(.*?(?:\\\\\\\\)*$)
(.*?(?:\\\\\\\\)*)\\\\$
'(.*?(?<!\\\\))'
('.*?(?<!\\\\)')|(\\\".*?(?<!\\\\)\\\")
(.*?)(
(.*?)(%>\\r?\\n|
(.*?)(-%>|
(.*?)(?:[\\/\\\\]+|$)
(.*?)(?<!\\\\)
'(.*?)(?<!\\\\)'
(.*?)(?<!\\\\):([a-zA-Z_]+)?(?:#(.*?)#)?
(.*?)(?=<(?:td|th)[^>]*>\\s*\\Q$value\\E\\s*)
(.*?)([\"\\\\])
(.*?)([^\\/\\\\]+)$
(.*?)([^\\\\]+)$
(.*?)(^[ \\t]*<%\\-|<%\\-|-%>\\r?\\n|-%>|
(.*?)(^[ \\t]*<%-|<%-|
(.*?)://(?P<host>[-.A-Za-z0-9]+)/?(.*)
(.*?)[\\\\
(.*?)[^\\\\](?=((#{)|'))
(.*?)[^\\\\](?=((#{)|\"))
(.*?)\\:\\s.*?[\\/\\\\]+
(.*?)\\\\perl.*
(.*?)\\Q$value\\E(.*)
(.*?)\\s*=\\s*('|\"|&#?\\w+;)(.*?)(?<!\\\\)\\2
(.*?\\_\\d+\\..*?)\\.(\\d+)\\.
(.*?\\})\\s*([\\w\\[\\]]+)\\s+([^]*)
(.*?\\Q$self->{'rec_sep'}\\E|.+)
(.*?\\r?\\n--\\Q$2\\E--\\r?\\n)
(.*[
(.*[/\\\\])(.*)$
(.*[\\/\\\\])
(.*[\\/\\\\])[^\\/\\\\]+$
(.*[\\/|\\\\])?(.+?)$
(.*[^
(.*[^\\\\]$separator).*
'(.*[^\\\\])'\\s->\\s'(.*[^\\\\\\\\])'
(.*[^\\\\],\\s*)(.*)
(.*[^\\\\]|^)\\#\\{(.*?)\\}(.*)
(.*[a-f0-9]{8}+$)|(.*\\.tmp$)|(.*\\.wbk$)|(.*\\.bak$)|(.*\\~$)
(.*\\/
(.*\\Q$key\\E.*)
(.*\\Q\u00c1\u00b4\u00a4\u00c6\u00a4\u00f2\u00c9\u00bd\u00bc\u00a8\\E.*)\\Q&nbsp;&nbsp;[\\E(.*?)\\Q]&nbsp;&nbsp;\\E(.*\\Q\u00ba\u00c7\u00bf\u00b7\u00a4\u00ce10\u00b7\u00ef\u00a4\u00f2\u00c9\u00bd\u00bc\u00a8\\E.*)
(.*\\R)
(.?)(\\\\\\\\)*\\{\\}
(.[^
(.{
(.{@{[ $spanstart - ($loc->location_type eq 'IN-BETWEEN' ? 0 : 1) ]}})\n                                                          (.{@{[ $spanend - $spanstart + ($loc->location_type eq 'IN-BETWEEN' ? -1 : 1) ]}})\n                                                          (.*)\n                                                         
(.{1,
(.{240}[^\\\\])
'(.|\\\\(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\\d\\d|[bnrt'\"\\\\]))'
(.|\\n)*(?P<master>spark:\\/\\/\\d+.\\d+.\\d+.\\d+:\\d+)(.|\\n)*
(.+) (
(.+) \\(([0-9.]+)\\) \\[(\\h{40}|\\h{8}-\\h{16})\\]?
(.+) \\Q$self->{OPT}{separator}\\E (.*)
(.+)(
(.+)((?P<drill>\\.drill\\.tap)|(?P<etch>\\.etch\\.tap))
(.+)(?:[\\s]+)((?:
(.+)([\\/|\\\\])$
(.+)([\\-\\_])(v?\\d.*)(\\.(?:tar\\.(?:gz|bz2)|tgz|zip))$
(.+), (
(.+): ((calls)|(bets)) ((
(.+): raises (
(.+):(
(.+)?(\\{
(.+)[/\\\\].+
(.+)\\\\(.+Bundle)\\\\Controller\\\\(.+)Controller::(.+)Action
(.+)\\.(?:[a-z]|\\_)+\\/(.+)
(.+)\\_
(.+)\\__init__.py[oc]
(.+)\\\\Command\\\\.+?Command$
(.+)\\\\Domain\\\\Model\\\\(.+)
(.+)\\h*(?:->|::)
(.+)\\Q$sufix\\E$
(.+:)(.+)-([^]+)
'(.+?)' !~ /\\Q(?^:\\E(.+?)/ at 
(.+?)(
(.+?)(?!\\.\\\\)(?:\\.|$)
(.+?)([a-z0-9\\-\\_]*)
'(.+?)':((?P<quote>['\\\"])(.*?)(?P=quote)|\\S+)
(.+?)\\.(
(.+?\\r?\\n)(
(.+\\/
(.+_)?legi(?P<global>_global)?_(?P<date>[0-9]{8}-[0-9]{6})\\..+
(.+new[\\w \\\\]+Application\\('\\w+',).+?(\\);.+)
(/
(/ | \\\\) $
(/?((?P<user>[^/]+)/)?(?P<model>[^.]*)(\\.(?P<application>[^:]*(:.*)?))?)?
(/[a-zA-Z0-9:\\-\\_\\.]+)+
(/\\*[^*]*\\*+([^/*][^*]*\\*+)*/)|//[^\\n]*|(\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'|.[^/\"'\\\\]*)
(/\\.)|[[:cntrl:]]|(//)|(\\\\)|([\\:\\*\\?\"\\<\\>\\|])
(/|\\\\)
(/|\\\\)install(/|\\\\)index.php$
(/|\\.|)\\[([^:\\]]*+)(?::([^:\\]]*+))?\\](\\?|)
(/contest)?/(?P<CONTEST>[0-9]+)((/problem)?/(?P<PROBLEM>[a-zA-Z0-9]+))?
(/dp/|/gp/product/)(?P<asin>[^/]+)/?
(/id=
(/problems)?/(?P<PROBLEM>[a-zA-Z]+)(/)?
(/problems)?/(?P<PROBLEM>[a-zA-Z0-9]+)
(:(
(:(?P<nick>[^ !@]+)(\\!(?P<user>[^ @]+))?(\\@(?P<host>[^ ]+))? )?(?P<command>[^ ]+) (?P<params1>([^:]*))(?P<params2>(:.*)?)
(::)?(
(::|\\\\)
(::|->|\\\\)
(:[^\\\\]|)$self->{qr_comment}.*
(:\\/*[^/]*)[^]*
(:\\/*[^\\/]*)[^]*
(:| |;|/|\\|)+(?P<port>\\d+)$
(:|\\.|!|\\?)\\s?(\\W*
(:as)(?![a-zA-Z+!\\-_?0-9*~
(:as|:or|:keys|:strs|:syms)(?![a-zA-Z+!\\-_?0-9*~
(:let|:when|:while)(?![a-zA-Z+!\\-_?0-9*~
(:name)\\s+(?=[a-zA-Z+!\\-_?0-9*~
(:refer-clojure|:require|:use|:import|:load|:exclude|:as|:only)(?![a-zA-Z+!\\-_?0-9*~
(:tag|:doc|:arglists|:private|:macro|:name|:ns|:inline-arities|:inline|:line|:file)(?![a-zA-Z+!\\-_?0-9*~
(;?)(@import (?<url>url\\()?(?P<quotes>[\"']?).+?(?P=quotes)(?(url)\\)));?
(;|\\\\G|\\\\c)\\s*$
(-?
(?!
(?!%\\h\\h|[!$-&(-;=?-_a-~]).
(?!%\\h\\h|[!-~]).
(?!(?:\\1+s))
(?!(?:\\3+(s+?)))
(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*
(?!:\\\\)\\[\\:
(?![\u5e74\u6708\u65e5\u53f7])\\p{Han}
(?![^a-z0-9_$])([a-z0-9_$]{
(?![-=/)])[\\s!-.:-@[-`{-~\\pP]+$
(?![a-zA-Z+!\\-_?0-9*~
(?!\\\\)'
'(?!\\\\)
-(?!\\\\)
(?!\\\\)%&
(?!\\\\)%q
(?!\\\\)%T
(?!\\\\)(.) 
(?!\\\\)(.)'
(?!\\\\)(.) +
(?!\\\\)(.)\"
(?!\\\\)(.)\\?
(?!\\\\)(.)\\\\D
(?!\\\\)(.)\\\\d
(?!\\\\)(.)\\\\s
(?!\\\\)(.)\\\\S
(?!\\\\)(.)\\\\w
(?!\\\\)(.)\\\\W
(?!\\\\)(.)_
(?!\\\\)(.)_$
(?!\\\\)([$quotes])
(?!\\\\)([()])
(?!\\\\).
(?!\\\\)[(](?!\\?[#=:!>-imx])
(?!\\\\)[\\{\\}]
(?!\\\\)\"
(?!\\\\)\"((?:\\\\\"|[^\"])+)\"?|([^\\s]+)
(?!\\\\)\\?
(?!\\\\)\\}\\{
(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)
(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[\\^?]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)
(?!\\<ref>)\\{\\{[^\\}]+?\\n ?\\|.+?=
(?!-\\d)(?:(?:
(?!\\n)[
(?!\\s*$)\\s*(?:'([^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*)\"|([^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*))\\s*(?:,|$)
(?!\\\\uD[c-fC-F][0-9a-fA-F]{2})\\\\u(?!D[89A-Fa-f][0-9a-fA-F]{2})\\d{4}
(?!^ {0,
(?!<(div|p)>)\\s*(?P<imgtag><img[^>]+>)\\s*(?!</(div|p)>)
(?!<\\\\)[:\\s]+
(?!<\\\\)\\,\\s*
(?!<\\\\)\\s+
(?!=begin)(?>
(?!=x)_a++
(?!NaN)\\pL\\K(\\p{Ll})(\\p{Lu})
(?#--- 
(?$o)$qmkey
(?$o)(?:$s)
(?$opts)$re
(?(?<![\\\\])\"\" \\. )| \\. \"\"
(?(R)\\((?:[^\\(\\)]|(?R))*\\)|(?<!\\w)(\\s*)@(if|foreach|for|while)(\\s*(?R)+))
(-?)((?P<d>[0-9]*).)?(?P<h>[0-9]{2}):(?P<m>[0-9]{2}):(?P<s>[0-9]{2}(\\.[0-9]+)?$)
(?)(SELECT|DELETE|INSERT|UPDATE|INTO|FROM|WHERE) 
(?)[ \\)]RNA
(?)\\-ACP\\-
(?)BCCP-
(?)DNA
(?)mRNA
(?)rRNA
(?)sRNA
(?)tRNA
(?.)*?$
(?.)*??
(?.)+
(?: 
(?: ' (?: (?: '' )++ | [^']+ ) ' )*? \\K ( [-+\\\\] ) 
(?:
'(?:
(?: (?!\\\\))
(?: (?: 
(?: : \\s)? \\Q$errstr
(?: \\\\ \\\\ )*+ \\K \\\\ - 
(?: \\\\ \\\\ )*+ \\K \\\\ + 
(?: \\\\ \\\\)*+ \\K \\\\ + 
(?: |^)\\Q$name1\\E(?: |$)
(?: |^)\\Q$name2\\E(?: |$)
(?:# )?\\Q$substitute_this
(?:(
(?:-(
(?:'((?:[^'\\\\]+|\\\\.)*)'|([^',]+))(?:,|$)
(?:(.*[^\\\\])\\/(.*[^\\\\])*\\/){1,}
(?:(.+[^\\\\])\\/(.*[^\\\\])*\\/){1,}
(?:(?![\\N{NO-BREAK SPACE}\\t])\\p{White_Space})+
(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()
(?:(?:
'(?:(?:
(?:(?:(?:(?P<days>[0-9]+):)?(?P<hours>[0-9]+):)?(?P<mins>[0-9]+):)?(?P<secs>[0-9]+)(?P<ms>\\.[0-9]+)?Z?$
(?:(?:(?:\\\\u(\\w{4}))(?:\\\\u(\\w{4}))?)|((?:[\\0-\\u005A\\u005C\\u005F-\\uD7FF\\uDC00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF])+?))\\-(?:(?:(?:\\\\u(\\w{4}))(?:\\\\u(\\w{4}))?)|((?:[\\0-\\u005A\\u005C\\u005F-\\uD7FF\\uDC00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF])+?))
(?:(?:(\\\\?)\\[([^\\]]+)\\])?(\\\\{0,2})(\\+\\+\\+?|\\$\\$)(
(?:(?://
(?:(?://|#|--|;;) ?)?(\\\\)?<!?(|--)(\\d+|\\.)\\2>(?=(?: ?\\\\?<!?\\2(?:\\d+|\\.)\\2>)*$)
(?:(?:[\\\\]+\\w+\\s*){8,})
(?:(?:[a-f0-9]{1,2}[:-])?{5}[a-f0-9]{1,2})
(?:(?:[A-Z]\\:|~){0,1}(?:\\/|\\\\\\\\|\\\\)(?=[^\\s\\/]))(?:(?:[\\ a-zA-Z0-9\\+\\-\\_\\.\\$\\\u25cf\\-]+(?:\\/|\\\\\\\\|\\\\)))*
(?:(?:\\\\\\\\)*\\\\)?(?<!\\$){
(?:(?:\\\\\\\\)*\\\\)?}
(?:(?:\\.|
(?:(?:\\.|:|
(?:(?:\\/\\/|#|--|;;) ?)?(\\\\)?<!?(--|)(\\d+)\\2> ?(?=(?:\\\\?<!?\\2\\d+\\2> ?)*$)
(?:(?:\\_bin)|(?:\\_dir)|(?:\\_path))$
(?:(?:\\_email))$
(?:(?:\\_host))$
(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')
(?:(?:\\p{Alpha}|\\p{Digit}|-){1,63}\\.)*(?:\\p{Alpha}|\\p{Digit}|-){1,63}
(?:(?:\\w+|\\*)\\/(?:\\w+(?:\\.|\\-|\\+)?|\\*)*)\\s*(?:;
(?:(?:^\\.)|(?:[/\\\\]\\.))[^/\\\\.].*
(?:(?:^|[\\s=])(@[^\\s\\/\\\\]+))
(?:(?:`|\")?
'''(?:(?:'|'')?(?:[^'\\\\]))*'''
'''(?:(?:'|'')?(?:[^'\\\\]|
(?:'(?:''|\\\\'|\\\\[^']|[^'\\\\])*')|(?:[^']+)
(?:(?:an?|the|
(?:(?:http|rtmp|rtsp)(?P<s>s)?:)?(?P<url>//[^?]+)
(?:(?:KDDI-)|(?:SIE-))(?P<model>[^\\s/]*)
(?:(?<=([A-Za-z\\d]))|\\b)(
(?:(?<field>
(?:(?<gq>[\"'])(?<name>
(?:(?=g)).{2147483648,}
(?:(?=g))|(?:m).{2147483648,}
(?:(?P<auth>[^:@]+?(?::[^:@]*?)?)@)?(?:(?P<localhost>localhost)|(?P<ipv4>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})|(?:\\[?(?P<ipv6>[A-F0-9]*:[A-F0-9:]+)\\]?)|(?P<domain>(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)))(?::(?P<port>\\d+))?$
(?:(?P<days>\\d+)d)?(?:(?P<hours>\\d+)h)?(?:(?P<minutes>\\d+)m)?(?:(?P<seconds>\\d+)s)?
(?:(?P<file>[a-zA-Z0-9.@_/\\s\\-]+)?[(](?P<line>[0-9]+)[)]: )?Entering test (suite|module) \"(?P<suite>[a-zA-Z0-9(){}:&_<>/\\-, ]+)\"
(?:(?P<file>[a-zA-Z0-9.@_/\\\\\\s\\-]+)[(](?P<line>[0-9]+)[)]: )?Entering test case \"(?P<test>[a-zA-Z0-9(){}\\[\\]:;&_<>\\-, =]+)\"
(?:(?P<file>[a-zA-Z0-9.@_/\\\\\\s\\-]+)[(](?P<line>[0-9]+)[)]: )?Leaving test (suite|module) \"(?P<suite>[a-zA-Z0-9(){}:&_<>/\\-, ]+)\"(?:; testing time: (?P<testing_time>[a-zA-Z0-9.s ,+=()%/]+))?(\\. Test suite (?P<status>passed|failed)\\.(?: (?P<results>.*))?)?
(?:(?P<file>[a-zA-Z0-9.@_/\\\\\\s\\-]+)[(](?P<line>[0-9]+)[)]: )?Leaving test case \"(?:[a-zA-Z0-9(){}\\[\\]:;&_<>\\-, =]+)\"(?:; testing time: (?P<testing_time>[a-zA-Z0-9.s ,+=()%/]+))?(\\. Test case (?P<status>passed|failed|skipped|aborted)\\.(?: (?P<results>.*))?)?
(?:(?P<ignore>FOO)|(?P<UP>[A-Z]+)|(?P<down>[a-z]+))$
(?:(?P<ipv4>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})|(?P<localhost>localhost)|(?P<domain>([A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}(?<!-)\\.?))(?P<port>:\\d+)?)
(?:(?P<key>[^ ,=]+)=\"([^\"]+)\")
(?:(?P<kwname>[a-zA-Z_]\\w*)\\s*=(?=[^=]|$))?
(?:(?P<login>.+?(?:\\@.+?)?)@(?P<name>.+?$))
(?:(?P<login>.+?@?.+)?@)?(?P<name>.+)
(?:(?P<module>[\\w\\.]+):)?(?P<attr>[\\w\\.]+)
(?:(?P<protocol>[\\w\\-]+)\\:\\/\\/)?(?:(?P<user>[\\w\\-]+)?(?:\\:(?P<pwd>[\\w\\-\\.\\,]+))?\\@)?(?P<host>[\\w\\-\\.]+)(?:\\:(?P<port>\\d{2,5}))?\\/(?P<dbname>[\\w\\-.]+)?$
(?:(?P<sig>\\w+)/)?(?P<op>\\w+)/(?:(?P<w>\\d+))?x(?:(?P<h>\\d+))?/(?P<path>[\\w\\-/.]+)
(?:(?P<test_time>[0-9]+)(?P<units>us|ms|mks))
(?:(?P<UP>[A-Z]+)|(?P<down>[a-z]+))$
(?:(?P<url_p>.+)(?:[/\\\\]))?(?P<fn>[^/\\\\#]+\\.tar\\.bz2)(:?#(?P<md5>[0-9a-f]{32}))?$
(?:([.]|%2e)([.]|%2e)?|[^/\\\\]*)(?:[/\\\\]|\\Z)
(?:([\\w-_]+)=(['\"])(.*?)\\g{-2}\\s*)
(?:([^
(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')
(?:([^\\\\]|^))!([^!]|\\\\!)+!
(?:([A-Za-z\\d])|^)(
(?:([A-Za-z])|(\\d)|^)(
(?:(\"(?:[^\"\\\\]|\\\\.)*\")|([^,\"]*))(?:,|$)
(?:(\\$)|(\\\\)|(`))
(?:(\\\\)|('))
(?:(\\\\)|(\"))
(?:(\\[)|(\\\\)|(.))
(?:(\\[)|(\\\\)|(\\/))
'(?:(\\\\[\\\\\"'ntbr ])|(\\\\[0-9]{3})|(\\\\x\\h{2}))'
(?:(\\\\[|])|[^|`]|`[^`]++`|`)++
(?:(\\])|(\\\\))
(?:(\\d*\\.\\d+)|(\\d+))(?:[eE]([+-]?\\d+))?(
(?:(\\p{InFullwidth})|(\\p{InHalfwidth}))
(?:(\\p{InFullwidth}+)|(\\p{InHalfwidth}+))
(?:(<(?!<)|<<)[^\\S\\n]*
(?:(<\\/
(?:.(?!
(?:.)*[$|jQuery]\\([\"|']?(?P<dom_id>[\\.\\-_\\w]+)[\"|']?\\)\\.(?P<query>[\\.\\-_\\w]+)*$
(?:.*[/\\\\])?(.*?)(?:\\.fmt)$
(?:.*[/\\\\])?(.*?)(?:\\.fmt)?$
(?:.{0,
(?:.|(\\\\(?:[0-7]{3}|x\\h\\h|u\\h\\h\\h\\h))|(\\\\c[A-Z])|(\\\\.))\\-(?:[^\\]\\\\]|(\\\\(?:[0-7]{3}|x\\h\\h|u\\h\\h\\h\\h))|(\\\\c[A-Z])|(\\\\.))
'(?:.|\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n]))'
'(?:.|\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n]))?'
(?:/
(?:/\\* (?P<language>[-\\w]+) \\*/\\s+)?(?P<css>@font-face \\{.*?family: [\\'\"]?(?P<family>[^\\'\"]+).*?src: local\\([\\'\"]?(?P<name>[^\\'\")]+).*?url\\([\\'\"]?(?P<url>[^\\'\")]+).*?\\})
(?:/|\\\\)([^/\\\\]+)\\.(?:php|xml|yml|twig|js|css|ini)$
(?:/|\\\\)(META\\.yml|META\\.json)$
(?:/+|\\A)\\s*(?P<field>[^\\s]*?)\\s*=(?P<quote>[\\'\"])?\\s*(?P<content>(?(quote).*?|[^/]*))\\s*(?(quote)(?<!\\\\)(?P=quote))
(?:;
(?:;|\\s)name=\"(?P<name>[^\"]+)\"
(?:-?(
(?:???|???).+
(?:??|?|??).+
(?:@[\\w]+[\\/|\\\\]+)?slush-
(?:@\\{[\\w-]+\\}|[^\"'`\\{\\}\\/\\(\\)\\\\])+
(?:@{[$self->get_regexes->{'livres_et_abbreviations'}]})
(?:[
(?:[ \\f\\t\\v\\u00A0\\u2028\\u2029]+|\\/\\/.*|#!.*)*(?:((?:(?:\\r\\n|\\n|\\r)|\\/\\*(?:.|\\n|\\r)*?\\*\\/)+)|((?:0[xX][\\da-fA-F]+)|(?:0[oO][0-7]+)|(?:0[bB][0-1]+)|(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][-+]?\\d+)?))|(\\/(?:\\\\.|\\[(?:\\\\[^\\r\\n]|[^\\n\\r\\]])*\\]|[^\\[\\/\\r\\n])+\\/[gimy]*)|(__raw_until)|(==|!=|->|=>|>>|<<|<=|>=|--|\\+\\+|\\|\\||&&|\\.\\.|\\:\\:|[-*\\/%+&^|]=|[;,?:|^&=<>+\\-*\\/%!~.\\[\\]{}()\\\"`]|[$@_\\w]+)|('(?:\\\\[^\\r\\n]|[^\\\\\\'\\r\\n])*')|('(?:\\\\(?:(?:[^\\r\\n]|(?:\\r\\n|\\n|\\r)))|[^\\\\\\'])*')|(\\S+))
(?:[ ][ ]+|[ ]*\\\\)\\n
(?:[ ]|^)\\Khttp[:][^ ]*
(?:[/(){},+/*%-\\s]|^)#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$
(?:[\\b\\t\\n\\f\\r\\\"]|\\\\)
(?:[\\s\\(]):(\\w+)(?::(
(?:[\\s\\pP]+|(?:&(?:[a-z]+|#[0-9]+);?))*$
(?:[\\w.]+|[\"'][^=]*)\\s*=\\s*(?:[\\w,-]+|[\"'][^'\"](?:[^\"\\\\]|\\\\.)*[\"'])
(?:[\\x00-\\x7F]|[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3})*+
(?:[\\x0B\\0\\x{A0}\\t\\r\\s\\n(){}\\[\\]<>!@$%^*.,:+=`\\~\\?/\\\\]+|&(?:amp|lt|gt|quot);)+
(?:[^ \\t\\u000c\\r\\n=:\\\\]|\\\\u[0-9a-f]{4,4}|\\\\(?:\\r\\n|\\r|\\n)[ \\t\\u000c]*|\\\\[\\s\\S])+
(?:[^,\"]*+(?:\"[^\"]*+\")?)+[^,\"]*+
(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)
(?:[^/\\\\]+[/\\\\])?(?:[^/\\\\]+)$
(?:[^[/#\\\\]+|\\/\\/?(?!\\/)|\\\\.)+
(?:[^[\\/#\\\\]+|\\/\\/?(?!\\/)|\\\\.)+
(?:[^\"#\\\\]+|#(?!{)|\\\\.)+
(?:[^\"#\\\\]+|\"\"?(?!\")|#(?!{)|\\\\.)+
(?:[^\\\\\"]|\\\\(?:.|$))*
(?:[^\\$\\\\]|\\\\.)+
(?:[^\\\\([#\\s.]+|\\\\(?!k<[\\w$]+>|[pP]{[^}]+})[\\S\\s]?|\\((?=\\?(?!#|<[\\w$]+>)))+|(\\()(?:\\?(?:(#)[^)]*\\)|<([$\\w]+)>))?|\\\\(?:k<([\\w$]+)>|[pP]{([^}]+)})|(\\[\\^?)|([\\S\\s])
'(?:[^\\'\\\\\\n\\r]|
'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'
(?:[^\\\\]((\\\\.)*))('(?:\\\\.|[^\\\\'])*'|\"(?:\\\\.|[^\\\\\"])*\")
(?:[^\\]\\/\\\\]+|\\/\\/?(?!\\/))+
(?:[^\\\\]|(?:^|[^\\\\])(?:\\\\\\\\)+)$
'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'
'(?:[^'\\\\]|\\\\(?:[nrt0'\"]|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{6}\\}))'
'(?:[^'\\\\]|\\\\.)*'
'(?:[^\\\\]|\\\\.)*?'
(?:[^\\\\]|\\\\.)*?\"
(?:[^\\\\]|\\\\.)*?\"\"\"
(?:[^\\\\]|\\\\.)*?\\]=*\\]
(?:[^\\\\]|\\\\.)*[^\\\\]\\$[a-zA-Z_\\x7f-\\uffff][a-zA-Z0-9_\\x7f-\\uffff]*
(?:[^\\\\]|\\\\.)*[^\\\\]\\$[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*
'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`
(?:[^\\\\]-|\\u2013)
(?:[^\\\\]|^)#
(?:[^\\\\]|^)(?:[\\\\]{2})*[']
(?:[^\\\\]|^)[*?]
(?:[^\\\\]+\\\\node_modules\\\\)?react-server-gulp-module-tagger\\\\index\\.js$
(?:[^'\\\\]+|''?(?!')|\\\\.)+
(?:[^'\\\\]+|\\\\.)+
(?:[^\\n\\\"\\#]+|\\\\\\n|
(?:[^\\n\\'\\#]+|\\\\\\n|
'(?:[^\\n\\\\']+|\\\\\\n|
(?:[^\\\\\\s\\v]|\\G)(?:\\\\\\\\)*
(?:'[^']*')(*SKIP)(*F)|\\?
(?:'[^']*'|\"[^\"]*\")(*SKIP)(*F)|\\h+
'(?:[^']++|'')*+'|[\\d-.]+
(?:[^|]|\\\\\\|)*[^\\\\](?=\\||\\z)
(?:[`|]-(?:\\+-)?|\\\\_) (\\d+:){3}\\d+
(?:[0-9]|
(?:[0-9]|:|
(?:[0-9]+\\.[0-9]*
(?:[abstract]*class |interface )([a-zA-Z\\_]+)(?:[ \\n]*{| extends| implements)
(?:[A-Z](?:(?:[A-Z]+(?![a-z\\d]))|[a-z\\d]*))|[a-z\\d\\_]+
(?:[a-z][a-zA-Z0-9_]*|'[^\\n']*[^\\\\]')
(?:[A-Z]{3,}+ ?)+[A-Z_]+
(?:[a-zA-Z]:)?[/\\\\].*
(?:[a-zA-Z0-9]+(?:[_-][a-zA-Z0-9]+)*\\.)+(?:
(?:[gs]et|is)\\p{javaUpperCase}.*
(?:\"
(?:\"((?:[^\"\\\\]|\\\\.)*)\"|'((?:[^'\\\\]|\\\\.)*)'|((?:[^ \\\\]|\\\\.)+))
(?:\"((?:[^\"\\\\]+|\\\\.)*)\"|([^\",]+))(?:,|$)
(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))
(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$
(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")
(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")|(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')
(?:\"[^\"]*\")*[^\\\\](;.*)
(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1)B?
(?:\"\"|''|%q?
(?:\"|')(?P<title>[^\"']+)?(?:\"|')\\s+(?:\"|')(?P<alt>[^\"']+)?(?:\"|')
(?:\\(
(?:\\\\(.)|([^\\\\]))-(?:\\\\(.)|([^\\\\]))|(?:\\\\(.)|(.))
(?:\\\\(?:[bdefnrstv\\'\"\\\\/]|[0-7][0-7]?[0-7]?|\\^[a-zA-Z]))
(?:\\([^\\(]*\\))(*SKIP)(*F)|\\s+
(?:\\\\([^NUuxX]))
(?:\\\\(\\\\|([\"+\\-!() ])))
(?:\\\\(\\\\|([\"+\\-!():#@ ])))
(?:\\(|\\)|\\]|\\[|\\}|\\{|(?<!\\\\)[\"\u00e2\u0080\u009d\u00e2\u0080\u009c]|(?<!\\\\)['\u00e2\u0080\u0098\u00e2\u0080\u0099]|(\\s+|$)|($non_word_operators|,|:))
(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)
(?:\\\\(u[a-f0-9]{4}|x[a-f0-9]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)
(?:\\\\\\\\)
(?:\\-)*(?:
(?:\\\\)*\\$[[:alnum:]_-]+
(?:\\\\)*\\*
(?:\\\\)*\\?
(?:\\\\)?((?:\\.[a-zA-Z_\\-][a-zA-Z\\-_0-9]*)+)\\[
(?:\\\\)?\\[([^[\\]]+)]
(?:\\\\\\)|[^)\\n])++\\)
(?:\\*\\*\\*|\\_\\*\\*|\\*\\*\\_)([^\\s]*?)(?:\\*\\*\\*|\\_\\*\\*|\\*\\*\\_)|\\b__([^\\s_].*?)__\\b
(?:\\.(
(?:\\.([\\d]+))?(\\.[^\\.\\/\\\\]*)?$
(?:\\.([\\d+]))?(\\.[^\\.\\/\\\\]*)?$
(?:\\.\\*\\+\\?\\^=!:\\$\\{}\\(\\)\\|\\[]\\/\\\\)*
(?:\\.\\*\\+\\?\\^=!:\\$\\{}\\(\\)\\|\\[]\\/\\\\)?
(?:\\.\\*\\+\\?\\^=!:\\$\\{}\\(\\)\\|\\[]\\/\\\\)+
(?:\\.\\./)+(?P<package>(?:\\w+/)+)(?P<file>.+):(?P<line>\\d+).*\\(_(?P<symbol>.*)\\)
(?:\\.\\./)+(?P<package>(?:\\w+/)+)(?P<file>.+):(?P<line>\\d+): fatal error
(?:\\.\\.?\\Z(?!\\n))?)?)([^
(?:\\.\\.\\/)*(?:
(?:\\.\\.|\\.|
'(?:\\\\.|[^'\\\\])'|\"(?:\\\\.|[^\"\\\\])*\"
'(?:\\\\.|[^'\\\\])+'
'(?:\\\\.|[^'\\\\])+'(?=\\()
'(?:\\\\.|[^\\\\]|\\\\u[0-9a-f]{4})'
(?:\\\\.|[^\\s,])[^\\s=,\\\\]*(?:\\\\.[^\\s=,\\\\]*|=[^,>])*
(?:\\/
(?:\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/)(?:[imgy]{0,4})(?!\\w)
(?:\\/[]\\d!\"#$%&'()*+,.:;<=>?@[\\\\_`a-z{|}~^-]+){0,9}\\/?
(?:\\/\\*([^*\\\\\\\\]|\\*(?!\\/))+\\*\\/|@import[^;]+;)
(?:\\/\\*([^*\\\\\\\\]|\\*(?!\\/))+\\*\\/|@import[^;]+;|@-moz-document\\s*url-prefix\\(\\)\\s*{(([^{}])+{([^{}])+}([^{}])+)+})
(?:\\/\\/.*)|(?:[^\\\\]\\#.*)
(?:\\\\\\/|[^\\/\\\\]+)*
(?:\\/|\\\\)$
(?:\\/|\\\\)([^\\/\\\\]+?)-generator.yml$
(?:\\/|\\\\)cms(?:\\/|\\\\)(.*)\\..*
'(?:\\\\?[^\\\\])*?'
(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])
(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)
(?:\\[([^\\]]+)\\]|\\((?:\\?<[^>]+>|\\?:)?(.*)\\)|\\\\([*+?\\\\\\{\\}\\[\\]WwDdSs.^$])|([^*+?\\{\\}\\[\\]]))(\\*\\??|\\+\\??|\\{(\\d*),?(\\d*)\\})?
(?:\\[.*?]\\])|(?:\\(.*?]\\))|(?:{.*?]})|(?:\\\\)
(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?
(?:\\\\[\"bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4})
(?:\\\\[\\.\\\\]|[^\\.])++
(?:\\\\[\\\\bfnrt\"/]|(?:\\\\u(?:[A-Fa-f\\d]{4}))+|\\\\[\\x20-\\xff])
'(?:\\\\['\\\\rn]|[^'\\\\])*?'
(?:\\\\[\\s\\S]|[^\\\\])*?'
(?:\\\\[\\s\\S]|[^\\\\])*?\"
(?:\\\\[\\s\\S]|[^\\\\])*?`
(?:\\'[^\\']*[^\"]\\'|\"[^\"]*[^\\']*\"|\\[.*\\]|\\(.*\\)|)\\K(,|;|$)
(?:\\'[^\\']*[^\"]\\'|\"[^\"]*[^\\']*\"|\\[.*\\]|\\(.*\\)|)\\K(=|=>|$)
(?:\\^|\\[|\\\\)
(?:\\{:(?P<params>[^}]+)\\})
(?:\\|\\||[^\\|])++
(?:\\\\|\\\\\\d*)?\\_+(\\\"[^\"]+\\\"|\\`[^`]+\\`|\\'[^']\\')
(?:\\+(
(?:\\+|-)?(?:0*(\\p{Digit}{1,29}?))(?:\\.(\\p{Digit}{1,29}?)0*)?(M|m)?
(?:\\+|-)?\\p{Digit}{1,15}(?:\\.\\p{Digit}{1,15})?(?:(?:E|e)(?:\\+|-)?\\p{Digit}{1,3})?(D|d)?
(?:\\+|-)?\\p{Digit}{1,7}(?:\\.\\p{Digit}{1,7})?(?:(?:E|e)(?:\\+|-)?\\p{Digit}{1,2})?(F|f)?
(?:\\A\\{|\\G,)(
(?:\\A|
(?:\\A|[/\\\\])(google)(?=\\Z|[/\\\\])
(?:\\A|[^
(?:\\A|\\P{Word})#(\\p{Word}+)
(?:\\A|\\P{Word})@(\\p{Word}+)
(?:\\A|\\R)\\s*(.+?)\\s*:\\s*\\z
(?:\\A|\\s)(?:
(?:\\b(?:\\s?and\\s?|\\s?or\\s?)\\b|(?:\\s*(?!\\b(?:\\s?and\\s?|\\s?or\\s?)\\b)(?:
(?:\\b[A-Z]|\\.[a-zA-Z_$])[a-zA-Z_$\\d]*|[a-zA-Z_$][a-zA-Z_$\\d]*:|self|arguments|'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"
(?:\\b[A-Z]|\\.[a-zA-Z_$])[a-zA-Z_$\\d]*|[a-zA-Z_$][a-zA-Z_$\\d]*:|this|true|false|null|undefined|typeof|instanceof|in|delete|new|void|arguments|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|isFinite|isNaN|parseFloat|parseInt|unescape|dojo|dijit|dojox|window|document|'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"
(?:\\b[A-Z]|\\.[a-zA-Z_$])[a-zA-Z_$\\d]*|[a-zA-Z_$][a-zA-Z_$\\d]*\\s*:|this|arguments|'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"
(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1st|2nd|3rd|4th|5th)\\s+
(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:\\\\citation|\\\\abx@aux@cite)\\{(?P<key>.+)\\}
(?:\\d{2}|
(?:\n                (?<year>\\d+)\n                ([-:])\n                (?<month>\\d+)\n                \\g{-2}\n                (?<day>\\d+)\n                [ T])?\n                (?<hour>\\d+)\n                (?::(?<minute>\\d+))?\n                (?::(?<second>\\d+))?\n                (?:(?<tzutc>Z)  # Z means UTC\n                |(?:(?<tzsign>[-\u00e2\u0088\u0092+])\n                    (?<tzhour>\\d+)\n                    (?::(?<tzminute>\\d+))?\n                    (?::(?<tzsecond>\\d+))?\n                ))?
(?:\n                \\\\([ \\\\\\/_0abefnrtvLNP\"]) | \\\\x([0-9a-fA-F]
(?:\n           ^\n           |\n           (?<=[\\r\\n\\t \"\\[\\<\\(])\n         )   # start on whitespace, sequence-start, or quote\n         ( # something looking like a Perl token:\n          (?:\n           [\\$\\@\\:\\<\\*\\\\_]\\S+  # either starting with a sigil, etc.\n          )\n          |\n          # or starting alpha, but containing anything strange:\n          (?:\n           [a-zA-Z'${not_ascii}]+[\\$\\@\\:_<>\\(\\\\\\*]\\S+\n          )\n         )\n        
(?:\n      
(?:\n    (?:(?P<epoch>[0-9]+)!)?               # epoch\n    (?P<release>[0-9]+(?:\\.[0-9]+)*)      # release segment\n    (?P<pre>                              # pre-release\n        (?P<preL>a|b|rc)\n        (?P<preN>[0-9]+)\n    )?\n    (?P<post>                             # post release\n        (?:-(?P<postN>[0-9]+))\n    )?\n    (?P<dev>                              # dev release\n        (?:\\.dev(?P<devN>[0-9]+))\n    )?\n)
(?:\n\t\t  \\QN:H*r:NN.NN.NNN\\E |\n\t\t  \\QN:H*r:N.N.N\\E |\n\t\t  \\QN:H*r:NNN.NNN.NNN\\E |\n\t\t  \\QN:H*r:NNNN\\E |\n\t\t  \\QN:H*r:NNN.NN.NN\\E |\n\t\t  \\QN:NNNN\\E\n\t\t)
(?:\\\\n|\\\\N)
(?:\\n+
(?:\\n+ {
(?:\\p{Alnum}|(?:(?<=\\p{Alnum})-(?=\\p{Alnum})))*
(?:\\p{Alnum}|(?:(?<=\\p{Alnum})\\.(?=\\p{Alnum})))*
(?:\\p{Alnum}|(?:(?<=\\p{Alnum})_(?=\\p{Alnum})))*
(?:\\p{Alpha}{2}_\\p{Alpha}{2}\\.)?([^@]+)(?:@.+)?
(?:\\P{ASCII}|=\\?|[^\\s]{79,}|^\\s+|\\s+$)
(?:\\p{Blank}*(\\r?\\n)\\p{Blank}*)+
(?:\\p{IsAlphabetic}|\\p{Punct})(?:\\p{IsAlphabetic}|\\p{Punct}|\\d)*
(?:\\p{IsAlphabetic}+|\\d\\d\\d)
(?:\\p{L}|\\p{Digit}|[-._~%!$&*+;:@])+
(?:\\p{Punct}|\\s)*
(?:\\p{Punct}|\\s)+
(?:\\Q$Config::Config{_exe}\\E)?$
(?:\\Q$Config{exe_ext}\\E)?$
(?:\\Q$continue\\E|\\n\\Q$parStart\\E)\\Z
(?:\\Q$delim\\E)*$ptr\\s$synset->{offset}\\s\\d{4}
(?:\\Q$hashDelim\\E|\\Q$listDelim\\E)
(?:\\Q$ifs\\E)+
(?:\\Q<!--\\E)|(?:\\Q-->\\E)
(?:\\QCan't use Jcode module\\E|\\QJcode can't handle\\E)
(?:\\s*(['\"]))(.+?)(?=(?<!\\\\)\\1)\\1
(?:\\s*)((\\\\)(?:url|href))(\\{)([^}]*)(\\})
(?:\\s*)((\\\\)begin)(\\{)((?:fboxv|boxedv|V)erbatim)(\\})
(?:\\s*)((\\\\)begin)(\\{)((?:V|v)erbatim|alltt)(\\})
(?:\\s*)((\\\\)begin)(\\{)(\\w+[*]?)(\\})
(?:\\s*)((\\\\)begin)(\\{)(alltt)(\\})
(?:\\s*)((\\\\)begin)(\\{)(document)(\\})
(?:\\s*)((\\\\)begin)(\\{)(frame)(\\})
(?:\\s*)((\\\\)begin)(\\{)(framed|shaded|leftbar)(\\})
(?:\\s*)((\\\\)begin)(\\{)(itemize|enumerate|description|list)(\\})
(?:\\s*)((\\\\)begin)(\\{)(lstlisting)(\\})(?:(\\[).*(\\]))?(\\s*%.*\\n?)?
(?:\\s*)((\\\\)begin)(\\{)(lstlisting)(\\})(?:(\\[).*(\\]))?(\\s*%\\s*(?i:Java)\\n?)
(?:\\s*)((\\\\)begin)(\\{)(lstlisting)(\\})(?:(\\[).*(\\]))?(\\s*%\\s*(?i:Python)\\n?)
(?:\\s*)((\\\\)begin)(\\{)(Rdaemon)(\\})
(?:\\s*)((\\\\)begin)(\\{)(tikzpicture)(\\})
(?:\\s*)((\\\\)end)(\\{)(document)(\\})
(?:\\s*)(?<_1>(?<_2>\\\\)(?:url|href))(?<_3>\\{)(?<_4>[^}]*)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>(?:fboxv|boxedv|V)erbatim)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>(?:V|v)erbatim|alltt)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>\\w+[*]?)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>alltt)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>document)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>frame)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>framed|shaded|leftbar)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>itemize|enumerate|description|list)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>lstlisting)(?<_5>\\})(?:(?<_6>\\[).*(?<_7>\\]))?(?<_8>\\s*%.*\\n?)?
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>lstlisting)(?<_5>\\})(?:(?<_6>\\[).*(?<_7>\\]))?(?<_8>\\s*%\\s*(?i:Java)\\n?)
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>lstlisting)(?<_5>\\})(?:(?<_6>\\[).*(?<_7>\\]))?(?<_8>\\s*%\\s*(?i:Python)\\n?)
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>Rdaemon)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)begin)(?<_3>\\{)(?<_4>tikzpicture)(?<_5>\\})
(?:\\s*)(?<_1>(?<_2>\\\\)end)(?<_3>\\{)(?<_4>document)(?<_5>\\})
(?:\\s*+(?:#[^\\n]*+)?+)++
(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*
(?:\\s|^)h(?P<level>\\d+)(?:\\s|$)
(?:\\s|^|\\.\\/)([\\w\\_\\$-]+(?:\\/[\\w\\_\\$-]+)+(?:\\.[\\w\\_\\$]+))?(\\:\\d+)(\\:\\d+)*
(?:\\s+)?(?:(?<!\\\\)[=:])
(?:--\\s+.*)|(?:[^\\\\]\\#.*)
(?:\\S+\\s+){3}[0-9.\\\\]+\\s
(?:\\s+|
(?:\\s+|\"|\\042|'|\\047|\\+)*+
(?:\\s++|&nbsp;)*+</span>$
(?:\\srd\\s)(?P<value>.*)$
(?:\\\\u[0-9A-Fa-f]{4})+
(?:\\\\u[0-9a-fA-Z]{4})+
(?:\\W|\\s|^)(
(?:\\W|\\s|^)\\d+(
(?:\\W|^)(#\\h+)(?:\\W|$)
(?:\\W|^)\\Q$_\\E(?:\\W|$)
(?:\\w+(?:,\\s*\\w+)*\\s*=\\s*)?(
(?:\\\\x(?:[0-9]|[a-f]){2})+
(?:\\\\x(?P<unicode>[a-fA-F0-9]{2})) # Match hex-escaped unicode\n|\n(?:\\\\u(?P<unicode2>[a-fA-F0-9]{4})) # Match hex-escaped high unicode\n|\n(?P<control>\\\\[fbntr\\\\\"]) # Match escaped control characters\n
(?:\\\\x([a-f0-9]{2}))|(.)
(?:\\\\x(\\w{2})){0,100}
'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'
'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'])'
(?:\\xC2\\xA5|\\\\)\"
(?:^
(?:^(?:\"|[\\w/.-]*)|\\@)\\\\
(?:^(\\n|\\r\\n)?# (?:
(?:^/\\*\\*|\\n\\s*+\\*)\\s*+(?:\\{@inheritdoc\\}|@inheritdoc)(?:\\s|\\*/$)
(?:^/\\*\\*|\\n\\s*+\\*)\\s*+@required(?:\\s|\\*/$)
(?:^/album/(?P<album_id>\\d+)(?:/format:\\w+)?/?)$|(?:^/channels/(?P<channel_id>\\w+)(?:/videos/rss)?/?)$|(?:^/groups/(?P<group_id>\\w+)(?:/videos(?:/sort:\\w+(?:/format:\\w+)?)?)?/?)$|(?:^/(?P<user_id>\\w+)(?:/(?P<request_type>videos|likes)(?:/sort:\\w+(?:/format:\\w+)?|/rss)?)?/?)$
(?:^/api/v2/(?:album/(?P<album_id>\\d+)|channel/(?P<channel_id>\\w+)|group/(?P<group_id>\\w+)|(?P<user_id>\\w+))/(?P<request_type>\\w+)\\.(?:json|php|xml))
(?:^[^=]+=)|[\\r\\n\\\\]
(?:^\\\\)?\\[[^\\[\\]\\n\\r]*\\](?!\\])
(?:^\\uFEFF?|[^$_a-zA-Z\\xA0-\\uFFFF.\"'])require\\s*\\(\\s*(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')\\s*\\)
(?:^|
(?:^| )\\Q${cs}\\E(?:$| )
(?:^| )-D\\Q$define\\E(?: |$)
(?:^|(?:\\s*\\,\\s*))([^\\x00-\\x20\\(\\)<>@\\,;\\:\\\\\"\\/\\[\\]\\?\\=\\{\\}\\x7F]+)(?:\\=(?:([^\\x00-\\x20\\(\\)<>@\\,;\\:\\\\\"\\/\\[\\]\\?\\=\\{\\}\\x7F]+)|(?:\\\"((?:[^\"\\\\]|\\\\.)*)\\\")))?
(?:^|(?<=:))(
(?:^|(?<=\\&))\\Q$prefix\\E-[^=]+=[^\\&]*(\\&|$)
(?:^|(?<=\\\\\\\\))(?!\\\\\\\\|\\s*\\\\end\\{(?:tabular|array))
(?:^|(?<=\\_))(\\w)
(?:^|(?<=\\s))[$]([^\\n]*?)(?<![\\\\])[$](?:$|(?=\\s|[.,;\\\\]))
(?:^|, )(?P<key>\\w+)=(?P<value>[^, ]+)
(?:^|::)\\Q$DIE_TO\\E$
(?:^|[ \\t\\r\\n\\f])\\Q$arg\\E(?:\\z|[ \\t\\r\\n\\f])
(?:^|[,\\s])\\Q$_\\E(?:[,\\s]|$)
(?:^|[\\.\\_])?([A-Z])(?:[A-Z]+|[a-z]+)|(?:^|[\\.\\_])?(?:([a-z])[a-z]+|([A-Z])[A-Z]+)|[^a-zA-Z]
(?:^|[\\/\\\\])(?:(?:cldr\\/nls|html-report|nls|node_modules|tests|testsDOH)[\\/\\\\]|(?:Gruntfile|package)\\.js$)
(?:^|[\\/\\\\])\\.
(?:^|[\\/\\\\])\\Q$key\\E$
(?:^|[\\/\\\\])node_modules[\\/\\\\]
(?:^|[^\\\\\\[])\\[\\[([
(?:^|[^\\\\])
(?:^|[^\\\\])#.*\\z
(?:^|[^\\\\])((`+)((?:[\\s\\S]*?[^`])|)\\2(?!`))
(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$
(?:^|[^\\\\])(?:\\\\\\\\)*\\$$
(?:^|[^\\\\])(\\\")
(?:^|[^\\\\])(\\$\\$.*?[^\\\\]\\$\\$)
(?:^|[^\\\\])(\\\\\\w+\\*?(\\s*\\[.*?\\])?)\\s*$
(?:^|[^\\\\])[*?]
(?:^|[^\\\\])[lDFM]
(?:^|[^\\\\])\"
(?:^|[^\\\\])\\\\$
(?:^|[^\\\\])\\*
(?:^|[^\\\\])\\{
(?:^|[^\\\\])}
(?:^|[^\\w\\$_.\\(])require\\s*\\(\\s*(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')\\s*\\)
(?:^|[^\\w\\$_.])require.ensure\\s*\\(\\s*(\\[(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'|\\s*|,)*\\])
(?:^|[^\\w\\$_.])require\\s*\\(\\s*(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*')\\s*\\)
(?:^|[^\\w]+)(?P<name>@\\w+)
(?:^|\\\\)([^_\\\\]+)(?:_|$)
(?:^|\\,)\\Q$address:$port\\E:(\\d+)
(?:^|\\,)\\Q$self->{reuse}\\E
(?:^|\\,)unix:\\Q$path\\E:(\\d+)
(?:^|\\.)\\Q${domain}\\E$
(?:^|\\.)\\Q$alias\\E$
(?:^|\\.|(?:@(?!@)|(?=@)))\\Q${domain}\\E$
(?:^|\\/|\\\\)\\.\\.$
(?:^|\\/|\\\\)_[^/]+$
(?:^|\\/|\\\\)node(?:\\.exe)?$
(?:^|\\G&)([^=]+)=([^&]*(?:(?<=\\\\)&[^&]*)*)
(?:^|\\G|[^\\\\])  # current pos or not a \\\n                  (?:\\\\\\\\)*       # odd number of \\\n                  # \\\\c(.)\n                  \\\\c([^\\x40-\\x5F])\n                 
(?:^|\\n) *(`{3,}|~{3,}) *(?:\\S+)? *\\n(?:[\\s\\S]+?)\\s*\\4 *(?:\\n+|$)
(?:^|\\n)(?:<[^>]+>)?\\Q$name\\E:(\\d+):(\\d+):\\s*
(?:^|\\n)(?P<comment>\\*)?\\s*(?:\\[(?P<label>\\S+)\\])?\\s*(?P<reaction>[0-9a-zA-Z][0-9a-zA-Z* >+-.\\t]+)(?:;\\s*(?P<rateargs>[^\\n]+))?\\n(?:(?P<more>\\s+[+][0-9a-zA-Z* >+-.\\t]+)\\n)*
(?:^|\\p{IsSpacePerl})stylesheet(?:\\z|\\p{IsSpacePerl})
(?:^|\\Q$sep\\E)[^$sep]+$
(?:^|\\s)\n                     (\n                      (?:\n                       # A::B::C.meth\n                       
(?:^p(?P<attributes>.*)\\\\. )?
(?:^Service Info: OS|^OS|\\s+OS|^OS details|smb-os-discovery|\\|):\\s(?P<os>[^;]+)
(?:_
(?:_(?:
(?:`[^`]*`|\"[^\"]*\")(*SKIP)(*F)|\\.
(?:`[^`]*+`|\"(?:[^\"\\\\]++|\\\\.)*+\"|'(?:[^'\\\\]++|\\\\.)*+'|([^`\"'()]+)|\\((?R)\\))*
(?:`[^`]*+`|\"(?:[^\"\\\\]++|\\\\.)*+\"|'(?:[^'\\\\]++|\\\\.)*+'|\\((?:[^()]++|(?R))*\\)|[^`\"'(),]++)++
(?:`[^`]*+`|\"(?:[^\"\\\\]++|\\\\.)*+\"|'(?:[^'\\\\]++|\\\\.)*+'|\\((\\s*SELECT\\b.*\\).*)|\\w++|[^`\"'\\w])*$
(?:``|%x
(?:{{)(?P<param>.+?)(?:}})
(?:'|\")(?P<matches>.*?)(?:'|\")
(?:<a[^>]+?href=[\"|'](?P<link_url>[^\\s]+?)[\"|'][^>]*?>\\s*)?(?P<img_tag><img[^>]*?\\s+?src=[\"|'](?P<img_url>[^\\s]+?)[\"|'].*?>){1}(?:\\s*</a>)?
(?:<a[^>]+?href=[\"|'](?P<link_url>[^\\s]+?)[\"|'][^>]*?>\\s*)?(?P<img_tag><img[^>]+?src=[\"|'](?P<img_url>[^\\s]+?)[\"|'].*?>){1}(?:\\s*</a>)?
(?:0x|x|\\\\x|U\\+?|\\\\u)([0-9a-f]+)$|&#x([0-9a-f]+);$
(?:a )?(?:\\b(?:
(?:a)\\1\\k<z>
(?:a\\P{Any}a|a\\p{Any}a)
(?:a|b){6,8}+
(?:aba(?:[sn]|is)?|?bamos|[^r]?a(?:s|mos|is|n)?)$
(?:acct:)?(?P<username>[\\w.!#$%&\\'*+-/=?^_`{|}~]+)@(?P<host>[\\w.:-]+)
(?:at |\\()[^\\/\\\\]+\\.js
(?:BaseStreamingUrl:\\s\\\")(?P<baseurl>[\\d]+.[\\d]+.[\\d]+.[\\d]+)(?:\\\")
(?:c)_a++
(?:class\\=\\\"sCat\\\"\\>\\<b\\>Associated Names\\<\\/b\\>\\<\\/div\\>)+\\n?(?:\\<div class\\=\\\"sContent\\\" \\>)(.+)(?:\\n?+\\<\\/div\\>)
(?:class\\=\\\"sCat\\\"\\>\\<b\\>Genre\\<\\/b\\>\\<\\/div\\>)+\\n?(?:\\<div class\\=\\\"sContent\\\" \\>)(.+)(?:\\n?+\\<\\/div\\>)
(?:data(-alt)?-)?prid\\s*[=:]\\s*(?P<q>[\"'])(\\w+)(?P=q)
(?:db version v?|MongoS version v?|mongos db version v?)(?P<version>(\\d+\\.)+\\d+)
(?:description\\s)(?P<value>.*)$
(?:false|true|null|[,\\{\\}\\[\\]]|(?:-?\\b(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\b)|(?:\"(?:[^\\0-\\x08\\x0a-\\x1f\"\\\\]|\\\\(?:[\"/\\\\bfnrt]|u[0-9A-Fa-f]{4}))*\"))
(?:false|true|null|[/*&\\|;=\\(\\),\\{\\}\\[\\]]|(?:-?\\b(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\b)|(?:\"(?:[^\\0-\\x08\\x0a-\\x1f\"\\\\]|\\\\(?:[\"/\\\\bfnrt]|u[0-9A-Fa-f]{4}))*\"))
(?:false|true|null|[\\{\\}\\[\\]]|(?:-?\\b(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\\b)|(?:\"(?:[^\\0-\\x08\\x0a-\\x1f\"\\\\]|\\\\(?:[\"/\\\\bfnrt]|u[0-9A-Fa-f]{4}))*\"))
(?:file:\\s*|src=)\"(?P<embed>.+?\\.mp4|.+?/embed/.+?)\"
(?:group_)?concat\\((.+)\\)(?R)?
(?:href|src)=([^\\s'\">]+\\.(?:
(?:http://)?(?:(?P<user>[\\w\\-\\.]+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?
(?:http://)?(?:(?P<user>\\w+):(?P<pass>.*)@)?(?P<host>[\\w\\-\\.]+)(?::(?P<port>\\d+))?
(?:http|https)://[^/]+([^\"'\\s\\\\]*)
(?:https?://)(?:www\\.)?(?:(?:youtube\\.com(?:/embed/|/watch/?\\?(?:.*)v=))|youtu\\.be/)(?P<id>[A-Za-z0-9-_]+)
(?:https?|ftp):\\/\\/\\p{Word}
(?:id=[\"\\']wistia_|data-wistia-?id=[\"\\']|Wistia\\.embed\\([\"\\'])(?P<id>[^\"\\']+)
(?:ier|i?re|it?|ion|ison|isme|ysme|iste|esse|eur|euse|ence|eau|erie|ng|ette|age|ade|ance|ude|ogue|aphe|ate|duc|anthe|archie|coque|?r?se|ergie|ogie|lithe|m?tre|m?trie|odie|pathie|phie|phone|phore|onyme|th?que|scope|some|pole|?me|chromie|pie)s?$
(?:imdb.*?)?(?:tt|Title\\?)(?P<imdbid>\\d{5,7})
(?:ir|er|re|ez|ont|ent|ant|ais|ait|ra|era|eras|?|?s|?es|isse|it)$
(?:item|invoice|order|number|confirmation).{1,6}\\Q$id\\E\\s*$
(?:java|openjdk) version \\\"([0-9\\.\\_]+)\\\"
(?:m|qr)(?=\\\\)
(?:Name:(?P<Name>\\S*))\\s*(?:Address:(?P<Address>\\S*))?\\s*(?:TLS:(?P<TLS>\\S*))?\\s*((?P<TLSACME>TLS))?\\s*(?:CA:(?P<CA>\\S*))?\\s*(?:Redirect.EntryPoint:(?P<RedirectEntryPoint>\\S*))?\\s*(?:Redirect.Regex:(?P<RedirectRegex>\\\\S*))?\\s*(?:Redirect.Replacement:(?P<RedirectReplacement>\\S*))?\\s*(?:Compress:(?P<Compress>\\S*))?\\s*(?:WhiteListSourceRange:(?P<WhiteListSourceRange>\\S*))?
(?:name\\s)(?P<value>.*)$
(?:P(?P<weeks>\\d+)W)|(?:P(?:(?:(?P<years>\\d+)Y)?(?:(?P<months>\\d+)M)?(?:(?P<days>\\d+)D))?(?:T(?:(?P<hours>\\d+)H)?(?:(?P<minutes>\\d+)M)?(?:(?P<seconds>\\d+)S)?)?)
(?:QtCore\\.)?QVariant(?P<is_instance>\\((?P<value>.*)\\))?
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?(?:other|2n?d?)\\s+month(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?(?:other|2n?d?)\\s+month(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?(?:other|2n?d?)\\s+month(?:s|ly)?\\s+(?:on\\s+)?(?:the\\s+)?((?:
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?\\bmonth(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?\\bmonth(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?\\bmonth(?:s|ly)?\\s+(?:on\\s+)?(?:the\\s+)?((?:
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?3r?d?\\s+month(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?3r?d?\\s+month(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)(?:(?:each|every|all)\\s+)?3r?d?\\s+month(?:s|ly)?\\s+(?:on\\s+)?(?:the\\s+)?((?:
(?:repeats\\s+)(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)(?:other|2n?d?)\\s+month(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)(?:other|2n?d?)\\s+month(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)(?:other|2n?d?)\\s+month(?:s|ly)?\\s+(?:on\\s+)?(?:the\\s+)?((?:
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)?\\bmonthly\\s+(?:on\\s+)?(?:the\\s+)?((?:
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)\\bmonth(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)\\bmonth(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)\\bmonth(?:s|ly)?\\s+(?:on\\s+)?(?:the\\s+)?((?:
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)3r?d?\\s+month(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)3r?d?\\s+month(?:ly|s)?\\s+(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)?(?:(?:each|every|all)\\s+)3r?d?\\s+month(?:s|ly)?\\s+(?:on\\s+)?(?:the\\s+)?((?:
(?:repeats\\s+)?(?:\\bon\\s+)?(?:day|date)s?\\s+((?:
(?:repeats\\s+)?(?:\\bon\\s+)?(?:the\\s+)?((?:
(?:repeats\\s+)?(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)?(?:\\bon\\s+)?(?:the\\s+)?(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)?(?:each|every|all)\\s+((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)?(?:each|every|all)\\s+(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)?(?:each|every|all)\\s+other\\s+((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
(?:repeats\\s+)?(?:each|every|all)\\s+other\\s+(1st|2nd|3rd|4th|5th)\\s+((?:
(?:repeats\\s+)?(?:every|each)\\s+((?:
(?:repeats\\s+)?(?:every|each)\\s+other\\s+((?:
(?:repeats\\s+)?every\\s+(?:(other|3rd|2nd)\\s+)?weeks?\\s+(?:\\bon\\s+)?((?:
(?:SPKAC=)|[ \\r\\n\\\\]
(?:state\\s)(?P<value>.*)$
(?:streamID:\\s\\\")(?P<streamid>[0-9A-Z]+)(?:\\\")
(?:SUBTLEX[\\-_])?\\Q$lang
(?:the |and |with |but |,| )+(.*?) (
(?:trunk\\sgroup\\s)(?P<value>.*)$
(?:x)(a)(b)(?:y)(c)\\1\\1\\2\\3\\k<other>
(?:X|binary)'(?:\\p{XDigit}{2})*'
(??(??'aeiou??))
(??(aeiou??))
(??)
(??)|(??)
(??)|(??)|(pm)|(PM)
(??)|(am)|(AM)
(???(?))
(???(??|??))
('?-?\\d+)-(
(??|??)
(-?[0-9]++(?:-(?![0-9]++))?)(?:-?([0-9]++))?
(-?\\d+)-(
(?| )+$
(?|??)?
(?|??|??|??|??|??|??|??|??|??|??|?|??|??|pm|PM)
(?|?|?|?|?|?|?)???
(?|\n                                  <B>([\\w\\s]+):</B>[^<]+<font[^>]+>([^<]+)</font>| \n                                  (Notice).+<strong>(.+)</strong>\n                                 )\n                                
(?~foo)
(?<  Lorem ipsum dolor sit amet, consectetur adipisicing elit>x)
(?<!
(?<! \\\\) \\\\'
(?<! \\\\) \\\\\"
(?<!!)(\\[.+?\\]\\()(?!\\w++://)(?!#)(\\S*(?:\\s*+\".+?\")?\\))
(?<!!)(\\[.+?\\]\\()(?!\\w++://)([^#]\\S*(?:\\s*+\".+?\")?\\))
(?<!!)\\[(.+?)\\]\\((?!\\w++://)([^#]\\S*(?:\\s*+\".+?\")?)\\)
(?<!#
(?<!${escape})\\_
(?<!%)%s((?:\\/.+?(?<!\\\\)\\/.+?(?<!\\\\)\\/)+)?
(?<!%)(?<!\\\\)\\b([a-z]|[a-z][a-z']*[a-z])\\b
(?<!(?|??))([0-2]?[0-9])(?=(?|?))
(?<!(?|??))([0-2]?[0-9]):[0-5]?[0-9]
(?<!(?|??))([0-2]?[0-9]):[0-5]?[0-9]:[0-5]?[0-9]
(?<!(?|??))0?[0-9]??[0-9]?
(?<!(?<!\\\\)(?:\\\\{2}+){0,1000000000}+\\\\)(?-x:<#)(?<id>[0-9]++)>
(?<!(?<!\\\\)(?:\\\\{2}+){0,1000000000}+\\\\)<@!?+(?<id>[0-9]++)>
(?<!(?<!\\\\)(?:\\\\{2}+){0,1000000000}+\\\\)<@&(?<id>[0-9]++)>
(?<!(?<!\\\\)(?:\\\\{2}+){0,1000000000}+\\\\)<a?+:(?<name>\\w++):(?<id>[0-9]++)>
(?<!?)?
(?<!?)??
(?<![$\\\\])\\|
(?<![$_-])\\\\b(
(?<!['\"[:alpha:]])(?:\\\\(\\w+|%module)){2,}
(?<![\\\\]) 
(?<![\\\\])(([\\\"\\']).*?(?<![\\\\])\\2)
(?<![\\\\])\\$
(?<![\\_\\.\\^\\{])$one
(?<![\\_\\.\\^])($one)$one
(?<![\\_\\.\\^])($one)(?![aiuAIUY\\-T]|$one)
(?<![\\p{IsWord}\\s'])'(?=.*\\p{IsWord})
(?<![\\s\\pZ])\"(?=[\\s\\pZ])
(?<![\\w$])([\\p{Alpha}$_][\\w$\\.]*)\\(
(?<![\\w\\$])\\$(inject|action)\\(([\\p{Alpha}\\$_][\\w\\$]*)\\)
(?<![\\w\\$])\\$(line|record)(?:\\(([\\w\\$]*)\\))?(\\.[\\p{Alpha}\\$_][\\w\\$]*)*
(?<![\\w\\\\])@
(?<![^\\\\]\\\\),
(?<![^\\\\]\\\\)/
(?<![^\\\\]\\\\)\\w+
(?<![^\\\\]\\\\)=
(?<![a-z0-9\\-\\_\\#\\.])body(?![a-z0-9\\-\\_])
(?<!\\!\\?\\\\)`
(?<!\\!\\?\\\\)``
(?<!\\$)(?<!\\\\)\\$([^\\$]+?)\\$
(?<!\\$)\\\\
(?<!\\$)\\${(?P<name>[\\w.]+)\\}
(?<!\\$|->)(\\b|\\\\)PHPExcel\\b
(?<!\\\\)                         # check there's no backslash before this\n                (\\$[\\w\\:]+(?:[\\{\\[]\\w+[\\]\\}])?) # look for a $var possibly with packages\n               
(?<!\\\\)   %(_?.)   
(?<!\\\\) 
(?<!\\\\)'
'(?<!\\\\)
(?<!\\\\) ([\\$*]) (([\\w\\:\\']*) \\b$variable)\\b .* =
(?<!\\\\)#
(?<!\\\\)#.*
(?<!\\\\)#.*$
(?<!\\\\)#.+$
(?<!\\\\)#[^\\n]*\\n?
(?<!\\\\)#\\[
(?<!\\\\)#\\{.*\\}
(?<!\\\\)#\\d
(?<!\\\\)#+
(?<!\\\\)$delim
(?<!\\\\)$tda.*?$tdb
(?<!\\\\)$tda\\s*$param_name\\s*$tdb
(?<!\\\\)%
(?<!\\\\)%([0-9])
(?<!\\\\)%(\\d*\\.?\\d*)m
(?<!\\\\)%(\\d*\\.?\\d*)x
(?<!\\\\)%(\\d*\\.?\\d*)y
(?<!\\\\)%(\\d*\\.?\\d*)z
(?<!\\\\)%.*$
(?<!\\\\)%[^%]
(?<!\\\\)%\\{([-a-zA-Z0-9:_.]*)\\}
(?<!\\\\)%+
(?<!\\\\)%a
(?<!\\\\)%b
(?<!\\\\)%d
(?<!\\\\)%D
(?<!\\\\)%D(?!2)
(?<!\\\\)%d(?!2)
(?<!\\\\)%d\\{(.*?)\\}
(?<!\\\\)%d2
(?<!\\\\)%D2
(?<!\\\\)%f
(?<!\\\\)%F
(?<!\\\\)%f\\{(.*?)(?<!\\\\)\\}
(?<!\\\\)%h
(?<!\\\\)%i
(?<!\\\\)%j{(.*?)}
(?<!\\\\)%m
(?<!\\\\)%M
(?<!\\\\)%n
(?<!\\\\)%q
(?<!\\\\)%s
(?<!\\\\)%S
(?<!\\\\)%t
(?<!\\\\)%v
(?<!\\\\)%X
(?<!\\\\)%x
(?<!\\\\)%Z
(?<!\\\\)&
(?<!\\\\)(
(?<!\\\\)( #Exclude escaped symbols\n                                                                                ((\\${2})(.*?)(?<!\\\\)(\\${2}))| #Identify double $ formulas\n                                                                                ((\\\\\\[)(.*?)(?<!\\\\)(\\\\\\]))| #\\[\n                                                                                ((\\\\begin\\{equation\\})(.*?)(?<!\\\\)(\\\\end\\{equation\\}))|\n                                                                                ((\\\\begin\\{equation\\*\\})(.*?)(?<!\\\\)(\\\\end\\{equation\\*\\}))| #begin equation with and without *\n                                                                                ((\\\\begin\\{align\\})(.*?)(?<!\\\\)(\\\\end\\{align\\}))|\n                                                                                ((\\\\begin\\{align\\*\\})(.*?)(?<!\\\\)(\\\\end\\{align\\*\\}))| # align and align*\n                                                                                ((\\\\begin\\{eqnarray\\})(.*?)(?<!\\\\)(\\\\end\\{eqnarray\\}))|\n                                                                                ((\\\\begin\\{eqnarray\\*\\})(.*?)(?<!\\\\)(\\\\end\\{eqnarray\\*\\})) #eqnarray and eqnarray*\n                                                                        )
(?<!\\\\)( #Exclude escaped symbols\n                                                                ((\\$)(.*?)(?<!\\\\)(\\$))| #Single $ formulas\n                                                                ((\\\\\\()(.*?)(?<!\\\\)(\\\\\\))) #\\(\n                                                        )
(?<!\\\\)( +)\\z
(?<!\\\\)(#).*$\\n?
(?<!\\\\)(%(?:[mMfFxX]|[dD]2?))
(?<!\\\\)((?:\\\\\\\\)*)%+
(?<!\\\\)((?:\\\\\\\\)*)([-^\\]])
(?<!\\\\)((?:\\\\\\\\)*),
(?<!\\\\)((?:\\\\\\\\)*)[$^|]
(?<!\\\\)((?:\\\\\\\\)*)[*+?]
(?<!\\\\)((?:\\\\\\\\)*)\\((?!\\?)
(?<!\\\\)((?:\\\\\\\\)*)\\*+
(?<!\\\\)((?:\\\\\\\\)*)\\.
(?<!\\\\)((?:\\\\\\\\)*)\\?
(?<!\\\\)((?:\\\\\\\\)*)\\\\[bBAZzG1-9]
(?<!\\\\)((?:\\\\\\\\)*)\\{[^}]+\\}
(?<!\\\\)((?:\\\\\\\\)*)_
(?<!\\\\)((?:\\\\\\\\)*[\\{\\},])
(?<!\\\\)((?:\\\\\\\\)*\")
(?<!\\\\)((?:\\\\\\\\)*+)/
(?<!\\\\)((?:\\\\\\\\)*+)\\.
(?<!\\\\)((?>\\\\\\\\)*)\\(\\?:
(?<!\\\\)((\\\\\\\\)*)\"
(?<!\\\\)((\\\\\\\\)*)\\\\n
(?<!\\\\)((\\\\{2})*)\\\\'
(?<!\\\\)((~\\s*)?\\/)(?=\\S)(?=([^\\\\]|\\\\.)*\\/)
(?<!\\\\)((~\\s*)?\\/)(\\S.*?)(?<!\\\\)(\\\\{2})*(\\/)
(?<!\\\\)(')
(?<!\\\\)(?!\\\\)\\(.*?\\)
(?<!\\\\)(?:(?:\\\\n)|\\n)
(?<!\\\\)(?:\\$|\\\\Z)\\)?$
(?<!\\\\)(?:\\\\\\\\)*(\\+)
(?<!\\\\)(?:\\\\\\\\)*,
(?<!\\\\)(?:\\\\\\\\)*:
(?<!\\\\)(?:\\\\\\\\)*[\\$\\@]
(?<!\\\\)(?:\\\\\\\\)*\"
(?<!\\\\)(?:\\\\\\\\)*\\(
(?<!\\\\)(?:\\\\\\\\)*\\\\(.)
(?<!\\\\)(?:\\\\\\\\)*\\.
(?<!\\\\)(?:\\\\\\\\)*\\.|(\\[\\d+\\])
(?<!\\\\)(?:\\\\\\\\)*\\K[^\\w\\\\]
(?<!\\\\)(?:\\\\\\\\)*\\K\\\\x\\{([0-9a-f]{4})\\}
(?<!\\\\)(?:\\\\\\\\)*~~(.+)~~
(?<!\\\\)(?:\\\\\\\\)*<([A-Za-z][A-Za-z0-9+.-]{1,31}:[^ <>]*?|[A-Za-z0-9.!#$%&'*+/=?^_`{|}~-]+@[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?(?:\\.[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*)>
(?<!\\\\)(?:\\\\{2})*\\\\(?![\"$\\\\])
(?<!\\\\)(?:\\s|#.*$)
(?<!\\\\)(?:_|%)
(?<!\\\\)(?<_1>(?<_2>~\\s*)?\\/)(?<_3>\\S.*?)(?<!\\\\)(?<_4>\\\\{2})*(?<_5>\\/)
(?<!\\\\)(?<_1>\\~\\s*\\/)
(?<!\\\\)(?=[$sigils])
(?<!\\\\)(?=\\n)
(?<!\\\\)(?>\\\\\\\\)*[+*]
(?<!\\\\)(?>\\\\\\\\)*\\(?(?<!\\()\\?
(?<!\\\\)(?>\\\\\\\\)*\\.
(?<!\\\\)(?>\\\\\\\\)*\\\\[a-z0-9]
(?<!\\\\)(?>\\\\\\\\)*\\\\x{([a-fA-F0-9]+)}
(?<!\\\\)(?P<char>[ &|+\\\\\\-!(){}[\\]*^\"~?:])
(?<!\\\\)(?P<char>[&|+\\-!(){}[\\]^\"~*?:])
(?<!\\\\)([#=]\\{\\s*(.+?)\\s*\\})
(?<!\\\\)([$]{2}|[$]{1})(.+?)(?<!\\\\)\\1
(?<!\\\\)([$formEncodeChars])
(?<!\\\\)([&|])
(?<!\\\\)([,;])
(?<!\\\\)([@%])[^\\]]+$
(?<!\\\\)([\\$*])(([\\w\\:\\']*)\\bVERSION)\\b.*\\=
(?<!\\\\)([\\$\\@\\%])(\\w+)
(?<!\\\\)([\\$\\@])(\\w+)
(?<!\\\\)([\\(\\)\\[\\]\\+])
(?<!\\\\)([\\(\\)])
(?<!\\\\)([\\<\\>])
(?<!\\\\)([\\s;.()]|%(?:[&TqmMfFxX]|[dD]2?))
(?<!\\\\)([\\s;|>&]|%(?:[&TqmMfFxX]|[dD]2?))
(?<!\\\\)([]/])
(?<!\\\\)([aAbBcdDfFgGhHiIjlLmMnNOPrsStTUuwWyYzZ])
(?<!\\\\)([aAbBdDfFgGhHiIjlLmMnNOPrsStTUwWyYzZ])
(?<!\\\\)(\\$\\w+)
(?<!\\\\)(\\$\\w+|\\${[^}]+})
(?<!\\\\)(\\$|\\\\)
(?<!\\\\)(\\(\\?P<[^>]*>)
(?<!\\\\)(\\(\\?P=[^)]*\\))
(?<!\\\\)(\\\\\\\\)*(?<!_)_(?!_)
(?<!\\\\)(\\\\\\\\)*(__(\\{(-?\\d+(\\.\\d*)?)?\\:(-?\\d+(\\.\\d*)?)?\\})?)
(?<!\\\\)(\\\\\\\\)*::$
(?<!\\\\)(\\\\\\\\)*\\\\'
(?<!\\\\)(\\\\\\\\)*\\*
(?<!\\\\)(\\\\\\\\)*\\{(_|\\^)(:(-?\\d+(\\.\\d*)?)\\|(-?\\d+(\\.\\d*)?))?}
(?<!\\\\)(\\\\\\\\)*\\{anchor(:((\\w+)))?\\}
(?<!\\\\)(\\\\\\\\)*\\{color:#(\\p{XDigit}{6})\\}
(?<!\\\\)(\\\\\\\\)*\\{hl(:#(\\p{XDigit}{6}))?\\}
(?<!\\\\)(\\\\\\\\)*\\{link(:(ul|none))?(\\[(([^}]+))\\])?\\}
(?<!\\\\)(\\\\.)
(?<!\\\\)(\\{.+?\\})
(?<!\\\\)(\\{})
(?<!\\\\)(\\~\\s*\\/)
(?<!\\\\)(\\s)
(?<!\\\\)(\\s)$
(?<!\\\\)(\\w)\\?
(?<!\\\\)(`+)(.+?)(?<!`)\\1(?!`)
(?<!\\\\)(`+)\\s*(.+?)\\s*(?<!\\\\)\\1
(?<!\\\\)(<(?:(quiet):)?([^>]+)>)
(?<!\\\\)(S|w|t|L|B|u|I|Z|U|A|a)
(?<!\\\\),
(?<!\\\\),.*
(?<!\\\\),\\ ?
(?<!\\\\),\\s+
(?<!\\\\\\\\)/
(?<!\\\\)/
(?<!\\\\):
(?<!\\\\):([a-zA-Z_][a-zA-Z_0-9]*)?(?:#(.*?)#)?
(?<!\\\\);
(?<!\\\\);.*
(?<!\\\\);.*$
(?<!\\\\)@
(?<!\\\\)@([\\w_]+)}
(?<!\\\\)@(\\w+)
(?<!\\\\)[$char]
(?<!\\\\)[%]
(?<!\\\\)[%_]
(?<!\\\\)[*?[]
(?<!\\\\)[*_]
(?<!\\\\)[,#]
(?<!\\\\)[,;]
(?<!\\\\)[;,]
(?<!\\\\)[?*[]
(?<!\\\\)['\"]\\s*\\+\\s*['\"]
(?<!\\\\)[\\$\\@\\#\\&]
(?<!\\\\)[\\(\\)]
(?<!\\\\)[\\*\\?\\[]+
(?<!\\\\)[\\*\\?]
(?<!\\\\)[\\[\\]\\(\\)\\{\\}\\?\\|]
(?<!\\\\)[\\[\\]]
(?<!\\\\)[\\[\\]]|\\\\$
(?<!\\\\)[\\{\\}]
(?<!\\\\)[\\s;|,=\\\"']
(?<!\\\\)[_]
(?<!\\\\)[{}$]
(?<!\\\\)[{}\"]
(?<!\\\\)[{}]
(?<!\\\\)[+]
(?<!\\\\)[=:]
(?<!\\\\)[DlFM]
(?<!\\\\)[FmMn]
(?<!\\\\)[jd]
(?<!\\\\)[Yyo]
(?<!\\\\)\\-
(?<!\\\\)\\\\
(?<!\\\\)\\\"
(?<!\\\\)\"
(?<!\\\\)\"(.*?)(?<!\\\\)\"
(?<!\\\\)\"(?!:[^a-z])([^\\\\',]*)\"
(?<!\\\\)\"([^\\\\',]*)\"
(?<!\\\\)\\\\\\#
(?<!\\\\)\\#
(?<!\\\\)\\#\\{.*\\}
(?<!\\\\\\\\)\\\\$
(?<!\\\\)\\\\$
(?<!\\\\)\\$
(?<!\\\\)\\$(.{1})
(?<!\\\\)\\$(?:([a-zA-Z_][a-zA-Z0-9_]*)|\\{([a-zA-Z_][a-zA-Z0-9_]*)\\})
(?<!\\\\)\\$(?:{(\\w+)})
(?<!\\\\)\\$(?P<name>\\w+)
(?<!\\\\)\\$(?P<var>[a-zA-Z_]\\w*)
(?<!\\\\)\\$([\\w\\-_]+)
(?<!\\\\)\\$([^\\n\\r $]+?)
(?<!\\\\)\\$([0-9])
(?<!\\\\)\\$([0-9]+)
(?<!\\\\)\\$([a-zA-Z_][a-zA-Z_0-9]*|[0-9]+|[@]|[#])
(?<!\\\\)\\$(\\d+)
(?<!\\\\)\\$(\\w+(?:\\.\\w+)*)
(?<!\\\\)\\$(\\w+)
(?<!\\\\)\\$({(?P<expression>.*)})
(?<!\\\\)\\$.*?(?<!\\\\)\\$
(?<!\\\\)\\$[\\w\\-_]+
(?<!\\\\)\\$\\?}
(?<!\\\\)\\$\\{(.*)\\}
(?<!\\\\)\\$\\{(.*?)\\}
(?<!\\\\)\\$\\{(?P<var>[a-zA-Z_]\\w*):(?P<plus_minus>[+-])(?P<default>[^}]+)\\}
(?<!\\\\)\\$\\{(?P<var>[a-zA-Z_]\\w*)\\}
(?<!\\\\)\\$\\{([\\w\\-_]+)\\}
(?<!\\\\)\\$\\{([^}]*)\\}
(?<!\\\\)\\$\\{([a-z_0-9]+)\\}
(?<!\\\\)\\$\\{.+?\\}
(?<!\\\\)\\$\\{[\\w\\-_]+?\\}
(?<!\\\\)\\\\$\\n
(?<!\\\\)\\${([^\\n\\r]+?)}
(?<!\\\\)\\$ENV\\{([A-Za-z_0-9]+)\\}
(?<!\\\\)\\\\%
(?<!\\\\)\\(
(?<!\\\\)\\((.*?)\\)
(?<!\\\\)\\((?!\\?)
(?<!\\\\)\\((?!\\?[:<])
(?<!\\\\)\\\\(?!\\\\)
(?<!\\\\)\\\\([
(?<!\\\\)\\\\(\\\\\\\\)*[uU]
(?<!\\\\)\\(\\?(?:<|')(\\w+)(?:>|')
(?<!\\\\)\\(\\?.+\\)
(?<!\\\\)\\(\\?i\\:(.*?)\\)
(?<!\\\\)\\(\\?-i\\:(.*?)\\)
(?<!\\\\)\\)
(?<!\\\\)\\*
(?<!\\\\)\\*(.+?)(?<!\\\\)\\*\\s*([\\.\\?,;:!])?\\n?
(?<!\\\\)\\*\\*(.+?)(?<!\\\\)\\*\\*\\s*([\\.\\?,;:!])?\\n?
(?<!\\\\)\\*+
(?<!\\\\)\\\\,
(?<!\\\\)\\\\\\.
(?<!\\\\)\\.
(?<!\\\\)\\.(?!-)
(?<!\\\\)\\.|(\\[.*?\\])
(?<!\\\\)\\.+
(?<!\\\\)\\/
(?<!\\\\)\\/(?![^(]*\\))
(?<!\\\\)\\/\\*(.*?)\\*(?<!\\\\)\\/
(?<!\\\\)\\/\\/
(?<!\\\\)\\\\:([a-zA-Z_0-9]+)
(?<!\\\\)\\\\;
(?<!\\\\)\\?
(?<!\\\\)\\?(?![^(]*\\))
(?<!\\\\)\\?+
(?<!\\\\)\\[
(?<!\\\\)\\[(.+?)(?!\\\\)\\]\\h*\\(<?(.*?)>?(?:\\h*\"(.*?)\"\\h*)?\\)
(?<!\\\\)\\[.+?(?<!\\\\)\\]
(?<!\\\\)\\{((?:[^\\}]|\\\\})+)\\}
(?<!\\\\)\\{([a-z_-][a-z-]*)\\}
(?<!\\\\)\\{\\w+(?:[\\-]\\w+)*\\}
(?<!\\\\)\\|
(?<!\\\\)\\|(?!\\^)
(?<!\\\\)\\|\\|
(?<!\\\\)\\}(?!\\n)
(?<!\\\\)\\+
(?<!\\\\)\\=
(?<!\\\\)\\\\b
(?<!\\\\)\n            \\{\n              (\n                ((?>\\d+)(,(?>\\d+)?)?)\n                |\n                (,(?>\\d+))\n              )\n            \\}
(?<!\\\\)\n      \\{\n        (\n          ((?>\\d+)(,(?>\\d+)?)?)\n          |\n          (,(?>\\d+))\n        )\n      \\}
(?<!\\\\)\\n
(?<!\\\\)\\\\\\n
(?<!\\\\)\\\\n
(?<!\\\\)\\n$
(?<!\\\\)\\p{javaWhitespace}+
(?<!\\\\)\\\\r
(?<!\\\\)\\s*;\\s*
(?<!\\\\)\\s+
(?<!\\\\)\\s+$
(?<!\\\\)\\\\t
(?<!\\\\)\\x0d?\\x0a
(?<!\\\\)\\\\\\z
(?<!\\\\)]
(?<!\\\\)_
(?<!\\\\)_(?!.*{)
(?<!\\\\)`
(?<!\\\\)`(.+?)(?<!\\\\)`\\s*([\\.\\?,;:!])?\\n?
(?<!\\\\){
(?<!\\\\)}
(?<!\\\\)~~(.*?)(?!\\\\)~~(?=[\\s[:punct:]]|$)
(?<!\\\\)~~(?!\\s)(.+?)(?<!\\s)~~
(?<!\\\\)<%(?:(#)|(py(?:thon)?\\b)|(?:\\s*(\\w+))\\s*)(.*?)\\s*%>\\n?(?s)
(?<!\\\\)=
(?<!\\\\)>
(?<!\\\\)B
(?<!\\\\)c
(?<!\\\\)o
(?<!\\\\)o\\b
(?<!\\\\)r
(?<!\\\\)U
(?<!\\\\)u
(?<!\\.
(?<!\\.)(?:
(?<!\\[\\[):([a-z\\_]+)(?!:\\]\\])
(?<!\\[comment,charnames\\.pm type string \u00e2\u0080\u009c\\\\N\\{)([Uu]\\+[0-9a-fA-F]+)
(?<!\\_)(?<!\\.)characterisation.*xlsx
(?<!\\_)mrEmissions.*txt
(?<!\\_)mrFactorInputs.*txt
(?<!\\_)mrFDEmissions.*txt
(?<!\\_)mrFDMaterials.*txt
(?<!\\_)mrFDResources.*txt
(?<!\\_)mrFinalDemand.*txt
(?<!\\_)mrIot.*txt
(?<!\\_)mrMaterials.*txt
(?<!\\_)mrResources.*txt
(?<!\\{|\\\\)\\{(\\w+\\.\\w+)\\}(?!\\})
(?<!\\\\|`)(?:\\\\\\\\)*(`+)(?!`)(.+?)(?<!`)\\1(?!`)
(?<!\\d)(\\d+)(?:,((??{$++1}))(?!\\d))+
(?<!\\\\left)\\(
(?<!\\p{Alnum})@\\p{Alnum}(?:[:-]?\\p{Alnum})*
(?<!\\PZ)\"([\\xA0\\s]+$lsquo)
(?<!\\\\\\\\r\\\\)(\\\\n)(?=.+?\")
(?<!\\S)(?<_1>const)(?!\\S)(?:\\s+(?<ft>map\\s*<\\s*\\g<ft>\\s*,\\s*\\g<ft>\\s*>|set\\s*<\\s*\\g<ft>\\s*>|list\\s*<\\s*\\g<ft>\\s*>\\s*cpp_type|[a-zA-Z_][\\w.]*)(?:\\s+(?<_2>[a-zA-Z_][\\w.]*)(?:\\s*=)?)?)?
(?<!\\S)(?<_1>typedef)(?!\\S)(?:\\s+(?<ft>map\\s*<\\s*\\g<ft>\\s*,\\s*\\g<ft>\\s*>|set\\s*<\\s*\\g<ft>\\s*>|list\\s*<\\s*\\g<ft>\\s*>\\s*cpp_type|[a-zA-Z_][\\w.]*)(?:\\s+(?<_2>[a-zA-Z_][\\w.]*))?)?
(?<!\\S)(const)(?!\\S)(?:\\s+(?<ft>map\\s*<\\s*\\g<ft>\\s*,\\s*\\g<ft>\\s*>|set\\s*<\\s*\\g<ft>\\s*>|list\\s*<\\s*\\g<ft>\\s*>\\s*cpp_type|[a-zA-Z_][\\w.]*)(?:\\s+([a-zA-Z_][\\w.]*)(?:\\s*=)?)?)?
(?<!\\S)(typedef)(?!\\S)(?:\\s+(?<ft>map\\s*<\\s*\\g<ft>\\s*,\\s*\\g<ft>\\s*>|set\\s*<\\s*\\g<ft>\\s*>|list\\s*<\\s*\\g<ft>\\s*>\\s*cpp_type|[a-zA-Z_][\\w.]*)(?:\\s+([a-zA-Z_][\\w.]*))?)?
(?<!\\S)\\d++(?!\\S)
(?<!\\w)[@#](\\w++)
(?<!\\w)\\?(?<_1>\\\\(?<_2>x\\h{1,2}(?!\\h)\\b|0[0-7]{0,2}(?![0-7])\\b|[^x0MC])|(?<_3>\\\\[MC]-)+\\w|[^\\s\\\\])
(?<!\\w)\\?(\\\\(x\\d{1,2}|\\h{1,2}(?!\\h)\\b|0[0-7]{0,2}(?![0-7])\\b[^x0MC])|(\\\\[MC]-)+\\w|[^\\s\\\\])
(?<!\\w)\\?(\\\\(x\\h{1,2}(?!\\h)\\b|0[0-7]{0,2}(?![0-7])\\b|[^x0MC])|(\\\\[MC]-)+\\w|[^\\s\\\\])
(?<!\\w:)ATL(AS)?-CONF-(?P<code>(?:200\\d|99)-\\d{3})(?![\\w\\d])
(?<!\\w:)ATL(AS)?-CONF-(?P<code>20[1-9]\\d-\\d{3})(?![\\w\\d])
(?<!{)(\\$[A-Za-z._]+)(?![A-z.]*+\\$)
(?<!~\\\\\\\\)\n
(?<!<)(\\\\\\\\)*\\\\\\|(?!>)
(?<!=|\\\\)\\/(?![a-z-\\s]*\\])
(?<!second|\\d|
(?<!the|^)(\\W)(
(?<$>a)
(?<)
(?<\\u0020>a)
(?<\\u0041\\u0042>a)
(?<\\u0041\\u0042>a)\\k<
(?<\\u0041\\u0042>a)\\k<AB
(?<\\u0041\\u0042>a)\\k<AB>
(?<\\u0041\\u0042>a)\\k<AC>
(?<\\u{41}>a)
(?<_
(?<__
(?<_1>#)\\s*+(?<_2>[a-z][a-zA-Z\\d@_]*+)
(?<_1>#)\\s*+(?<_2>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_3>\\.)\\s*+(?<_4>[a-z][a-zA-Z\\d@_]*+)
(?<_1>#\")(?<_2>\\\\)?.(?<_3>\")
(?<_1>(?<_2>')(?<_3>[^']*)(?<_4>')\\s*)(?<_5>:)\\s*+(?!function)
(?<_1>(?<_2>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_3>:)\\s*+)?(?<_4>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_5>\\()
(?<_1>(?<_2>[a-z][a-zA-Z\\d@_]*+)|(?<_3>_))\\s*+(?<_4>=)
(?<_1>(?<_2>\")(?<_3>[^\"]*)(?<_4>\")\\s*)(?<_5>:)\\s*+(?!function)
(?<_1>(?<_2>\\\\)(?:\\w*[r|R]ef\\*?))(?<_3>\\{)
(?<_1>(?<_2>\\\\)(?:alias|docType|keyword|name|title|description|value|note|concept|keyword|details|format|references|source|arguments|seealso|author))(?<_3>\\{)
(?<_1>(?<_2>\\\\)(?:author))(?<_3>\\{)(?:\\n)?
(?<_1>(?<_2>\\\\)(?:examples))(?<_3>\\{)(?:\\n)?
(?<_1>(?<_2>\\\\)(?:include|input))(?<_3>\\{)
(?<_1>(?<_2>\\\\)(?:usage))(?<_3>\\{)(?:\\n)?
(?<_1>(?<_2>\\\\)(?:usepackage|documentclass))(?:(?<_3>\\[)(?<_4>[^\\]]*)(?<_5>\\]))?(?<_6>\\{)
(?<_1>(?<_2>\\\\)catcode)`(?:\\\\)?.(?<_3>=)(?<_4>\\d+)
(?<_1>(?<_2>\\\\)emph)(?<_3>\\{)
(?<_1>(?<_2>\\\\)footnote)(?<_3>\\{)
(?<_1>(?<_2>\\\\)frametitle)(?<_3>\\{)(?<_4>.*)(?<_5>\\})
(?<_1>(?<_2>\\\\)label)(?<_3>\\{)
(?<_1>(?<_2>\\\\)marginpar)(?<_3>\\{)
(?<_1>(?<_2>\\\\)Sexpr)(?<_3>\\{)
(?<_1>(?<_2>\\\\)textbf)(?<_3>\\{)
(?<_1>(?<_2>\\\\)textit)(?<_3>\\{)
(?<_1>(?<_2>\\\\)texttt)(?<_3>\\{)
(?<_1>(?<_2>\\\\)verb[\\*]?)\\s*(?<_3>(?<_4>\\\\)scantokens)(?<_5>\\{)
(?<_1>(?<_2>\\\\)verb[\\*]?)\\s*(?<_3>(?<=\\s)\\S|[^a-zA-Z])(?<_4>.*?)(?<_5>\\k<_3>|$)
(?<_1>(?<_2>erlang)\\s*+(?<_3>:)\\s*+)?(?<_4>is_atom|is_binary|is_constant|is_float|is_function|is_integer|is_list|is_number|is_pid|is_port|is_reference|is_tuple|is_record|abs|element|hd|length|node|round|self|size|tl|trunc)\\s*+(?<_5>\\()
(?<_1>')(?<_2>[^\\\\]|\\\\(?<_3>x[a-fA-F0-9][a-fA-F0-9]|[0-2]\\d\\d|[bnrt'\"\\\\]))(?<_4>')
(?<_1>')[^'\\\\]*(?<_2>')
(?<_1>,)\\s*+(?=\\})
'(?<_1>.|\\\\(?<_2>x[a-fA-F0-9][a-fA-F0-9]|[0-2]\\d\\d|[bnrt'\"\\\\]))'
(?<_1>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_2>,)?
(?<_1>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_2>\\/)
(?<_1>[a-zA-Z_][a-zA-Z_\\.\\d]*+)
(?<_1>\\$)(?<_2>(?<_3>\\\\)(?<_4>[bdefnrstv\\\\'\"]|(?<_5>\\^)[@-_]|[0-7]{1,3}))
(?<_1>\\\\)
(?<_1>\\\\)(?<_2>.*)$\\n?
(?<_1>\\\\)(?<_2>[^a-zA-Z]|[A-Za-z]+)(?=\\b|\\}|\\]|\\^|\\_)
(?<_1>\\\\)(?<_2>[bdefnrstv\\\\'\"]|(?<_3>\\^)[@-_]|[0-7]{1,3})
(?<_1>\\\\)(?<_2>arccos|arcsin|arctan|arg|cos|cosh|cot|coth|csc|deg|det|dim|exp|gcd|hom|inf|ker|lg|lim|liminf|limsup|ln|log|max|min|pr|sec|sin|sinh|sup|tan|tanh)\\b
(?<_1>\\\\)(?<_2>backmatter|else|fi|frontmatter|ftrue|mainmatter|if(?<_3>case|cat|dim|eof|false|hbox|hmode|inner|mmode|num|odd|undefined|vbox|vmode|void|x)?)\\b
(?<_1>\\\\)(?<_2>newcommand|renewcommand)\\b
(?<_1>\\\\)(?<_2>s(?<_3>s(?<_4>earrow|warrow|lash)|h(?<_5>ort(?<_6>downarrow|uparrow|parallel|leftarrow|rightarrow|mid)|arp)|tar|i(?<_7>gma|m(?<_8>eq)?)|u(?<_9>cc(?<_10>sim|n(?<_11>sim|approx)|curlyeq|eq|approx)?|pset(?<_12>neq(?<_13>q)?|plus(?<_14>eq)?|eq(?<_15>q)?)?|rd|m|bset(?<_16>neq(?<_17>q)?|plus(?<_18>eq)?|eq(?<_19>q)?)?)|p(?<_20>hericalangle|adesuit)|e(?<_21>tminus|arrow)|q(?<_22>su(?<_23>pset(?<_24>eq)?|bset(?<_25>eq)?)|c(?<_26>up|ap)|uare)|warrow|m(?<_27>ile|all(?<_28>s(?<_29>etminus|mile)|frown)))|h(?<_30>slash|ook(?<_31>leftarrow|rightarrow)|eartsuit|bar)|R(?<_32>sh|ightarrow|e|bag)|Gam(?<_33>e|ma)|n(?<_34>s(?<_35>hort(?<_36>parallel|mid)|im|u(?<_37>cc(?<_38>eq)?|pseteq(?<_39>q)?|bseteq))|Rightarrow|n(?<_40>earrow|warrow)|cong|triangle(?<_41>left(?<_42>eq(?<_43>slant)?)?|right(?<_44>eq(?<_45>slant)?)?)|i(?<_46>plus)?|u|p(?<_47>lus|arallel|rec(?<_48>eq)?)|e(?<_49>q|arrow|g|xists)|v(?<_50>dash|Dash)|warrow|le(?<_51>ss|q(?<_52>slant|q)?|ft(?<_53>arrow|rightarrow))|a(?<_54>tural|bla)|VDash|rightarrow|g(?<_55>tr|eq(?<_56>slant|q)?)|mid|Left(?<_57>arrow|rightarrow))|c(?<_58>hi|irc(?<_59>eq|le(?<_60>d(?<_61>circ|S|dash|ast)|arrow(?<_62>left|right)))?|o(?<_63>ng|prod|lon|mplement)|dot(?<_64>s|p)?|u(?<_65>p|r(?<_66>vearrow(?<_67>left|right)|ly(?<_68>eq(?<_69>succ|prec)|vee(?<_70>downarrow|uparrow)?|wedge(?<_71>downarrow|uparrow)?)))|enterdot|lubsuit|ap)|Xi|Maps(?<_72>to(?<_73>char)?|from(?<_74>char)?)|B(?<_75>ox|umpeq|bbk)|t(?<_76>h(?<_77>ick(?<_78>sim|approx)|e(?<_79>ta|refore))|imes|op|wohead(?<_80>leftarrow|rightarrow)|a(?<_81>u|lloblong)|riangle(?<_82>down|q|left(?<_83>eq(?<_84>slant)?)?|right(?<_85>eq(?<_86>slant)?)?)?)|i(?<_87>n(?<_88>t(?<_89>er(?<_90>cal|leave))?|plus|fty)?|ota|math)|S(?<_91>igma|u(?<_92>pset|bset))|zeta|o(?<_93>slash|times|int|dot|plus|vee|wedge|lessthan|greaterthan|m(?<_94>inus|ega)|b(?<_95>slash|long|ar))|d(?<_96>i(?<_97>v(?<_98>ideontimes)?|a(?<_99>g(?<_100>down|up)|mond(?<_101>suit)?)|gamma)|o(?<_102>t(?<_103>plus|eq(?<_104>dot)?)|ublebarwedge|wn(?<_105>harpoon(?<_106>left|right)|downarrows|arrow))|d(?<_107>ots|agger)|elta|a(?<_108>sh(?<_109>v|leftarrow|rightarrow)|leth|gger))|Y(?<_110>down|up|left|right)|C(?<_111>up|ap)|u(?<_112>n(?<_113>lhd|rhd)|p(?<_114>silon|harpoon(?<_115>left|right)|downarrow|uparrows|lus|arrow)|lcorner|rcorner)|jmath|Theta|Im|p(?<_116>si|hi|i(?<_117>tchfork)?|erp|ar(?<_118>tial|allel)|r(?<_119>ime|o(?<_120>d|pto)|ec(?<_121>sim|n(?<_122>sim|approx)|curlyeq|eq|approx)?)|m)|e(?<_123>t(?<_124>h|a)|psilon|q(?<_125>slant(?<_126>less|gtr)|circ|uiv)|ll|xists|mptyset)|Omega|D(?<_127>iamond|ownarrow|elta)|v(?<_128>d(?<_129>ots|ash)|ee(?<_130>bar)?|Dash|ar(?<_131>s(?<_132>igma|u(?<_133>psetneq(?<_134>q)?|bsetneq(?<_135>q)?))|nothing|curly(?<_136>vee|wedge)|t(?<_137>heta|imes|riangle(?<_138>left|right)?)|o(?<_139>slash|circle|times|dot|plus|vee|wedge|lessthan|ast|greaterthan|minus|b(?<_140>slash|ar))|p(?<_141>hi|i|ropto)|epsilon|kappa|rho|bigcirc))|kappa|Up(?<_142>silon|downarrow|arrow)|Join|f(?<_143>orall|lat|a(?<_144>t(?<_145>s(?<_146>emi|lash)|bslash)|llingdotseq)|rown)|P(?<_147>si|hi|i)|w(?<_148>p|edge|r)|l(?<_149>hd|n(?<_150>sim|eq(?<_151>q)?|approx)|ceil|times|ightning|o(?<_152>ng(?<_153>left(?<_154>arrow|rightarrow)|rightarrow|maps(?<_155>to|from))|zenge|oparrow(?<_156>left|right))|dot(?<_157>s|p)|e(?<_158>ss(?<_159>sim|dot|eq(?<_160>qgtr|gtr)|approx|gtr)|q(?<_161>slant|q)?|ft(?<_162>slice|harpoon(?<_163>down|up)|threetimes|leftarrows|arrow(?<_164>t(?<_165>ail|riangle))?|right(?<_166>squigarrow|harpoons|arrow(?<_167>s|triangle|eq)?))|adsto)|vertneqq|floor|l(?<_168>c(?<_169>orner|eil)|floor|l|bracket)?|a(?<_170>ngle|mbda)|rcorner|bag)|a(?<_171>s(?<_172>ymp|t)|ngle|pprox(?<_173>eq)?|l(?<_174>pha|eph)|rrownot|malg)|V(?<_175>dash|vdash)|r(?<_176>h(?<_177>o|d)|ceil|times|i(?<_178>singdotseq|ght(?<_179>s(?<_180>quigarrow|lice)|harpoon(?<_181>down|up)|threetimes|left(?<_182>harpoons|arrows)|arrow(?<_183>t(?<_184>ail|riangle))?|rightarrows))|floor|angle|r(?<_185>ceil|parenthesis|floor|bracket)|bag)|g(?<_186>n(?<_187>sim|eq(?<_188>q)?|approx)|tr(?<_189>sim|dot|eq(?<_190>qless|less)|less|approx)|imel|eq(?<_191>slant|q)?|vertneqq|amma|g(?<_192>g)?)|Finv|xi|m(?<_193>ho|i(?<_194>nuso|d)|o(?<_195>o|dels)|u(?<_196>ltimap)?|p|e(?<_197>asuredangle|rge)|aps(?<_198>to|from(?<_199>char)?))|b(?<_200>i(?<_201>n(?<_202>dnasrepma|ampersand)|g(?<_203>s(?<_204>tar|qc(?<_205>up|ap))|nplus|c(?<_206>irc|u(?<_207>p|rly(?<_208>vee|wedge))|ap)|triangle(?<_209>down|up)|interleave|o(?<_210>times|dot|plus)|uplus|parallel|vee|wedge|box))|o(?<_211>t|wtie|x(?<_212>slash|circle|times|dot|plus|empty|ast|minus|b(?<_213>slash|ox|ar)))|u(?<_214>llet|mpeq)|e(?<_215>cause|t(?<_216>h|ween|a))|lack(?<_217>square|triangle(?<_218>down|left|right)?|lozenge)|a(?<_219>ck(?<_220>s(?<_221>im(?<_222>eq)?|lash)|prime|epsilon)|r(?<_223>o|wedge))|bslash)|L(?<_224>sh|ong(?<_225>left(?<_226>arrow|rightarrow)|rightarrow|maps(?<_227>to|from))|eft(?<_228>arrow|rightarrow)|leftarrow|ambda|bag)|Arrownot)\\b
(?<_1>\\\\)(?<_2>sum|prod|coprod|int|oint|bigcap|bigcup|bigsqcup|bigvee|bigwedge|bigodot|bigotimes|bogoplus|biguplus)\\b
(?<_1>\\\\)(?<_2>text(?<_3>s(?<_4>terling|ixoldstyle|urd|e(?<_5>ction|venoldstyle|rvicemark))|yen|n(?<_6>ineoldstyle|umero|aira)|c(?<_7>ircledP|o(?<_8>py(?<_9>left|right)|lonmonetary)|urrency|e(?<_10>nt(?<_11>oldstyle)?|lsius))|t(?<_12>hree(?<_13>superior|oldstyle|quarters(?<_14>emdash)?)|i(?<_15>ldelow|mes)|w(?<_16>o(?<_17>superior|oldstyle)|elveudash)|rademark)|interrobang(?<_18>down)?|zerooldstyle|o(?<_19>hm|ne(?<_20>superior|half|oldstyle|quarter)|penbullet|rd(?<_21>feminine|masculine))|d(?<_22>i(?<_23>scount|ed|v(?<_24>orced)?)|o(?<_25>ng|wnarrow|llar(?<_26>oldstyle)?)|egree|agger(?<_27>dbl)?|blhyphen(?<_28>char)?)|uparrow|p(?<_29>ilcrow|e(?<_30>so|r(?<_31>t(?<_32>housand|enthousand)|iodcentered))|aragraph|m)|e(?<_33>stimated|ightoldstyle|uro)|quotes(?<_34>traight(?<_35>dblbase|base)|ingle)|f(?<_36>iveoldstyle|ouroldstyle|lorin|ractionsolidus)|won|l(?<_37>not|ira|e(?<_38>ftarrow|af)|quill|angle|brackdbl)|a(?<_39>s(?<_40>cii(?<_41>caron|dieresis|acute|grave|macron|breve)|teriskcentered)|cutedbl)|r(?<_42>ightarrow|e(?<_43>cipe|ferencemark|gistered)|quill|angle|brackdbl)|g(?<_44>uarani|ravedbl)|m(?<_45>ho|inus|u(?<_46>sicalnote)?|arried)|b(?<_47>igcircle|orn|ullet|lank|a(?<_48>ht|rdbl)|rokenbar)))\\b
(?<_1>\\\\\\\\).*$\\n?
(?<_1>\\\\)[\\.a-zA-Z0-9_][\\.a-zA-Z0-9_]*\\b
(?<_1>\\\\)[^a-zA-Z@]
(?<_1>\\\\)[A-Za-z@]+
(?<_1>\\\\)[A-Za-z]+
(?<_1>\\\\){1,2}[.$^\\[\\]{}]
(?<_1>\\\\)item\\b
(?<_1>\\?\\??)\\s*+(?<_2>[a-zA-Z\\d@_]++)
(?<_1>\\[)(?<_2>(?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(?<_3>\\])[ ]?(?<_4>\\[)(?<_5>[^\\]]*+)(?<_6>\\])
(?<_1>\\[)(?<_2>(?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(?<_3>\\])[ ]?(?<_4>\\[)(?<_5>\\])
(?<_1>\\+|\\-)?(?<_2>(?<_3>\\d++)?(?<_4>\\.))?\\d++
(?<_1>\\d++)\\s*+(?<_2>\\*)
(?<_1>\\\\k\\<)(?<_2>[a-z]\\w*)(?<_3>\\>)
(?<_1>\\\\U[0-9A-Fa-f]{8})|(?<_2>\\\\u[0-9A-Fa-f]{4})|(?<_3>\\\\N\\{[a-zA-Z ]+\\})
(?<_1>\\\\x[0-9A-F]{2})|(?<_2>\\\\[0-7]{3})|(?<_3>\\\\\\n)|(?<_4>\\\\\\\\)|(?<_5>\\\\\\\")|(?<_6>\\\\')|(?<_7>\\\\a)|(?<_8>\\\\b)|(?<_9>\\\\f)|(?<_10>\\\\n)|(?<_11>\\\\r)|(?<_12>\\\\t)|(?<_13>\\\\v)
(?<_1>_[a-zA-Z\\d@_]++|[A-Z][a-zA-Z\\d@_]*+)|(?<_2>_)
(?<_1>`)[^`\\\\]*(?<_2>`)
(?<_1>`+)(?<_2>[^`]|(?!(?<!`)\\k<_1>(?!`))`)*+(?<_3>\\k<_1>)
(?<_1>~)(?<_2>(?<_3>\\-)?\\d++|(?<_4>\\*))?(?<_5>(?<_6>\\.)(?<_7>\\d++|(?<_8>\\*)))?(?<_9>(?<_10>\\.)(?<_11>(?<_12>\\*)|.))?[~cfegswpWPBX#bx\\+ni]
(?<_1>~)(?<_2>\\*)?(?<_3>\\d++)?[~du\\-#fsacl]
(?<_1><)(?<_2>[a-zA-Z0-9:]++)(?=[^>]*><\\/\\k<_2>>)
(?<_1><<|>>|\\/\\\\|\\\\\\/|\\\\)
(?<_1><<<)(?<_2>(?<_3>[^\\s\\\\]|\\\\.)+)
(?<+*?>a)
(?<=
(?<=- )\\p{Word}+( \\S)?( \\p{Word}+( \\S)?)*(?= :)
(?<= \\.) [^\\PZ\\x{200B}] (?=[.,?!])
(?<=((?<!(?|?))(?|??)))[1-7]
(?<=((?<!?)?(?|??)))[1-7]
(?<=(??(?|??)))[1-7]
(?<=(?|??))[??]
(?<=(?<!\\\\)\\\\\\\\),|(?<!\\\\),
(?<=([\\ud800-\\u{10300}]A))B
(?<=([+\\-/*\\^()])|(sin)|(cos)|(tan)|(cot)|(sqrt\\d{1,10}+))|(?=([+\\-/*\\^()])|(sin)|(cos)|(tan)|(cot)|(sqrt\\d{1,10}+))
(?<=('[SsDdMm]|n't|N'T|'ll|'LL|'ve|'VE|'re|'RE|'|?|,))$
(?<=,|^)\\h*(?:(\\d+)(?:-(\\d+))?|(\\*))(?:\\/(\\d+))?\\h*(?=,|$)
(?<=:\\s)([\\w\\s\\.\\'\\\\]*)
(?<=[??])[1?]?(?!?)
(?<=[??])[3?]?(?!?)
(?<=[\\(\\|])[-0-9]+??
(?<=[\\(\\s])(#\\\\)(space|newline|tab)(?=[\\s\\)])
(?<=[\\(\\s])(#\\\\).(?=[\\s\\)])
(?<=[\\(\\s])(#\\\\)x[0-9A-F]{2,4}(?=[\\s\\)])
(?<=[\\(\\s])(?<_1>#\\\\)(?<_2>space|newline|tab)(?=[\\s\\)])
(?<=[\\(\\s])(?<_1>#\\\\).(?=[\\s\\)])
(?<=[\\(\\s])(?<_1>#\\\\)x[0-9A-F]{2,4}(?=[\\s\\)])
(?<=[\\s\\pZ])'(?=[^\\s\\pZ])
(?<=[\\s\\pZ])\"(?=[^\\s\\pZ])
(?<=[\\s^\\<])(?P<link>https?\\:\\/\\/.*?)(?=[\\s\\>$])
(?<=[^!*+,/:;<=>@\\\\\\\\_|-])--(?=[^!*+,/:;<=>@\\\\\\\\_|-])
(?<=[^%])\\\\include\\{(.*?)\\}
(?<=[^\\\\]) 
(?<=[^\\\\])((:\\\\\\\\)*)/
(?<=[^\\\\])(?:\\\\x[0-9a-f]{2}|\\\\u[0-9a-f]{4})
(?<=[^\\\\])(\\\")
(?<=[^\\\\]),
(?<=[^\\\\]):
(?<=[^\\\\]);
(?<=[^\\\\])\\'
(?<=[^\\\\])\\$
(?<=[^\\\\])\\%.*
(?<=[^\\\\])\\(
(?<=[^\\\\])\\]
(?<=[^\\\\])\\|
(?<=[^\\\\])=
(?<=[^\\\\]|\\A)\\((?=[^(\\?\\:)])
(?<=[^\\w\\d\\_\\'\"]|^)([a-z][\\w\\d\\_]*)([^\\w\\d\\_\\'\"])
(?<=[^=\\\\]\"),
(?<=[a-zA-Z+!\\-_?0-9*~
(?<=\"
(?<=\\$VERSION = ')${\\quotemeta $OLD_DECIMAL}
(?<=\\$VERSION = ')${\\quotemeta $OLD}
(?<=\\()\\p{Word}+( \\p{Word}+)* \u00b7 \\d+(?=\\))
(?<=\\()\\p{Word}+( \\p{Word}+)?(?=\\))
(?<=\\()\\p{Word}+( \\S)?( \\p{Word}+( \\S)?)* \u00b7 \\d+(?=\\))
(?<=\\()\\p{Word}+( \\S)?( \\p{Word}+( \\S)?)*(?=\\))
(?<=\\))\\s*+(?<_1>\\{)
(?<=\\))\\s*+(\\{)
(?<=\\\\)[\\w\\-]+$
(?<=\\[USER=)(?P<id>[0-9]+)(?=\\])
(?<=\\<\\/align>)(\\s*[\\\\]{2}\\s*)+
(?<=\\=)(?:(?<q>['\"]).*?[^\\\\]\\k<q>|(.*?)(?= \\w+=|$))
(?<=\\A|\\s)((?<!\\\\)\\_{1,2})(\\S+)\\1(?=\\z|\\s)
(?<=\\A|\\s)language-(
(?<=\\\\caption\\{).+(?=\\\\label\\{.*\\}\\}$)
(?<=\\\\footnote\\{)(?<gr>\\\\(?!footnote)[^\\{]+\\{[^\\}]+\\}(?:\\{[^\\}]+\\})?\\g<gr>|[^{])+(?=\\})
(?<=\\n)(use\\b\\N+)\\n+(?=use\\b)
(?<=\\p{Graph})
(?<=\\p{IsAlpha})'([dms])\\b
(?<=\\p{IsWord})'(?!')(?=\\P{IsWord}|$)
(?<=\\p{Lower})(?=\\p{Upper})
(?<=\\p{Punct}|[[:space:]]|\\A)(
(?<=\\pL)(\\p{Lu})
(?<=\\pP)(?<![.!?])'(?=\\w)
(?<=\\pP)\"(?=\\w)
(?<=\\Q$eol\\E)
(?<=\\Q$sep\\E)
(?<=\\Q$separator\\E)
(?<=\\Q$var\\E)
(?<=\\s
(?<=\\S)(
(?<=\\S[.;]|.\\?|.!)\\p{Blank}+
(?<=\\s{3}min-links\\s)(?P<value>.+)$
(?<=\\s|[\\x{2000}-\\x{200A}])
(?<=\\s|\\b)\\pL|[()]
(?<=\\s|^)(?<!\\\\)([*_]{1,3})(.*?)(?!\\\\)\\1(?=[\\s[:punct:]]|$)
(?<=\u00d8\u00a3\\N{ARABIC FATHA})\u00d8\u00a5
(?<=\u00d8\u00a7\u00d8\u00a6\\N{ARABIC FATHA})a
(?<=\\w)\"(?=\\pP)
(?<=^\\{|,)(([^,\"{]*)|\\s*\"((?:[^\"\\\\]|\\\\(?:.|[0-9]+|x[0-9a-f]+))*)\"\\s*)(,|(?<!^\\{)(?=\\}$))
(?<=^|
(?<=^|;|<\\?php\\s|<\\?\\s)(\\h*\\$(\\w+)\\s*=)(\\s*(['\"].*?['\"]|.*?)\\s*;)
(?<=^|;|<\\?php\\s|<\\?\\s)(\\h*define\\s*\\(\\s*['\"](\\w*?)['\"]\\s*)(,\\s*(['\"].*?['\"]|.*?)\\s*)((?:,\\s*(?:true|false)\\s*)?\\)\\s*;)
(?<=^|[\n (])(?P<element>[\\w]+?://.*?[^ \"\n\r\t<]*)
(?<=^|[\n ])(?P<content>([a-z0-9&\\-_.]+?)@([\\w\\-]+\\.([\\w\\-\\.]+\\.)*[\\w]+))
(?<=^|\\n)\\h?>\\h?(.*?(?:\\n+|$))
(?<=^|\\s)(['\"]?)(.+?)(?<!\\\\)\\1(?=$|\\s)
(?<=^|\\s|[\\x{2000}-\\x{200A}]|/|-|\\(|\\[|\\{|\\||\"|^'|\\s'|\u2018|\u201c)(.)
(?<=^spanning-tree\\smst\\s
(?<={)@(?P<name>[a-zA-Z]+)
(?<={)\\s?sec\\s?=\\s?+\\d+
(?<={{)[^\\s{}]++(?=}})
(?<=a
(?<=A\\\\H\\{\\}|\\\\H\\{a\\})aN
(?<=A\\\\H{}|\\\\H{a})aN
(?<=a+b+))
(?<=accounts/)\\p{XDigit}+[^/]
(?<=STATE)\\s*\\{(?P<st_txt>[^}]+)(?=\\})
(?<a)
(?<A>a)\\g<A>
(?<AB>a)\\2
(?<AB>a)\\k<\\u0041\\u0042>
(?<address>
(?<anchor>\\\\s*anchor\\\\s*=\\\\s*\\\\<
(?<annotation>
(?<api_key>^(\\h){8}-(\\h){4}-(\\h){4}-(\\h){4}-(\\h){12})\\:(?<secret>\\w+)$
(?<app>[^ ]+)[ ]{1,}environ(ment|)(?<env>([ ]{1,}(staging|production)))[ ]{1,}(?<hosts>(
(?<app>[^ ]+)[ ]{1,}revision(?<env>([ ]{1,}(staging|production)))[ ]{1,}(?<hosts>(
(?<app>[^ ]+)[ ]{1,}setup(?<env>([ ]{1,}(staging|production)))[ ]{1,}(?<hosts>(
(?<attribute>\\S+)=[\"']?(?P<value>(?:.(?![\"']?\\s+(?:\\S+)=|[>\"']))+.)[\"']?
(?<backslashesToEscape>(?:\\\\\\\\)+)|(?<stripBackslash>\\\\\\n)|(?<whitespacesToCollapse>\\s*\\n\\s*)
(?<branch>[^ ]+)[ ]{1,}to[ ]{1,}(?<app>[^ ]+)(?<env>([ ]{1,}(staging|production)))[ ]{1,}(?<hosts>(
(?<branch>[^ ]+)[ ]{1,}to[ ]{1,}(?<app>[^ ]+)(?<env>([ ]{1,}(staging|production)))[ ]{1,}force[ ]{1,}(?<hosts>(
(?<class>([a-zA-Z]\\w+(\\\\)*){1,})\\:\\:(?<method>\\w+)(?<this>\\:this)*
(?<color>#\\h{6}|#\\h{3})
(?<com.example.foo>x)
(?<conid>[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}']*(\\.\\g<conid>)?)
(?<day>
(?<encoding>
(?<foo bar > should not grab this bracket> x)
(?<foo>a)\\Q(?<bar>b)(?<baz>c)(d)  [  \\E(?<named>e)  \\Q]\\E
(?<foo>foo.)bar\\g<foo>
(?<foo>xyz)abc\\k<bar>
(?<func>.+?)\\s+\n                   \\Qfailed with error\\E\\s+\n                   (?<httpcode>\\d{3})\\s+\n                   (?<errtext>.+?)\\s+\n                   at\\s+\n                   (?<file>.+?)\\s+\n                   line\\s+\n                   (?<line>\\d+)
(?<gefr??ig>x)
(?<height:\\s*>)(\\d+)(?=px)
(?<hour>
(?<hour>\\d++)\n                  (?:\n                   : (?<minute>\\d++)\n                   (?:\n                    : (?<second>\\d++)\n                   )?\n                  )?\n                  (?: \\s*+ (?<suffix>[ap]) (\\.?)m\\g{-1})?\n                 
(?<charset>
(?<indent>\\s*(-\\s*)?)(?<name>(\\\"[^:]+\\\")|[^:]+):\\s*(?<value>[^ ].*+)?
(?<indent>^\\ {
(?<issue>
(?<key>
(?<key>[a-z0-9\\.\\_\\-\\:]+)=(?<value>[\\d\\.e\\-\\+]+|''|'.+?(?<!\\\\)')
(?<link-extension>(?<param>
(?<locale>
(?<Lorem ipsum dolor sit amet,\\n consectetur adipisicing elit>x)
(?<measure>[a-zA-Z0-9\\-!$%^&*()_+|@#~`{}\\[\\]:\";'?,.\\/\\s]+)\\s*(?<operand>
(?<media>(?:@media[^{]+)?){(?:(?:[^{}]+)|(?R))*}
(?<message>
(?<month>
(?<n_part>n)(?<g_part>g(
(?<name>[a-z0-9A-Z_\\[\\]]+)?\\s*(?<required>
(?<named>x)(?idsumx-idsumx)(?=b)(?!x)
(?<paren>\\((?:[^()]|\\g<paren>)*\\))$
(?<qr1>[\"'])(?<req1>
(?<re>\\{(?:(?>[^{}]+)|\\g<re>)*\\})
(?<rel>\\\\s*rel\\\\s*=\\\\s*(?<rel-relationship>
(?<relation>
(?<relations>
(?<relationship>
(?<rev>\\\\s*rev\\\\s*=\\\\s*
(?<scope_name>
(?<start>[^<]*)?(?<broken>(?:(?:<\\/\\w+(?:\\s+\\w+=\\\"[^\\\"]+\\\")*+)(?:[^<]+)>)+)(?<end>.*)
(?<subspecs>(?:\\{.+?(?<!(?<!(\\$|\\\\))(\\$|\\\\))\\})*)
(?<subspecs>(?:\\{.+?(?<!(\\$|\\\\))\\})*)
(?<suffix>
(?<T0>\\Q[\\E)(?<T1>\\d+)(?<T2>-)(?<T3>\\d+)(?<T4>\\])
(?<time>(\\[?[h]\\]?+:)?[m]+(:?ss|:?s)?)
(?<title>\\\\s*title\\\\s*=\\\\s*
(?<token>%
(?<token>%<[^>]+>
(?<url>(?<protocol>https?)\\:\\/\\/(?<domain>[A-Za-z0-9\\-\\.]+)(?<path>\\/[A-Za-z0-9\\/\\.\\/\\+\\?\\&\\-\\_\\%\\=\\~\\:\\;]+)?+)
(?<width:\\s*>)(\\d+)(?=px)
(?<year>
(?<zone_space> )?(?<zone>(?<zone_off>
(?=   # if we have ahead... (not scanned, just checked\n        </ref>        |     # <ref> closed\n        }}            |     # or template closed\n        (?<!\\])\\](?!\\])     # or ext.link closed,\n                            # the madness with look-ahead/behind means\n                            # \"match single bracket but not double\"\n      )
(?=   # if we have ahead... (not scanned, just checked\n        </ref>        |     # <ref> closed\n        }}            |     # or template closed\n        \\]\\]                # or int.link closed\n      )
(?=   # if we have ahead... (not scanned, just checked\n        </ref>        |     # <ref> closed\n        }}\n      )
(?=
(?= ( \\( (?> [^()]++ | (?1) )* \\) ) )
(?=(
(?=(?:\\n\\s*)?<\\/
(?=(?:\\W|^)
(?=(?<regex>(?#simple syntax)\\$(?<name>
(?=(?<regex>(?#simple syntax)\\$(?<name>[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)(?:\\[(?<index>[a-zA-Z0-9_\\x7f-\\xff]+|\\$\\g<name>)\\]|->\\g<name>(?<_1>\\(.*?\\))?)?|(?#simple syntax with braces)\\$\\{(?:\\g<name>(?<indices>\\[(?:\\g<index>|'(?:\\\\.|[^'\\\\])*'|\"(?:\\g<regex>|\\\\.|[^\"\\\\])*\")\\])?|\\g<complex>|\\$\\{\\g<complex>\\})\\}|(?#complex syntax)\\{(?<complex>\\$(?<segment>\\g<name>(?<_2>\\g<indices>*|\\(.*?\\))?)(?:->\\g<segment>)*|\\$\\g<complex>|\\$\\{\\g<complex>\\})\\}))\\{
(?=(?<regex>(?#simple syntax)\\$(?<name>[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)(?:\\[(?<index>[a-zA-Z0-9_\\x7f-\\xff]+|\\$\\g<name>)\\]|->\\g<name>(\\(.*?\\))?)?|(?#simple syntax with braces)\\$\\{(?:\\g<name>(?<indices>\\[(?:\\g<index>|'(?:\\\\.|[^'\\\\])*'|\"(?:\\g<regex>|\\\\.|[^\"\\\\])*\")\\])?|\\g<complex>|\\$\\{\\g<complex>\\})\\}|(?#complex syntax)\\{(?<complex>\\$(?<segment>\\g<name>(\\g<indices>*|\\(.*?\\))?)(?:->\\g<segment>)*|\\$\\g<complex>|\\$\\{\\g<complex>\\})\\}))\\{
(?=([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(\\(|:\\s*+([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+\\())
(?=(M\\w{
(?=.)(\\X)
(?=.)[^\"'\\\\]+?((?!.)|(?=[\"'\\\\]))
(?=[
(?=[$`\\\\])
(?=[&\\\\]|
(?=[()\\\\])
(?=[;(\\s]|
(?=[;\\s]|
(?=[;\\s<]|
(?=[\"\\\\])
(?=[\"'])(?:\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\s\\S][^'\\\\]*)*')
(?=['\\\\])
(?=[\\Q_%#&{}\\E])
(?=[^\\\\])(?<_1>\")
(?=[^\\\\])(\")
(?=[^\\\\]?)#(\\d)*
(?=[^\\\\]?)@
(?=[A-Z])|\\s*\\_\\s*|\\s*\\-\\s*|\\s+
(?=[A-Z])|\\s*\\_\\s*|\\s+
(?=[a-z][a-zA-Z\\d@_]*+\\s*+(?<_1>\\(|:\\s*+[a-z][a-zA-Z\\d@_]*+\\s*+\\())
(?=[a-z][a-zA-Z\\d@_]*+\\s*+(\\(|:\\s*+[a-z][a-zA-Z\\d@_]*+\\s*+\\())
-(?=[a-zA-Z+!\\-_?*~
(?=[a-zA-Z+!\\-_?0-9*~
(?=\")|(?=\\\\)|(?=\\:)|(?=\\#\")
(?=\\\\)
(?=\\b(
(?=\\p{IsUpper}\\p{IsLower})
(?=\\P{sc=Adlm})\\p{scx=Adlm}
(?=\\P{sc=Arab})\\p{scx=Arab}
(?=\\P{sc=Armn})\\p{scx=Armn}
(?=\\P{sc=Beng})\\p{scx=Beng}
(?=\\P{sc=Bopo})\\p{scx=Bopo}
(?=\\P{sc=Bugi})\\p{scx=Bugi}
(?=\\P{sc=Buhd})\\p{scx=Buhd}
(?=\\P{sc=Cakm})\\p{scx=Cakm}
(?=\\P{sc=Copt})\\p{scx=Copt}
(?=\\P{sc=Cprt})\\p{scx=Cprt}
(?=\\P{sc=Cyrl})\\p{scx=Cyrl}
(?=\\P{sc=Deva})\\p{scx=Deva}
(?=\\P{sc=Dogr})\\p{scx=Dogr}
(?=\\P{sc=Dupl})\\p{scx=Dupl}
(?=\\P{sc=Geor})\\p{scx=Geor}
(?=\\P{sc=Glag})\\p{scx=Glag}
(?=\\P{sc=Gong})\\p{scx=Gong}
(?=\\P{sc=Gran})\\p{scx=Gran}
(?=\\P{sc=Grek})\\p{scx=Grek}
(?=\\P{sc=Gujr})\\p{scx=Gujr}
(?=\\P{sc=Guru})\\p{scx=Guru}
(?=\\P{sc=Hang})\\p{scx=Hang}
(?=\\P{sc=Hani})\\p{scx=Hani}
(?=\\P{sc=Hano})\\p{scx=Hano}
(?=\\P{sc=Hira})\\p{scx=Hira}
(?=\\P{sc=Java})\\p{scx=Java}
(?=\\P{sc=Kali})\\p{scx=Kali}
(?=\\P{sc=Kana})\\p{scx=Kana}
(?=\\P{sc=Khoj})\\p{scx=Khoj}
(?=\\P{sc=Knda})\\p{scx=Knda}
(?=\\P{sc=Kthi})\\p{scx=Kthi}
(?=\\P{sc=Latn})\\p{scx=Latn}
(?=\\P{sc=Limb})\\p{scx=Limb}
(?=\\P{sc=Lina})\\p{scx=Lina}
(?=\\P{sc=Linb})\\p{scx=Linb}
(?=\\P{sc=Mahj})\\p{scx=Mahj}
(?=\\P{sc=Mand})\\p{scx=Mand}
(?=\\P{sc=Mani})\\p{scx=Mani}
(?=\\P{sc=Mlym})\\p{scx=Mlym}
(?=\\P{sc=Modi})\\p{scx=Modi}
(?=\\P{sc=Mong})\\p{scx=Mong}
(?=\\P{sc=Mult})\\p{scx=Mult}
(?=\\P{sc=Mymr})\\p{scx=Mymr}
(?=\\P{sc=Orya})\\p{scx=Orya}
(?=\\P{sc=Perm})\\p{scx=Perm}
(?=\\P{sc=Phag})\\p{scx=Phag}
(?=\\P{sc=Phlp})\\p{scx=Phlp}
(?=\\P{sc=Rohg})\\p{scx=Rohg}
(?=\\P{sc=Shrd})\\p{scx=Shrd}
(?=\\P{sc=Sind})\\p{scx=Sind}
(?=\\P{sc=Sinh})\\p{scx=Sinh}
(?=\\P{sc=Sogd})\\p{scx=Sogd}
(?=\\P{sc=Sylo})\\p{scx=Sylo}
(?=\\P{sc=Syrc})\\p{scx=Syrc}
(?=\\P{sc=Tagb})\\p{scx=Tagb}
(?=\\P{sc=Takr})\\p{scx=Takr}
(?=\\P{sc=Tale})\\p{scx=Tale}
(?=\\P{sc=Taml})\\p{scx=Taml}
(?=\\P{sc=Telu})\\p{scx=Telu}
(?=\\P{sc=Tglg})\\p{scx=Tglg}
(?=\\P{sc=Thaa})\\p{scx=Thaa}
(?=\\P{sc=Tirh})\\p{scx=Tirh}
(?=\\P{sc=Yiii})\\p{scx=Yiii}
(?=\\p{Unified_Ideograph=True})(?!\\p{Block=CJK_Unified_Ideographs})(?!\\p{Block=CJK_Compatibility_Ideographs})
(?=\\p{Unified_Ideograph=True})(?:\\p{Block=CJK_Unified_Ideographs}|\\p{Block=CJK_Compatibility_Ideographs})
(?=\\p{Upper})
(?=\\R$)
(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)
(?=^
(?=^(?:(?:\u2702-{6})+|^
(?=^(?:(?:\u2702-{6})+|_{10}|
(?=^.+\\n
(?=^\\s*+-\\s*+define\\s*+\\(\\s*+[a-zA-Z\\d@_]++\\s*+\\()
(?=<
(?=<(
(?=<(?P<tag>[a-zA-Z]+)(?P<attr>.*?)(?P<end>/)?>(?:(?P<inner>.*?)</\\s*(?P=tag)\\s*>)?)
(?=<\\/
(?=c)_a++
(?=EI(?:[
(?>
(?>((\")((?:[^\"\\\\]|\\\\.)*)(\"))|((')((?:[^'\\\\]|\\\\.)*)('))|([-a-zA-Z0-9_.]+))
(?>(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)(?>%c'))(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>(?>\\\\)(?>.)|[^'])*)(?>(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)(?>'))
(?>(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)(?>%c\"))(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>(?>\\\\)(?>.)|[^\"])*)(?>(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)(?>\"))
(?>(?>(?>[[:space:]])+|(?>[;#])(?>(?>[^\\n])*))*)((?>\")(?>(?>(?>\\\\)(?>.)|[^\"])*)(?>\"))
(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>%\\()(?>(?>(?>\\\\)(?>.)|[^)])*)(?>\\)))
(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>%\\[)(?>(?>(?>\\\\)(?>.)|[^\\]])*)(?>\\]))
(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>%\\{)(?>(?>(?>\\\\)(?>.)|[^}])*)(?>\\}))
(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>%<)(?>(?>(?>\\\\)(?>.)|[^>])*)(?>>))
(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>')(?>(?>(?>\\\\)(?>.)|[^'])*)(?>'))
(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>\")(?>(?>(?>\\\\)(?>.)|[^\"])*)(?>\"))
(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>\\[)(?>(?>(?!\\])(?>(?>\\[:)(?>(?>alnum)(?![[:alnum:]_])|(?>alpha)(?![[:alnum:]_])|(?>ascii)(?![[:alnum:]_])|(?>blank)(?![[:alnum:]_])|(?>cntrl)(?![[:alnum:]_])|(?>digit)(?![[:alnum:]_])|(?>graph)(?![[:alnum:]_])|(?>lower)(?![[:alnum:]_])|(?>print)(?![[:alnum:]_])|(?>punct)(?![[:alnum:]_])|(?>space)(?![[:alnum:]_])|(?>upper)(?![[:alnum:]_])|(?>xdigit)(?![[:alnum:]_]))(?>:\\])|(?>(?>\\\\)(?>[0-3])(?>[0-7])(?>[0-7])|(?>\\\\x)(?>[[:xdigit:]])(?>[[:xdigit:]])|(?>\\\\)(?>.)|[^\\\\\\]])(?>(?>(?>\\-)(?>(?>\\\\)(?>[0-3])(?>[0-7])(?>[0-7])|(?>\\\\x)(?>[[:xdigit:]])(?>[[:xdigit:]])|(?>\\\\)(?>.)|[^\\\\\\]]))?)))+)(?>\\]))
(?>(?>(?>[[:space:]])+|(?>\\#)(?>(?>[^\\n])*))*)((?>`)(?>(?>(?>\\\\)(?>.)|[^`])*)(?>`))
(?>(?>(?>[[:space:]])+|(?>\\/\\*)(?>(?>(?!\\*\\/)(?>.))*)(?>\\*\\/)|(?>\\/\\/)(?>(?>[^\\n])*))*)((?>\")(?>(?>(?!\"|\\\\|[[:cntrl:]])(?>.)|(?>\\\\)(?>[\"\\\\\\/bfnrt]|(?>u)(?>[[:xdigit:]])(?>[[:xdigit:]])(?>[[:xdigit:]])(?>[[:xdigit:]])))*)(?>\"))
(?>.*(?:\\n\\-.*){
(?>[^;']|(''|(?>'([^']|\\')*[^\\\\]')))+;
'(?>[^']++|'')*+'|[\\d-.]++
(?>\\\\(?>[CM]-|c)?)
(?>\\\\)(?>.)
(?>\n               (?>\\r?)\\n|\n               (?>\\r*)(?>
(?><<-'((?:\\w+_|)
(?><<-(\"?)((?:\\w+_|)
(?>aa|a)(?>aa|a)(X)\\k<-1>
(?i)(%macro)\\s+(
(?i)(%mend)(?:\\s+(?:(\u00a72)|(
(?i)(/providers/(?P<child_namespace>[^/]*))?/(?P<child_type>[^/]*)/(?P<child_name>[^/]*)
(?i)(?:(?P<hours>[0-9.]+)\\s*(?:hours?)|(?P<mins>[0-9.]+)\\s*(?:mins?\\.?|minutes?)\\s*)Z?$
(?i)(?:(namespace)|[a-z0-9_]+)?(\\\\)(?=.*?[^a-z_0-9\\\\])
(?i)(?:\\b|T)(?P<hour>\\d{1,2})[:](?P<min>\\d{2})(?:[:](?P<sec>\\d{2})(?P<fractional>[.]\\d+)?)?(?:[^\\d]|\\z)
(?i)(?<_1>\\[)\\s*(?<_2>-?[_a-z\\\\[[:^ascii:]]][_a-z0-9\\-\\\\[[:^ascii:]]]*)(?:\\s*(?<_3>[~|^$*]?=)\\s*(?:(?<_4>-?[_a-z\\\\[[:^ascii:]]][_a-z0-9\\-\\\\[[:^ascii:]]]*)|(?<_5>(?>(?<_6>['\"])(?:[^\\\\]|\\\\.)*?(?<_7>\\k<_6>)))))?\\s*(?<_8>\\])
(?i)(?=[^$a-z0-9_\\\\])
(?i)(?=[^a-z_0-9\\\\])
(?i)(?=[a-z0-9_\\\\]+)
(?i)(?=[a-z0-9_]*[^a-z0-9_\\\\])
(?i)(?=\\\\?[a-z_0-9]+\\\\)
(?i)(?=\\s*$|[^a-z0-9_\\\\])
(?i)(?P<day>\\d{1,2})(?:st|nd|rd|th)?[\\s\\p{Z}]+(?P<month>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<year>(\\d{4})|(\\d{2}))
(?i)(?P<day>\\d{1,2})-(?P<month>\\p{L}{3,})-(?P<year>(\\d{4})|(\\d{2}))
(?i)(?P<dayname>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<day>\\d{1,2})(?:st|nd|rd|th)?[\\s\\p{Z}]+(?P<month>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<year>(\\d{4})|(\\d{2}))
(?i)(?P<dayname>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<month>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<day>\\d{1,2})(?:st|nd|rd|th)?
(?i)(?P<dayname>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<month>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<day>\\d{1,2})(?:st|nd|rd|th)?[.,\\s\\p{Z}]+(?P<year>(\\d{4})|(\\d{2}))
(?i)(?P<month>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<day>\\d{1,2})(?:st|nd|rd|th)?
(?i)(?P<month>\\p{L}{3,})[.,\\s\\p{Z}]+(?P<day>\\d{1,2})(?:st|nd|rd|th)?[.,\\s\\p{Z}]+(?P<year>(\\d{4})|(\\d{2}))
(?i)(?P<month>\\p{L}{3,})[\\s\\p{Z}]+(?P<year>\\d{4})
(?i)(?P<op>[\u00d7*/^v+-])?\\s*((?P<num>\\d*)d(?P<sides>[f%]|\\d+)(?P<explode>!)?(?P<max>[<>]\\d{1,4})?(?P<keep>k-?\\d{1,3})?|(?P<alt>\\d{1,5})(?P<fudge>f)?)( for (?P<for>[^,;]+))?
(?i)(?P<x1>\\d{1,2})[/.-](?P<x2>\\d{1,2})[/.-](?P<x3>\\d{2})
(?i)(?P<x1>\\d{1,2})[/.-](?P<x2>\\d{1,2})[/.-](?P<year>\\d{4})
(?i)(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})
(?i)(?P<year>\\d{4})/(?P<month>\\d{1,2})/(?P<day>\\d{1,2})
(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\\\])
(?i)(\\\\)
(?i)(\\\\)?(?=\\b[a-z_][a-z_0-9]*\\s*\\()
(?i)(\\\\)?\\b(st(dClass|reamWrapper)|R(RD(Graph|Creator|Updater)|untimeException|e(sourceBundle|cursive(RegexIterator|Ca(chingIterator|llbackFilterIterator)|TreeIterator|Iterator(Iterator)?|DirectoryIterator|FilterIterator|ArrayIterator)|flect(ion(Method|Class|ZendExtension|Object|P(arameter|roperty)|Extension|Function(Abstract)?)?|or)|gexIterator)|angeException)|G(ender\\Gender|lobIterator|magick(Draw|Pixel)?)|X(sltProcessor|ML(Reader|Writer)|SLTProcessor)|M(ysqlndUh(Connection|PreparedStatement)|ongo(Re(sultException|gex)|Grid(fsFile|FS(Cursor|File)?)|BinData|C(o(de|llection)|ursor(Exception)?|lient)|Timestamp|I(nt(32|64)|d)|D(B(Ref)?|ate)|Pool|Log)?|u(tex|ltipleIterator)|e(ssageFormatter|mcache(d)?))|Bad(MethodCallException|FunctionCallException)|tidy(Node)?|S(tackable|impleXML(Iterator|Element)|oap(Server|Header|Client|Param|Var|Fault)|NMP|CA(_(SoapProxy|LocalProxy))?|p(hinxClient|oofchecker|l(M(inHeap|axHeap)|S(tack|ubject)|Heap|T(ype|empFileObject)|Ob(server|jectStorage)|DoublyLinkedList|PriorityQueue|Enum|Queue|Fi(le(Info|Object)|xedArray)))|e(ssionHandler(Interface)?|ekableIterator|rializable)|DO_(Model_(ReflectionDataObject|Type|Property)|Sequence|D(ata(Object|Factory)|AS_(Relational|XML(_Document)?|Setting|ChangeSummary|Data(Object|Factory)))|Exception|List)|wish(Result(s)?|Search)?|VM(Model)?|QLite(Result|3(Result|Stmt)?|Database|Unbuffered)|AM(Message|Connection))|H(ttp(Re(sponse|quest(Pool)?)|Message|InflateStream|DeflateStream|QueryString)|aru(Image|Outline|D(oc|estination)|Page|Encoder|Font|Annotation))|Yaf_(R(oute(_(Re(write|gex)|Map|S(tatic|imple|upervar)|Interface)|r)|e(sponse_Abstract|quest_(Simple|Http|Abstract)|gistry))|Session|Con(troller_Abstract|fig_(Simple|Ini|Abstract))|Dispatcher|Plugin_Abstract|Exception|View_(Simple|Interface)|Loader|A(ction_Abstract|pplication))|N(o(RewindIterator|rmalizer)|umberFormatter)|C(o(nd|untable|llator)|a(chingIterator|llbackFilterIterator))|T(hread|okyoTyrant(Table|Iterator|Query)?|ra(nsliterator|versable))|I(n(tlDateFormatter|validArgumentException|finiteIterator)|terator(Iterator|Aggregate)?|magick(Draw|Pixel(Iterator)?)?)|php_user_filter|ZipArchive|O(CI-(Collection|Lob)|ut(erIterator|Of(RangeException|BoundsException))|verflowException)|D(irectory(Iterator)?|omainException|OM(XPath|N(ode(list)?|amedNodeMap)|C(haracterData|omment|dataSection)|Text|Implementation|Document(Fragment)?|ProcessingInstruction|E(ntityReference|lement)|Attr)|ate(Time(Zone)?|Interval|Period))|Un(derflowException|expectedValueException)|JsonSerializable|finfo|P(har(Data|FileInfo)?|DO(Statement)?|arentIterator)|E(v(S(tat|ignal)|Ch(ild|eck)|Timer|I(o|dle)|P(eriodic|repare)|Embed|Fork|Watcher|Loop)?|rrorException|xception|mptyIterator)|V(8Js(Exception)?|arnish(Stat|Log|Admin))|KTaglib_(MPEG_(File|AudioProperties)|Tag|ID3v2_(Tag|Frame|AttachedPictureFrame))|QuickHash(StringIntHash|Int(S(tringHash|et)|Hash))|Fil(terIterator|esystemIterator)|mysqli(_(stmt|driver|warning|result))?|W(orker|eak(Map|ref))|L(imitIterator|o(cale|gicException)|ua(Closure)?|engthException|apack)|A(MQP(C(hannel|onnection)|E(nvelope|xchange)|Queue)|ppendIterator|PCIterator|rray(Iterator|Object|Access)))\\b
(?i)(\\[)\\s*(-?[_a-z\\\\[[:^ascii:]]][_a-z0-9\\-\\\\[[:^ascii:]]]*)(?:\\s*([~|^$*]?=)\\s*(?:(-?[_a-z\\\\[[:^ascii:]]][_a-z0-9\\-\\\\[[:^ascii:]]]*)|((?>(['\"])(?:[^\\\\]|\\\\.)*?(\\6)))))?\\s*(\\])
(?i)/subscriptions/(?P<subscription>[^/]*)(/resourceGroups/(?P<resource_group>[^/]*))?(/providers/(?P<namespace>[^/]*)/(?P<type>[^/]*)/(?P<name>[^/]*)(?P<children>.*))?
(?i)[\\w\\-]+((?P<h>(\\.h(h|xx|\\+\\+|pp)?)?)|(?P<c>\\.((c(c|xx|\\+\\+|pp)?)|ipp)))$
(?i)\"csrf_token\"\\s*:\\s*\"(?P<csrftoken>\\w+?)\"
(?i)\"rhx_gis\"\\s*:\\s*\"(?P<rhx_gis>[a-f0-9]+)\"
(?i)\\[(\\[[\\w_,.+%$
(?i)\\A[A-Z0-9_][A-Z0-9\\-\\_]*\\z
(?i)\\b(?P<trigger>(1Z ?[0-9A-Z]{3} ?[0-9A-Z]{3} ?[0-9A-Z]{2} ?[0-9A-Z]{4} ?[0-9A-Z]{3} ?[0-9A-Z]|T\\d{3} ?\\d{4} ?\\d{3}|\\d{22}))\\b
(?i)\\b(?P<trigger>[0-9]{10}|[0-9]{12}|[0-9]{15}|[0-9]{20})\\b
(?i)\\b(?P<trigger>[A-Za-z]{2}[0-9]+US)\\b
(?i)\\b(?P<trigger>\\d{30}\\b)|(\\b91\\d+\\b)|(\\b\\d{20})\\b
(?i)\\b(?P<trigger>91[0-9]+)\\b
(?i)\\b(?P<trigger>E\\D{1}\\d{9}\\D{2}$|^9\\d{15,21})\\b
(?i)\\b(new)\\s+(?:(\\$
(?i)\\s*(?:(?:(?P<xcol>[A-Z])(?P<xrow>[1-9][0-9]*))|(?P<col>[A-Z])|(?P<row>[1-9][0-9]*))\\s*$
(?i)\\s*(?=[a-z_0-9\\\\])
(?i)\\\\u([\\da-f]{4})
(?i)^((([a-z]|\\\\d|[!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\\\.([a-z]|\\\\d|[!#\\\\$%&'\\\\*\\\\+\\\\-\\\\/=\\\\?\\\\^_`{\\\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\\\x22)((((\\\\x20|\\\\x09)*(\\\\x0d\\\\x0a))?(\\\\x20|\\\\x09)+)?(([\\\\x01-\\\\x08\\\\x0b\\\\x0c\\\\x0e-\\\\x1f\\\\x7f]|\\\\x21|[\\\\x23-\\\\x5b]|[\\\\x5d-\\\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\\\\\([\\\\x01-\\\\x09\\\\x0b\\\\x0c\\\\x0d-\\\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\\\x20|\\\\x09)*(\\\\x0d\\\\x0a))?(\\\\x20|\\\\x09)+)?(\\\\x22)))@((([a-z]|\\\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\\\d|-|\\\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\\\d|-|\\\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$
(?i)^((?P<scheme>http[s]?)://)?(?P<host>[0-9a-z-_.]+)(:(?P<port>\\d+))?(?P<path>(/)?(wsman)?)?
(?i)^(.*?)[^a-z0-9](?P<airdate>(\\d{2})[^a-z0-9](\\d{2})[^a-z0-9](19|20)(\\d{2}))[^a-z0-9]
(?i)^(.*?)[^a-z0-9](?P<airdate>(19|20)(\\d{2})[.\\/-](\\d{2})[.\\/-](\\d{2}))[^a-z0-9]
(?i)^(.*?)[^a-z0-9](?P<season>\\d{1,2})x(?P<episode>\\d{1,3})[^a-z0-9]
(?i)^(.*?)[^a-z0-9]s(?P<season>\\d{1,2})[^a-z0-9]
(?i)^(.*?)[^a-z0-9]s(?P<season>\\d{1,2})[^a-z0-9]?d\\d{1}[^a-z0-9]
(?i)^(.*?)[^a-z0-9]s(?P<season>\\d{1,2})[^a-z0-9]?e(?P<episode>\\d{1,3})(?:[e-])(?P<lastepisode>\\d{1,3})[^a-z0-9]
(?i)^(.*?)[^a-z0-9]s(?P<season>\\d{1,2})[^a-z0-9]?e(?P<episode>\\d{1,3})[abr]?[^a-z0-9]
(?i)^(.*?)[^a-z0-9]s(?P<season>\\d{2})[^a-z0-9]?e(?P<episode>\\d{2})e?(\\d{2})[^a-z0-9]
(?i)^(\\\\\\\\\\\\\\\\[\\\\?\\\\.]\\\\\\\\GLOBALROOT\\\\\\\\Device\\\\\\\\[^/\\\\\\\\]+)([/\\\\\\\\]?.*)
(?i)^(-|\\\"|?|?|'|?|?|?|?|?|?|?|?|?|?||who|[\\d]+|year| years|post|life|age|January|February|March|April|May|June|July|August|September|October|November|December)$
(?i)^[\\s]*FROM[ \\f\\r\\t\\v]+(?P<image>[^ \\f\\r\\t\\v\\n#]+)
(?i)^[a-z](?:[-a-z0-9\\+\\.])*:(?:\\/\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:])*@)?(?:\\[(?:(?:(?:[0-9a-f]{1,4}:){6}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|::(?:[0-9a-f]{1,4}:){5}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4}:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|v[0-9a-f]+[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:]+)\\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=@])*)(?::[0-9]*)?(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*|\\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*)?|(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])))(?:\\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])|[\\x{E000}-\\x{F8FF}\\x{F0000}-\\x{FFFFD}|\\x{100000}-\\x{10FFFD}\\/\\?])*)?(?:\\#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])|[\\/\\?])*)?$
(?i)^\\s*(namespace)\\b\\s+(?=([a-z0-9_\\\\]+\\s*($|[;{]|(\\/[\\/*])))|$)
(?i)^\\s*+(INSERT (INTO)?\\s*(\\w+\\.)?\\w+\\s*(\\([^\\)]*\\))?\\s*VALUES?)\\s*(\\([^\\)]*\\))\\s*(ON DUPLICATE KEY UPDATE.+)?
(?i)^karma:?\\s+(?:for\\s+)?([\\d\\pL]+)\\??$
(?i)<a href=\\\"(?P<url>.+?)#md5=.+?\\\">(?P<filename>.+?)</a>
(?i)<a href=\\\"(?P<url>.+?)\\\"\\s+rel=\\\"download\">(?P<version>.+?) download_url</a>
(?i)<meta.*charset=\"?\\s*(?P<charset>[a-zA-Z0-9_.:-]+)\\s*\"
(?i)<meta.*charset=\"?\\s*(?P<charset>[a-zA-Z0-9_.:-]+)\\s*\"?
(?i)c:\\\\program
(?i:
(?idsumx-idsumx)(?=b)(?!x)(?<named>x)
(?im)<(?P<tag>(/*\\s*|\\?*|\\!*)(figcaption|expression|blockquote|plaintext|textarea|progress|optgroup|noscript|noframes|menuitem|frameset|fieldset|!DOCTYPE|datalist|colgroup|behavior|basefont|summary|section|isindex|details|caption|bgsound|article|address|acronym|strong|strike|source|select|script|output|option|object|legend|keygen|ilayer|iframe|header|footer|figure|dialog|center|canvas|button|applet|video|track|title|thead|tfoot|tbody|table|style|small|param|meter|layer|label|input|frame|embed|blink|audio|aside|alert|time|span|samp|ruby|meta|menu|mark|main|link|html|head|form|font|code|cite|body|base|area|abbr|xss|xml|wbr|var|svg|sup|sub|pre|nav|map|kbd|ins|img|div|dir|dfn|del|col|big|bdo|bdi|!--|ul|tt|tr|th|td|rt|rp|ol|li|hr|em|dt|dl|dd|br|u|s|q|p|i|b|a|(h[0-9]+)))([^><]*)([><]*)
(?ims)(?P<tag><(/*\\s*|\\?*|\\!*)(figcaption|expression|blockquote|plaintext|textarea|progress|optgroup|noscript|noframes|menuitem|frameset|fieldset|!DOCTYPE|datalist|colgroup|behavior|basefont|summary|section|isindex|details|caption|bgsound|article|address|acronym|strong|strike|source|select|script|output|option|object|legend|keygen|ilayer|iframe|header|footer|figure|dialog|center|canvas|button|applet|video|track|title|thead|tfoot|tbody|table|style|small|param|meter|layer|label|input|frame|embed|blink|audio|aside|alert|time|span|samp|ruby|meta|menu|mark|main|link|html|head|form|font|code|cite|body|base|area|abbr|xss|xml|wbr|var|svg|sup|sub|pre|nav|map|kbd|ins|img|div|dir|dfn|del|col|big|bdo|bdi|!--|ul|tt|tr|th|td|rt|rp|ol|li|hr|em|dt|dl|dd|br|u|s|q|p|i|b|a|(h[0-9]+))([^><]*)([><]*))
(?imsU)\\[quote(?:=[^\\]]+)?\\](.+)\\[/quote\\]
(?imU)^(.*)$
(?imx)\n            (\n                # either a new paragraph, or the beginning of the text + empty lines\n                (\\n\\n|\\A\\n*)\n                # any number of lines starting with 'copyright' followed by a new paragraph\n                (^\\x20*copyright.*?$)+\n                \\n\\n\n            )\n            |\n            (\n                # or any lines that really look like a copyright statement\n                ^copyright (\\s+(c|\\d+))+ .*?$\n            )\n        
(?is)([^\\\\]?)<
(?is)CREATE.*\\s+AS\\s+((?U).*)(\\$[^\\$]*\\$)
(?ismU)<nav>(.*)</nav>
(?iu)(?P<editable>-e)?\\s*(?P<prefix>\\S+#egg=)(?P<package>[a-z0-9-_.]+)(?P<postfix>\\S+)\\s*(?P<comment>#.*)?$
(?iu)(?P<package>\\S+)==(?P<version>\\S+)\\s*(?P<hashes>(?:--hash=\\S+\\s*)+)?(?P<comment>#.*)?$
(?ix) (?: (
(?ix) (?: (?<=^|;) \\s* (?:(
(?ix) (?<=^|;) \\s* (
(?ix) (?<=^|;) \\s* (proc) \\s+ (
(?ix) \\b ( (
(?ix) \\b (?<!%) (
(?ix) ^\n        (?: (?P<category> [[:alpha:]]{1,20} ) = )?\n        (?P<tag> (?: [[:alnum:]] | - | \\* )+ )\n    $ 
(?ix) ^\n        (?P<language> [[:alpha:]]{2,3} )\n        (?: _  (?P<region> [[:alpha:]]{2} | [[:digit:]]{3} ))?\n        (?: \\. (?P<encoding> [0-9a-zA-Z-]{1,20} ))?\n        (?: @  (?P<variant> [[:alnum:]]{1,20} ))?\n    $ 
(?ix)(?:P?\n                (?:\n                    [0-9]+\\s*y(?:ears?)?\\s*\n                )?\n                (?:\n                    [0-9]+\\s*m(?:onths?)?\\s*\n                )?\n                (?:\n                    [0-9]+\\s*w(?:eeks?)?\\s*\n                )?\n                (?:\n                    (?P<days>[0-9]+)\\s*d(?:ays?)?\\s*\n                )?\n                T)?\n                (?:\n                    (?P<hours>[0-9]+)\\s*h(?:ours?)?\\s*\n                )?\n                (?:\n                    (?P<mins>[0-9]+)\\s*m(?:in(?:ute)?s?)?\\s*\n                )?\n                (?:\n                    (?P<secs>[0-9]+)(?P<ms>\\.[0-9]+)?\\s*s(?:ec(?:ond)?s?)?\\s*\n                )?Z?$
(?ix)(?>[^\\S ]\\s*|\\s{2,})(?=(?:(?:[^<]++|<(?!/?(?:textarea|pre)\\b))*+)(?:<(?>textarea|pre)\\b|\\z))
(?ix)\\b(
(?J)\\(\\?(?:P?<(?<name>[a-z_0-9]+)>|'(?<name>[a-z_0-9]+)')
(?J)\\W?:(?P<name>[a-z]+)|\\w?:(?P<name>[a-z]+)
(?m)(?d)^\\-{3}
(?m)(?d)^\\+{3}
(?m)(?P<d>\\d)\\.0(?P<s>,?)$
(?m)(?P<img>\\S+)\\s+pid: (?P<pid>\\d+)\\s+type: File\\s+(?P<hnd>\\w+): (?P<rest>.+)$
(?m)(?P<key>\\w+):\\s+(?P<value>\\w+)$
(?m)(?P<symbol>_ZN[0-9]+.*E)
(?m)(call)\\s+(?P<cmd>\\w+)\\s+(?P<arg>.+)\\s*$
(?m)\\\\
(?m)^(#line\\s+[0-9]+\\s+\")[^\"]*[/\\\\]([^\"]*\")
(?m)^\\s+\\d+\\s+(?P<hostname>[-\\w]+)\\s+(?P<status>.+)\\s*$
(?m)^test result: ok. (?P<num_passed>\\d+) passed;
(?m)fo\\.addVariable\\(\"file\",\\s\"(?P<fileid>[\\da-z]+)\"\\);\\n\\s+fo\\.addVariable\\(\"s\",\\s\"(?P<serverid>\\d+)\"\\);
(?m:\\s*(?:([^\\s\\\\'\"]+)|'([^']*)'|\"((?:[^\"\\\\]|\\\\.)*)\"|(\\\\.?)|(\\S))(\\s|\\z)?)
(?m:\\s*-\\s\\$include\\s+(?P<filename>.+)$)
(?m:^\\s*\\$include:\\s+(?P<filename>.+)$)
(?mi-Us)/+
(?mi-Us):\\w+\\??
(?ms)^```(?:(?P<type>yaml)\\\\w*\\\\n(?P<content>.+?)|\\\\w*\\\\n(?P<content>\\\\{.+?\\\\}))\\\\n^```
(?msU)device {.*id = ([0-9]+)[^0-9].*model = \\\"(.*)\\\".*^}$
(?msU:<interface[^>]*>(.+)</interface>)
(?mU)<\\/tr><tr><td>([^\\s]+)<\\/td><td>(\\d{4}-\\d{2}-\\d{2})<\\/td><td>(.*)<\\/td>
(?mU)mp4\",\"url\":\"(.*)\"
(?mx)\n        ^(?P<w>\\W*)  # ident\n\n        \\$stack\\.push\\(\n            (?P<a>[^),]+),\\s\n            (?P<b>[^),]+)\n        \\);\\n\n\n        \\W*\\$assignFromStack\\(this\\);\n    
(?mx)\n        ^(?P<w>\\W*)  # ident\n\n        \\$stack\\.push\\(\n            (?P<a>[^)]+)\\.bind\\([^)]+\\)\n        \\);\\n\n\n        \\W* \\$stack\\.pop\\(\\)\\(\\);\n    
(?mx)\n        ^(?P<w>\\W*)  # ident\n\n        \\$stack\\.push\\(\n            (?P<a>[^)]+)\n        \\);\\n\n\n        \\W* (?P<b>\\w+) = \\$stack\\.pop\\(\\);\n    
(?mx)\n        ^(?P<w>\\W*)  # ident\n\n        while\\s \\( (?P<s>\\w+) \\)\\s \\{\\n\n            (?P<b>(\\W*\\w+\\W*)*\\n)\n            \\W*return;\\n\n        \\W*\\}\n    
(?mx)\n        ^(?P<w>\\W*)\n\n        \\$stack\\.push\\(\n            (?P<a>[^)]+)\n        \\);\\n\n\n        \\W* \\$stack\\.push\\(\n            (?P<b>[^)]+)\n        \\);\n    
(?'name'[\\w-_:]+)(?'eq'\\s*=\\s*)?(?(eq)([\"'])(?'val'.*?)\\g{-2})
(?P<1>\\d{3})(?P<2>\\d{3})(?P<3>\\d{3})(?P<4>\\d{2})
(?P<1>\\\\w+)(\\\\s+)(?P<2>\\\\w+)
(?P<1>\\\\w+)\\\\s(?P<2>\\\\w+)
(?P<a>[\\<\\>\\!\\=])\\s+(?P<b>[\\<\\>\\!\\=])
(?P<action>[KS])(?P<prio>\\d+)(?P<name>\\S+)
(?P<address>.+)
(?P<address>[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})\\|(?P<port>[a-z0-9]+)
(?P<ADDRESS>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+proto\\s+(?P<PROTO>\\S+)\\s+metric\\s+(?P<METRIC>\\S+)
(?P<ADDRESS>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+proto\\s+(?P<PROTO>\\S+)\\s+metric\\s+(?P<METRIC>\\S+)\\s+mtu\\s+(?P<MTU>\\S+)
(?P<ADDRESS>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+src\\s+(?P<SRC>\\S+)
(?P<ADDRESS>\\S+)\\s+from\\s+(?P<FROM>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+src\\s+(?P<SRC>\\S+)\\s+metric\\s+(?P<METRIC>\\d+)
(?P<ADDRESS>\\S+)\\s+from\\s+(?P<FROM>\\S+)\\s+via\\s+(?P<VIA>\\S+)\\s+dev\\s+(?P<DEV>\\S+)
(?P<adress>.*):(?P<port>[0-9]+)
(?P<alert_type>\\S+): \\[(?P<source_host>\\S+)\\] \\[(?P<entity_type>\\S+)\\] \\[(?P<entity>.*)\\] (?P<alert_message>.*)
(?P<align>(?P<fill>[^{}])?[<>=\\^])?(?P<sign>[\\+\\- ])?(?P<alternate>#)?(?P<zero>0)?(?P<width>[0-9]+)?(?P<comma>[,])?(?P<precision>\\.[0-9]+)?(?P<type>[bcdeEfFgGnosxX%]+)?
(?P<all>                                                              (?# match the whole textarea tag )\n\t\t\t\t<textarea                                                           (?# the opening of the textarea and some optional attributes )\n\t\t\t\t(                                                                   (?# match a id attribute followed by some optional ones and the name attribute )\n\t\t\t\t\t(?P<before1>[^>]*)\n\t\t\t\t\t(?P<id1>id=[\"'](?P<id_value1>[^>\"']*)[\"'])\n\t\t\t\t\t(?P<between1>[^>]*)\n\t\t\t\t\tname=[\"']comment[\"']\n\t\t\t\t\t|                                                               (?# match same as before, but with the name attribute before the id attribute )\n\t\t\t\t\t(?P<before2>[^>]*)\n\t\t\t\t\tname=[\"']comment[\"']\n\t\t\t\t\t(?P<between2>[^>]*)\n\t\t\t\t\t(?P<id2>id=[\"'](?P<id_value2>[^>\"']*)[\"'])\n\t\t\t\t\t|                                                               (?# match same as before, but with no id attribute )\n\t\t\t\t\t(?P<before3>[^>]*)\n\t\t\t\t\tname=[\"']comment[\"']\n\t\t\t\t\t(?P<between3>[^>]*)\n\t\t\t\t)\n\t\t\t\t(?P<after>[^>]*)                                                    (?# match any additional optional attributes )\n\t\t\t\t><\\/textarea>                                                       (?# the closing of the textarea )\n\t\t\t)
(?P<all>(?P<href>href=(\"|'))?(?P<link>https?://(?P<name>[^\\s]+)))
(?P<all>(->|\\.|@|::)?([\\w]+))
(?P<amount>\\d+) ?(?P<division_units>days|weeks|months|years|hours|minutes|seconds)?
(?P<amount>\\d+)d(?P<sides>\\d+)\\+?(?P<modifier>\\d+)?
(?P<amp>&(?:amp;)?)(?P<prefix>[a-z0-9]{1,3}:)?(?P<name>[^=]+)=(?P<value>[^&]+)
(?P<app_id>[^_]+)\\_(?P<id>[\\S]+)
(?P<app>[a-z0-9-]+)_?(?P<version>v[0-9]+)?\\.?(?P<c_type>[a-z-_]+)?.(?P<c_num>[0-9]+)
(?P<argkey>[^=]+)=(?P<argvalue>[^&]*)
(?P<as_is>[a-z0-9.-])|(?P<underscore>__)|_(?P<uppercase>[a-z])|_(?P<N>[0-9])
(?P<asset>[\\w_.:/-]+)(?:\\#(?P<defname>[\\w_]+))?(\\.(?P<ext>.*))
(?P<at>@)?(?P<name>.+?$)
(?P<atom>[A-Z][a-z]?)(?P<coeff>\\d*)
(?P<attr_name>\\w+)=\"(?P<attr_value>[^\"]+)\\s*
(?P<attr>(password|name|login).?=)[^&]*(?P<amp>&|$)
(?P<attr>[-\\w]+)(\\s*=\\s*[\\'\"](?P<val>.*?)[\\'\"])?
(?P<attr>href|src)=\"(?P<url>%%%%%%%%%%%%%%%%%%%%)\"
(?P<attr>href|src)=\"(?P<url>[^\"]*)\"
(?P<attribute>src|href)=(?P<quote>[\\'\"])(?P<relpath>\\S*)(?P=quote)
(?P<audio_encoding>mp3|DD5\\.1|DDP5\\.1|AC3\\.5\\.1)
(?P<AUTH>Authentication\\sfailed.*)|(?P<PERM>.*Permission\\sdenied.*)
(?P<author>.*) \\[archived by (?P<archivist>.*)\\]
(?P<author>[a-zA-Z0-9_]+)!(?P=author)@(?P=author).tmi.twitch.tv
(?P<axis>X|Y|Z)(?P<dir>\\+|\\-)
(?P<backslash>\\\\)|(?P<dollar>\\$\\$)|(?P<subst>\\$\\{(?P<var>\\w+)(?P<code>.*?)\\})
(?P<backslashes>\\\\*)\\$(?P<symbol>\\w+)
(?P<badpasswd>ogin incorrect)
'(?P<band_num>\\d+)'
(?P<BAR>(?P<PERCENT>\\d{1,3})%\\s?\\[\\s*[=+>]*\\s*\\].+)
(?P<base_url>http://[0-9a-zA-Z\\-\\.]*/\n                            (lokad|opid)\n                            /)\n                            manifest.m3u8\\?tlm=hls&streams=\n                            (?P<streams>[0-9a-zA-Z\\/\\.\\,:]+)\n                         
(?P<base>[\\w\\-]+)(?P<spacer>(?:,|\\/)\\s*)(?P<suffix>[\\w\\-]+)?
(?P<basefile>(MIGR|SIV)FS \\d+[:/]\\d+)$
(?P<basefile>(RIFS|RNFS) \\d{4}[:/_-]\\d{1,3})$
(?P<basefile>\\d{4}[:/_-]\\d{1,3})(?:|\\.\\w+)$
(?P<basefile>KVV?FS \\d{4}:\\d+)
(?P<basefile>LIFS \\d{4}:\\d{1,3})
(?P<basefile>LMV?FS \\d{4}:\\d{1,3})
(?P<bef>[.?!])\\s?\\)
(?P<before>(.|\n)*?)(?P<invisible>(<script(.|\n)*?</script>|<style(.|\n)*?</style>|<(.|\n)*?>))
(?P<before>(.|\n)*?)(<ENAMEX ID=\"(?P<chain_id>.*?)\" TYPE=\"(?P<entity_type>.*?)\">(?P<entity_string>(.|\n)*?)</ENAMEX>)?
(?P<before>(.|\n)*?)<s i=\"(?P<sentence_id>.*?)\">(?P<tagged_sentence>(.|\n)*?)</s>
(?P<before>.*)(?P<url>http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+)(?P<after>.*?)
(?P<before>.*)selected_int_kind\\((?P<args>.*)\\)(?P<after>.*)
(?P<before>.*)selected_real_kind\\((?P<args>.*)\\)(?P<after>.*)
(?P<before>.*?)[\\(]host (?P<host>\\S+) (?P<action>[^:]+): (?P<message>.*)[\\)]
(?P<begin>.+ )/.+/(?P<constant>IRCLogParser/.+\\n)
(?P<begin>^\\[{3,})[ ]*\\n(?P<content>.*?)(?P<end>^\\]{3,})[ ]*$
(?P<begin>^<{3,})[ ]*\\n(?P<theorem>.*?)(?P<end>^>{3,})[ ]*$
(?P<bindkey>\\$bindkey)
(?P<bitrate>\\d+)K_(?P<width>\\d+)x(?P<height>\\d+)
(?P<block>[-]{3}.*?[-]{3})
(?P<block>[-]{3}\\n.*?\\n[-]{3})
(?P<block>[`]{3}.*?[`]{3})
(?P<block>`.*?`)
(?P<block><PP_HEADER)\\s+(?P<entries>.*?)/>
(?P<body_tag><body[^>]+>)
(?P<box>\\$box(?P<env>.*?)\\$endbox)
(?P<browser>Camino|Kindle(\\ Fire\\ Build)?|Firefox|Safari|MSIE|AppleWebKit|Chrome|IEMobile|Opera|Silk|Lynx|Version|Wget|curl|NintendoBrowser|PLAYSTATION\\ \\d+)\n                (?:;?)\n                (?:(?:[/ ])(?P<version>[0-9A-Z.]+)|/(?:[A-Z]*))
(?P<bucket>.*?)\\.s3(-website-(?P<region>.*?))?\\.amazonaws.com
(?P<c>[!\\(\\)<>,\\?\\]\\[\\{\\} \\\\'\"`*\\^#|$&;])
(?P<c>[\\\\\\.\\+\\*\\?\\(\\)\\|\\[\\]\\{\\}\\^\\$])
(?P<callname>[a-zA-Z_][\\w.]*)[ \\t]*\\((?P<callparams>.+?)?\\)$
(?P<cap_pos>position\\s*:\\s*(?P<cap_position>(TOP)|(BOTTOM))\\;*)
(?P<card_num>\\d+)-(?P<dev_num>\\d+)
(?P<cblock>[`]{3}.*?[`]{3})
(?P<cblock>\\<code.*?\\<\\/code\\>)
(?P<class>(^(([\\\\])|([A-Z]))([A-Za-z0-9_\\\\]+)$))
(?P<class>\\S.*\\s+)?(?P<src>(?:https?:\\/\\/|\\/|\\S+\\/)\\S+)(?:\\s+(?P<width>\\d+))?(?:\\s+(?P<height>\\d+))?(?P<title>\\s+.+)?
(?P<classOrFunction>\\w+){0,1}(?:\\:\\:|->){0,1}(?P<method>\\w+){0,1}
(?P<cline>[`]{1}.*?[`]{1})
(?P<cname>.+)
(?P<code>[\\w-]+)
(?P<code>^\\d*)\\s*(?P<response>.*)
(?P<code>LC08|LE07|LT05|LT04)(?P<path>[0-9]{3})(?P<row>[0-9]{3})(?P<productyear>[0-9]{4})(?P<julianday>[0-9]{3})
(?P<code>LC8|LE7|LT5)(?P<path>[0-9]{3})(?P<row>[0-9]{3})(?P<productyear>[0-9]{4})(?P<julianday>[0-9]{3})
(?P<codes>\\d+(,\\d+)*)\\t(?P<utf8>.+)
(?P<column>\\$column(\\[(?P<options>.*?)\\])*)
(?P<column>^.*)(?P<operator>==|!=|=\\*|!\\*|\\^\\*|\\$\\*|>=|>|<=|<)(?P<value>.*$)
(?P<columns>\\$columns(?P<env>.*?)\\$endcolumns)
(?P<comm>\\S+):(?P<pid>\\d+) \\[(?P<prio>\\d+)\\] success=(?P<success>\\d) CPU:(?P<cpu>\\d+)
(?P<command>[MmZzLlHhVvCcSsQqTtAa])|(?P<num>-?(([0-9]*[.][0-9]*)|[0-9]+)([eE][+-]?[0-9]*)?)
(?P<command>^.+?)_(?P<platform>.+?)\\.md$
(?P<command>auth add) (?P<permissions>.*) to users (?P<users>.*)
(?P<command>auth del) (?P<permissions>.*) to users (?P<users>.*)
(?P<command>auth list)
(?P<command>die)
(?P<command>reborn)
(?P<comment>!--)|(?P<slash>/?)\\s*(?P<tag>[a-z]+)(?=[^a-z])
(?P<comp>et al\\.)(?:\\.)
(?P<config>[dlx])(?P<stem>[a-z]+)
(?P<CONN>[^\\[\\s]+)\\[\\d+\\]:\\s+(?P<KEY>.*):\\s+(?P<VALUE>.*)
(?P<CONN>[^\\[\\s]+)\\[\\d+\\]:\\s+ESTABLISHED\\s+(?P<AGO>.*)\\s+ago,\\s+(?P<LOCAL_TEP>[\\d+.]+\\[.*\\])...(?P<REMOTE_TEP>[\\d+.]+\\[.*\\])$
(?P<CONN>[^\\[\\s]+)\\{\\d+\\}:\\s+(?P<LINE>.*)
(?P<CONN>\\w[\\w\\s]*\\w)\\s*:\\s+(?P<KEY>\\S+):\\s+(?P<TUNNEL>.*)\\s+TUNNEL,\\s+(?P<KEY_2>\\S+)=(?P<VALUE>\\S+)
(?P<CONNECTION_ID>\\[\\s*\\d*\\])\\s*(?P<CONNECTION_REPORT>.*)
(?P<CONNECTION>Couldn't\\sread\\spacket:\\sConnection\\sreset\\sby\\speer)
(?P<CONNECTIONS>^Connections)
(?P<contenttype>.*); ?charset[^;]+(?P<extra>;.*)?
(?P<cookie>JSESSIONID=[0-9A-F]*); Path=/manager(/)?; HttpOnly
(?P<correios>.*) - (?P<cidade>.*)/(?P<estado>\\w{2})
(?P<count>[0-9\\-]+)</span>/(?P<total>[0-9\\-]+)</a></span></td>
(?P<count>[0-9][0-9 ]*) records?$
(?P<count>[0-9]+) (?P<type>assertions?|test cases?|failures?) ((?P<expected>expected)|(out of (?P<total>[0-9]+) (?P<status>passed|failed|skipped|aborted)))
(?P<count>[0-9]+) assertions? out of (?P<total>[0-9]+) (?P<status>passed|failed)
(?P<count>\\d+)(?P<unit>\\w+)
(?P<cpp_defined>[Dd][Ee][Ff][Ii][Nn][Ee][Dd])
(?P<cpp_else>^(|\\s*)#[Ee][Ll][Ss][Ee])\\s*
(?P<cpp_endif>^(|\\s*)#[Ee][Nn][Dd][Ii][Ff]).*
(?P<created_at>\\d\\d\\d\\d/\\d\\d/\\d\\d( \\d\\d:\\d\\d:\\d\\d)?)\\s+(#(?P<reference>\\S+) -)?(?P<descr>.*)
(?P<cuda>cuda\\d+\\.\\d+)\\.(?P<mofed>mofed\\d+\\.\\d+)\\.(?P<compiler>(gnu\\d+\\.\\d+\\.\\d+)|(pgi\\d+\\.\\d+))
(?P<d>\\d+)d
(?P<data>.+)
(?P<data>{.+})
(?P<date>.*): (?P<def_file>.*)$
(?P<date>[\\d\\-\\:\\s]+)\\+0000 .* Consumed outgoing message <Message payload=\"(?P<message>.*)\">
(?P<date>[\\d\\-\\:\\s]+)\\+0000 .* Inbound: <Message payload=\"(?P<message>.*)\">
(?P<date>[\\d\\-\\:\\s]+)\\+0000 .* PUBLISHING INBOUND: (?P<message>.*)
(?P<date>[\\d\\-\\:\\s]+)\\+0000 Processed event message for [a-zA-Z0-9_]+: (?P<message>.*)
(?P<date>[\\d\\-\\:\\s]+)\\+0000 Processed inbound message for [a-zA-Z0-9_]+: (?P<message>.*)
(?P<date>[\\d\\-\\:\\s]+)\\+0000 Processed outbound message for [a-zA-Z0-9_]+: (?P<message>.*)
(?P<date>\\d{4}-\\d{1,2}-\\d{1,2}\\s+\\d{1,2}:\\d{1,2})(?P<timezone>[+-]{1}\\d{2}:{0,1}\\d{2})\\s+(?P<name>[^\\s].*)
(?P<date>\\d{4}-\\d{1,2}-\\d{1,2}\\s+\\d{1,2}:\\d{1,2})\\s+(?P<name>[^\\s].*)
(?P<DATE>\\d{4}-\\d{2}-\\d{2})\\s+(?P<TIME>\\d{1,2}:\\d{1,2}:\\d{1,2})
(?P<day>[0-9]{1,2})\\.(?P<month>[0-9]{1,2})\\.(?P<year>[0-9]{4})
(?P<day>\\d{1,2}) (?P<month>Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (?P<year>\\d{4}) (?P<hours>\\d\\d):(?P<minutes>\\d\\d):(?P<seconds>\\d\\d) (?P<timezone>Z|[-+]\\d\\d:?\\d\\d)
(?P<day>\\d{1,2})/(?P<month>\\d{1,2})(/(?P<year>\\d{4}|\\d{2}))?
(?P<day>\\d{1,2})/(?P<month>\\d{1,2})/(?P<year>\\d{4}) (?P<hour>\\d{1,2}):(?P<minute>\\d{1,2}):(?P<second>\\d{1,2})$
(?P<day>\\d{1,2})/(?P<month>\\d{1,2})/(?P<year>\\d{4}) (?P<hour>\\d{1,2}):(?P<minute>\\d{1,2}):(?P<second>\\d{1,2}).(?P<microsecond>\\d{1,6})$
(?P<day>\\d{1,2})/(?P<month>\\d{1,2})/(?P<year>\\d{4})$
(?P<day>\\d{8})\\/(?P<stream>.+)\\-(?P<ts>\\d+)\\.tri$
(?P<day>\\d+)/(?P<month>\\d+)/(?P<year>\\d+) - (?P<hour>\\d+):(?P<minute>\\d+)
(?P<day>\\d+)/(?P<month>\\w+)/(?P<year>\\d+)(:(?P<hour>\\d+)|)(:(?P<minute>\\d+)|)(:(?P<second>\\d+)|)
(?P<day>0?[1-9]|[12]\\d|3[01])/(?P<month>0?[1-9]|1[0-2])/(?P<year>[12]\\d{3})$
(?P<day>Den \\d+:[ae]. |)(?P<ordinal>\\d+)\\s*\\.\\s*\\((?P<malnr>\\w\\s\\d+-\\d+)\\)
(?P<DAYS>\\d+) day(.*),\\s+(?P<HRS>\\d+):(?P<MINS>\\d+)
(?P<DAYS>\\d+) day(.*),\\s+(?P<MINS>\\d+)\\s+min
(?P<deprecated>(G54)|(G55))?D(?P<d>\\d+)\\*
(?P<desc>)#\\s*define\\s(?P<name>[^(\\n]+?)\\s(?P<code>.+)$
(?P<DETAIL>\\s+\\S+){9}\\s+(?P<REST>.*)
(?P<dev>(/[^/ ]*)+) on (?P<dir>(/[^/ ]*)+) 
(?P<dev>\\S+)\\s+(?P<dir>\\S+)\\s+(?P<fs>\\S+)
(?P<dev>\\S+)\\s+\\((?P<devt>\\S+)\\)\\s+\\[(?P<range>\\S+)\\]\\s+(?P<maj>[0-9]+):(?P<min>[0-9]+)\\s+(?P<readSize>\\S+)\\s+(?P<writeSize>\\S+)\\s+(?P<totalSize>\\S+)\\s+((?P<freeSize>\\S+)\\s+?P<Usage>\\S+)\\s+(?P<nrFile>\\S+)\\s+(?P<filesystem>\\S+)\\s+(?P<mount>.+)
(?P<deviceName>[a-zA-Z].*[a-zA-Z0-9 -]*) \\((?P<simulatorID>[a-zA-Z0-9-]{36})\\) \\((?P<status>[a-zA-Z]*)\\)
(?P<digit>\\d+)
(?P<dir>(\\w+/)+)(?P<query>\\w+)\\?(?P<params>.*)
(?P<dir>[a-zA-Z_]\\w*)[ \\t]*(?:[ \\t]+(?P<param>[^ \\t].*))?$
(?P<directory>.+)\\/(?P<name>[^\\.]+)\\.(?P<extension>.+)$
(?P<disk_size>\\d+\\.?\\d* [MGT]?B) .*$
(?P<dist>[0-9]{1,3})\\s?(?P<dir>NORTH|EAST|SOUTH|WEST|N|NNE|NE|ENE|E|ESE|SE|SSE|S|SSW|SW|WSW|W|WNW|NW|NNW)\\s+(OF )?(?P<loc>[A-Z0-9]{3,4})
(?P<distro>.+) release (?P<major>\\d+)(.(?P<minor>\\d+))?
(?P<doc_index>\\d+)?:\n    (?P<parent_residue_index>\\d+)\n    (?P<parent_atom_replaced>[odhnx])\n    \\((?P<parent_attachment_position>-?[0-9\\-\\|]+)[\\+\\-]\n        (?P<child_attachment_position>-?[0-9\\-\\|]+)\\)\n    (?P<child_residue_index>\\d+)\n    (?P<child_atom_replaced>[odhnx])\n        
(?P<dockerUA>.+) UpstreamClient(?P<upstreamUA>.+)
(?P<doctest>\\!.```fortran(?P<test>.*?)\\!.```.*?\\!\\=\\>(?P<result>.*?)\\<\\<\\<)
(?P<domain>.*): (?P<backups>\\d*) .*$
(?P<domain>[a-z0-9][a-z0-9\\-]{1,63}\\.[a-z\\.]{2,6})$
(?P<dot>\\.?)\\n+
(?P<downloads>\\d+) downloads
(?P<driver>\\w+)\\/.*::test_(?P<getter>\\w+)
(?P<duration>\\d+(\\.\\d+)?)(,(?P<title>.+))?
(?P<duration>\\d+)(?P<unit>\\w?)
(?P<dynamic_linker>ld-[\\d.]+.so)$
(?P<dynamic>{?)(?P<content>[^}{]+)}?
(?P<email><([^>]+)>)?\\s?(?P<url>\\([^\\)]+\\))?$
(?P<endian><|>|@)?(?P<fmt>(?:\\d*[bBhHlLqQfd])+)$
(?P<endpoint>.+/json-rpc/)(?P<version>[\\d.]+)$
(?P<entity>[^[.:]+)(?P<format_string>[^:]+)?
(?P<entity>\\w+)=(?P<start>\\d+)-(?P<end>\\d+)
(?P<eof>M[0]?[012])\\*
(?P<error_code>.+?)\\s(?P<error_type>.+?):\\s*(?P<index_name>.+?)\\s+(?P<error>.+?)
(?P<ERROR>Connecting\\sto\\s.*\\sfailed:.*)
(?P<error>ln:.*File exists)
(?P<error>zip error:.*)
(?P<escape>[\\\\]*)$
(?P<eth>eth\\d)
(?P<event>.*)from(?P<starting>.*)(to|through|thru)(?P<ending>.*)
(?P<exc_class_name>[\\w\\d+]+): (?P<exc_message>[\\s\\S]*)
(?P<expr>.*)
(?P<expression>[^?]+)\\?(?P<success>[^:]+):(?P<failure>[^;]+)
(?P<ext>[A-Za-z0-9][A-Za-z0-9\\-]*) ?
(?P<f>[SMHD])(?:(?P<n>\\d+)|)
(?P<f>[SMHDW])(?:(?P<n>\\d+)|)
(?P<factor>.*)\\*(?P<token>.+)
(?P<factor>\\d+)\\*\\(
(?P<FAILED>cannot access|Could not|no such|denied|not a regular file|Is a directory|No route to host|lost connection)
(?P<FAILURE_MSG>.*failed.*|.*error.*|.*command not found.*|.*iperf:.*)
(?P<family>\\{\\w+(\\w|\\s)*\\}|\\w+)\\s?(?P<size>-?\\d+)?\\s?(?P<modifiers>\\{\\w+(\\w|\\s)*\\}|\\w+)?
(?P<feature>[A-Za-z0-9][A-Za-z0-9\\-]*) ?
(?P<fence>^(?:~{3,}|`{3,}))[ ]*(?P<lang>[a-z0-9_+-]*)(?P<linenums>#)?[ ]*\\n(?P<code>.*?)(?<=\\n)(?P=fence)[ ]*$
(?P<fence>^(?:~{3,}|`{3,}))[ ]*(\\{?\\.?(?P<lang>[a-zA-Z0-9_-]*)\\}?)?[ ]*\\n(?P<code>.*?)(?<=\\n)(?P=fence)[ ]*$
(?P<fence>^`{3,})[ ]*(?P<lang>[a-zA-Z0-9_-]*)[ ]*\\n(?P<code>.*?)(?P=fence)[ ]*$
(?P<fenced>[~`]{3,})\\s*(?P<lang>[^\\s`]+)?
(?P<field_id>\\S+)--(?P<version>\\d+)$
(?P<field>\\bbal|\\bpbal|\\bnbal|\\bcrd|\\bdeb)(?P<mode>[piseu])?\\s*(?P<account_sel>_[a-zA-Z0-9]+|\\[.*?\\])\\s*(?P<ml_domain>\\[.*?\\])?
(?P<fields>((\\\"([^\\\"]|((?<=\\\\)\\\"))*\\\")|([^\\t\\\"])|((?<=\\\\)\\\"))+)(\\t|$)
(?P<figure>\\$figure(?P<env>.*?)\\$endfigure)
(?P<file_type>[CT])(?P<file_number>\\d{1,3})(:)(?P<element_number>\\d{1,3})(.)(?P<sub_element>ACC|PRE|EN|DN|TT|CU|CD|DN|OV|UN|UA)
(?P<file_type>[IO])(:)(?P<file_number>\\d{1,3})(.)(?P<element_number>\\d{1,3})(/(?P<sub_element>\\d{1,2}))?
(?P<file_type>[LFBN])(?P<file_number>\\d{1,3})(:)(?P<element_number>\\d{1,3})(/(?P<sub_element>\\d{1,2}))?
(?P<file_type>B)(?P<file_number>\\d{1,3})(/)(?P<element_number>\\d{1,4})
(?P<file_type>S)(:)(?P<element_number>\\d{1,3})(/(?P<sub_element>\\d{1,2}))?
(?P<file>.*)\\((?P<line>[0-9]+)\\)
(?P<file>[a-zA-Z0-9.@_/\\s\\-]+)[(](?P<line>[0-9]+)[)]: (?P<message>[a-zA-Z0-9(){}:%.*&_<>/\\-+=!,\" \\[\\]]+)
(?P<filename>(?P<base>.+?)\\.(?P<ext>.*))$
(?P<filename>([a-zA-Z]:)?[^:]+):(?P<line>[0-9]+):\\s*(?P<error>.*)
(?P<first>[a-z]+)(?:-(?P<last>[a-z]+))?
(?P<first>[a-zA-Z]+) (?P<last>[a-zA-Z]+)
(?P<first>\\/)?(?P<sab>[a-z]+)?(?P<last>\\/)?$
(?P<first>\\d+)(?:-(?P<last>\\d+))?(?:/(?P<step>\\d+))?$
(?P<first>\\w+)\\W+(?P<last>\\w+)
(?P<folder>/.*/)(?P<file>.*?\\.flv)
(?P<format>.+?)-Format\\s*:\\s*(?P<abr>\\d+)kbps\\s*,\\s*(?P<note>.+)
(?P<format>G9[01])\\*
(?P<from>.*)?(?P<email>\\<.*\\>)
(?P<from>\\w+) to (?P<to>\\w+) with (?P<symbol>\\w+)
(?P<front>.*?)(?P<seq>(?P<csi>\u001b)(?P<command>[@-_]))(?P<rest>.*)
(?P<fulldomain>(?P<domain>[a-z0-9][a-z0-9\\-]{1,63})\\.(?<tld>[a-z\\.]{2,6}))$
(?P<func>\\w+)(?P<args>.*)
(?P<func>\\w+)\\((?P<args>[0-9.,-e]+)\\)
(?P<func>ntp_(?:get|adj)time)\\(\\) returns code (?P<code>\\d+) 
(?P<function>\\w+)(?=\\(\\S+\\))\\([\\'|\\\"](?P<arg>.+?)[\\'|\\\"]\\)
(?P<gack_id>[\\d-]+) \\((?P<stacktrace_id>[\\d-]+)\\)
(?P<gene>ENSG\\d*)
(?P<generation>J-PHONE|Vodafone|SoftBank)/(?P<version>[\\d\\.]*)/(?P<model>[^/\\[]*)
(?P<genus>[\\w]*)\\s+     # match the genus\n            (?P<hybrid>x?)\\s?          # hybrid sign\n            (?P<species>[\\w-]*)\\s?     # match the species\n            (?P<author>.*)
(?P<genus>[\\w]*)\\s+
(?P<gif_id>[\\S+]+)(?:\\s+(['\"]{0,1})(?P<alt>.+)(\\2))?
(?P<greeting>\\S+?) (?P<name>\\S+?)$
(?P<group>[a-zA-Z][a-zA-Z0-9-_ ]+)[@](?P<module>([a-zA-Z][a-zA-Z0-9-_]+|[*]))[\\/]?(?P<component>([a-zA-Z][a-zA-Z0-9-_]+|[*]))?
(?P<group>\\S+)\\s+
(?P<group1>[0-9]+)\\.(?P<group2>[0-9]+)
(?P<groupName>[^=]+)\\s*=\\s*\\[(?P<envList>[^\\[\\]]+)\\]$
(?P<h>([a-zA-Z0-9_-]+:.+\\n)*)\\n?(?P<b>(\\s*.*)*)
(?P<h>\\d+)h
(?P<handle>.+)-css$
(?P<hash_name>sha1|sha224|sha384|sha256|sha512|md5)=(?P<expected>[a-f0-9]+)
(?P<hash>#\\w+)
(?P<hash>[0-9A-Fa-f]{32}) (?P<mode>[ *])(?P<path>[^\\n]+)
(?P<hash>\\w+)($|\\-|\\.)
(?P<hashtag>#\\S+#)
(?P<head_1>\\S+)\\s+(?P<head_2>\\S+)\\s+(?P<head_3>\\S+)\\s+(?P<head_4>\\S+)\\s+(?P<head_5>\\S+)\\s+(?P<head_6>\\S+)\\s+(?P<head_7>\\S+)\\s+(?P<head_8>\\S+)
(?P<head>.*)\\s*see:\\s*`(?P<module>.*)`\\s*(?P<tail>.*)
(?P<header_line>^#{20,}.*)\\s(?P<text_content>(?:^#.*\\s)*)
(?P<HEADER> .*PID.*)
(?P<HEADERS>\\[\\s+ID\\].*)
(?P<HEADERS>pkts\\s+bytes\\s+target\\s+prot\\s+opt\\s+in\\s+out\\s+source\\s+destination)
(?P<heading>([A-Z ]+\\s)?[A-Z()]+:)
(?P<headword>[^\\(\\[\\{\\|\\~]+)(?:\\((?P<reading>[^\\)]+)\\))?(?:\\|\\d+)?(?:\\[(?P<sense>[\\d]+)\\])?(?:\\{(?P<display>[^\\}]+)\\})?(?:(?P<example>\\~))?$
(?P<height>\\d{3,4})[pP]_(?P<bitrate>\\d+)[kK]_\\d+/
(?P<height>\\d+)[pP]?_(?P<tbr>\\d+)[kK]
(?P<HELP_MSG>usage:\\ssftp\\s.*)
(?P<hex>[A-Z0-9]{6})
(?P<hl_lines>\\d+(?:[ \\t]+\\d+)*)
(?P<host>.*): (?P<backups>\\d*) backup\\(s\\)$
(?P<host>[\\w-._]+)(?::(?P<port>\\d+))?
(?P<host>[^/]+)/(?P<owner>[^/]+)/(?P<repo>[^/]+)
(?P<host>[^\\:]+)(?::(?P<port>[0-9]{1,5}))?
(?P<host>[a-zA-Z0-9\\-.]+)(?::(?P<port>[0-9]+))?
(?P<hostname>[^\\s]+)\\s+(?P<arch>[^\\s]+)\\s+(?P<ncpus>[0-9]+)\\s+(?P<load>[^\\s]+)\\s+(?P<memory>[0-9\\.MGT]+)\\s+
(?P<hostname>\\S+)\\s*$
(?P<hour>[0-9]{1,2}):(?P<minute>[0-9]{1,2})(:(?P<second>[0-9]{1,2}))?\\s?(?P<tt>am|pm)?
(?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?
(?P<hour>\\d{1,2}):(?P<minute>\\d{2,2})(?::(?P<second>\\d{2,2})(?:.(?P<microsecond>\\d{3,3}))?)?(?P<timezone>[0-9Z:\\+\\-]+)?$
(?P<hour>\\d{1,2}):?(?P<minute>\\d{2})?\\s?(?P<mod>am|pm)?(oclock)?
(?P<hours>[0-9]+) hour(s)? ago
(?P<hours>\\d{1,2}):(?P<minutes>\\d{1,2}):(?P<seconds>\\d{1,2})(?:\\.(?P<millis>\\d{3})(?P<micro>\\d{3})?\\d*)?
(?P<hr>\\d{2}):(?P<mins>\\d{2})
(?P<HRS>\\d+):(?P<MINS>\\d+)
(?P<htmlchars>[<&>])|(?P<space>^[ \\t]+)|(?P<lineend>\\r\\n|\\r|\\n)
(?P<htmlchars>[<&>])|(?P<space>^[ \\t]+)|(?P<lineend>\\r\\n|\\r|\\n)|(?P<protocal>(^|\\s*)(http|ftp|https)://[\\w\\-\\.,@?^=%&:/~\\+#]+)
(?P<htmlchars>[<&>])|\n                               (?P<space>^[ \\t]+)|\n                               (?P<lineend>\\r\\n|\\r|\\n)|\n                               (?P<protocal>(^|\\s)\n                                    ((http|ftp)://.*?))(\\s|$)
'(?P<channel>[^']+)'
(?P<channel>[a-zA-Z0-9_]+) (?P<count>[0-9\\-]+)
(?P<chapter>\\d+)\\s*\\|\\s*(?P<title>.+)
(?P<charset>[\\w!#$%&+^_`{}~-]+)'(?P<language>[\\w-]*)'(?P<value>.*)$
(?P<charset>[^']+)'(?P<lang>[^']*)'(?P<filename>.+)
(?P<chunk>\\d+)\\/(?P<parts>\\d+)
(?P<id>.*)\\/(?P<start>\\d+)\\-(?P<stop>\\d+)
(?P<Id>.*?)\\t(?P<Part2B>.*?)\\t(?P<Part2T>.*?)\\t(?P<Part1>.*?)\\t(?P<tcope>.*?)\\t(?P<Language_Type>.*?)\\t(?P<Ref_Name>.*?)\\t(?P<Comment>.*?)
(?P<id>[\\w-]+)\\?
(?P<id>[a-zA-Z]+)Url\\s*=\\s*([\"\\'])(?P<url>(?:https?:)?//.+?)\\2
(?P<ID>\\[\\s*\\d*\\])\\s*(?P<ID_NAME>.*port\\s*\\d*\\s*connected with.*)
(?P<id>\\d+)/$
(?P<id>\\d+)\\.html$
(?P<id>\\w+)($)?(-(?P<size>[0-9xm.]+)($)?)?(\\[(?P<page>\\d+)\\]($)?)?(.*\\.(?P<fmt>\\w+)$)?
(?P<id>Vehicle ID:([\\d\\.]+)) (?P<lat>lat:([\\d\\.-]+)) (?P<lng>lon:([\\d\\.-]+)) (?P<heading>dir:([\\d\\.-]+)) (?P<speed>spd:([\\d\\.-]+)) (?P<lock>lck:([\\d\\.-]+)) (?P<time>time:([\\d]+)) (?P<date>date:([\\d]+)) (?P<status>trig:([\\d]+))
(?P<iface>wl(?:_[a-z]+)+)(?P<func>\\.[a-z]+(?:_[a-z]+)*)?(?:\\(\\))?
(?P<imsi>\\d+)\\nOK
(?P<include>[+-])?(?P<type>ann(?=\\s))?\\s*(?P<regiontype>[a-z]*?)\\[[^=]*]
(?P<includes>([^:,]+(,[^:,]+)*)?):(?P<excludes>([^:,]+(,[^:,]+)*)?)$
(?P<indent>\\s*)!f2py(?P<rest>.*)
(?P<indent>\\s*)(?P<line>.*)\\s*
(?P<index>\\d+):(?P<bytes>\\d+)\\((?P<from>\\d+)\\-\\>(?P<to>\\d+)\\)\\[(?P<start_time>[\\d\\.]+)\\]-\\[(?P<end_time>[\\d\\.]+)\\]\\((?P<sender>\\d+),\\s*(?P<content>.*)\\)
(?P<index>\\d+):(?P<bytes>\\d+)\\[(?P<start_time>[\\d\\.]+)\\]-\\[(?P<end_time>[\\d\\.]+)\\]\\((?P<sender>\\d+),\\s*(?P<content>.*)\\)
(?P<init>[A-Z])(?P<point>\\.)
(?P<instance>[\\w\\.]+)(:(?P<xpath>.*))?
(?P<int>(\\d*\\.)?\\d+)\\s*;\\s*url=(?P<url>.*)
(?P<ip_address>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) - (-|(\\w+)) \\[(?P<day>\\d{2})/(?P<month>[a-z]{3})/(?P<year>\\d{4}):(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2}) (?P<timezone>([+-])\\d{4})\\] \"(?P<request>[^\"]*?)\" (?P<status_code>\\d{3}) (?P<bytes_sent>\\d+) \"(?P<referrer>(-)|(.+))?\" \"(?P<user_agent>.+)?\"
(?P<ip>(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))(?=.*?(?:(?:(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?P<port>\\d{2,5})))
(?P<IP>.*)\\s.*\\s(?P<DEV>.*)\\s.*\\s(?P<MAC>.*)\\s(?P<NUD>.*)
(?P<IP>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}):(?P<PublicPort>\\d+(-\\d+)?)->(?P<PrivatePort>\\d+(-\\d+)?)\\/(?P<Type>\\w+)
(?P<ip>\\d+\\.\\d+\\.\\d+\\.\\d+)
(?P<ip>\\d+\\.\\d+\\.\\d+\\.\\d+)(:(?P<port>\\d+))?$
(?P<ipaddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) - - \\[(?P<dateandtime>\\d{2}\\/[a-z]{3}\\/\\d{4}:\\d{2}:\\d{2}:\\d{2} (\\+|\\-)\\d{4})\\] ((\\\"(GET|POST) )(?P<url>.+)(http\\/1\\.1\")) (?P<statuscode>\\d{3}) (?P<bytessent>\\d+) ([\"](?P<refferer>(\\-)|(.+))[\"]) ([\"](?P<useragent>.+)[\"])
(?P<k>[^(&|?)]+)(&|$)
(?P<k>[^(=|&)]+)=(?P<v>[^&]+)(&|$)
(?P<k>[^\\[\\]]*)(\\[(?P<i>[\\d\\[\\]]+)\\])?$
(?P<key_opening>.*)\\<FONT\\>(?P<name>.*)\\<\\/FONT\\>(?P<key_closing>.*)\\<FONT\\>\\ \\[(?P<type>.*)\\]\\<\\/FONT\\>
(?P<key>[?&.])
(?P<key>[\\w.]+):\\s*(?P<value>.+)?
(?P<key>[\\w]*)\\[(?P<idx>[\\w]*)\\]
(?P<key>[\\w-]+):\\s*()(?P<name>[^'\";]+)\\s*;?
(?P<key>[\\w-]+):\\s*(['\"])(?P<name>.*?)(?<!\\\\)\\2\\s*;?
(?P<key>[\\w-]+)=(?P<value>\\d+(?: blks)?)
(?P<key>[^,]+),?
(?P<key>[^:]+): (?<value>.+)
(?P<key>[^:]+)[:](?P<value>.*)
(?P<key>[^\\s]+)\\s+(?P<operator>.+)\\s*
(?P<key>[^=]+)\\s*=\\s*(?P<value>.*)
(?P<key>[^=]+)=(?P<value>.+)
(?P<KEY>[^=]+)=(?P<VALUJE>.*)
(?P<key>[A-z]+) ?: ?(?P<value>.*)
(?P<key>[a-z-_]+): *(?P<value>.+)
(?P<key>[A-z0-9.()_\\-]+) ?\\: ?(?P<value>.*)
(?P<key>[A-z0-9.()_\\-]+) ?= ?(?P<value>.*)
(?P<key>[A-Z0-9-]+)=(?P<val>\"[^\"]+\"|[^\",]+)(?:,|$)
(?P<key>[a-zA-Z][a-zA-Z0-9_]*)=(?:(?P<quot>\"|')(?P<value>.*?)(?P=quot))?
(?P<key>[a-zA-Z_-]+)=(?P<quote>[\"\\']?)(?P<val>.+?)(?P=quote)(?:;|$)
(?P<key>\\*?)(?P<name>[^*].+) \\{label:\"(?P<type>.+)\"\\}
(?P<key>\\-\\-?[\\w\\-]+\\=)
(?P<KEY>\\S.*\\S):
(?P<KEY>\\S.*\\S|\\S)\\s*:\\s*(?P<VALUE>\\S.*\\S|\\S)\\s*$
(?P<KEY>\\w+):(?P<VALUE>\\d+)
(?P<key>\\w+)\\s*(?P<op>[+-]?=)\\s*(?P<value>.*)$
(?P<key>\\w+)\\s*:\\s*(['\"](?P<value>[^'\"]*?)(px)?['\"])
(?P<key>\\w+)=(?<!\\\\)\"(?P<value>.+?)(?<!\\\\)\"
(?P<key>\\w+)=(?P<value>[^\\s]+)?(?:\\s+\\((?P<data>.*)\\))?
(?P<key>\\w+)=(?P<value>[^\\s]+)\\s*(?:\\((?P<data>.*)\\))*
(?P<key>\\w+)=\"(?P<escaped_value>(\\\\.|[^\"\\\\])*)\"
(?P<key>\\w+)=\\\"(?P<value>[^\\\"\\\\]*)\\\"\\s*(?:,\\s*|$)
(?P<keys>[^=\\s]+)=(?P<values>[^=\\s]+)
(?P<keyword>[A-Za-z][A-Za-z ]+) (?P<value>\\d+(?:\\.\\d+|x[0-9a-f]+)?) ?(?P<units>us|ppm|s|\\(.*\\))?
(?P<kind>[a-z0-9-]*[a-z-]+) (?P<index>\\d+)$
(?P<kind>\\w+?)(?P<number>\\d+)_(?P<item>\\w+)
(?P<kw>\\w.*?(?=\\W|\\b|$))
(?P<L_OPTION> compressed\\s*uncompressed\\s*ratio\\s*uncompressed_name.*)
(?P<l>[a-z])(?P<u>[A-Z])
(?P<label_store>\\d+) (?P<symbol>\\S+) (?P<description>.+)
(?P<label>[^ :]+):(?P<body>(.|\\r?\\n(?= +))*)$
(?P<label>_\\:[^\\s]+)
(?P<last>[^\\r])\\n
(?P<lat>[NS][0-9]{2,4})\\s?(?P<lon>[EW][0-9]{3,5})
(?P<leading_whitespace>\\s*)(?P<name>[^(]+)(?P<whitespace_after_name>\\s+)\\((?P<email>[^\\s]+@[^)\\s]+)\\)(?P<trailing_characters>.*)
(?P<left_name>[^\\s]+)\\s*(?P<left_cardinality>[*?+1])--(?P<right_cardinality>[*?+1])\\s*(?P<right_name>[^\\s]+)
(?P<left>[^.?!]\\.|!|\\?)(?P<right>[^\\s\"'])
(?P<len>[^=]+)?(=(?P<value>.*))?$
(?P<len>\\d+)(?P<op>[=DIMNX])
(?P<level>#+)(?P<attributes>(?:[\\\\[\\\\{\\\\(].+?[\\\\]\\\\}\\\\)])*)(?P<start>\\\\d+)?(?:(?:\\\\. *)|(?: +)|(?:_ +))
(?P<level>[^\\s]+)\\s+\\[.+\\]\\[(?P<logger>.+?)\\]\\s+(?P<log>.+)
(?P<level>\\\\*+)(?P<attributes>(?:[\\\\[\\\\{\\\\(].+?[\\\\]\\\\}\\\\)])*)(?:(?:\\\\. *)|(?: +)|(?:_ +))
(?P<lfeats>[^:]+):(?P<rfeats>.+)
(?P<lhs>.*[^ ])\\s*##\\s*(?P<rhs>[^ ].*)
(?P<libname>.*)
(?P<line>(?:\\$?\\{|\\(|\\[|&.+;|[0-9]+|(?:[^!-~]|[A-Z])).*)\\s*
(?P<line>(?:\\$?\\{|\\(|\\[|&.+;|[0-9]+|(?:[^\\u0021-\\u007E]|[A-Z])).*)\\s*
(?P<LINE>\\d+):\\s+(?P<INT>\\S+):\\s+(?P<TRANS>\\S+)\\s+mtu\\s+(?P<MTU>\\S+)\\s+qdisc\\s+(?P<QDISC>\\S+)\\s+state\\s+(?P<STATE>\\S+)\\s+mode\\s+(?P<MODE>\\S+)\\s+group\\s+(?P<GROUP>\\S+)
(?P<LINE>\\d+):\\s+(?P<INT>\\S+):\\s+(?P<TRANS>\\S+)\\s+mtu\\s+(?P<MTU>\\S+)\\s+qdisc\\s+(?P<QDISC>\\S+)\\s+state\\s+(?P<STATE>\\S+)\\s+mode\\s+(?P<MODE>\\S+)\\s+group\\s+(?P<GROUP>\\S+)\\s+qlen\\s+(?P<QLEN>\\S+)
(?P<line>\\d+)\\((?P<func>\\w+)\\)
(?P<LINE>Nmap scan report for (?P<ADDRESS>\\S+)\\s+\\[host\\s+(?P<HOST>\\S+),\\s+received\\s+(?P<RECEIVED>\\S+)\\])
(?P<linestart>[\\d]+)(?:[ \\t]+(?P<linestep>[\\d]+))?(?:[ \\t]+(?P<linespecial>[\\d]+))?
(?P<link>.*).md(?P<anchor>#.*)?
(?P<LINK>\\S+)\\s+(?P<VAL>\\S+:\\S+:\\S+:\\S+:\\S+:\\S+)\\s+(?P<KEY>\\S+)\\s+(?P<VAL_2>\\S+:\\S+:\\S+:\\S+:\\S+:\\S+)
(?P<LISTENING>listening)\\s+on\\s+(?P<PORT>\\S+),\\s+(?P<LINK>link-type)\\s+(?P<TYPE>.*),\\s+(?P<CAPTURE>capture size)\\s+(?P<SIZE>.*)
(?P<literal>[^:\\(\\)]*)(?P<token>[:\\(\\)]?)
(?P<loc1>[A-Z0-9]{3,4})\\s?-\\s?(?P<loc2>[A-Z0-9]{3,4})
(?P<location>^\\#:.+?)^msgid (?P<id>.+?)^msgstr (?P<str>.+?)^\\w*$
(?P<log_url>[^ \\n]+)\n                       (?P<key_vals>(:?[^:]+:.+[\\n$])*)\n                       (?P<notes>(.*[\\n$])*)
(?P<login>ogin:\\s*$)
(?P<loss>[0-9]+)\\% packet loss
(?P<loss>\\d+(\\.\\d+)?)% packet loss
(?P<lvals>.*)(?P<op>[<>=]{2})(?P<rvals>.*)$
(?P<m>\\d+)m
(?P<m><[^>]+>)
(?P<main>(\u001b\\[(\\d+)m){2,})
(?P<main>.*)\\[(?P<extras>.*)\\]$
(?P<maj>\\d+)\\.(?P<min>\\d+)\\.(?P<patch>\\d+)
(?P<major>[\\d]+)(?P<min>[A-Z])(?P<patch>[\\d]+)(?P<fix>[a-z]?)
(?P<major>[\\d]+).(?P<minor>[\\d]+).(?P<patch>[\\d]+)-(?P<commitCount>[\\d]+)-(g)?(?P<hash>[0-9a-f]{5,40})
(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)
(?P<major>\\d+)      # major (x in x.y)\n        \\.(?P<minor1>\\d+)   # minor1 (y in x.y)\n        \\.?(?P<minor2>\\d+)? # minor2 (z in x.y.z)\n        \\.?(?P<minor3>\\d+)? # minor3 (w in x.y.z.w)\n        (?P<alpha>[a|b]?)   # alpha/beta\n        (?P<alpha_ver>\\d*)  # alpha/beta version\n        (?P<pre>pre)?       # pre release\n        (?P<pre_ver>\\d)?    # pre release version\n    
(?P<major>\\d+)(\\.(?P<minor>\\d+)(\\.(?P<patch>\\d+))?)?
(?P<major>\\d+)(\\.(?P<minor>\\d+))?(\\.(?P<patch>\\d+))?(.*revision\\s(?P<revision>[0-9a-f]*)\\))?
(?P<major>\\d+).(?P<minor>\\d+).(?P<patch>\\d+)(?P<tail>.*)
(?P<major>\\d+)\\.(?P<minor>\\d+)
(?P<major>\\d+)\\.(?P<minor>\\d+)(?:\\.(?P<patch>\\d+))?-?(?P<tag>.*)
(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)
(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?:-(?P<release>[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+(?P<build>[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?
(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<suffix>[\\w\\d.]+))?
(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<revision>\\d+)
(?P<major>\\d+)\\.(?P<minor>\\d+)\\..*
(?P<major>\\d+)\\.(?P<minor>\\d+)\\.\\d+\\.\\d+
(?P<match>.*)(\\s->(?P<action>.*))
(?P<match>\\{(?P<name>.+?)\\})
(?P<matched>:doc:`(?P<title>.*)\\s+<(?P<target>[^>]+)>`)
(?P<matches>\\d+)|(?P<del>\\^\\w+?(?=\\d))|(?P<sub>\\w)
(?P<media_consumed>[0-9]+) of (?P<media_total>[0-9?]+)
(?P<MEM>.*):\\s*(?P<TOTAL_MEM>\\d*)(?P<UNIT>.)\\s*total,\\s*(?P<FREE>\\d*)\\s*free,\\s*(?P<USED>\\d*)\\s*used[,.]\\s*(?P<OTHER>\\d*)\\s*
(?P<message>can't load package: package .+: found packages .+ \\((?P<path>.+?\\.go)\\).+)
---(?P<meta>.*?)---(?P<body>.*)
(?P<meta>\\S+)?\\s*(?P<address>0x[0-9a-f]+){1}\\s*(?:<(?P<symbol>.+)>){0,1}:\\s*(?P<mnemonic>\\S+){1}\\s*(?P<operands>.+)?$
(?P<metadata>[\\s\\S]*?)\\n\\n(?P<template>[\\s\\S]*)
(?P<method>[A-Za-z]+) (?P<to_uri>.+) SIP/2.0
(?P<method>\\w+)\\((?P<parameters>.*?)\\)
(?P<method>\\w+)\\s+(?P<path>(/[`\u00b4\\\\<>/\\w:,;\\.#$!?=&@%_+\\'\\*^~|\\(\\)\\[\\]\\{\\}-]*)+)\\s+(?P<protocol>\\w+/\\d\\.\\d)
(?P<methodsig>def\\s+(?P<mname>[a-zA-Z0-9_]+)\\(.*?\\):\n+\\s+\"\"\")(?P<comment>.*?)(?=\"\"\")
(?P<mimetype>[^/]+/[^;]+)(?:;\\s*codecs=\"?(?P<codecs>[^\"]+))?
(?P<min>-?\\d+).*?(?P<max>-?\\d+)
(?P<min>\\d+\\.\\d+)/(?P<avg>\\d+\\.\\d+)/(?P<max>\\d+\\.\\d+)/(?P<mdev>\\d+\\.\\d+)\\s+ms
(?P<MINS>\\d+) min
(?P<minutes>[0-9]+) minute(s)? ago
(?P<minutes>[0-9]+):(?P<seconds>[0-9]{1,2})
(?P<mod>[a-zA-Z][\\w.]*\\.)+[a-zA-Z]
(?P<mode>[\\+\\-])o (?P<user>.+)
(?P<mode>G3[67])\\*
(?P<mode>G7[01])\\*
(?P<mode>G7[45])\\*
(?P<model>[A-Za-z0-9_-]+).(?P<object>[A-Za-z0-9_-]+)
(?P<modification>[a-z0-9_\\-,]*)\n            (?P<base_type>(?:[A-Z][a-z]{2}?|(?:[a-z]{3}[A-Z][a-z]{2})))\n            (?P<substituent>[^-]*?)\n            (?P<derivatization>\\^[^\\s-]*?)?\n            (?P<linkage>-?\\((?P<anomer>[ab?o]?)[0-9?/]+->?[0-9?/]+\\)-?)?$
(?P<modname>\\w+)\\.py
--(?P<module_name>.+)-settings=(?P<settings_path>.+)
(?P<module_path>.*)\\.(?P<contextmanager_name>.*)
(?P<module>.*)\\.(?P<f>[\\w_]+)
(?P<module>\\w+)\\.(?P<method>[^\\(]+)\\((?P<params>[^\\)]*)\\)
(?P<month>\\d{1,2})/(?P<day>\\d{1,2})/(?P<year>\\d{4})$
(?P<msec>^0?\\.\\d+) (?P<sec>\\d+)$
(?P<msgid>\\d+) (?P<uidl>[\\x21-\\x7E]{1,70})
(?P<mux>(D\\s|\\sE|DE))\\s(?P<format>\\S{3,11})\\s
(?P<n_op>\\d+)(?P<op>\\w)
(?P<n>\\d+) (days?|ds?)(?P<ago>( ago)?)
(?P<n>\\d+)(?P<unit>[a-z]*)
(?P<N>\\d+)-\\d+$
(?P<n>\\w+):\\s*(?P<p>.+?)\\s*(\\[(?P<dt>\\w+)\\]\\s*)?:\\s*(?P<c>.*)\\s*(?P<a>\\&)?
(?P<name>(\\w|[-.])+)\n                      \\s*=\\s*(?P<callable>(\\w+)([:\\.]\\w+)*)\n                      \\s*(\\[\\s*(?P<flags>\\w+(=\\w+)?(,\\s*\\w+(=\\w+)?)*)\\s*\\])?\n                      
(?P<name>(\\w|[-.+])+)\n                      \\s*=\\s*(?P<callable>(\\w+)([:\\.]\\w+)*)\n                      \\s*(\\[\\s*(?P<flags>\\w+(=\\w+)?(,\\s*\\w+(=\\w+)?)*)\\s*\\])?\n                      
(?P<name>)[ \t]*(?P<uri>[^ ;]+)[ \t]*(?:;(?P<params>[^\\?]*))?
'(?P<name>.*)'
(?P<name>.*) changed from (?P<oldver>.*) to (?P<newver>.*)
(?P<name>.*) needs to be included in build
(?P<name>.*) needs to be removed from build
(?P<name>.*):\\w+(?P<body>.*)
(?P<name>.*)\\((?P<args>.*)\\)(?P<return>.*)
(?P<name>.*)\\s(?P<order>ASC|DESC)(.*)
(?P<name>.*)\\s*\\((?P<g_id>.*)\\)\\s*<(?P<email>.*?)>
(?P<name>.*)_(?P<digit>\\d+)$
(?P<name>.*)_test.py
''(?P<name>.*?)''
'''(?P<name>.*?)'''
(?P<name>.*?)(\\[(?P<subname>.*?)\\])
(?P<name>.*\\D)(?P<digits>\\d+)$
(?P<name>.+) <(?P<email>.+)>
(?P<name>.+)\\/([!#$%&'*+.^_`\\|~0-9a-z-]+:?)+$
(?P<name>.+)\\[(?P<extras>[^\\]]+)\\]
(?P<name>.+)\\s(?:A(?:DM)?\\d\\d-\\d{1,4})
(?P<name>.+)\\s+\\<(?P<email>.+@.+\\.\\w+)\\>
(?P<name>.+?)-(?P<ver>.+?)\n    (-(?P<pyver>.+?))?(-(?P<arch>.+?))?.egg
(?P<name>[\\w .-]+)\\s*\\(\\s*(?P<ver>[^\\s)]+)\\)$
(?P<name>[\\w. -]+)[^\\w](?P<year>(19|20)\\d\\d)
(?P<name>[\\w-]+)\\s*\\(\\s*(==\\s*)?(?P<ver>[^)]+)\\)$
(?P<name>[\\w-]+)\\s+(?P<type>[A-Za-z]+|\\(.*?\\))\\s+(?P<default>#REQUIRED|#IMPLIED|\\w+|(?:#FIXED)?((?:\")([^\"]*?)(?:\")|(?:')([^']*?)(?:')))\\s*(?:--(?P<comment>.*?)--)?
(?P<name>[^ ]*)[ ]*\\\"(?P<desc>.*)\\\"[ ]*(?P<scope>BROAD|NARROW|EXACT|RELATED)?
(?P<name>[^()><@,;:\\\"\\/\\[\\]?=}{ \\t]+):[\\s]*(?P<value>[^\\r\\n]*)\\r\\n
(?P<name>[^: ]+):\\s*$
(?P<name>[^:\\\\/]*?)(?:\\.(?P<ext>[^ :\\\\/.]*))?$
(?P<name>[^:]*):?( ?(?P<value>.*))?
(?P<name>[^[]+)(?: \\[(?P<lang>[a-z]{2,3})\\])?$
(?P<name>[^\\.]+)\\.(?P<extension>.+)$
(?P<name>[^\\s,!=<>]+)(,|\\s*(?P<operator>[!=<>]+)\\s*(?P<version>[^\\s,]+))?
(?P<name>[^\\s]+) = (?P<url>.*)
(?P<name>[^\\s]+)\\s+((?P<user>[^@]+)@)?(?P<host>[^:]+)(?::(?P<path>[^\\s]+))?\\s\\(push\\)
(?P<name>[^\\s]+)\\s+https?://(?P<host>[^/]+)/(?P<path>[^\\s]+)\\s\\(push\\)
'(?P<name>[^']+)'
(?P<name>[^-]+)( -(?P<ver>[^-]+) (-py(?P<pyver>[^-]+) (-(?P<plat>.+))? )? )?
(?P<name>[^_]*)__(?P<type>[A-Za-z0-9]*)_Id
(?P<name>[^=<>!\\s]+)\\s*((?P<cc>=[^=]+(=[^=]+)?)|(?P<pc>(?:[=!]=|[><]=?).+))?$
(?P<name>[^=<>]+)(?P<comp>[<=>]{1,2})(?P<spec>[^;]+)(?:(;\\W*python_version\\W*(?P<pycomp>[<=>]{1,2})\\W*(?P<pyspec>[0-9\\.]+)))?
(?P<name>[A-Ga-g])(?P<octave>[1-8])
(?P<name>[A-Ga-g])(?P<octave>[1-8])?(?P<length>[whqes])?
(?P<name>[A-z -]+)(?P<id>[A-z0-9-]+)
(?P<name>[a-z]{4})
(?P<name>[A-z]+)\\((?P<group>[A-z]+)\\) *
(?P<name>[a-z_]+)\\((?P<level>\\d+)\\)
(?P<name>[a-zA-Z]*) (?P<age>[0-9]+)
(?P<name>[a-zA-Z]+) (?P<age>[0-9]+)
(?P<name>[a-zA-Z]+)(?:=(?P<value>[^,]+))?
(?P<name>[A-Za-z]+)(?P<age>\\\\d+)-(\\\\d+)-(\\\\d+)
(?P<name>[a-zA-Z]+)(?P<value>.+)$
(?P<name>[a-zA-Z0-9:_-]+)(?:\\s+(?P<sample_rate>[0-9.]+))?(?:\\s+(?P<safe>(safe|unsafe|unsafeabove2kHz|unknown)))?(?:\\s+(?P<fidelity>(clean|flat|glitchy|unknown)))?
(?P<name>[a-zA-Z0-9]+)(:?_(?P<idx>\\d+))?$
(?P<name>\\S+)\\s+(?P<commit>[[:alnum:]]+)\\s+(?:(?P<remote>\\[.*?\\])\\s+)?(?P<msg>.*)
(?P<name>\\S+)\\s+(?P<url>\\S+)\\s+\\((?P<type>[^\\)]+)\\)
(?P<name>\\\\w+)(?P<age>\\\\d+)-(\\\\d+)-(\\\\d+)
(?P<name>\\w+)(\\[(?P<type>\\w+)\\])?(\\s+mapping \\[(?P<dst>[\\w:]+)\\])?(\\s+linked to (?P<link>[\\w/]+))?
(?P<name>\\w+)\\[(?P<index>\\w+)\\]
(?P<name>\\w+)\\b
(?P<name>\\w+)=(?P<value>[^ ,]+)
(?P<name>^[-!#$%&'*+/=?^_`{}|~0-9A-Z]+(\\.[-!#$%&'*+/=?^_`{}|~0-9A-Z]+)*|^\"([\\001-\\010\\013\\014\\016-\\037!#-\\[\\]-\\177]|\\\\[\\001-011\\013\\014\\016-\\177])*\")@(?P<domain>(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)$)|\\[(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}\\]$
(?P<name>^[^=<>!\\s]+)\\s*(?P<constraint>[=!><]=?\\s*[^\\s;]+)?(?:\\s+;\\s+)?(?P<env_mark_name>[^=<>!\\s;]+)?\\s*(?P<env_mark_constraint>[=<>!\\s]+[^=<>!\\s]+)?
(?P<name>__\\w+__) = '(?P<value>[^']+)'
(?P<name>0(x|o|b))(?P<value>.+)
(?P<name>a)
(?P<name>Error[^ -]*)
(?P<name>Firefox|Chrome|MSIE|Safari|Opera)[/| ](?P<version>\\d+.\\d+)
(?P<name>point)\\[(?P<index>\\d)\\]
(?P<namespace>.+\\\\)?(?P<class>[^\\\\]+$)
(?P<nature2> (constitutionnelle|organique))
(?P<newLine>\\r\\n|\\n|\\r)
(?P<newlines>(\\r?\\n)+)(?P<followup>[^\\r\\n])
(?P<nick>[\\w\\d<-\\[\\]\\^\\{\\}\\~\\-]+)!(?P<user>[\\w\\d<-\\[\\]\\^\\{\\}\\~]+)@(?P<host>.+)
(?P<nmsg>\\d+) (?P<size>\\d+)
(?P<NO_FILE>.*No\\ssuch\\sfile\\sor\\sdirectory.*)
(?P<NOT_CONFIRMED>Host\\skey\\sverification\\sfailed)
(?P<NOT_FOUND>File.*not\\sfound.*)
(?P<not>not)?\\s*(?P<listitem><[a-zA-Z]+:[^>]*>|\\[.*?\\])
(?P<note>\\$note(?P<env>.*?)\\$endnote)
(?P<nsdname>.+)
(?P<num>.*?)(?:$|\\: )(?P<title>.*)
(?P<num>[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)(?P<multi>[kMGT])?
(?P<num>[0-9]+)
(?P<num>[0-9]+) members
(?P<num>\\-?\\d+\\.?\\d*)(?P<suf>\\D*)
(?P<num>\\d*)(?P<unit>[dmy])
(?P<num>\\d+)(?P<mark>.*?)\\\\S(?P<num_power>.*?)/.*?;
(?P<num>\\d+)(?P<unit>(|m|n)s|d)?
(?P<num>\\d+)(?P<unit>[^\\d\\s]+)
(?P<num>\\d+)\\s+(?P<description>\\S+ \\S*)\\s+(?P<path>.+)$
(?P<num>\\d+)d(?P<sides>\\d+)
(?P<num>\\d+)d[fF]
(?P<number>(\\d+([,\\.]\\d+)?(:\\d+)?))(?P<unit>[hms])
(?P<number>[\\d]+)(?P<ord>st|nd|rd|th)
(?P<number>[0-9]+)\\.(?P<decimal>[0-9]+)
(?P<off>[-]?\\d*)\\(%(?P<basep>\\w+)(,%(?P<idx>\\w+))?(?:,(?P<scale>\\d))?\\)(?P<eol>$)?
(?P<op><=|>=|<|>)?(?P<value>[\\w+]+)
(?P<opening>(?:open\\(|\\.href=)[\\\"\\'])(?P<url>.*)(?P<ending>[\\\"\\']\\)?)
(?P<operation>[a-z]{1})(?P<value>[\\S]*)
(?P<operator>[\\w\\s]+)\\(+(?P<value>.+)\\)+
(?P<operator>^[a-z]+)(?P<value>[0-9,-]+$)
(?P<option>(?P<preexisting>preexisting)?[^:=\\s][^:=]*)\\s*(?(preexisting)|(?P<vi>[:=])\\s*(?P<value>.*))$
(?P<OPTION>(unknown|invalid)\\soption\\s.*)
--(?P<option>[\\w\\-]+)(=(?P<value>(['\"].*?['\"]|.*?)))?(?:\\s|\\-|$)
(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$
(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$
(?P<option>[a-z-]+)=(?P<value>[a-z.]+)
(?P<option>^\\w+) (?P<operator>[~=]{1,2}) (?P<value>.+)$
(?P<ORNAMENTS>----*|\\[\\s*ID\\].*)
(?P<os>[^\\s]*) (Linux release|release) (?P<version>[\\d]+)
(?P<os>[^\\s]*) (Linux Server release) (?P<version>[\\d]+)
(?P<os>Oracle) (Linux Server release) (?P<version>[\\d]+)
(?P<os>Red Hat Enterprise Linux) (Client release|Server release|Workstation release) (?P<version>[\\d]+)
(?P<ostheme>[-]{3}slide(?P<block>.*?)[-]{3}endslide)
(?P<owner>.*)/(?P<name>.*)
(?P<package>.*\\.)(?P<remainder>[^.]+\\.[^.]+)$
(?P<package>[A-Za-z0-9\\._\\-]+)(?:\\[([A-Za-z0-9\\._\\-]+)\\])?\\s*(?:(?P<constraint>==|>=|>|<|<=)\\s*(?P<version>[A-Za-z0-9\\._\\-]+)(?:\\s*,\\s*[<>=!]+\\s*[a-z0-9\\.]+)?)?
(?P<pad>[=]*)$
(?P<pais>.*)
(?P<param>[^:\\(\\)/]*)
(?P<param>{{.+?}})
(?P<parent_residue_index>\\d+)\n    (?P<parent_atom_replaced>[odhnx])\n    \\((?P<parent_attachment_position>-?[0-9\\-\\|]+)[\\+\\-]\n        (?P<child_attachment_position>-?[0-9\\-\\|]+)\\)\n    (?P<child_residue_index>\\d+)\n    (?P<child_atom_replaced>[odhnx])\n    
(?P<part_prefix>\\D+)(?P<number>\\d+)
(?P<passwd>assword:\\s*$)
(?P<path_parts>(?:\\w+/)+)(?P<file_part>.*?)\\.class
(?P<path>.+)\\[(?P<start>\\d+)\\.\\.(?P<end>\\d+)\\;(?P<padding>\\d+)].(?P<extension>\\w{3})
(?P<path>[^;]+);(?P<file>[^;]+);(?P<line>[^;]+);(?P<name>[^;]+);(?P<goname>[^;]+);
(?P<path>\\S+) \\s+ \\((?P<address>0x[0-9a-f]+)\\)
(?P<PCKT>\\d+)\\s+(?P<GROUP>packets captured|packets received by filter|packets dropped by kernel)
(?P<people_helped>[0-9]+) of (?P<people_total>[0-9]+)
(?P<people>[0-9]+) people
(?P<pep>\\d+)(?P<anchor>#[^$]+)?
(?P<photo_id>\\S+)(?:\\s+(?P<size>large|medium|small))?(?:\\s+(['\"]{0,1})(?P<alt>.+)(\\3))?
(?P<pid_clone>\\d+)\\s+(clone|fork|vfork)\\(.*\\)\\s*=\\s*(?P<pid>\\d*)
(?P<pid>\\d+)(?P<body>.*)<unfinished ...>$
(?P<pid>\\d+)\\s+\\<\\.\\.\\..*\\>(?P<body>.*)
(?P<pid>\\d+)\\s+creat\\(\"(?P<name>[^\"]*)\", .*
(?P<pid>\\d+)\\s+execve\\(\"(?P<name>[^\"]*)\", .*
(?P<pid>\\d+)\\s+exit_group\\((?P<status>.*)\\).*
(?P<pid>\\d+)\\s+chdir\\(\"(?P<cwd>[^\"]*)\"\\)
(?P<pid>\\d+)\\s+killed by.*
(?P<pid>\\d+)\\s+l?stat(?:64)?\\(\"(?P<name>[^\"]*)\", .*
(?P<pid>\\d+)\\s+mkdir\\(\"(?P<name>[^\"]*)\", .*\\)\\s*=\\s(?P<result>-?[0-9]*).*
(?P<pid>\\d+)\\s+open\\(\"(?P<name>[^\"]*)\", (?P<mode>[^,)]*)
(?P<pid>\\d+)\\s+rename\\(\"[^\"]*\", \"(?P<name>[^\"]*)\"\\)
(?P<pid>\\d+)\\s+symlink\\(\"[^\"]*\", \"(?P<name>[^\"]*)\"\\)
(?P<pkg>.*?)-(?P<rest>\\d+.*)
(?P<PKTS_TRANS>\\d+) packets transmitted, (?P<PKTS_RECV>\\d+) received, (?P<PKT_LOSS>\\S+)% packet loss, time (?P<TIME>\\S+)
(?P<placeholder>[:][a-zA-Z0-9_]+)
(?P<platform>ALOS2)
(?P<platform>Android|CrOS|iPhone|iPad|Linux|Macintosh|Windows(\\ Phone\\ OS)?|Silk|linux-gnu|BlackBerry|Nintendo\\ (WiiU?|3DS)|Xbox)\n                (?:\\ [^;]*)?\n                (?:;|$)
(?P<platform>SENTINEL_1A)
(?P<pname>^/.*) : .* Id=(?P<ptypeid>[0-9a-z]+)
(?P<pre>^.+?(?:Sc\\d{3}_S\\d{4}\\.\\d{2})?\\D*)(?P<frame>\\d+)(?P<post>\\D*\\.[A-Za-z0-9]+?$)
(?P<pre>^.+?)\\[(?P<start>\\d+)(?P<separator>[^\\da-zA-Z]?)(?P<end>\\d+)\\](?P<post>\\.[A-Za-z0-9]+?$)
(?P<pred>[^ <:.]+)(?: < (?P<supertypes>[^ &:.]+(?: & [^ &:.]+)*))?(?: : (?P<synposis>.*[^ .]))?\\s*\\.\\s*$
(?P<prefix_name>^.*?)/subscription/Identity[^/]+
(?P<prefix>(?:lua)?(?P<jit>jit)?)(?P<version>.+)
(?P<prefix>.*?)(Settings)?$
(?P<prefix>.*?)wiki-(?P<date>\\d{8})-pages-articles.xml
(?P<PREFIX>.*\\D)(?P<NUMBER>\\d+)\\.(?P<SUFFIX>pdb)
(?P<prefix>[^/.]*)\\.(?P<ext>.*)$
(?P<prefix>[^0-9]+)(?P<number>\\d+)(?P<suffix>.*).?
(?P<prefix>[|+ ]*)(?P<samples>\\d+), (?P<symbol>[^,]+), (?P<image>.*)
(?P<prefix>[+-])(?P<hours>[0-9]{2}).(?P<minutes>[0-9]{2})
(?P<prefix>[A-Z]+)\\d+
(?P<prefix>\\)|\\])(?P<default>\\s*|\\s*default\\s*)values(?P<suffix>\\s*|\\s+\\()?
(?P<prefix>\\*sync\\*/\\S+/)(?P<account>\\S+)
(?P<prefix>\\D*)(?P<chr>[\\d|C|M]+)$
(?P<prefix>^| |\t)#(?P<ref>[\\w\\d\\._]+)(?P<parens>\\(\\))?
(?P<prefix>^|[\n (])(?P<element>(www|ftp)\\.[\\w\\-]+\\.[\\w\\-.\\~]+(?:/[^ \"\t\n\r<]*)?)
(?P<prefix>^|[^\\w\\)\\]])\\.(?P<value>\\w[\\w\\.]*)?
(?P<prefix>^test)
(?P<prefixsize>\\d+):(?P<totalsize>\\d+)\\n(?P<prefixes>.+)
(?P<prev_comm>\\S.*):(?P<prev_pid>\\d+) \\[(?P<prev_prio>\\d+)\\] (?P<status>\\S+) ==> (?P<next_comm>\\S.*):(?P<next_pid>\\d+) \\[(?P<next_prio>\\d+)\\]
(?P<price>[$\u00a3][\\d,\\.]+)
(?P<primary>\\*?)(?P<name>[^\\s]+)\\s*(\\{label:\\s*\"(?P<label>[^\"]+)\"\\})?
(?P<primary>primary )?(?P<geometry>[\\dx\\+]+) (?:(?P<rotate>\\w+) )?.*?(?:panning (?P<panning>[\\dx\\+]+))?$
(?P<prio>\\d+)\\s+(?P<exchange>.+)
(?P<prio>\\d+)\\s+(?P<weight>\\d+)\\s+(?P<port>\\d+)\\s+(?P<target>.+)
(?P<Priority>[A-Z]+): 
(?P<PrivatePort>\\d+(-\\d+)?)\\/(?P<Type>\\w+)
(?P<profile>\\@\\S+)
(?P<project_id>\\d+)/\\d+/\\d+
(?P<project>[^\\s:]+):\\s(?P<task>.*)
(?P<ProjectName>.*?)_(?P<ProjectVersion>.*?)_index
(?P<projnm>[^\\.]+)\\.(?P<field>(?:ut|vz|vx)[ifoOesrcbt]+)(?P<freq>[0-9]*\\.?[0-9]+).*$
(?P<properties>((\\w+)(,\\w+)*)?)(:(?P<field>(\\w+)?))?(:(?P<srid>(\\d+)?))?
(?P<property>[\\w-]+):\\s*(?P<value>[\\w-]+);
(?P<property>margin(-(top|bottom|left|right))?|float)\n        :\n        (?P<value>.*?)\n        (?P<terminator>$|;)
(?P<proto>.+)://(?P<addr>.+):(?P<port>.+)$
(?P<proto>\\S+)\\s+(?P<num>\\d+)
(?P<proto>inproc|ipc|tcp|pgm|epgm)://(?P<address>.*)$
(?P<proto>tcp|udp|icmp)(:(?P<port>\\d+|\\*))?
(?P<proto>unix://|tcp://)(?P<addr>[^:]+):*(?P<port>[0-9]*)$
(?P<protocol>[^:]+):(?P<mime>[^;]+);(?P<encoding>[^,]+),(?P<data>.*)
(?P<protocol>[a-z]+)://(?P<urlpart>.*)
(?P<protocol>[Pp][Yy][Rr][Oo][a-zA-Z]*):(?P<object>\\S+?)(@(?P<location>\\S+))?$
(?P<protocol>http|https)\\+(?P<format>virtualhost|path|subdomain)
(?P<protocol>https?):\\/\\/(?P<url>.+?)(:(?P<port>\\d+\\/)|\\/)$
(?P<q>[\"'])(?P<url>(https?:)?//[^'\"]*?/live/hls/[^'\"]*?\\?token=)\n                                   (?P<token>[^'\"]*?)(?P=q)
(?P<q>[\"'])(?P<url>http[^\"']+?.f4m)(?P=q),
(?P<q>[\"'])(?P<url>http[^\"']+?.f4m)(?P=q);
(?P<q>[\"'])(?P<url>http[^\"']+?.m3u8)(?P=q),
(?P<q>[\"'])(?P<url>http[^\"']+?.m3u8)(?P=q);
(?P<q>[\"'])embedURL(?P=q)\\s*:\\s*(?P<q2>[\"'])(?P<url>.*?)(?P=q2)
(?P<q1>[\"']?)file(?P=q1)\\s*:\\s*(?P<q2>[\"'])(?P<url>(?:http.+?m3u8.*?|rtmp://.*?))(?P=q2)
(?P<qs>[\\+\\-]?)(?P<gs>[\\+\\-])
(?P<quantity>[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)\\W*(?P<unit>.*)
(?P<queryString>[a-zA-Z:0-9\\-]+)/(?P<filename>[a-zA-Z0-9\\-_\\./]+)$
(?P<quote_type>'''|\"\"\"|'|\").*
(?P<quote>[.?!])\\s?'
(?P<quote>[.?!])\\s?\"
(?P<quote>[.?!])\\s?'\"
'(?P<quote>[.?!])\\s?\"
(?P<quote>[.?!])\\s?\u201d
'(?P<quote>[.?!])\\s?\u201d
(?P<quote>[\"']?)channel(?P=quote)\\s*:\\s*(?P<data>{.*?})\\s*,
(?P<range>\\d+)(@(?P<offset>.+))?
(?P<realm>Client|Server): &version.Version.SemVer:\"(?P<semver>.*?)\".*?GitCommit:\"(?P<commit>.*?)\".*?GitTreeState:\"(?P<treestate>.*?)\"
(?P<realTag>@\\w+)(?P<separator>$|\\(|\\\\|\\s)
(?P<ref>[^:^]+)(?P<parents>[\\^]+)?(?:[:](?P<path>.+))?
(?P<referred_table>.+)?\\.\\[(?P<referred_columns>.+)?]
(?P<region>[+-]?(?:ann(?=\\s))?\\s*[a-z]+?\\[[^=]+\\])(?:\\s*[,]\\s*(?P<parameters>.*))?
(?P<registry>([a-z][a-z0-9.-]+|(\\d+\\.){3}\\d+)(:\\d+)?)/(?P<repo_path>[^:]+)(:(?P<repo_tag>.+))?
(?P<relation>\\([^)]+\\))|(?P<prop>[a-zA-Z0-9_]+)
(?P<release>.*)_(?P<package>.*): (?P<status>[^\\s]*)( \\(+(?P<note>[^()]*)\\)+)?
(?P<remote_url>(?:.*?)(?:/|:))*(?P<team_name>[^/]+)/(?P<project_name>[^/]+?)(?:\\.git)?$
(?P<replace>(?P<type>[\\^](?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))
(?P<replace>(?P<type><(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))
(?P<replace>(?P<type>>(?:(?:!?@?)|\\|)?)(?P<command_string>[-a-zA-Z0-9_.]+)?\\((?P<is_array>\\s*\\[?)(?P<content>.*?)(\\]?)\\))
(?P<replace>cid:(?P<cid>.+))
(?P<repo>\\S+?) to (?P<environment>\\S+?)$
(?P<repo>\\S+?) to (?P<environment>\\S+?)(!)?$
(?P<repoPath>.*)/(?P<serviceType>git-receive-pack)$
(?P<repoPath>.*)/(?P<serviceType>git-upload-pack)$
(?P<repoPath>.*)/HEAD$
(?P<repoPath>.*)/info/packs$
(?P<repoPath>.*)/info/refs$
(?P<repoPath>.*)/objects/[0-9a-f]{2}/[0-9a-f]{38}$
(?P<repoPath>.*)/objects/info/alternates$
(?P<repoPath>.*)/objects/info/http-alternates$
(?P<repoPath>.*)/objects/pack/pack-[0-9a-f]{40}\\\\.idx$
(?P<repoPath>.*)/objects/pack/pack-[0-9a-f]{40}\\\\.pack$
(?P<repository>.+/)(?P<image>[^:]+)(?P<tag>:.+)
(?P<repository>[a-zA-Z0-9-]*)\\.(?P<domain>[a-zA-Z0-9-.]*)$
(?P<requestid>requestid:\\s*|requestid:\\t)?(?P<method>method:\\t|method:\\s*)?(?P<result>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d+|\\d+|\\w+)
(?P<required>[_]{1,2})(?P<name>[^_]+)_?(?P<type>[a-zA-Z0-9]+)?_?(?P<userdefined>[a-zA-Z0-9]+)?.*$
(?P<RESEND>Permission\\sdenied,\\splease\\stry\\sagain)
(?P<resolution>720[Pp]|1080[Pp]|HR)
(?P<resource><.+?>)?\\s*\\((?P<listitem>[^)]+)\\)
(?P<rev>\\d+)_(?P<name>.*)\\.py$
(?P<revision>\\d+)
(?P<revIter>\\d*)(?P<name>.+)
(?P<role>[^ :]+) : (?P<value>[^ .]+)\\s*\\.\\s*$
(?P<root_url>https?://.*?/).*
(?P<root>https?://.*?/).*
(?P<ROOT>Root Delay):\\s+(?P<DELAY>\\S+),\\s+(?P<ROOT_2>Root dispersion):\\s+(?P<DISPERSION>\\S+),\\s+(?P<REF>Reference-ID):\\s+(?P<ID>\\S+)
(?P<SAVED>\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\s\\(\\d+.\\d+\\s\\w{2}/s\\)\\s-\\s.*)
(?P<score>\\d+) DMIPS
(?P<season>\\d+)_(?P<episode>\\d+)_(?P<video_id>\\d+)_(?P<title>.*?)_(?P<air_date>\\d+/\\d+/\\d+)
(?P<SEC_ASS>^Security Associations)
(?P<seconds>[0-9]+) second(s)? ago
(?P<seconds>\\d{2})(\\.(?P<microseconds>\\d{3,6}))?$
(?P<section>.+) \"(?P<subsection>.+)\"$
(?P<section>[A-Za-z0-9:_]+)\\.(?P<parameter>[A-Za-z0-9:_]+)\\s*=\\s*(?P<value>-?[A-Za-z0-9_\\.\\,]+)
(?P<seeders>[\\d]+) seeder\\(s\\), (?P<leechers>[\\d]+) leecher\\(s\\), (?P<downloads>[\\d]+) download\\(s\\) - (?P<size>[\\d\\.]+) (?P<format>[\\w]+)
(?P<seg_name>\\w*~?)[ \t]+(?P<seg_len>\\d+)
(?P<selector>[^{]+)(\\{)(?P<rules>[^}]+)\\}
(?P<sensor>LC08|LE07|LT04|LT05)_(?P<pathrow>\\d{6})_(?P<date>\\d{8})
(?P<sensor>LC8|LE7|LT5|LT4)(?P<pathrow>\\d{6})(?P<date>\\d{7})
(?P<sep>('|\"))(?P<url>.+?)(?P=sep)
(?P<separator>[^a-zA-Z0-9_{}])+(?P<part>[a-zA-Z0-9_{}]*)
(?P<sequence>\\d+)\\.proto[\\\\.]?$
(?P<settings_section>\\[Network\\][^\\[\\0]+)
(?P<shell>%|#\\s*$)
(?P<shortcode>(?:(?:\\s?\\[))(?P<name>[\\w\\-]{3,})(?:\\s(?P<attributes>[\\w\\d,\\s=\\\"\\'\\-\\+\\#\\%\\!\\~\\`\\&\\.\\s\\:\\/\\?\\|]+))?(?:\\])(?:(?P<content>[\\w\\d\\,\\!\\@\\#\\$\\%\\^\\&\\*\\(\\\\)\\s\\=\\\"\\'\\-\\+\\&\\.\\s\\:\\/\\?\\|\\<\\>]+)(?:\\[\\/[\\w\\-\\_]+\\]))?)
(?P<shortcode>\\S+)(?:\\s+(?P<size>[tml]?))?(?:\\s+(?P<width>\\d*))?(?:\\s+(?P<class>[^']*))?(?P<title>.+)?
(?P<schema>.+)://.*
(?P<scheme>.*?)://((?P<username>.*):(?P<password>.*)@)?(?P<host_port>.*)
(?P<scheme>[^?#/)]+://)?(?P<host>[^?#/)]+)
(?P<scheme>[a-z]+) (?P<token>.*)$
(?P<scheme>[https]+)://(?P<host>[^/:]+)(?::(?P<port>\\d+))?(?:(?P<prefix>/\\w+))?
(?P<scheme>^data):(?P<mimetypes>[^,]{0,}?)?(?P<encoding>base64)?,(?P<data>.*$)
(?P<scheme>http(?:s)?)://(?P<host>.*)
(?P<scheme>https?)://(?P<client_id>[0-9a-f]+):[0-9a-f]+@(?P<domain>.+)/(?P<site_id>\\d+)
(?P<scheme>https?)://(?P<subdomain>\\w+)\\.?euronews.com/(?P<path>live|.*)
(?P<scheme>stun|stuns)\\:(?P<host>[^?:]+)(\\:(?P<port>[0-9]+?))?
(?P<scheme>turn|turns)\\:(?P<host>[^?:]+)(\\:(?P<port>[0-9]+?))?(\\?transport=(?P<transport>.*))?
(?P<sid>(view)?story\\.php\\?(sid|psid|no|story|stid)=\\d+)
(?P<sign>[ \\-+])\\s+(?P<det>[a-zA-Z]+)(?P<lay>\\d+)\\D*?(\\((?P<missing>missing|inactive)\\))?\\s+\\d+
(?P<sign>[+-])(?P<hours>[0-9][0-9]):(?P<minutes>[0-9][0-9])
(?P<signal>[+-]?)(?P<relative>[\\d]?)(?P<weekday>[\\w]{2})$
(?P<siteID>\\d+)-(?P<divisionID>\\d+)-(?P<userID>\\d+)-(?P<accountNumber>\\d+)
(?P<size>[\\d.,]+)\\s*(?P<unit>[a-z]*)
(?P<size>[0-9/.]+)\\s+(?P<plated>P|N)\\s+T(?P<toolid>[0-9]{2})\\s+(?P<xtol>[0-9/.]+)\\s+(?P<ytol>[0-9/.]+)
(?P<size>[0-9]+)*(?P<code>\\w)
(?P<size>\\d+)(?P<unit>.B)?$
(?P<size>\\d+\\.*\\d*)(?P<unit>.*)
(?P<solver>.+)_(?P<rank>\\d+)_(?P<entity>.+)_(?P<time>[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?).npz
(?P<source_filename>.+)_(?P<x>\\d+)x(?P<y>\\d+)(?:_(?P<options>\\w+))?_q(?P<quality>\\d+)(?:.[^.]+)?$
(?P<source>[^()]*)(\\s+\\((?P<key>.*)\\))?$
(?P<space>[\\t ]*)\\*\\s*\\[(?P<title>[^\\]]+)\\]\\((?P<mdFileName>[^\\)]+)\\)
(?P<space>\\s)(?P<ref>#\\d+\\w)
(?P<space>\\S+)\\s+(?P<vol>\\S+)\\s+(?P<vg>\\S+)\\s+(?P<size>\\d+)MB
(?P<spacer>(?:,|\\/)\\s*)(?P<suffix>[\\w\\-]+)
(?P<spacing>^|\\s+)(?::(?P<domain>[^:`<>]+))?:(?P<role>[^:`]*):`(?P<argument>[^`<>]+)(?: +<(?P<pointer>[^`]+)>)?`
(?P<SRC>\\S+)\\s+>\\s+(?P<DST>\\S+):\\s+(?P<DETAILS>\\S+.*\\S+)
(?P<SSH_ERROR>ssh:.+)
-(?P<stability>\\w+)\\d+$
(?P<stamp>[\\d-]*)_hello
(?P<start_brace>\\$\\{).*
(?P<start_brace>\\(|\\{|\\[).*
(?P<start_brace>\\{).*
(?P<start_xml>([^<]|\n)*?\\<\\?xml[^>]*)(?P<encoding>encoding=.*?)(?P<remainder>(\\s|\\?\\>)(.|\n)*)
(?P<start># rhos-release )(?P<release>\\d+)\\s*(?P<director>-director)?\\s*(?P<poodle>-d)?\\s*(-p (?P<version>\\S*))?
(?P<start>(?:-\\d)?\\d*):(?P<end>(?:-\\d)?\\d*):?(?P<step>(?:-\\d)?\\d*)
(?P<start>(\\d+))-(?P<end>(\\d+))
(?P<start>(\\d+)|\\*)(-(?P<end>\\d+))?(/(?P<step>\\d+))?
(?P<start>.*[R|r]an in\\s)\\d+\\.?\\d*.*(?P<end>seconds.*)
(?P<start>.*took\\s*)\\d+\\.?\\d*.*(?P<seconds>seconds.*)\\d+\\s(?P<end>garbage objects.*)
(?P<start>.?)#(?P<hashtag>[A-Za-z0-9_]+)(?P<end>.?)
(?P<start>.?)@(?P<user>[A-Za-z0-9_]+)(?P<end>.?)
(?P<start>.+)\\s+(-)\\s+(?P<stop>.+)
(?P<start>[0-9]+(?:\\.[0-9]*)?)(?:(?P<range>-)(?P<end>[0-9]+(?:\\.[0-9]*)?)?)?(?P<unit>%)?
(?P<start>\\d{1,2}:\\d{1,2}:\\d{1,2})\\s*-(?P<end>\\s*\\d{1,2}:\\d{1,2}:\\d{1,2})
(?P<start>\\d+)(?:-(?P<stop>\\d+)(?::(?P<num>\\d+)(:?(?P<log>log)(:?(?P<base>\\d+))?)?)?)?
(?P<start>\\d+):(?P<end>\\d|\\*)
(?P<start>^)?[:.\\s]*(?(start)|$)
(?P<start>0x[0-9a-z]+)\\s*-\\s*(?P<end>0x[0-9a-z]+)\\s+is\\s+(?P<section>[^\\s]+)
(?P<start>Attempting to get lock for plugin .*with lock path) \\\".*\\\".*(?P<id> and identifier).*(?P<in> in) \\d\\.?\\d*(?P<seconds> seconds)
(?P<start>Installed: )(?P<filename>\\S+)
(?P<statement>CREATE UNIQUE INDEX)\\s+(?P<index>[\\w-]+)\\s+ON\\s+(?P<table>[\\w-]+)\\s*\\((?P<column>[\\w-]+(?:\\s*\\((?P<size>\\d+)\\))?)\\);
(?P<status>[A-Z]+): Processed (?P<job_spec>[\\s\\S]*)
(?P<status>[A-Za-z]+)(  at (?P<episodes>[0-9]+) of (?P<total_episodes>[0-9]+))?
(?P<status>complaints)
(?P<status>pending|terminated)\\s+counts
(?P<string>\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|\\'[^ \\\\]*(?:\\\\.[^ \\\\]*)*)|(?P<axis>[<:][^/]*/(?:[HN]?EQ|H)(?:&[^/]*/(?:[HN]?EQ|H))*[:>])|(?P<symbol>[^\\s#:><@=()\\[\\]&|]+)|(?P<nodeid>#\\d+)|(?P<punc>[@=()\\[\\]&|])
(?P<struct>C_STRUCT\\s|C_ENUM\\s|)(?P<type>\\w+\\s?\\w+?[*]*)\\s(?P<name>\\w+|[a-z0-9_, ]+)(:?\\[(?P<index>\\w+)\\])?;
(?P<subject>[^\\n]+)(:?\\n\\n(?P<text>.+))?
(?P<SUM>[\\da-f]{32})\\s+(?P<FILE>\\S+)
(?P<sup>^\\^?)(?P<open>[<({\\[]?)(?P<href>#?)(?P<style>1)(?P<ranging>-?)(?P<separator>[^-]+)
(?P<t>\\S+)(?P<d>\\s+(?:.|\\s)*)
(?P<t>\\S+)\\s+\\$(?P<name>\\S+)(?P<d>\\s+(?:[\\w\\W_\\s]*))?
(?P<table>.*?)\\.(?P<field>.*?)\\..*
(?P<table>[\\w\\-]+)\\.(?P<field>[\\w\\-]+)\\.(?P<uuidkey>[\\w\\-]+)(\\.(?P<name>\\w+))?\\.\\w+$
(?P<table>[\\w\\-]+)\\.(?P<field>[\\w\\-]+)\\.(?P<uuidkey>[\\w\\-]+)\\.(?P<name>\\w+)\\.\\w+$
(?P<table>[^:]+)?(:(?P<cols>.+))?$
(?P<tag>(?:-p|-b)).m3u8
(?P<tag>.+)\\s+\\d+:.+$
(?P<tag>[^-]+)-(?P<val>.*?)__
(?P<tag><\\/[a-z]+)$
(?P<target>[[:alnum:]]+.[[:alnum:]]+)
(?P<TASK_ROW>Tasks):\\s*(?P<TOTAL>\\d*)\\s*total,\\s*(?P<RUN>\\d*)\\s*running,\\s*(?P<SLEEP>\\d*)\\s*sleeping,\\s*(?P<STOP>\\d*)\\s*stopped, \\s*(?P<ZOMBIE>\\d*)\\s*zombie
(?P<temperature>-?\\d+)
(?P<template_head> [\\s\\S]* {% \\s* extends \\s* \\S+ \\s* %} )
(?P<template>.*?)\\.[a-z0-9]+$
(?P<test_id>[0-9]+$)
(?P<text>(?P<path>/[\\w\\d\\/\\.]+):|\",[\\s\\w]+(?P<line>\\d+))
(?P<text>[a-zA-Z\\s]*?)\\s*\\(?(?P<low>[\\d.]+)\\s*[-\u2013]\\s*(?P<high>[\\d.]+).*?\\)?
(?P<text>[a-zA-Z\\s]*?)\\s*\\(?(?P<symbol>[<>=]+)\\s*(?P<value>[\\d.]+).*?\\)?
(?P<textb>.*)(\\[(?P<text>.*?)\\]\\((?P<url>.*?)\\))(?P<texta>.*)
(?P<time>[^ ]*\\s*[^ ]* [^ ]*) (?P<host>[^ ]*) (?P<ident>[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?P<pid>[0-9]+)\\])?(?:[^\\:]*\\:)? *(?P<message>.*)$
(?P<TIME>\\S+)\\s+(?P<CPU>\\S+)\\s+(?P<USR>\\d+.\\d+)\\s+(?P<NICE>\\d+.\\d+)\\s+(?P<SYS>\\d+.\\d+)\\s+(?P<IOWAIT>\\d+.\\d+)\\s+(?P<IRQ>\\d+.\\d+)\\s+(?P<SOFT>\\d+.\\d+)\\s+(?P<STEAL>\\d+.\\d+)\\s+(?P<GUEST>\\d+.\\d+)\\s+(?P<IDLE>\\d+.\\d+)$
(?P<TIMESTAMP_HEADER>\\S+.*\\S+\\s+Timestamp):\\s+(?P<DETAILS>\\S+.*\\S+)
(?P<timestamp>[0-9]{2}:[0-9]{2}:[0-9]{2}((Z|\\+|\\-)([0-9]{2}:[0-9]{2})?)?)
(?P<timestamp>\\d{2}/\\d{2}/\\d{2}-\\d{2}:\\d{2}:\\d{2}\\.\\d+)\\s+\\[\\*\\*\\]\\s+\\[\\d+:(?P<sid>\\d+):(?P<revision>\\d+)\\] (?P<message>.+) \\[\\*\\*\\]\\s+(\\[Classification: (?P<classtype>.+)\\] ){0,1}\\[Priority: (?P<priority>\\d+)\\] \\{(?P<protocol>\\w+)\\} (?P<src>.+) \\-\\> (?P<dest>.+)
(?P<timestamp>\\d{2}/\\d{2}/\\d{4}-\\d{2}:\\d{2}:\\d{2}\\.\\d+)\\s+\\[\\*\\*\\]\\s+\\[\\d+:(?P<sid>\\d+):(?P<revision>\\d+)\\] (?P<message>.+) \\[\\*\\*\\]\\s+(\\[Classification: (?P<classtype>.+)\\] ){0,1}\\[Priority: (?P<priority>\\d+)\\] \\{(?P<protocol>\\w+)\\} (?P<src>.+) \\-\\> (?P<dest>.+)
(?P<timestamp>\\d{4}-\\d\\d-\\d\\d\\ \\d\\d:\\d\\d:\\d\\d.\\d+)\\|\\ *(?P<level>\\w+)\\ *\\|\\ *(?P<component>\\w+)\\ *\\|\\ *(?P<sid>\\d+)\\ *\\|\\ *(?P<message>.*)
(?P<TIMESTAMP>\\d+:\\d+:\\d+.\\d+)\\s+IP\\s+(?P<SRC>\\S+)\\s+>\\s+(?P<DEST>\\S+):\\s+(?P<DETAILS>.*)
(?P<TIMESTAMP>\\d+:\\d+:\\d+.\\d+)\\s+IP\\s+\\(tos\\s+(?P<TOS>\\S+),\\s+ttl\\s+(?P<TTL>\\S+),\\s+id\\s+(?P<ID>\\S+),\\s+offset\\s+(?P<OFFSET>\\S+),\\s+flags\\s+(?P<FLAGS>\\S+),\\s+proto\\s+(?P<PROTO>\\S+.*\\S+),\\s+length\\s+(?P<LENGTH>\\S+)\\)
(?P<title>(Rep|Sen))\\. (?P<name>.*?) +\\[(?P<party>[DRI])-(?P<state>[A-Z][A-Z])(-(?P<district>\\d{1,2}|At Large|None))?\\]$
(?P<title>.+) (\\((class in )?(?P<id>[\\w\\.]+)( (?P<descr>\\w+))?\\))$
(?P<title>[^#]+)(?:[#]+(?P<index>\\d+))?
'(?P<title>[^']+)'\\s+\\((?P<year>\\d{2})\\)
'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})?\\)
'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)
(?P<title>[A-Z][a-z]{1,3})(\\.)
(?P<token>([Dd]a|[Ee])s)/(?P<annotation>[anpr])(?P<uncertain>\\??)
(?P<TOP_ROW>.*)\\s-\\s(?P<TIME>\\d*:\\d*:\\d*)\\sup\\s(?P<UP_TIME>.*,.*),\\s*(?P<USERS>.*)user.*load average:(?P<LOAD_AVE> .*)
(?P<topic>[a-zA-Z0-9\\\\._\\\\-]+)\\s+(?P<partitionId>\\d+|-)\\s+(?P<currentOffset>\\d+|-)\\s+(\\d+|-)\\s+(?P<lag>\\d+|-)\\s+(?P<consumerId>[^/\\s]+)\\s*/?(?P<consumerAddress>\\S+)\\s+(?P<clientId>\\S+)
(?P<track_url>https?://soundcloud.com/[\\S]+)
(?P<trad>.+?) (?P<simp>.+?) \\[(?P<pinyin>.+?)\\] /(?P<defs>.+)/
(?P<trad>\\S*?) (?P<simp>\\S*?) \\[(?P<pinyin>.+)\\] \\/(?P<defs>.+)\\/
(?P<trapname>\\S+) (?P<trapseverity>\\S+) \"Status Events\" (?P<source_host>\\S+) - (?P<trappayload>.*)
(?P<ts>\\d+);(?P<token>\\d+);(?P<lifetime>\\d+)
(?P<type>.*):\\s+(?P<val>.*)
(?P<type>[\\w\\s\\d\\*]+)\\s(?P<name>[\\w\\d]+)$
(?P<type>[^ <.]+)(?: < (?P<supertypes>[^ &.]+(?: & [^ &.]+)*))?\\s*\\.\\s*$
(?P<type>[A-Z^']+) (?P<route>[^']+) HTTP/(?P<http>[^']+)
(?P<type>[a-zA-Z\\ \\-]+):
--(?P<type>[a-zA-Z]+)-- (?P<contents>.*)
(?P<type>\\S+):\\s+(?P<size>[0-9]+)
(?P<type>\\w+)($|\\((?P<length>(\\d+|(.*)))\\))
(?P<type>\\w+)(?:\\((?P<length>[\\d,]+)\\))?
(?P<type>\\w+)/(?P<year>\\d+)-(?P<ordinal>\\d+)
(?P<type>\\w+)/(?P<year>\\d+)_not_(?P<ordinal>\\d+)
(?P<type>\\w+):\\s+(\\d+):(?P<line>\\d+):\\s+(?P<description>.*)
(?P<type>\\w+)\\.stat_(?P<number>\\d+)
(?P<type>\\w+)\\s?(?P<class>\\w+)?
(?P<type>c|a)(?P<id>\\d+)
(?P<type>feat|fix|docs|style|refactor|test|chore)(?:\\((?P<scope>[\\w _\\-]+)\\))?: (?P<subject>[^\\n]+)(:?\\n\\n(?P<text>.+))?
(?P<type>Chapter|Special) (?P<num>[0-9\\.]+)(?:$|\\: )(?P<title>.*)
(?P<type>rpc|rest)
(?P<TYPE>RX|TX)
(?P<unit>[\\w]+)\\s+(?P<first>\\d+)-(?P<last>\\d+)\\/(?P<length>\\d+|\\*)
(?P<unsupported> \\.)? (?P<match> ((?P<scope> (\\w+\\.)* \\w+) \\.)? (?P<complete>\\w*) $)
(?P<upper_letter>(?<=[a-z])[A-Z])
(?P<uri>[a-zA-Z0-9-./]+?).md#(?P<anchor>[a-zA-Z0-9-]+)
(?P<url_base>https?.*)/
(?P<url_chars>.*)(?P<tag><\\/[a-z]+)$
(?P<url>.*/)[-\\w\\.]+/?$
(?P<url>.*?),? (?P<size>[0-9]+(\\.[0-9]+)?[wx],?)?\\s?
(?P<url>.+?)\\|(?P<width>.+?)\\|(?<height>\\d+)
(?P<url>/invitations/[^\\s]+)
(?P<url>\\S*)\\s(?P<ip_address>\\S*)\\s(?P<date>\\S*)\\s(?P<content_type>\\S*)\\s(?P<length>\\S*)
(?P<url>\\S*)\\s(?P<ip_address>\\S*)\\s(?P<date>\\S*)\\s(?P<content_type>\\S*)\\s(?P<result_code>\\S*)\\s(?P<checksum>\\S*)\\s(?P<location>\\S*)\\s(?P<offset>\\S*)\\s(?P<filename>\\S*)\\s(?P<length>\\S*)
(?P<url>^.*\\])(?!=)(?P<end>.*?)$
(?P<url>^.*\\])(?P<tight>\\[.*?)$
(?P<url>http://[0-9a-z:/@-]+)(?=\n)
(?P<url>http://[0-9a-zA-Z\\-\\.]*/\n                            (lokad|opid)\n                            /\n                            ([0-9]+/[0-9][0-9]/[0-9][0-9]/)?\n                            ([A-Z0-9\\$_]+\\.mp4\\.m3u8)\n                            )\n                         
(?P<url>http[s]?://[\\w./~_-]+\\.git)(?:@(?P<branch>[\\w_-]+))?
(?P<url>https?://[^\\s;]+)
(?P<url>https?://[^\\s]+)
(?P<url>https?://[^\\s]+\\.gif+)
(?P<url>rtmp://[^/]+/[^/]+)/(?P<playpath>[^?]+)(?P<auth>\\?.+)
(?P<url>rtmpe?://[^/]+)/(?P<app>.+)/(?P<playpath>mp4:.*)
(?P<url>screen\\.yahoo\\.com/.*?-\\d*?\\.html)\"
(?P<url>www[^\\s]+)
(?P<USER_HOST>.*)\\spassword:
(?P<user>.*?)@(?P<host>.*?):(?P<path>.*)
(?P<user>[^@]+)@(?P<host>[^:]+)(?P<port>:.*)?
(?P<user>[a-z_][a-z0-9_-]*)           # ALWAYS start with the username\n       (?::(?P<file>/(?:\\\\:|[^:])+))?        # File is next if it's :/path\n       (?::(?P<uid>\\d*))?                    # Either /uid or :uid introduces a uid (number may be missing)\n       (?::(?P<gid>[a-z_][a-z0-9_-]*|\\d+)?)? # followed by an optional GID\n       $
(?P<user>[a-zA-Z0-9-]+@)*(?P<hostname>[a-zA-Z0-9.-]+)(?P<path>[a-zA-Z0-9./-]+)
(?P<User>\\S+)\\s*$
(?P<v1>cd)(?P<v2>ef)
(?P<v6>.*):(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$
(?P<val_1>\\S+)\\s+(?P<val_2>\\S+)\\s+(?P<val_3>\\S+)\\s+(?P<val_4>\\S+)\\s+(?P<val_5>\\S+)\\s+(?P<val_6>\\S+)\\s+(?P<val_7>\\S+)\\s+(?P<val_8>\\S+)
(?P<val>\\d+.?\\d+)\\s+MW
(?P<value>(?:[-+]?[0-9]*\\.[0-9]+|[-+]?[0-9]+%?))
(?P<value>.+?)\\s*\\<(?P<name>.+)\\>
(?P<value>[+-]?(?:\\d+)(?:\\.\\d+)?)\\s*(?P<unit>\\D+)?
(?P<value>\\d*) \\((?P<percent>.*)%\\)
(?P<value>\\d*)(?P<unit>\\w*)
(?P<value>\\d+)(?P<unit>\\D+)?
(?P<value>\\d+)(?P<unit>pt|px)
(?P<value>\\d+)(?P<units>[a-z])
(?P<value>\\d+)\\s*(?P<units>[a-zA-Z%]+)?
(?P<value>\n                             [+-]?         # optional sign\n                             \\d*\\.?\\d+     # integer or float value\n                           )\n                           \\s*             # optional space between value & unit\n                           (?P<unit>\n                             [a-z%/0-9]*   # unit (can be an empty string)\n                           )\n                       
(?P<VALUE>\\S+)
(?P<var>.*),\\s+\"(?P<value>.*)\"
(?P<var>[\\w.]+)=\\s*(?P<value>.+)?
(?P<var>[^ <:.]+)(?: < (?P<supertypes>[^ &:.]+(?: & [^ &:.]+)*))?(?: : (?P<properties>[^ ]+ [^ ,.]+(?:, [^ ]+ [^ ,.]+)*))?\\s*\\.\\s*$
(?P<var>\\$\\{(?P<name>[A-Z0-9_]+)\\})
(?P<var><([a-zA-Z0-9_]+:)?(?P<var_name>[a-zA-Z0-9_]+)>)
(?P<variable>.+)\\s*=\\s*(?P<value>.+)
(?P<variable>\\w[^=]*)\\s*(?P<sign>=\\>?)\\s*(?P<expr>.*)\\Z
(?P<vehicle>LS[578])_(?P<instrument>OLI_TIRS|OLI|TIRS|TM|ETM)_(?P<type>NBAR)_(?P<level>P54)_GA(?P=type)(?P<product>[0-9][0-9])-(?P<groundstation>[0-9]{3})_(?P<path>[0-9]{3})_(?P<row>[0-9]{3})_(?P<date>[12][0-9]{7})$
(?P<version>\\d{1,4})\\.(?P<subversion>\\d{1,4})\\.(?P<revised>\\d{1,4})
(?P<version>\\d+)(\\.(?P<major>\\d+)(\\.(?P<minor>\\d+)(-rc(?P<rc>\\d+))?)?)?(.*-g(?P<sha1>[0-9a-fA-F]{7,}))?
(?P<version>v[\\d\\.]+)/?$
(?P<versionless_uri_str>.+)#(?P<generation>[0-9]+)$
(?P<versionless_uri_str>.+)#(?P<version_id>.+)$
(?P<video_encoding>x264|H.264|AVC1|H.265)
(?P<video>\\$video(?P<env>.*?)\\$endvideo)
(?P<viewId>id/\\S+)
(?P<w>[0-9]+)x(?P<h>[0-9]+)(?:\\+(?P<x>[0-9]+))?(?:\\+(?P<y>[0-9]+))?.*
(?P<w>\\d+)w
(?P<wall_time>[0-9.]+)s wall, (?P<user_time>[0-9.]+)s user [+] (?P<sys_time>[0-9.]+)s system [=] (?P<cpu_time>[0-9.]+)s CPU [(](?P<wall_cpu_percent>[nN/aA0-9.]+)%?[)]
(?P<weight>\\d+)\\s+(?P<data>.*)
(?P<when>(FM|TL|AT))(?P<hour>\\d\\d)(?P<min>\\d\\d)\\s+
(?P<where>WHERE\\s*\\{)
(?P<whitespace>[ \n]*)(?P<entry>[^ \n]+)
(?P<who>[ugoa]+)(?P<op>[-+=])(?P<what>[rwx]*)$
(?P<whole_line>^Host:\\s.*)
(?P<width>[0-9]+)x(?P<height>[0-9]+)(?:_(?P<bitrate>[0-9]+))?
(?P<width>\\d+)[:/](?P<height>\\d+)
(?P<width>\\d+)[xX](?P<height>\\d+)
(?P<width>\\d+)\\s?[xX]\\s?(?P<height>\\d+)
(?P<width>\\d+)x(?P<height>\\d+)
(?P<width>\\d+)x(?P<height>\\d+)\\.jpg$
(?P<without_proof>c=(?P<cb>[a-zA-Z0-9/+=]+),(?:r=(?P<nonce>[\\x21-\\x2B\\x2D-\\x7E]+))(?:,.*)?),p=(?P<proof>[a-zA-Z0-9/+=]+)$
(?P<x>.)(?P<y>.)(42)?
(?P<x>\\d+),(?P<y>\\d+),(?P<z>\\d+)
(?P<x>1)(?P<y>3)
(?P<x>x)(?P<y>y)(42)?
(?P<y>\\d+)y
(?P<year>-?\\d{4})(-(?P<month>(0[1-9]|1[0-2]))(-(?P<day>(0[1-9]|[1-2]\\d|3[01])))?)?(T(?P<hour>([01]\\d|2[0-4]))((:(?P<minute>[0-5]\\d))(:(?P<second>([0-5]\\d|60))(\\.(?P<microsecond>\\d{1,16}))?)?)?((?P<tzutc>Z)|((?P<tzhr>[+-](([0]\\d)|(1[0-3])|(?P<tzlimit>)14))(:(?P<tzmin>(?(tzlimit)00|([0-5]\\d))))?))?)?$
(?P<year>[\\d]{1,4})-(?P<month>[\\d]{1,2})-(?P<day>[\\d]{1,2})
(?P<year>[\\d]{1,4})-(?P<month>[\\d]{1,2})-(?P<day>[\\d]{1,2}) (?P<hour>[\\d]{1,2}):(?P<minute>[\\d]{1,2})(:(?P<second>[\\d]{1,2}))?(.(?P<microsecond>[\\d]{1,5}))?
(?P<year>[0-9]{4})(-(?P<month>[0-9]{1,2})(-(?P<day>[0-9]{1,2})((?P<separator>.)(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2})(:(?P<second>[0-9]{2})(\\.(?P<fraction>[0-9]+))?)?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?
(?P<year>[0-9]{4})-(?P<month>[0-9]{1,2})-(?P<day>[0-9]{1,2})T(?P<hour>[0-9]{2}):(?P<minute>[0-9]{2}):(?P<second>[0-9]{2})(\\\\.(?P<fraction>[0-9]+))?(?P<timezone>Z|(([-+])([0-9]{2}):([0-9]{2})))
(?P<year>[0-9]+)$
(?P<year>[0-9]+)[-/](?P<month>[0-9]+)$
(?P<year>[0-9]+)[-/](?P<month>[0-9]+)[-/](?P<day>[0-9]+)$
(?P<year>[0-9]+)[-/](?P<month>[0-9]+)[-/](?P<day>[0-9]+)[T ](?P<hour>[0-9]+)$
(?P<year>[0-9]+)[-/](?P<month>[0-9]+)[-/](?P<day>[0-9]+)[T ](?P<hour>[0-9]+):(?P<minute>[0-9]+)$
(?P<year>[0-9]+)[-/](?P<month>[0-9]+)[-/](?P<day>[0-9]+)[T ](?P<hour>[0-9]+):(?P<minute>[0-9]+):(?P<second>[0-9]+)$
(?P<year>[0-9]+)[-/][Qq](?P<quarter>[0-9]+)$
(?P<year>[0-9]+)[-/][Ww](?P<quarter>[0-9]+)$
(?P<year>\\d\\d\\d\\d)(?:-(?P<month>\\d\\d)(?:-(?P<day>\\d\\d)(?:T(?P<hour>\\d\\d)(?::(?P<minute>\\d\\d)(?::(?P<second>\\d\\d))?)?)?)?)?Z
(?P<year>\\d\\d\\d\\d)[-./](?P<month>\\d\\d)[-./](?P<day>\\d\\d)
(?P<year>\\d{4})-(?P<court>[SC]{2})-(?P<number>\\d+)
(?P<year>\\d{4})(?P<month>[01]\\d)(?P<day>[0123]\\d)_(?P<hour>[012]\\d)(?P<minute>[0-5]\\d)
(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2}) (?P<hour>\\d{1,2}):(?P<minute>\\d{1,2}):(?P<second>\\d{1,2})$
(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2}) (?P<hour>\\d{1,2}):(?P<minute>\\d{1,2}):(?P<second>\\d{1,2}).(?P<microsecond>\\d{1,6})$
(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})$
(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})(?:[ T](?P<hour>\\d{1,2}):(?P<minute>\\d{1,2}):(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6}))?(?P<timezone>Z|[+-]\\d\\d:\\d\\d)?)?$
(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})[T ](?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?(?P<tzinfo>Z|[+-]\\d{1,2}:\\d{1,2})?$
(?P<year>\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})[T ](?P<hour>\\d{1,2}):(?P<minute>\\d{1,2})(?::(?P<second>\\d{1,2})(?:\\.(?P<microsecond>\\d{1,6})\\d{0,6})?)?(?P<tzinfo>Z|[+-]\\d{2}(?::?\\d{2})?)?$
(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2}) (?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})
(?P<Year>\\d{4})-(?P<Month>\\d{2})-(?P<Day>\\d{2})-(.*)
(?P<year>\\d{4})(?P<month>\\d{2})(?P<day>\\d{2})(?P<hour>\\d{2})(?P<minute>\\d{2})?(?P<second>\\d{2})?(?:[.,](?P<microsecond>\\d+))?(?P<tzinfo>Z|[+-]\\d{2}(?:\\d{2})?)$
(?P<year>\\d{4})/(?P<month>\\d{2})/(?P<day>\\d{2}) (?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2}) \\[(?P<level>[a-z]*)\\] (?P<pid>\\d+)#(?P<tid>\\d+): (\\*(?P<cid>\\d+) )?(?P<message>[^,]+)(, client: (?P<ip_address>[^,]+))?(, server: (?P<server>[^,]+))?(, request: (?P<verb>(GET|POST)) (?P<url>[^ ]+) (?P<protocol>HTTP/(1\\.0|1\\.1|2\\.0)))?(, upstream: (?P<upstream>[^,]+))?(, host: (?P<host>[^,]+))?(, referrer: (?P<referrer>[^,]+))?$
(?P<year>\\d{4})-?(?P<month>\\d{2})-?(?P<day>\\d{2})(?:\\s*(?:T\\s*)?(?P<hour>\\d{2})(?::?(?P<minute>\\d{2})(?::?(?P<second>\\d{2}))?)?(?:[,.](?P<fraction>\\d+))?(?:\\s*(?P<tz>(?:Z|[+-](?P<tzhh>\\d{2})(?::?(?P<tzmm>\\d{2}))?)))?)
(?P<year>\\d+)-(?P<month>\\d+)-(?P<day>\\d+)T(?P<hour>\\d+):(?P<minute>\\d+):(?P<second>\\d+)(?:.(?P<subsecond>\\d{1,6})|)Z
(?P<year>\\d+)\\.(?P<month>\\d+)\\.\\d+
(?P<YYYY>\\d\\d\\d?\\d?):(?P<MM>\\d\\d?):(?P<DD>\\d\\d?) (?P<hh>\\d\\d?):(?P<mm>\\d\\d?):(?P<ss>\\d\\d?)
(?P<zip>[0-9])
(?s)(?i)(?u).*\\\\\"ok\\\\\"\\s*:\\s*true.*
(?s)(?i:usage):\\s*(?P<prog>\\S+)(?P<pats>.*?)(?:$|\\n\\s*\\n)
(?s)(?P<li><li[^>]+class=([\"\\'])(?:(?!\\2).)*?section-item[^>]+>.+?</li>)
(?s)(?P<time>\\S\\S\\S \\d\\d \\d\\d:\\d\\d:\\d\\d) (?P<hostname>[a-z0-9\\-]+) (?P<payload>.*)
(?s)(<(?P<tag>(?:amp-)?(?:video|audio))(?:\\s+[^>]*)?>)(.*?)</(?P=tag)>
(?s)/\\*(?P<config>.*?)\\*/
(?s)\\\\([0-9a-fA-F]{1,6})[\\n\\t ]?|\\\\(.)|\\\\\\n
(?s)\\\\?(?:(\\+{3})(.*?)\\+{3}|(\\${2})(.*?)\\${2}|pass:([a-z,]*)\\[(.*?[^\\\\])\\])
(?s)\\{\\~\\~(?P<original>(?:[^\\~\\>]|(?:\\~(?!\\>)))+)\\~\\>(?P<new>(?:[^\\~\\~]|(?:\\~(?!\\~\\})))+)\\~\\~\\}
(?s)\\d+ (?P<time>\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d:\\d\\d\\.\\d+) (?P<severity>\\w): (?P<payload>.*)
(?s)\\Q${\\E([^}]+?)(?:\\Q:+\\E([^}]+))?\\Q}
(?s)\\Q%{\\E(\\d)(?:\\Q:+\\E([^}]+))?\\Q}
(?s)<(?:iframe|bulbs-video)[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?onionstudios\\.com/(?:embed.+?|video/\\d+\\.json))\\1
(?s)<span[^>]+class=[\"\\']dates[\"\\'][^>]*>.+?\\bS\\.(?P<season_number>\\d+)\\s+E\\.(?P<episode_number>\\d+)\\s*-\\s*(?P<upload_date>\\d{2}/\\d{2}/\\d{4})
(?s)jwplayer\\((?P<quote>[\\'\"])[^\\'\" ]+(?P=quote)\\)(?!</script>).*?\\.setup\\s*\\((?P<options>[^)]+)\\)
(?s)LimelightPlayerUtil\\.embed\\s*\\(\\s*{.*?\\bmediaId[\"\\']\\s*:\\s*[\"\\'](?P<id>[a-z0-9]{32})
(?s:\\\\(.))
(?sm)\\\\?((?:latex|ascii)?math):([a-z,]*)\\[(.*?[^\\\\])\\]
(?sm)^(?:\\s*#!\\s*(?P<program>[^\\s]*)[ \\t]*(?P<app>[^\\s]*)?\\s*$)?\\s*(?P<source>.*)
(?smU)\\\\s*{\\\\$(.*)\\\\$}\\\\s*
(?smU){\\\\@(.*)\\\\@}
(?smx)\n    (<\\?.*?\\?>)?\\s*\n    <!DOCTYPE\\s+(\n     [a-zA-Z_][a-zA-Z0-9]*\n     (?: \\s+      # optional in HTML5\n     [a-zA-Z_][a-zA-Z0-9]*\\s+\n     \"[^\"]*\")?\n     )\n     [^>]*>\n
(?sU)([^ ]+=)[\"'](.*)[\"']
(?sU)(INSERT INTO .+ \\(\\s*)(.+)(\\s*\\) VALUES.+\\))
(?sU:\\{.*\\}\\n\\};)
(?sUm:^(.*) *-)
(?sx)\n                    <object[^>]+class=([\"\\'])(?:(?!\\1).)*\\bLimelightEmbeddedPlayerFlash\\b(?:(?!\\1).)*\\1[^>]*>.*?\n                        <param[^>]+\n                            name=([\"\\'])flashVars\\2[^>]+\n                            value=([\"\\'])(?:(?!\\3).)*(?P<kind>media|channel(?:List)?)Id=(?P<id>[a-z0-9]{32})\n                
(?sx)\n                <script[^>]+src=([\"'])(?:https?:)?//fast\\.wistia\\.com/assets/external/E-v1\\.js\\1[^>]*>.*?\n                <div[^>]+class=([\"']).*?\\bwistia_async_(?P<id>[a-z0-9]+)\\b.*?\\2\n            
(?sx)^\n            (?:window\\.)?(?P<func_name>[a-zA-Z0-9_.$]*)\n            (?:\\s*&&\\s*(?P=func_name))?\n            \\s*\\(\\s*(?P<callback_data>.*)\\);?\n            \\s*?(?://[^\\n]*)*$
(?sx)class=\n                    (?:\n                        ([\"\\'])(?:mediaLink|wdrrPlayerPlayBtn|videoButton)\\b.*?\\1[^>]+|\n                        ([\"\\'])videoLink\\b.*?\\2[\\s]*>\\n[^\\n]*\n                    )data-extension=([\"\\'])(?P<data>(?:(?!\\3).)+)\\3\n                    
(?u)#([^\\W]+)
(?u)#(x?\\d+)
(?u)%\\(.+?\\)s
(?u)&(.+?);
(?U)(,\\s)
(?U)([^\\w\\.\\'\\-\\/,&])
(?u)([^=,\\s]+)\\s*\\=\\s*(\"[^\"]*\"|{(?:[^{}]*|{[^{}]*})*}|[^,]*)
(?U)(\\(|\\[).*(\\)|\\])
(?U)(\\.{3,})
(?U)('\\s)
(?U)(^|\\\\\\\\|[^\\\\!])\\[(.*)\\]\\((.*)\\)
(?U)(^|\\\\\\\\|[^\\\\\\*])\\*(.*[^\\\\])\\*
(?U)(^|\\\\\\\\|[^\\\\])!\\[(.*)\\]\\((.*)\\)
(?U)(^|\\\\\\\\|[^\\\\])\\*\\*(.*[^\\\\])\\*\\*
(?U)(^|\\\\\\\\\\\\\\\\|[^\\\\\\\\])`(.*[^\\\\\\\\])`
(?U)(^|\\\\\\\\|[^\\\\])~~(.*[^\\\\])~~
(?-u).
(?U).*REES
(?U):\\s(\\d+)\\s\\((.*)\\)
(?u)@(\\w+)[ \\t]?{[ \\t]*([^,\\s]*)[ \\t]*,?\\s*((?:[^=,\\s]+\\s*\\=\\s*(?:\"[^\"]*\"|{(?:[^{}]*|{[^{}]*})*}|[^,}]*),?\\s*?)+)\\s*}
(?U)[\\n|\\t].*\\\"
(?-u)[\\xFF]
(?u)[^- \\w.]
(?u)[^-\\w./]
(?u)[^-\\w.]
(?u)[^\\W\\d]+
(?u)[^-\\w]
(?-u)[^\\x00-\\xff]
(?u)[^-_\\w.() ]
(?u)[^-_\\w./]
(?U)\"(.*)\"\\s+(==|!=)\\s+'(.*)'
(?U)\\\".*\\\"
(?U)\\\"[\\s\\S]*\\\"
(?U)\"totalCount\":[\\d]+}
(?U)\"totalNumRecs\":[\\d]+,
(?U)\"totalPage\":\"[\\d]+\",
(?U)\\\"url\\\":\\\"(.*)\\\"
(?U)\\$\\{.*\\}
(?U)\\([^(]*\\)\\?|\\(/\\(\\?P<[^(]*\\)\\)\\?
(?U)\\. *(\\n|$)
(?U)\\\\/\\\\*[\\\\s\\\\S]*\\\\*\\\\/|\\\\/\\\\/.*(\\n|\\r)
(?U)\\\\{.*\\\\}
(?U)\\\\{[^\\\\{|^\\\\}|^\\\\.|^\\\\<|^\\\\>]*\\\\}
(?U)\\\\<.*\\\\>
(?U)\\\\<div[\\\\s\\\\S]*\\\\<\\\\/div\\\\>
(?U)\\\\<script\\\\>[\\\\s\\\\S]*\\\\<\\\\/script\\\\>
(?U)\\\\<style\\\\>[\\\\s\\\\S]*\\\\<\\\\/style\\\\>
(?U)\\\\<style\\\\>[\\\\s\\\\S]*\\\\<\\\\/style\\\\>|\\\\<script\\\\>[\\\\s\\\\S]*\\\\<\\\\/script\\\\>
(?U)\\b.+\\b
(?u)\\b\\w\\w+\\b
(?u)\\b\\w+\\b
(?U)\\b\\w++\\b
(?U)\\p{Graph}
(?U)\\p{Lower}
(?U)\\p{Space}+
(?U)\\s*([a-zA-Z][a-zA-Z0-9_]*)\\s*=\\s*\"(.*)\"\\s*
(?u)\\s*<\\s*br\\s*/?\\s*>\\s*
(?U)\\s+
(?u)\\s+
(?-u)\u2603
(?U)\\w
(?-U)\\w
(?u)\\W+
(?-u)\\xFF
(?u)^(?P<name>[- .,\\w\\d'\u2019\"()]+) <(?P<email>.+?)>$
(?-u)^(PCP_[[:alnum:]_]+)=([^\"\\'].*[^\"\\'])\\n$
(?U)^.* 
(?u)^[ \t]*
(?U)^H.*\\s
(?U)_env\\\\((.*)\\\\)
(?U)<.*>
(?u)<\\s*/\\s*p\\s*>\\s*<\\s*p[^>]*>
(?U)if [\\\\s\\\\S]*\\\\{
(?U)import \\\"[\\s\\S]*\\\"
(?U)import \\\\([\\\\s\\\\S]*\\\\)
(?U)import \\([\\s\\S]*\\)|import \\\"[\\s\\S]*\\\"
(?U:(<.*>))([\\t\\n\\v\\f\\r ]+)(?U:(<.*>))
(?U:.*[\\w]{3,}.*([\\d][\\.!?][\\D]|[\\D][\\.!?][\\s]|[\\n$]))
(?U:<target[^/]+/>)
(?Ui)%[0-9A-F]{2}
(?ui)[\\W]
(?ui)[^\\w\\.]
(?ui)\\W
(?Ui)<[^>]*>
(?Uis)<.*>
(?Uis)<script[^>]*>.*</script>
(?um)([ \\t]+)$
(?Um)\\.crit\\(lambda:\\s+\"value\"\\s+(.*)\\s+crit\\)
(?Um)\\.crit\\(lambda:\\s+\"value\"\\s+(.*)\\s+lower\\s+(.*)\\s+\"value\"\\s+(.*)\\s+upper\\)
(?Um)\\|(\\w+)\\('(.*)'\\)\\s*\\.as\\('value'\\)
(?Um)\\|eval\\(lambda: \"(.*)\"\\)\\s*\\.as\\('value'\\)
(?us)\\s+
(?Us)CMGR: \"([A-Z ]*)\",\"([+\\d]*)\",,\"([0-9/,:\\+]*)\"\\r\\n(.*)\\r\\n\\r\\nOK
(?x) (?: (?= \\s )  (?:(?<=else|new|return) | (?<!\\w)) (?<_1>\\s+))?\n            \t\t\t(?<_2>\\b \n            \t\t\t\t(?!(?<_3>while|for|do|if|else|switch|catch|enumerate|return|r?iterate)\\s*\\()(?:(?!NS)[A-Za-z_][A-Za-z0-9_]*+\\b | :: )++                  # actual name\n            \t\t\t)\n            \t\t\t \\s*(?<_4>\\()
(?x) (?: (?= \\s )  (?:(?<=else|new|return) | (?<!\\w)) (?<_1>\\s+))?\n\t(?<_2>\\b \n\t(?!(?<_3>while|for|do|if|else|switch|catch|enumerate|return|r?iterate)\\s*\\()(?:(?!NS)[A-Za-z_][A-Za-z0-9_]*+\\b | :: )++                  # actual name\n\t)\n\t \\s*(?<_4>\\()
(?x) (?: (?= \\s )  (?:(?<=else|new|return) | (?<!\\w)) (\\s+))?\n                  (\\b \n                    (?!(while|for|do|if|else|switch|catch|enumerate|return|r?iterate)\\s*\\()(?:(?!NS)[A-Za-z_][A-Za-z0-9_]*+\\b | :: )++                  # actual name\n                  )\n                   \\s*(\\()
(?x) (?: (?= \\s )  (?:(?<=else|new|return) | (?<!\\w)) (\\s+))?\n      (\\b \n        (?!(while|for|do|if|else|switch|catch|enumerate|return|sizeof|[cr]?iterate)\\s*\\()(?:(?!NS)[A-Za-z_][A-Za-z0-9_]*+\\b | :: )++                  # actual name\n      )\n       \\s*(\\()
(?x) (?: (?= \\s )  (?:(?<=else|new|return) | (?<!\\w)) (\\s+))?\n      (\\b\n        (?!(while|for|do|if|else|switch|catch|enumerate|return|r?iterate)\\s*\\()(?:(?!NS)[A-Za-z_][A-Za-z0-9_]*+\\b | :: )++                  # actual name\n      )\n       \\s*(\\()
(?x) ^\n                ( ?P<sign> -? )\n                ( ?P<hour> \\d{1,2} ) : ( ?P<minute> \\d{2} ) : ( ?P<second> \\d{2} )\n                ( ?P<flag> [wsugz] )?\n            $ 
(?x) ^\n                ( ?P<sign> -? )\n                ( ?P<hour> \\d{1,2} ) : ( ?P<minute> \\d{2} )\n                ( ?P<flag> [wsugz] )?\n            $ 
(?x) ^\n                ( ?P<weekday> \\w+ )\n                ( ?P<sign>    [<>] = )\n                ( ?P<day>     \\d+ )\n            $ 
(?x) ^\n                \\s+\n                ( ?P<gmtoff>     \\S+ )  \\s+\n                ( ?P<rulessave>  \\S+ )  \\s+\n                ( ?P<format>     \\S+ )  \\s*\n                ( ?P<year>       \\S+ )? \\s*\n                ( ?P<month>      \\S+ )? \\s*\n                ( ?P<day>        \\S+ )? \\s*\n                ( ?P<time>       \\S+ )? \\s*\n                (\\#.*)?\n            $ 
(?x) ^\n                Link  \\s+\n                ( ?P<target>  \\S+ )  \\s+\n                ( ?P<name>    \\S+ )  \\s*\n                (\\#.*)?\n            $ 
(?x) ^\n                Rule \\s+\n                ( ?P<name>    \\S+)  \\s+\n                ( ?P<from>    \\S+)  \\s+\n                ( ?P<to>      \\S+)  \\s+\n                ( ?P<type>    \\S+)  \\s+\n                ( ?P<in>      \\S+)  \\s+\n                ( ?P<on>      \\S+)  \\s+\n                ( ?P<at>      \\S+)  \\s+\n                ( ?P<save>    \\S+)  \\s+\n                ( ?P<letters> \\S+)  \\s*\n                (\\#.*)?\n            $ 
(?x) ^\n                Zone \\s+\n                ( ?P<name> [ A-Z a-z 0-9 / _ + - ]+ )  \\s+\n                ( ?P<gmtoff>     \\S+ )  \\s+\n                ( ?P<rulessave>  \\S+ )  \\s+\n                ( ?P<format>     \\S+ )  \\s*\n                ( ?P<year>       \\S+ )? \\s*\n                ( ?P<month>      \\S+ )? \\s*\n                ( ?P<day>        \\S+ )? \\s*\n                ( ?P<time>       \\S+ )? \\s*\n                (\\#.*)?\n            $ 
(?x) ^\n        (?P<language> (?:\n            [[:alpha:]]{2,3} (?: - [[:alpha:]]{3} ){0,3}\n            | \\* ))\n        (?P<script> - (?: [[:alpha:]]{4} | \\* ))?\n        (?P<region> - (?: [[:alpha:]]{2} | [[:digit:]]{3} | \\* ))?\n        (?P<rest> (?: - (?: [[:alnum:]]{1,8} | \\* ))*)\n    $ 
(?x)(::)\n                        (?:\n                    ([A-Za-z_][A-Za-z_0-9]*)\\s*\\(\n                    |\n                    ((\\$+)
(?x)(?<!\\S)\n                      (async(?!\\S))?\\s*\n                      (?<ft>\n                        map\\s*<\\s*\\g<ft>\\s*,\\s*\\g<ft>\\s*> |\n                        set\\s*<\\s*\\g<ft>\\s*> |\n                        list\\s*<\\s*\\g<ft>\\s*>\\s*(cpp_type(?!\\S))? |\n                        (?!async\\b)[a-zA-Z_][\\w.]*\n                      )\\s*\n                      (?:\n                        (?<!\\S)([a-zA-Z_][\\w.]*)\\s*(?![^\\s(])\n                      )?
(?x)(?<!\\S)\n\t(?<_1>async(?!\\S))?\\s*\n\t(?<ft>\n\tmap\\s*<\\s*\\g<ft>\\s*,\\s*\\g<ft>\\s*> |\n\tset\\s*<\\s*\\g<ft>\\s*> |\n\tlist\\s*<\\s*\\g<ft>\\s*>\\s*(?<_2>cpp_type(?!\\S))? |\n\t(?!async\\b)[a-zA-Z_][\\w.]*\n\t)\\s*\n\t(?:\n\t(?<!\\S)(?<_3>[a-zA-Z_][\\w.]*)\\s*(?![^\\s(?<_4>])\n\t)?
(?x)(?i)\n        (?P<int>-?\\d+)              # the integer part\n        \\.?(?:(?P<dec>\\d+))?        # an optional decimal part\n                                    # note: the previous part will eat any decimals\n                                    # if there's no decimal point.\n                                    # This means we'll always have the decimal point if this\n                                    # section matches at all.\n        (?:e(?P<exp>[-+]?\\d+))?     # an optional exponent\n        (?:\n            [^\\w]*                  # some amount of junk (non word characters)\n            (?P<unit>[\\w&&[^\\d]]+)  # a word with no digits\n        )?\n        
(?x)(->)\n            (?:\n                ([A-Za-z_][A-Za-z_0-9]*)\\s*\\(\n                |\n                ((\\$+)?
(?x)'/ (?= (\\\\.|[^'/])++/[imsxeADSUXu]*' )
(?x)\"/ (?= (\\\\.|[^\"/])++/[imsxeADSUXu]*\" )
(?x)\"\\/ (?= (?<_1>\\\\.|[^\"\\/])++\\/[imsxeADSUXu]*\" )
(?x)'\\/ (?= (?<_1>\\\\.|[^'\\/])++\\/[imsxeADSUXu]*' )
(?x)\\b\n                  ( [a-h]                 # Pitch (group 1)\n                    ( (?:i[sh]){1,2} |    #   - sharp (group 2)\n                      (?:e[sh]|s){1,2}    #   - flat\n                    )?\n                      (?:(\\!)|(\\?))?       # Reminder\\/cautionary accidental (groups 3-4)\n                      ('+|,+)?             # Octave (group 5)\n                  )\n              
(?x)\\b\n              (              # (group 1)\n              ( [a-h]                 # Pitch (group 2)\n                ( (?:i[sh]){1,2} |    #   - sharp (group 3)\n                  (?:e[sh]|s){1,2}    #   - flat\n                )?\n                  (?:(\\!)|(\\?))?               # Cautionary accidental (groups 4-5)\n                  ('+|,+)?             # Octave (group 6)\n              )\n              ( ( ((\\\\)breve)|        # Duration (groups 7-10)\n                  64|32|16|8|4|2|1\n                )\n                (\\.+)?                 # Augmentation dot (group 11)\n              ((?:(\\*)(\\d+(?:\\/\\d+)?))*) # Scaling duration (groups 12-14)\n              )?\n            )(?![a-z])  # do not follow a note with a letter\n          
(?x)\\b\n\t    (\t\t\t\t\t\t  # (group 1)\n\t  ( [a-h]                 # Pitch (group 2)\n\t    ( (?:i[sh]){1,2} |    #   - sharp (group 3)\n\t      (?:e[sh]|s){1,2}    #   - flat\n\t    )?\n\t        (?:(\\!)|(\\?))?               # Cautionary accidental (groups 4-5)\n\t        ('+|,+)?             # Octave (group 6)\n\t  )\n\t  ( ( ((\\\\)breve)|        # Duration (groups 7-10)\n\t      64|32|16|8|4|2|1\n\t    )\n\t    (\\.+)?                 # Augmentation dot (group 11)\n\t((?:(\\*)(\\d+(?:\\/\\d+)?))*) # Scaling duration (groups 12-14)\n\t  )?\n\t)(?![a-z])\t# do not follow a note with a letter\n\t
(?x)\\b\n\t  ( [a-h]                 # Pitch (group 1)\n\t    ( (?:i[sh]){1,2} |    #   - sharp (group 2)\n\t      (?:e[sh]|s){1,2}    #   - flat\n\t    )?\n\t        (?:(\\!)|(\\?))?       # Reminder\\/cautionary accidental (groups 3-4)\n\t        ('+|,+)?             # Octave (group 5)\n\t  )\n\t
(?x)\\G\n            (?!  $\n            |  [ ]{,3}>.\n            |  ([ ]{4}|\\t)\n            |  [#]{1,6}\\s*+\n            |  [ ]{,3}(?<marker>[-*_])([ ]{,2}\\k<marker>){2,}[ \\t]*+$\n            )
(?x)\\G\n            (?=  ([ ]{4}|\\t)\n            |  [#]{1,6}\\s*+\n            |  [ ]{,3}(?<marker>[-*_])([ ]{,2}\\k<marker>){2,}[ \\t]*+$\n            )
(?x)\\G\n\t(?!\t$\n\t|\t[ ]{,3}>.\n\t|\t(?<_1>[ ]{4}|\\t)\n\t|\t[#]{1,6}\\s*+\n\t|\t[ ]{,3}(?<marker>[-*_])(?<_2>[ ]{,2}\\k<marker>){2,}[ \\t]*+$\n\t)
(?x)\\G\n\t(?=\t(?<_1>[ ]{4}|\\t)\n\t|\t[#]{1,6}\\s*+\n\t|\t[ ]{,3}(?<marker>[-*_])(?<_2>[ ]{,2}\\k<marker>){2,}[ \\t]*+$\n\t)
(?x)\n                                   <a[^>]+?href=\"(?P<url>(?:https:)?//[^\"]+)\".*?\n                                   <strong>(?P<format_id>.+?)</strong>.*?\n                                   <small>(?:(?P<width>\\d+)x(?P<height>\\d+))?\\s+?\\((?P<filesize>[\\d,]+\\s*[GM]iB)\\)</small>\n                                
(?x)\n                            Video:\\s*(?P<vcodec>[a-zA-Z0-9/._-]+)\\s*&\\#10;\n                            (?P<width>[0-9]+)x(?P<height>[0-9]+)px&\\#10;\n                            (?P<vbr>[0-9]+)kbps&\\#10;\n                            Audio:\\s*(?P<abr>[0-9]+)kbps,\\s*(?P<audio_desc>[A-Za-z\\.0-9]+)&\\#10;\n                            Gr&ouml;&szlig;e:\\s*(?P<filesize_approx>[0-9.,]+\\s+[a-zA-Z]*B)
(?x)\n                    <meta\\s+\n                        property=([\"'])(?:og:video(?::(?:secure_)?url)?|twitter:player)\\1\\s+\n                        content=([\"'])(?P<url>https?://player\\.theplatform\\.com/p/.+?)\\2\n            
(?x)\n                (?: (?= \\s ) (?:(?<=else|new|return) | (?<!\\w)) (?<_1>\\s+) )?\n                (?<_2>\\b\n                    (?!(?<_3>for|if|else|switch|return)\\s*\\()\n                    (?:[[:alpha:]_][[:alnum:]_]*+\\b)            # method name\n                )\n                \\s*(?<_4>\\()\n            
(?x)\n                (?: (?= \\s ) (?:(?<=else|new|return) | (?<!\\w)) (\\s+) )?\n                (\\b\n                    (?!(for|if|else|switch|return)\\s*\\()\n                    (?:[[:alpha:]_][[:alnum:]_]*+\\b)            # method name\n                )\n                \\s*(\\()\n            
(?x)\n                (?P<vcodec>[^_]+)_(?P<acodec>[^_]+)_(?P<container>[^_]+)_\n                (?P<proto>[^_]+)_(?P<index>[^_]+)_(?P<indexproto>[^_]+)\n            
(?x)\n                \\A\n                (?:\n                    .                                         # single characters\n                        |\n                    \\[ (?: [^\\]] | \\\\. | \\[[^\\[\\]]+\\] )+ \\]   # char classes\n                        |\n                    \\( (?: [^)] | \\\\. | \\([^()]+\\) )+ \\)      # groups\n                        |\n                    \\\\ (?:                                    # forward slash patterns\n\n                        # there are more of these, but we only match the less obscure ones\n\n                        [pP] (?: [a-zA-Z] | \\{ [a-zA-Z]+ \\})  # unicode properties\n                            |\n                        .                                     # escaped characters\n                    )\n                )\n                \\z\n            
(?x)\n                ^\n                (?P<codepoint>[A-Z0-9]+);\n                \\s*\n                (?P<alias>[^;]+);\n                \\s*\n                (?P<label>\\S+)\n                
(?x)\n                ^\n                (?P<codepoint>[A-Z0-9]+);\n                \\s*\n                (?P<name>[A-Z]*)\n                
(?x)\n                ^\n                (?P<year>\\d+)\n                (?:\n                    -(?P<month>\\d{1,2})\n                    (?:\n                        -(?P<day>\\d{1,2})\n                        (?:\n                            T(?P<hours>\\d{1,2})\n                            (?:\n                                :(?P<minutes>\\d{1,2})\n                                (?:\n                                    :(?P<seconds>\\d{1,2})\n                                )?\n                            )?\n                        )?\n                    )?\n                )?\n                $\n            
(?x)\n                ^\n                \\s*(?P<abbrev>[^\\s;]+)\\s*;\n                \\s*(?P<long>[^\\s;]+)\\s*\n                (?:;(?P<aliases>.*))?\n                
(?x)\n                ^\n                \\s*(?P<codepoint>[^\\s;]+)\\s*;\n                \\s*(?P<lower>[^;]+)\\s*;\n                \\s*(?P<title>[^;]+)\\s*;\n                \\s*(?P<upper>[^;]+)\\s*;\n                \\s*(?P<conditions>[^;\\x23]+)?\n                
(?x)\n                ^\n                \\s*(?P<codepoint>[^\\s;]+)\\s*;\n                \\s*(?P<status>[^\\s;]+)\\s*;\n                \\s*(?P<mapping>[^;]+)\\s*;\n                
(?x)\n                ^\n                \\s*(?P<prop>[^\\s;]+)\\s*;\n                \\s*(?P<abbrev>[^\\s;]+)\\s*;\n                \\s*(?P<long>[^\\s;]+)\\s*\n                (?:;(?P<aliases>.*))?\n                
(?x)\n                ^\n                ccc;\n                \\s*(?P<num_class>[0-9]+)\\s*;\n                \\s*(?P<abbrev>[^\\s;]+)\\s*;\n                \\s*(?P<long>[^\\s;]+)\n                
(?x)\n                <h4[^>]+class=\"title\"[^>]*>\\s*Music\\s*</h4>\\s*\n                <ul[^>]*>\\s*\n                <li>(?P<title>.+?)\n                by (?P<creator>.+?)\n                (?:\n                    \\(.+?\\)|\n                    <a[^>]*\n                        (?:\n                            \\bhref=[\"\\']/red[^>]*>|             # drop possible\n                            >\\s*Listen ad-free with YouTube Red # YouTube Red ad\n                        )\n                    .*?\n                )?</li\n            
(?x)\n                <meta\\s+\n                    (?:property|itemprop)=([\\'\"])(?:og:video|embedURL)\\1[^>]+\n                    content=([\\'\"])(?P<url>https?://(?:secure|c)\\.brightcove.com/(?:(?!\\2).)+)\\2\n            
(?x)\n                pub ( \\( (?P<restriction> [^)]+ ) \\) )?\n                \\s+\n                (?P<name> .+ )\n            
(?x)\n              (?<!-)\n              (?<=>)\n            (\n              ( ( ((\\\\)breve)|        # Duration (groups 1-4)\n                  64|32|16|8|4|2|1\n                )\n                (\\.+)?                  # Augmentation dot (group 5)\n              ) |\n              (?![\\s}~a-z]|$)\n            )\n          
(?x)\n              (?<ft>\n                map\\s*<\\s*\\g<ft>\\s*,\\s*\\g<ft>\\s*> |\n                set\\s*<\\s*\\g<ft>\\s*> |\n                list\\s*<\\s*\\g<ft>\\s*>\\s*(cpp_type(?!\\S))? |\n                [a-zA-Z_][\\w.]*\n              )[ \\t]*\n              (?:([a-zA-Z_][\\w.]*)[ \\t]*)? # identifier\n              
(?x)\n              (?x)\n      (?:  \n           (?: (?= \\s )           (?<!else|new|return) (?<=\\w)\\s+      #  or word + space before name\n           )\n      )\n      (\n        (?: [A-Za-z_][A-Za-z0-9_]*+ | :: )++    |              # actual name\n        (?: (?<=operator) (?: [-*&<>=+!]+ | \\(\\) | \\[\\] ) )?  # if it is a C++ operator\n      )\n       \\s*(\\()
(?x)\n              (?x)\n      (?:\n           (?: (?= \\s )           (?<!else|new|return) (?<=\\w)\\s+      #  or word + space before name\n           )\n      )\n      (\n        (?: [A-Za-z_][A-Za-z0-9_]*+ | :: )++    |              # actual name\n        (?: (?<=operator) (?: [-*&<>=+!]+ | \\(\\) | \\[\\] ) )?  # if it is a C++ operator\n      )\n       \\s*(\\()
(?x)\n              \\b(\n                (?:[a-z]\\w*\\.)* # Optional package specification\n                [A-Z]\\w+\\b # Class name\n                (?:<(?:[\\w, ]*)>)? # Optional Generics\n                (?:\\[\\s*\\])* # Optional brackets (array)\n              )\\b\n          
(?x)\n            ((\\$)(?<name>
(?x)\n            ((\\$)(?<name>[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*))\n            (?:\n              (->)(\\g<name>)\n              |\n              (\\[)\n                (?:(\\d+)|((\\$)\\g<name>)|(\\w+))\n              (\\])\n            )?\n            
(?x)\n            ((\\$)(?<name>[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*))\n            (?:\n              (->)\n                (?:\n                  (\\g<name>)\n                  |\n                  (\\$\\g<name>)\n                )\n              |\n              (\\[)\n                (?:(\\d+)|((\\$)\\g<name>)|(\\w+)|(.*?))\n              (\\])\n            )?\n            
(?x)\n            ((\\$\\{)(?<name>
(?x)\n            (?:  ^                                 # begin-of-line\n              |  (?: (?<!else|new|=) )             #  or word + space before name\n            )\n            ((?:[A-Za-z_][A-Za-z0-9_]*::)*+~[A-Za-z_][A-Za-z0-9_]*) # actual name\n             \\s*(\\()                           # start bracket or end-of-line\n          
(?x)\n            (?:  ^                                 # begin-of-line\n              |  (?: (?<!else|new|=) )             #  or word + space before name\n            )\n            ((?:[A-Za-z_][A-Za-z0-9_]*::)*+~[A-Za-z_][A-Za-z0-9_]*) # actual name\n             \\s*(\\()                           # terminating semi-colon\n          
(?x)\n            (?:  ^                                 # begin-of-line\n              |  (?: (?<!else|new|=) )             #  or word + space before name\n            )\n          ((?:\\b(?:public|private|protected|static|final|native|synchronized|abstract|threadsafe|transient|export)\\b\\s*)*) # modifier\n            (~this) # actual name\n             \\s*(\\()                           # start bracket or end-of-line\n          
(?x)\n            (?:\n                <iframe[^>]+?src=|\n                data-video-url=|\n                <embed[^>]+?src=|\n                embedSWF\\(?:\\s*|\n                <object[^>]+data=|\n                new\\s+SWFObject\\(\n            )\n            ([\"\\'])\n                (?P<url>(?:https?:)?//(?:www\\.)?youtube(?:-nocookie)?\\.com/\n                (?:embed|v|p)/[0-9A-Za-z_-]{11}.*?)\n            \\1
(?x)\n            (?:\n                <meta\\s+property=\"og:video\"\\s+content=|\n                <iframe[^>]+?src=\n            )\n            ([\"\\'])(?P<url>https?://(?:www\\.)?sbs\\.com\\.au/ondemand/video/.+?)\\1
(?x)\n            (?P<n>\\d+) \\s (?P<dur>hrs?|hours?|hs?|minutes?|mins?|ms?) (?P<ago>(\\s ago)?)
(?x)\n            (\\\\) # backslash\n            (?:\n                p{1,5} | m[pf] | f{1,4} | fp | # forte, piano, etc.\n                [sr]fz | sff? | spp? | \n                < | > | ! | espressivo         # (de)crescendo\n            )\n          
(?x)\n            (\\\\)\n            (?: accent | markato | staccatissimo |           # basic accents\n              espressivo | staccato | tenuto | portato | \n              (?:up|down)bow | flageolet | thumb |\n              [lr](?:heel|toe) | open | stopped |\n              (?:reverse)?turn | trill |\n              prall(?: prall | mordent | down | up)? |       # pralls\n              (?: up | down | line ) prall |                 # and\n              (?: up | down )? mordent |                     # mordents\n              signumcongruentiae |\n              (?: (?:very)? long | short)?fermata(Markup)? | # fermatas\n              segno | (?:var)?coda \n            )\n          
(?x)\n            (\n              (?!while|for|do|if|else|switch|catch|enumerate|return|r?iterate)(?: \\b[A-Za-z_][A-Za-z0-9_]*+\\b | :: )*+                  # actual name\n            )\n             \\s*(\\()
(?x)\n            \\A(?P<name>[\\w\\.]+):\n            ((?P<sign>\\-|\\+))?\n            (?P<val>([0-9]*[.])?[0-9]+)\n            \\|(?P<type>\\w+)\n            (\\|@(?P<rate>\\d+\\.\\d+))?\\z
(?x)\n            \\b(def)\\s+\n            (([a-zA-Z$_][a-zA-Z0-9$_]*(_[^a-zA-Z0-9\\s]+)?)|`.*`|[^\\w\\[\\(\\:\\_\\s]+)
(?x)\n            ^(?P<major>\\d+)\n            \\.(?P<minor>\\d+)\n            \\.(?P<patch>\\d+)\n            (-(?P<release>[[:alnum:]]+)\n              (\\.(?P<buildmeta>[[:alnum:]]+))?\n            )?$
(?x)\n            ^\n            \\s*(?P<codepoints>[^\\s;]+)\\s*;\n            \\s*(?P<property>[^;\\x23]+)\\s*\n            
(?x)\n            <video[^>]+class=\"animated-gif\"(?P<more_info>[^>]+)>\\s*\n                <source[^>]+video-src=\"(?P<url>[^\"]+)\"\n        
(?x)\n          (\n            (\\\\)                    # Marker\n            (?:auto)?(?:foot)?(?:full)?(?:no)?(?:short)?    # Function Name\n            [cC]ite\n            (?:al)?(?:t|p|author|year(?:par)?|title)?[ANP]*\n            \\*?                      # Optional Unabreviated\n          )\n          (?:(\\[)[^\\]]*(\\]))?                # Optional\n          (?:(\\[)[^\\]]*(\\]))?                #   Arguments\n          (\\{)                      # Opening Bracket\n        
(?x)\n          (\n            (\\\\)                    # Marker\n            (?:foot)?(?:full)?(?:no)?(?:short)?    # Function Name\n            [cC]ite\n            (?:al)?(?:t|p|author|year(?:par)?|title)?[ANP]*\n            \\*?                      # Optional Unabreviated\n          )\n          (?:(\\[)[^\\]]*(\\]))?                # Optional\n          (?:(\\[)[^\\]]*(\\]))?                #   Arguments\n          (\\{)                      # Opening Bracket\n        
(?x)\n         (?:\n           ^                      # beginning of line\n         | (?<=                   # or look-behind on:\n             [=>~(?:\\[,|&;]\n           | [\\s;]if\\s      # keywords\n           | [\\s;]elsif\\s\n           | [\\s;]while\\s\n           | [\\s;]unless\\s\n           | [\\s;]when\\s\n           | [\\s;]assert_match\\s\n           | [\\s;]or\\s      # boolean opperators\n           | [\\s;]and\\s\n           | [\\s;]not\\s\n           | [\\s.]index\\s      # methods\n           | [\\s.]scan\\s\n           | [\\s.]sub\\s\n           | [\\s.]sub!\\s\n           | [\\s.]gsub\\s\n           | [\\s.]gsub!\\s\n           | [\\s.]match\\s\n           )\n         | (?<=                  # or a look-behind with line anchor:\n              ^when\\s            # duplication necessary due to limits of regex\n            | ^if\\s\n            | ^elsif\\s\n            | ^while\\s\n            | ^unless\\s\n            )\n         )\n         \\s*((/))(?![*+{}?])\n      
(?x)\n        (                          # Capture 1\n          (\\\\)                      # Marker\n          (?:\n            (?:sub){0,2}section              # Functions\n            | (?:sub)?paragraph\n            | chapter|part|addpart\n            | addchap|addsec|minisec\n          )\n          (?:\\*)?                      # Optional Unnumbered\n        )\n        (?:\n          (\\[)([^\\[]*?)(\\])                # Optional Title\n        )??\n        (\\{)                        # Opening Bracket\n        
(?x)\n        (                          # Capture 1\n          (\\\\)                      # Marker\n          (\n            (?:sub){0,2}section              # Functions\n            | (?:sub)?paragraph\n            | chapter|part|addpart\n            | addchap|addsec|minisec\n          )\n          (?:\\*)?                      # Optional Unnumbered\n        )\n        (?:\n          (\\[)([^\\[]*?)(\\])                # Optional Title\n        )??\n        (\\{)                        # Opening Bracket\n        
(?x)\n        ((\\\\) clef) \\s+  # backslash + \"clef\" + spaces (groups 1-2)\n        (?:\n          (\"?)  # beginning quotes (group 3)\n          (?:\n            ( (?: # group 4\n              treble | violin | G | french |                    # G clefs\n                alto | C | tenor | (?:mezzo)?soprano | baritone | # C clefs\n                (?:sub)?bass | F | varbaritone |                  # F clefs\n                percussion | tab | # percussion / tablature clefs\n                      \n                  (?:neo)?mensural-c[1-4] | mensural-[fg] |     # Ancient clefs\n                petrucci-(?: [fg] | c[1-5] ) |\n                (?: vaticana | medicaea | hufnagel ) - (?: do[1-3] | fa[12] ) |\n                hufnagel-do-fa\n              )\n              ([_^](?:8|15)?)? # optionally shift 1-2 octaves \u2191/\u2193 (group 5)\n            ) |\n            ( (?:\\w+) ([_^](?:8|15))? ) # unknown clef name (groups 6-7)\n          )\n          (\\3) # closing quotes (group 8)\n        )?\n      
(?x)\n        ((\\\\) markup) \\s+ # backslash + \"markup\" + spaces\n        (?={)\n      
(?x)\n        ((\\\\) time) \\s+ # backslash + \"time\" + spaces (groups 1-2)\n        ([1-9][0-9]*/[1-9][0-9]*)?\n      
(?x)\n        (?:  ^                                 # begin-of-line\n          |  \n             (?: (?= \\s )           (?<!else|new|return) (?<=\\w)      #  or word + space before name\n               | (?= \\s*[A-Za-z_] ) (?<!&&)       (?<=[*&>])   #  or type modifier before name\n             )\n        )\n        (\\s*) (?!(while|for|do|if|else|switch|catch|enumerate|return|sizeof|[cr]?iterate)\\s*\\()\n        (\n          (?: [A-Za-z_][A-Za-z0-9_]*+ | :: )++ |                  # actual name\n          (?: (?<=operator) (?: [-*&<>=+!]+ | \\(\\) | \\[\\] ) )  # if it is a C++ operator\n        )\n         \\s*(?=\\()
(?x)\n        (?:  ^                                 # begin-of-line\n          |\n             (?: (?= \\s )           (?<!else|new|return) (?<=\\w)      #  or word + space before name\n               | (?= \\s*[A-Za-z_] ) (?<!&&)       (?<=[*&>])   #  or type modifier before name\n             )\n        )\n        (\\s*) (?!(while|for|do|if|else|switch|catch|enumerate|return|r?iterate)\\s*\\()\n        (\n          (?: [A-Za-z_][A-Za-z0-9_]*+ | :: )++ |                  # actual name\n          (?: (?<=operator) (?: [-*&<>=+!]+ | \\(\\) | \\[\\] ) )  # if it is a C++ operator\n        )\n         \\s*(?=\\()
(?x)\n        (?: (\\\\)\n            (?: set | new | override | revert)\\b\n        )\n      
(?x)\n        (?P<static>[^<]*)                            # static rule data\n        <\n        (?:\n            (?P<variable>[a-zA-Z_][a-zA-Z0-9_]*)     # variable name\n            :                                        # variable delimiter\n        )?\n        (?P<converter>[a-zA-Z_][a-zA-Z0-9_]*)        # converter name\n        >\n    
(?x)\n        (?P<year>\\d{4})-  # the year\n        (?P<month>\\d{2})- # the month\n        (?P<day>\\d{2})   # the day\n    
(?x)\n        (\n            (?P<square_comma>\n                ,                        # trailing comma\n                (?P<square_ws>[\\s\\r\\n]*) # white space\n                (?P<square_bracket>\\])   # bracket\n            )\n          | (?P<curly_comma>\n                ,                        # trailing comma\n                (?P<curly_ws>[\\s\\r\\n]*)  # white space\n                (?P<curly_bracket>\\})    # bracket\n            )\n        )\n      | (?P<code>\n            \"(?:\\\\.|[^\"\\\\])*\"            # double quoted string\n          | .[^,\"']*                     # everything else\n        )\n    
(?x)\n        ^(?P<space>[ \\t]*)\n        (?P<all>\n            (?P<inline_marker>-{2,}8<-{2,}[ ]+)\n            (?P<snippet>(?:\"(?:\\\\\"|[^\"\\n\\r])+?\"|'(?:\\\\'|[^'\\n\\r])+?'))(?![ \\t]) |\n            (?P<block_marker>-{2,}8<-{2,})(?![ \\t])\n        )\\r?$\n        
(?x)\n        ^(?P<space>[ \\t]*)\n        (?P<snippet>.*?)\\r?$\n        
(?x)\n        declare_clippy_lint!\\s*[\\{(]\\s*\n        pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\n        (?P<cat>[a-z_]+)\\s*,\\s*\n        \"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\n    
(?x)\n        declare_deprecated_lint!\\s*[{(]\\s*\n        pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\n        \"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\n    
(?x)\n        test\\s+(?P<name>\\S+)                        # test   mod::test_name\n        \\s+...\\sbench:\\s+(?P<ns>[0-9,]+)\\s+ns/iter  # ... bench: 1234 ns/iter\n        \\s+\\(\\+/-\\s+(?P<variance>[0-9,]+)\\)         # (+/- 4321)\n        (?:\\s+=\\s+(?P<throughput>[0-9,]+)\\sMB/s)?   # =   2314 MB/s\n    
(?x)\n      (')\n      (?:\n        [\\ -\\[\\]-~]                # Basic Char\n        | (\\\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE\n          |DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS\n          |US|SP|DEL|[abfnrtv\\\\\\\"'\\&]))    # Escapes\n        | (\\\\o[0-7]+)                # Octal Escapes\n        | (\\\\x[0-9A-Fa-f]+)            # Hexadecimal Escapes\n        | (\\^[A-Z@\\[\\]\\\\\\^_])            # Control Chars\n      )\n      (')\n      
(?x)\n    (   (^|;) \\s*+ end   \\s*+ ([#].*)? $\n    |   (^|;) \\s*+ end \\. .* $\n    |   ^     \\s*+ [}\\]] ,? \\s*+ ([#].*)? $\n    |   [#] .*? \\(end\\) \\s*+ $      # Sune\u2019s special marker\n    |   ^=end\n    )\n  
(?x)\n    (   (^|;) \\s*+ end   \\s*+ ([#].*)? $\n    |   (^|;) \\s*+ end \\. .* $\n    |   ^     \\s*+ [}\\]] ,? \\s*+ ([#].*)? $\n    |   [#] .*? \\(end\\) \\s*+ $    # Sune\u2019s special marker\n    |   ^=end\n    )
(?x)\n    (   (^|;) \\s*+ end   \\s*+ ([#].*)? $\n    |   ^     \\s*+ [}\\]] \\s*+ ([#].*)? $\n    |   [#] .*? \\(end\\) \\s*+ $    # Sune\u2019s special marker\n    )
(?x)\n    (   ^\\s*+end.*$\n    |   [\\/\\/] .*? \\(end\\) \\s*+ $        # Sune\u2019s special marker\n    |   ^\\s*\\/\\/\\s*\\#endregion\n    )
(?x)\n    (?:\n        (?P<comments>(?:\\r?\\n?\\s*)<!--[\\s\\S]*?-->(?:\\s*)(?=\\r?\\n)|<!--[\\s\\S]*?-->)|\n        (?P<scripts>\n            (?P<script_open><(?P<script_name>style|script))\n            (?P<script_attr>(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'`=<>]+))?)*)\n            (?P<script_rest>\\s*>.*?</(?P=script_name)\\s*>)\n        )|\n        (?P<open><(?P<name>[\\w\\:\\.\\-]+))\n        (?P<attr>(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s\"'`=<>]+))?)*)\n        (?P<close>\\s*(?P<self_close>/)?>)|\n        (?P<close_tag></(?P<close_name>[\\w\\:\\.\\-]+)\\s*>)\n    )\n    
(?x)\n    (?P<fence>~{3,}|`{3,})[ \\t]*                                                   # Fence opening\n    (\\{?                                                                           # Language opening\n    \\.?(?P<lang>[\\w#.+-]*))?[ \\t]*                                                 # Language\n    (?P<options>(?:\\b[a-zA-Z][a-zA-Z0-9_]*=(?:(?P<quot>\"|').*?(?P=quot))?[ \\t]*)*) # Options\n    }?[ \\t]*$                                                                      # Language closing\n    
(?x)\n    (?P<key>[^=]+)\n    \\s*=\\s*\n    (?P<val>\n        \"(?:[^\\\\\"]|\\\\.)*\" |\n         (?:.*?)\n    )\n    \\s*;\n
(?x)\n    (?P<major>\\d+)(?:\\.(?P<minor>\\d+))?(?:\\.(?P<micro>\\d+))?\n    (?:(?P<type>a|b|rc)(?P<pre>\\d+))?\n    (?:\\.post(?P<post>\\d+))?\n    (?:\\.dev(?P<dev>\\d+))?\n    
(?x)\n    \t\t(?:  ^                                 # begin-of-line\n    \t\t  |  \n    \t\t     (?: (?= \\s )           (?<!else|new|return) (?<=\\w)      #  or word + space before name\n    \t\t       | (?= \\s*[A-Za-z_] ) (?<!&&)       (?<=[*&>])   #  or type modifier before name\n    \t\t     )\n    \t\t)\n    \t\t(?<_1>\\s*) (?!(?<_2>while|for|do|if|else|switch|catch|enumerate|return|r?iterate)\\s*\\()\n    \t\t(?<_3>\n    \t\t\t(?: [A-Za-z_][A-Za-z0-9_]*+ | :: )++ |                  # actual name\n    \t\t\t(?: (?<=operator) (?: [-*&<>=+!]+ | \\(\\) | \\[\\] ) )  # if it is a C++ operator\n    \t\t)\n    \t\t \\s*(?=\\()
(?x)\n    \t\t\t\t(?:  ^                                 # begin-of-line\n    \t\t\t\t  |  (?: (?<!else|new|=) )             #  or word + space before name\n    \t\t\t\t)\n    \t\t\t\t(?<_1>(?:[A-Za-z_][A-Za-z0-9_]*::)*+~[A-Za-z_][A-Za-z0-9_]*) # actual name\n    \t\t\t\t \\s*(?<_2>\\()                           # terminating semi-colon\n    \t\t\t
(?x)\n    \t\t\t\t(?:  ^                                 # begin-of-line\n    \t\t\t\t  |  (?: (?<!else|new|=) )             #  or word + space before name\n    \t\t\t\t)\n    \t\t\t\t(?<_1>(?:[A-Za-z_][A-Za-z0-9_]*::)*+~[A-Za-z_][A-Za-z0-9_]*) # actual name\n    \t\t\t\t \\s*(?<_2>\\()                           # start bracket or end-of-line\n    \t\t\t
(?x)\n    \t\t\t\t(?:  ^                                 # begin-of-line\n    \t\t\t\t  |  (?: (?<!else|new|=) )             #  or word + space before name\n    \t\t\t\t)\n\t(?<_1>(?:\\b(?:public|private|protected|static|final|native|synchronized|abstract|threadsafe|transient|export)\\b\\s*)*) # modifier\n    \t\t\t\t(?<_2>~this) # actual name\n    \t\t\t\t \\s*(?<_3>\\()                           # start bracket or end-of-line\n    \t\t\t
(?x)\n    \t\t\t\t(?<_1>\n    \t\t\t\t\t(?!while|for|do|if|else|switch|catch|enumerate|return|r?iterate)(?: \\b[A-Za-z_][A-Za-z0-9_]*+\\b | :: )*+                  # actual name\n    \t\t\t\t)\n    \t\t\t\t \\s*(?<_2>\\()
(?x)\n    ^\\s*\n    (.*class\n    |[a-zA-Z\\$_](\\w|\\$|:|\\.)*\\s*(?=\\:(\\s*\\(.*\\))?\\s*((=|-)>\\s*$)) # function that is not one line\n    |[a-zA-Z\\$_](\\w|\\$|\\.)*\\s*(:|=)\\s*((if|while)(?!.*?then)|for|$) # assignment using multiline if/while/for\n    |(if|else|unless|while)\\b(?!.*?then)|for|loop\\b\n    |(try|finally|catch\\s+\\S.*)\\s*$\n    |.*[-=]>$\n    |.*[\\{\\[]$)
(?x)\n    https?://(www\\.)?ustream\\.tv\n        (?:\n            (/embed/|/channel/id/)(?P<channel_id>\\d+)\n        )?\n        (?:\n            (/embed)?/recorded/(?P<video_id>\\d+)\n        )?\n    
(?x)\n\\$(?:\n    (?P<name>[a-zA-Z_][a-zA-Z0-9_]*)\n  |\n    \\{(?P<name2>[a-zA-Z_][a-zA-Z0-9_]*)\\}\n  )
(?x)\n\t        (?x)\n\t(?:  \n\t     (?: (?= \\s )           (?<!else|new|return) (?<=\\w)\\s+      #  or word + space before name\n\t     )\n\t)\n\t(?<_1>\n\t(?: [A-Za-z_][A-Za-z0-9_]*+ | :: )++    |              # actual name\n\t(?: (?<=operator) (?: [-*&<>=+!]+ | \\(\\) | \\[\\] ) )?  # if it is a C++ operator\n\t)\n\t \\s*(?<_2>\\()
(?x)\n\t    (?<!-)\n\t    (?<=>)\n\t(\n\t( ( ((\\\\)breve)|        # Duration (groups 1-4)\n\t    64|32|16|8|4|2|1\n\t  )\n\t  (\\.+)?                  # Augmentation dot (group 5)\n\t) |\n\t(?![\\s}~a-z]|$)\n\t)\n\t
(?x)\n\t   (?:\n\t     ^                      # beginning of line\n\t   | (?<=                   # or look-behind on:\n\t       [=>~(?:\\[,|&;]\n\t     | [\\s;]if\\s\t\t\t# keywords\n\t     | [\\s;]elsif\\s\n\t     | [\\s;]while\\s\n\t     | [\\s;]unless\\s\n\t     | [\\s;]when\\s\n\t     | [\\s;]assert_match\\s\n\t     | [\\s;]or\\s\t\t\t# boolean opperators\n\t     | [\\s;]and\\s\n\t     | [\\s;]not\\s\n\t     | [\\s.]index\\s\t\t\t# methods\n\t     | [\\s.]scan\\s\n\t     | [\\s.]sub\\s\n\t     | [\\s.]sub!\\s\n\t     | [\\s.]gsub\\s\n\t     | [\\s.]gsub!\\s\n\t     | [\\s.]match\\s\n\t     )\n\t   | (?<=                  # or a look-behind with line anchor:\n\t        ^when\\s            # duplication necessary due to limits of regex\n\t      | ^if\\s\n\t      | ^elsif\\s\n\t      | ^while\\s\n\t      | ^unless\\s\n\t      )\n\t   )\n\t   \\s*(?<_1>(?<_2>\\/))(?![*+{}?])\n\t
(?x)\n\t((\\\\) clef) \\s+  # backslash + \"clef\" + spaces (groups 1-2)\n\t(?:\n\t  (\"?)\t# beginning quotes (group 3)\n\t  (?:\n\t  ( (?: # group 4\n\t  treble | violin | G | french |                    # G clefs\n\t      alto | C | tenor | (?:mezzo)?soprano | baritone | # C clefs\n\t      (?:sub)?bass | F | varbaritone |                  # F clefs\n\t      percussion | tab | # percussion \\/ tablature clefs\n                      \n\t          (?:neo)?mensural-c[1-4] | mensural-[fg] | \t\t# Ancient clefs\n\t      petrucci-(?: [fg] | c[1-5] ) |\n\t      (?: vaticana | medicaea | hufnagel ) - (?: do[1-3] | fa[12] ) |\n\t      hufnagel-do-fa\n\t    )\n\t    ([_^](?:8|15)?)? # optionally shift 1-2 octaves \u2191\\/\u2193 (group 5)\n\t  ) |\n\t  ( (?:\\w+) ([_^](?:8|15))? ) # unknown clef name (groups 6-7)\n\t  )\n\t  (\\3) # closing quotes (group 8)\n\t)?\n\t
(?x)\n\t((\\\\) markup) \\s+ # backslash + \"markup\" + spaces\n\t(?={)\n\t
(?x)\n\t((\\\\) time) \\s+ # backslash + \"time\" + spaces (groups 1-2)\n\t([1-9][0-9]*\\/[1-9][0-9]*)?\n\t
(?x)\n\t(?: (\\\\)\n\t    (?: set | new | override | revert)\\b\n\t)\n\t
(?x)\n\t(?<_1>   (?<_2>^|;) \\s*+ end   \\s*+ (?<_3>[#].*)? $\n\t|   (?<_4>^|;) \\s*+ end \\. .* $\n\t|   ^     \\s*+ [}\\]] ,? \\s*+ (?<_5>[#].*)? $\n\t|   [#] .*? \\(end\\) \\s*+ $    # Sune\u2019s special marker\n\t|   ^=end\n\t)
(?x)\n\t(?<_1>   (?<_2>^|;) \\s*+ end   \\s*+ (?<_3>[#].*)? $\n\t|   (?<_4>^|;) \\s*+ end \\. .* $\n\t|   ^     \\s*+ [}\\]] \\s*+ (?<_5>[#].*)? $\n\t|   [#] .*? \\(end\\) \\s*+ $    # Sune\u2019s special marker\n\t|   ^=end\n\t)
(?x)\n\t(?<_1>   (?<_2>^|;) \\s*+ end   \\s*+ (?<_3>[#].*)? $\n\t|   ^     \\s*+ [}\\]] \\s*+ (?<_4>[#].*)? $\n\t|   [#] .*? \\(end\\) \\s*+ $    # Sune\u2019s special marker\n\t)
(?x)\n\t(?<_1>(?<_2>\\$)(?<name>[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*))\n\t(?:\n\t(?<_3>->)\n\t(?:\n\t(?<_4>\\g<name>)\n\t|\n\t(?<_5>\\$\\g<name>)\n\t)\n\t|\n\t(?<_6>\\[)\n\t(?:(?<_7>\\d+)|(?<_8>(?<_9>\\$)\\g<name>)|(?<_10>\\w+)|(?<_11>.*?))\n\t(?<_12>\\])\n\t)?\n\t
(?x)\n\t(?<_1>')\n\t(?:\n\t[\\ -\\[\\]-~]\t\t\t\t\t\t\t\t# Basic Char\n\t  | (?<_2>\\\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE\n\t|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS\n\t|US|SP|DEL|[abfnrtv\\\\\\\"'\\&]))\t\t# Escapes\n\t  | (?<_3>\\\\o[0-7]+)\t\t\t\t\t\t\t\t# Octal Escapes\n\t  | (?<_4>\\\\x[0-9A-Fa-f]+)\t\t\t\t\t\t# Hexadecimal Escapes\n\t  | (?<_5>\\^[A-Z@\\[\\]\\\\\\^_])\t\t\t\t\t\t# Control Chars\n\t)\n\t(?<_6>')\n\t
(?x)\n\t(?<_1>\n\t(?<_2>\\\\)\t\t\t\t\t\t\t\t\t\t# Marker\n\t(?:foot)?(?:full)?(?:no)?(?:short)?\t\t# Function Name\n\t[cC]ite\n\t(?:al)?(?:t|p|author|year(?:par)?|title)?[ANP]*\n\t\\*?\t\t\t\t\t\t\t\t\t\t\t# Optional Unabreviated\n\t)\n\t(?:(?<_3>\\[)[^\\]]*(?<_4>\\]))?\t\t\t\t\t\t\t\t# Optional\n\t(?:(?<_5>\\[)[^\\]]*(?<_6>\\]))?\t\t\t\t\t\t\t\t#   Arguments\n\t(?<_7>\\{)\t\t\t\t\t\t\t\t\t\t\t# Opening Bracket\n\t
(?x)\n\t(?<_1>\n\t(?<_2>\\}|\\))(?<_3>,|;)?\t\t\t\t\t# Openstep foldings\n\t.*$\t\t\t\t\t\t\t\t# limit false positives\n\t  | (?<_4>^\\s*(?<_5><\\/[^>]+>|\\/>|-->)\\s*$)\t\t# XML\t\t\t\t\t\t\n\t)\n\t
(?x)\n\t(?<_1>\n\t(?<_2>^|=|=[ ]|\\s\\s|\\t)\t\t\t\t# Openstep foldings\n\t(?<_3>\\{|\\()(?!.*(?<_4>\\)|\\}))\t\t\t# spaces before them to \n\t# limit false positives\n\t  | (?<_5>\n\t^\\s*\n\t(?<_6>\n\t<[^!?%\\/](?!.+?(?<_7>\\/>\n\t  | <\\/.+?>))\n\t  | <[!%]--(?!.+?--%?>)\n\t)\n\t)\n\t)\n\t 
(?x)\n\t(?<_1>\t\t\t\t\t\t\t\t\t\t\t\t\t# Capture 1\n\t(?<_2>\\\\)\t\t\t\t\t\t\t\t\t\t\t# Marker\n\t(?:\n\t(?:sub){0,2}section\t\t\t\t\t\t\t# Functions\n\t  | (?:sub)?paragraph\n\t  | chapter|part|addpart\n\t  | addchap|addsec|minisec\n\t)\n\t(?:\\*)?\t\t\t\t\t\t\t\t\t\t\t# Optional Unnumbered\n\t)\n\t(?:\n\t(?<_3>\\[)(?<_4>[^\\[]*?)(?<_5>\\])\t\t\t\t\t\t\t\t# Optional Title\n\t)??\n\t(?<_6>\\{)\t\t\t\t\t\t\t\t\t\t\t\t# Opening Bracket\n\t
(?x)\n\t(?<ft>\n\tmap\\s*<\\s*\\g<ft>\\s*,\\s*\\g<ft>\\s*> |\n\tset\\s*<\\s*\\g<ft>\\s*> |\n\tlist\\s*<\\s*\\g<ft>\\s*>\\s*(?<_1>cpp_type(?!\\S))? |\n\t[a-zA-Z_][\\w.]*\n\t)[ \\t]*\n\t(?:(?<_2>[a-zA-Z_][\\w.]*)[ \\t]*)? # identifier\n\t
(?x)\n\t(\\\\) # backslash\n\t(?:\n\t    p{1,5} | m[pf] | f{1,4} | fp | # forte, piano, etc.\n    \t\t\t\t\t\t[sr]fz | sff? | spp? | \n    \t\t\t\t\t\t< | > | ! | espressivo         # (de)crescendo\n\t)\n\t
(?x)\n\t(\\\\)\n\t(?: accent | markato | staccatissimo |\t\t       # basic accents\n\tespressivo | staccato | tenuto | portato | \n\t(?:up|down)bow | flageolet | thumb |\n\t[lr](?:heel|toe) | open | stopped |\n\t(?:reverse)?turn | trill |\n\tprall(?: prall | mordent | down | up)? |       # pralls\n\t(?: up | down | line ) prall |                 # and\n\t(?: up | down )? mordent |                     # mordents\n\tsignumcongruentiae |\n\t(?: (?:very)? long | short)?fermata(Markup)? | # fermatas\n\tsegno | (?:var)?coda \n\t)\n\t
(?x)\n^(?:\n   # Blank line with optional comment.\n   \\s*(?:\\#.*)?\n |\n   (?:\n     # VAR\n     (?P<var>[a-zA-Z_][a-zA-Z0-9_]*)\n   |\n     # >file\n     >(?P<file>\\S+)\n   )\n   \\s+\n   # path/to/secret:key\n   (?P<path>\\S+?)(?::(?P<key>\\S+))?\n   \\s*\n )$
(?x)^ [ \\t]* \\(\n    (?<par>\n      ( [^()\\n]++ | \\( \\g<par> \\)? )*+\n    )\n  $
(?x)^ [ \\t]* \\(\n\t  (?<par>\n\t    (?<_1> [^(?<_2>)\\n]++ | \\( \\g<par> \\)? )*+\n\t  )\n\t$
(?x)^ [ \\t]*+ \\(\n    (?<par>\n      ( [^()\\n]++ | \\( \\g<par> \\)? )*+\n    )\n  $
(?x)^ [ \\t]*+\n    (?<par>\n      ( [^()\\n]++ | \\( \\g<par> \\) )*+\n    )\n    ( \\) [ \\t]*+ ) ++\n  $
(?x)^\n        (?!  [ ]{,3}>.\n        |  ([ ]{4}|\\t)\n        |  [#]{1,6}\\s*+\n        |  [ ]{,3}(?<marker>[-*_])([ ]{,2}\\k<marker>){2,}[ \\t]*+$\n        )
(?x)^\n        (?!  [ ]{,3}>.\n        |  [#]{1,6}\\s*+\n        |  [ ]{,3}(?<marker>[-*_])([ ]{,2}\\k<marker>){2,}[ \\t]*+$\n        )
(?x)^\n        (?=  [ ]{,3}>.\n        |  ([ ]{4}|\\t)(?!$)\n        |  [#]{1,6}\\s*+\n        |  [ ]{,3}(?<marker>[-*_])([ ]{,2}\\k<marker>){2,}[ \\t]*+$\n        )
(?x)^\n        (?=  [ ]{,3}>.\n        |  [#]{1,6}\\s*+\n        |  [ ]{,3}(?<marker>[-*_])([ ]{,2}\\k<marker>){2,}[ \\t]*+$\n        )
(?x)^\n        (?=  \\s*$\n        |  [ ]{,3}(?<marker>[-*_])([ ]{,2}\\k<marker>){2,}[ \\t]*+$\n        |  [ ]{,3}>.\n        )
(?x)^\n        (?P<op>[<>]=?|~>?=?)?\n        (?:(?P<major>(?:0|[1-9][0-9]*))\n         (?:\\.(?P<minor>(?:0|[1-9][0-9]*))\n          (?:\\.(?P<patch>(?:0|[1-9][0-9]*))\n           (?P<other>[-+][a-zA-Z0-9-+.]*)?\n          )?\n         )?\n        )?$
(?x)^\n        (?P<op>[<>]=?|~>?=?)?\n        (?:(?P<major>(?:0|[1-9][0-9]*)|[xX*])\n         (?:\\.(?P<minor>(?:0|[1-9][0-9]*)|[xX*])\n          (?:\\.(?P<patch>(?:0|[1-9][0-9]*)|[xX*]))?\n         )?\n        )\n        (?P<other>.*)$
(?x)^\n      (?! .* [;:{},] \\s*                  # do not indent when line ends with ;, :, {, }, or comma\n          ( // .* | /[*] .* [*]/ \\s* )? $ #  \u2026account for potential trailing comment\n      |   @(public|private|protected)     # do not indent after obj-c data access keywords\n      )\n      .                                  # the negative look-ahead above means we don\u2019t care about what we match here\n  
(?x)^\n      (\\s*+\n          (module|class|def(?!.*\\bend\\s*$)\n          |unless|if\n          |case\n          |begin\n          |for|while|until\n           |^=begin\n          |(  \"(\\\\.|[^\"])*+\"          # eat a double quoted string\n           | '(\\\\.|[^'])*+'        # eat a single quoted string\n           |   [^#\"']                # eat all but comments and strings\n           )*\n           (                        \\s   (do|begin|case)\n           | (?<!\\$)[-+=&|*/~%^<>~] \\s*+ (if|unless)\n           )\n          )\\b\n          (?! [^;]*+ ; .*? \\bend\\b )\n      |(  \"(\\\\.|[^\"])*+\"              # eat a double quoted string\n       | '(\\\\.|[^'])*+'            # eat a single quoted string\n       |   [^#\"']                    # eat all but comments and strings\n       )*\n       ( \\{ (?!  [^}]*+ \\} )\n       | \\[ (?! [^\\]]*+ \\] )\n       )\n      ).*$\n  |   [#] .*? \\(fold\\) \\s*+ $         # Sune\u2019s special marker\n  
(?x)^\n      (\\s*+\n          (module|class|def(?!.*\\bend\\s*$)\n          |unless|if\n          |case\n          |begin\n          |for|while|until\n           |^=begin\n          |(  \"(\\\\.|[^\"])*+\"          # eat a double quoted string\n           | '(\\\\.|[^'])*+'        # eat a single quoted string\n           |   [^#\"']                # eat all but comments and strings\n           )*\n           (                        \\s   (do|begin|case)\n           | (?<!\\$)[-+=&|*/%^<>~] \\s*+ (if|unless)\n           )\n          )\\b\n          (?! [^;]*+ ; .*? \\bend\\b )\n      |(  \"(\\\\.|[^\"])*+\"              # eat a double quoted string\n       | '(\\\\.|[^'])*+'            # eat a single quoted string\n       |   [^#\"']                    # eat all but comments and strings\n       )*\n       ( \\{ (?!  [^}]*+ \\} )\n       | \\[ (?! [^\\]]*+ \\] )\n       )\n      ).*$\n  |   [#] .*? \\(fold\\) \\s*+ $         # Sune\u2019s special marker\n  
(?x)^\n      (\\s*+\n          (module|class|def\n          |unless|if\n          |case\n          |begin\n          |for|while|until\n          |(  \"(\\\\.|[^\"])*+\"          # eat a double quoted string\n           | '(\\\\.|[^'])*+'        # eat a single quoted string\n           |   [^#\"']                # eat all but comments and strings\n           )*\n           (                 \\s   (do|begin|case)\n           | [-+=&|*/~%^<>~] \\s*+ (if|unless)\n           )\n          )\\b\n          (?! [^;]*+ ; .*? \\bend\\b )\n      |(  \"(\\\\.|[^\"])*+\"              # eat a double quoted string\n       | '(\\\\.|[^'])*+'            # eat a single quoted string\n       |   [^#\"']                    # eat all but comments and strings\n       )*\n       ( \\{ (?!  [^}]*+ \\} )\n       | \\[ (?! [^\\]]*+ \\] )\n       )\n      ).*$\n  |   [#] .*? \\(fold\\) \\s*+ $         # Sune\u2019s special marker\n  
(?x)^\n      (\\s*+\n          (module|class|def\n          |unless|if\n          |case\n          |begin\n          |for|while|until\n          |(  \"(\\\\.|[^\"])*+\"          # eat a double quoted string\n           | '(\\\\.|[^'])*+'        # eat a single quoted string\n           |   [^#\"']                # eat all but comments and strings\n           )*\n           (                \\s   (do|begin|case)\n           | [-+=&|*/~%^<>] \\s*+ (if|unless)\n           )\n          )\\b\n          (?! [^;]*+ ; .*? \\bend\\b )\n      |(  \"(\\\\.|[^\"])*+\"              # eat a double quoted string\n       | '(\\\\.|[^'])*+'            # eat a single quoted string\n       |   [^#\"']                    # eat all but comments and strings\n       )*\n       ( \\{ (?!  [^}]*+ \\} )\n       | \\[ (?! [^\\]]*+ \\] )\n       )\n      ).*$\n  |   [#] .*? \\(fold\\) \\s*+ $         # Sune\u2019s special marker\n  
(?x)^\n    (\\s*\n        (module|class|def\n        |unless|if|else|elsif\n        |case|when\n        |begin|rescue|ensure\n        |for|while|until\n        |(?= .*? \\b(do|begin|case|if|unless)\\b )\n         # the look-ahead above is to quickly discard non-candidates\n         (  \"(\\\\.|[^\\\\\"])*+\"        # eat a double quoted string\n         | '(\\\\.|[^\\\\'])*+'      # eat a single quoted string\n         |   [^#\"']                # eat all but comments and strings\n         )*\n         (                         \\s   (do|begin|case)\n         | [-+=&|*/~%^<>~](?<!\\$.) \\s*+ (if|unless)\n         )\n        )\\b\n        (?! [^;]*+ ; .*? \\bend\\b )\n    |(  \"(\\\\.|[^\\\\\"])*+\"            # eat a double quoted string\n     | '(\\\\.|[^\\\\'])*+'          # eat a single quoted string\n     |   [^#\"']                    # eat all but comments and strings\n     )*\n     ( \\{ (?!  [^}]*+ \\} )\n     | \\[ (?! [^\\]]*+ \\] )\n     )\n    ).*$
(?x)^\n    (\\s*\n      ( module|class|def|unless|if|else|elsif\n      | case|when|begin|rescue|ensure|for|while|until\n      | (?= .*? \\b(do|begin|case|if|unless)\\b)\n        # the look-ahead above is to quickly discard non-candidates\n        # below, *+ is 'possessive' - greedy and does not backtrack after repeated\n        ( \"(\\\\.|[^\\\\\"])*+\"  # eat a double quoted string\n        | '(\\\\.|[^\\\\'])*+'  # eat a single quoted string\n        | [^#\"']            # eat all but comments and strings\n        )*\n        ( \\s (do|begin|case)\n        | [-+=&|*/~%^<>](?<!\\$.) \\s*+ (if|unless)\n        )\n      )\\b\n      (?! [^;]*+ ; .*? \\bend\\b )\n      |\n      ( \"(\\\\.|[^\\\\\"])*+\"  # eat a double quoted string\n      | '(\\\\.|[^\\\\'])*+'  # eat a single quoted string\n      | [^#\"']            # eat all but comments and strings\n      )*\n      ( \\{ (?!  [^}]*+ \\} )\n      | \\[ (?! [^\\]]*+ \\] )\n      )\n    ).*$
(?x)^\n    (\\s*+\n    (define |unless|if\n    |case|select\n    |local method|method\n    |for|while|until\n    |block\n    |(  \"(\\\\.|[^\"])*+\"                # eat a double quoted string\n    | '(\\\\.|[^'])*+'               # eat a single quoted string\n    |   [^#\"']                       # eat all but comments and strings\n    )*\n    (                 \\s   (do|begin|case)\n    | [-+=&|*/~%^<>~] \\s*+ (if|unless)\n    )\n    )\\b\n    (?! [^;]*+ ; .*? \\bend\\b )\n    |(  \"(\\\\.|[^\"])*+\"                  # eat a double quoted string\n    | '(\\\\.|[^'])*+'                 # eat a single quoted string\n    |   [^#\"']                         # eat all but comments and strings\n    )*\n    ( \\{ (?!  [^}]*+ \\} )\n    | \\[ (?! [^\\]]*+ \\] )\n    )\n    ).*$\n    |   [\\/\\/] .*? \\(fold\\) \\s*+ $           # Sune\u2019s special marker\n    |    ^\\s*\\/\\/\\s*\\#region\n    
(?x)^\n\t    (?<_1>\\s*+\n\t        (?<_2>module|class|def(?!.*\\bend\\s*$)\n\t        |unless|if\n\t        |case\n\t        |begin\n\t        |for|while|until\n\t         |^=begin\n\t        |(?<_3>  \"(?<_4>\\\\.|[^\"])*+\"          # eat a double quoted string\n\t         | '(?<_5>\\\\.|[^'])*+'        # eat a single quoted string\n\t         |   [^#\"']                # eat all but comments and strings\n\t         )*\n\t         (?<_6>                        \\s   (?<_7>do|begin|case)\n\t         | (?<!\\$)[-+=&|*\\/~%^<>~] \\s*+ (?<_8>if|unless)\n\t         )\n\t        )\\b\n\t        (?! [^;]*+ ; .*? \\bend\\b )\n\t    |(?<_9>  \"(?<_10>\\\\.|[^\"])*+\"              # eat a double quoted string\n\t     | '(?<_11>\\\\.|[^'])*+'            # eat a single quoted string\n\t     |   [^#\"']                    # eat all but comments and strings\n\t     )*\n\t     (?<_12> \\{ (?!  [^}]*+ \\} )\n\t     | \\[ (?! [^\\]]*+ \\] )\n\t     )\n\t    ).*$\n\t|   [#] .*? \\(fold\\) \\s*+ $         # Sune\u2019s special marker\n\t
(?x)^\n\t    (?<_1>\\s*+\n\t        (?<_2>module|class|def\n\t        |unless|if\n\t        |case\n\t        |begin\n\t        |for|while|until\n\t        |(?<_3>  \"(?<_4>\\\\.|[^\"])*+\"          # eat a double quoted string\n\t         | '(?<_5>\\\\.|[^'])*+'        # eat a single quoted string\n\t         |   [^#\"']                # eat all but comments and strings\n\t         )*\n\t         (?<_6>                 \\s   (?<_7>do|begin|case)\n\t         | [-+=&|*\\/~%^<>~] \\s*+ (?<_8>if|unless)\n\t         )\n\t        )\\b\n\t        (?! [^;]*+ ; .*? \\bend\\b )\n\t    |(?<_9>  \"(?<_10>\\\\.|[^\"])*+\"              # eat a double quoted string\n\t     | '(?<_11>\\\\.|[^'])*+'            # eat a single quoted string\n\t     |   [^#\"']                    # eat all but comments and strings\n\t     )*\n\t     (?<_12> \\{ (?!  [^}]*+ \\} )\n\t     | \\[ (?! [^\\]]*+ \\] )\n\t     )\n\t    ).*$\n\t|   [#] .*? \\(fold\\) \\s*+ $         # Sune\u2019s special marker\n\t
(?x)^\n\t    (?<_1>\\s*+\n\t        (?<_2>module|class|def\n\t        |unless|if\n\t        |case\n\t        |begin\n\t        |for|while|until\n\t |^=begin\n\t        |(?<_3>  \"(?<_4>\\\\.|[^\"])*+\"          # eat a double quoted string\n\t         | '(?<_5>\\\\.|[^'])*+'        # eat a single quoted string\n\t         |   [^#\"']                # eat all but comments and strings\n\t         )*\n\t         (?<_6>                        \\s   (?<_7>do|begin|case)\n\t         | (?<!\\$)[-+=&|*\\/~%^<>~] \\s*+ (?<_8>if|unless)\n\t         )\n\t        )\\b\n\t        (?! [^;]*+ ; .*? \\bend\\b )\n\t    |(?<_9>  \"(?<_10>\\\\.|[^\"])*+\"              # eat a double quoted string\n\t     | '(?<_11>\\\\.|[^'])*+'            # eat a single quoted string\n\t     |   [^#\"']                    # eat all but comments and strings\n\t     )*\n\t     (?<_12> \\{ (?!  [^}]*+ \\} )\n\t     | \\[ (?! [^\\]]*+ \\] )\n\t     )\n\t    ).*$\n\t|   [#] .*? \\(fold\\) \\s*+ $         # Sune\u2019s special marker\n\t
(?x)^\n\t(?=\t[ ]{,3}>.\n\t|\t(?<_1>[ ]{4}|\\t)(?!$)\n\t|\t[#]{1,6}\\s*+\n\t|\t[ ]{,3}(?<marker>[-*_])(?<_2>[ ]{,2}\\k<marker>){2,}[ \\t]*+$\n\t)
(?x)^\\s*\n            (?: # zero or more modifiers\n              (?:\n                (public|private|protected)|(final)|(native|synchronized|abstract|threadsafe|transient)\n              )\n              \\s+\n            )?\n            \\s*  \n            ([A-Z](?:[a-zA-Z0-9_])+) # constructor/class name\n            \\s* \n            (?=\\()\n          
(?x)^\\s*\n            (?:\n              (?: # or modifier and optional type\n                (?:(?:\\b(public|private|protected)|(static)|(final)|(native|synchronized|abstract|threadsafe|transient))\\b\\s+)+\\s* # modifier\n                (?:\\b \n                  (void)\n                  |\n                  (boolean|byte|char|short|int|float|long|double) # primitive\n                  |\n                  ( # or class type\n                    (?:\\w+\\.)*[A-Z]\\w+\\b # Class name\n                    (?:<(?:[\\w, ]*)>)? # optional Generic type\n                    (?:\\[\\s*\\])* # zero or more square brackets (array)\n                  )\n                )?\n              )\n              |\n              (?:\\b # or type by itself\n                (def)\n                |\n                (void)\n                |\n                (boolean|byte|char|short|int|float|long|double) # primitive\n                |\n                ( # or class type\n                  (?:\\w+\\.)*[A-Z]\\w+\\b # Class name\n                  (?:<(?:[\\w, ]*)>)? # optional generics info\n                  (?:\\[\\s*\\])* # zero or more square brackets (array)\n                )\n              )\n            )\n            \\s*\n            (\\w+) # method name\n            \\s* \n            (?=\\() # opening parens \n          
(?x)<(?:pagespeed_)?iframe[^>]+?src=([\"\\'])\n                    (?P<url>http://(?:(?:embed|www)\\.)?\n                        (?:novamov\\.com|\n                           nowvideo\\.(?:ch|sx|eu|at|ag|co)|\n                           videoweed\\.(?:es|com)|\n                           movshare\\.(?:net|sx|ag)|\n                           divxstage\\.(?:eu|net|ch|co|at|ag))\n                        /embed\\.php.+?)\\1
(?x)<div[^>]+\n                class=(?P<q1>[\\'\"])[^\\'\"]*\\bfb-(?:video|post)\\b[^\\'\"]*(?P=q1)[^>]+\n                data-href=(?P<q2>[\\'\"])(?P<url>(?:https?:)?//(?:www\\.)?facebook.com/.+?)(?P=q2)
(?x)<div[^>]+\n            class=(?P<q1>[\\'\"])[^\\'\"]*\\byvii_single_video_player\\b[^\\'\"]*(?P=q1)[^>]+\n            data-video_id=(?P<q2>[\\'\"])([^\\'\"]+)(?P=q2)
(?x)<div\\s+class=\"video_file\">http://smotri\\.com/video/download/file/[^<]+</div>\\s*\n                    <div\\s+class=\"video_image\">[^<]+</div>\\s*\n                    <div\\s+class=\"video_id\">(?P<id>[^<]+)</div>
(?x)<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?admin\\.mangomolo\\.com/analytics/index\\.php/customers/embed/\n                (?:\n                    video\\?.*?\\bid=(?P<video_id>\\d+)|\n                    index\\?.*?\\bchannelid=(?P<channel_id>(?:[A-Za-z0-9+/=]|%2B|%2F|%3D)+)\n                ).+?)\\1
(?x)<script[^>]+src=([\\'\"])\n            (?:https?:)?//embed\\.sendtonews\\.com/player/responsiveembed\\.php\\?\n                .*\\bSC=(?P<SC>[0-9a-zA-Z-]+).*\n            \\1>
(?x)https?://(?:\\w+\\.)?youtube\\.com\n    (?:\n        (?:\n            /(?:watch.+v=|embed/(?!live_stream)|v/)\n            (?P<video_id>[0-9A-z_-]{11})\n        )\n        |\n        (?:\n            /(?:\n                (?:user|channel)/\n                |\n                embed/live_stream\\?channel=\n            )(?P<user>[^/?&]+)\n        )\n        |\n        (?:\n            /(?:c/)?(?P<liveChannel>[^/?]+)/live/?$\n        )\n    )\n
(?x)https?://(?:www\\.)?filmon\\.(?:tv|com)/(?:\n        (?:\n            index/popout\\?\n            |\n            (?:tv/)channel/(?:export\\?)?\n            |\n            tv/(?!channel)\n            |\n            channel/\n            |\n            (?P<is_group>group/)\n        )(?:channel_id=)?(?P<channel>[-_\\w]+)\n    |\n        vod/view/(?P<vod_id>\\d+)-\n    )
(?x:                  # extended mode\n          ((?i:end))              # 1: the word end\n          (                  # followed by\n            $                # end of line\n          |                  # or\n            \\s*                # possibly some space\n            (?i:(function|subroutine))    # 2: function or subroutine\n            ((\\s+[A-Za-z_][A-Za-z0-9_]*)?)  # 3: possibly the name\n          )\n          )
(?x:                # extended mode\n          ^\n          \\s*                  # start of line and possibly some space\n          ([a-zA-Z\\(\\)]*)(?<!end)        # 1: possibly some type specification but not the word end\n          \\s*                  # possibly some space\n          (?i:(function|subroutine))\\b    # 2: function or subroutine\n          \\s+                  # some space\n          ([A-Za-z_][A-Za-z0-9_]*)      # 3: name\n          )
(?x:                # turn on extended mode\n                     \\\\                # a literal backslash\n                     (?:               # ...followed by...\n                       [\"\\\\/bfnrt]     # one of these characters\n                       |               # ...or...\n                       u               # a u\n                       [0-9a-fA-F]{4}  # and four hex digits\n                     )\n                   )
(?x:                # turn on extended mode\n                     \\\\                # a literal backslash\n                     (?:               # ...followed by...\n                       [\"\\\\\\/bfnrt]     # one of these characters\n                       |               # ...or...\n                       u               # a u\n                       [0-9a-fA-F]{4}  # and four hex digits\n                     )\n                   )
(?x:              # extended mode\n    ^\\s*                      # start of line and some space\n    (?i:                      # case insensitive match\n      (\n        if.*then                # if ... then\n        |for|do|select\\s+case|where|interface  # some easy keywords\n        |module(?!\\s*procedure)          # module not followed by procedure\n        |type(?!\\s*\\()              # type but not type(\n      )\n      |                      # ...or...\n      (\n        [a-z]*(?<!end)\\s*(function|subroutine)  # possibly some letters, but not the word end, and a space, then function\n      )\n    )\n    .*$                        # anything until the end of the line\n  )
(?x:          # extended mode\n          ^\n          \\s*          # start of line and possibly some space\n          (?i:(interface))    # 1: word interface\n          \\s+          # some space\n          (?i:(operator|assignment))    # 2: the words operator or assignment\n          \\(          # opening parenthesis\n          ((\\.[a-zA-Z0-9_]+\\.)|[\\+\\-\\=\\/\\*]+)  # 3: an operator\n          \n          \\)          # closing parenthesis\n          )
(?x:          # extended mode\n          ^\n          \\s*          # start of line and possibly some space\n          (?i:(interface))    # 1: word interface\n          \\s+          # some space\n          ([A-Za-z_][A-Za-z0-9_]*)  # 1: name\n          )
(?x:         # turn on extended mode\n                   -?         # an optional minus\n                   (?:\n                     0        # a zero\n                     |        # ...or...\n                     [1-9]    # a 1-9 character\n                     \\d*      # followed by zero or more digits\n                   )\n                   (?:\n                     (?:\n                       \\.     # a period\n                       \\d+    # followed by one or more digits\n                     )?\n                     (?:\n                       [eE]   # an e character\n                       [+-]?  # followed by an option +/-\n                       \\d+    # followed by one or more digits\n                     )?       # make exponent optional\n                   )?         # make decimal portion optional\n                 )
(?x:         # turn on extended mode\n                 -?         # an optional minus\n                 (?:\n                   0        # a zero\n                   |        # ...or...\n                   [1-9]    # a 1-9 character\n                   \\d*      # followed by zero or more digits\n                 )\n                 (?:\n                   \\.       # a period\n                   \\d+      # followed by one or more digits\n                   (?:\n                     [eE]   # an e character\n                     [+-]?  # followed by an option +\\/-\n                     \\d+    # followed by one or more digits\n                   )?       # make exponent optional\n                 )?         # make decimal portion optional\n               )
(?x:        # extended mode\n          ((?i:end))    # 1: the word end\n          \\s*        # possibly some space\n          ((?i:interface)?)   # 2: possibly interface\n          )
(?x:        # turn on extended mode\n                          ^        # a line beginning with\n                          \\s*      # some optional space\n                          [}\\]]    # and the close of an object or array\n                        )
(?x:       # turn on extended mode\n                          ^        # a line beginning with\n                          \\s*      # some optional space\n                          [{\\[]    # the start of an object or array\n                          (?!      # but not followed by\n                            .*     # whatever\n                            [}\\]]  # and the close of an object or array\n                            ,?     # an optional comma\n                            \\s*    # some optional space\n                            $      # at the end of the line\n                          )\n                          |        # ...or...\n                          [{\\[]    # the start of an object or array\n                          \\s*      # some optional space\n                          $        # at the end of the line\n                        )
(?x:      # extended mode\n          ^\\s*      # begining of line and some space\n          (?i:(type))  # 1: word type\n          \\s+      # some space\n          ([a-zA-Z_][a-zA-Z0-9_]*)  # 2: type name\n          )
(?x:      # turn on extended mode\n                            ^         # a line beginning with\n                            \\s*       # some optional space\n                            [{\\[]     # the start of an object or array\n                            (?!       # but not followed by\n                              .*      # whatever\n                              [}\\]]   # and the close of an object or array\n                              ,?      # an optional comma\n                              \\s*     # some optional space\n                              $       # at the end of the line\n                            )         \n                            |         # ...or...\n                            [{\\[]     # the start of an object or array\n                            \\s*       # some optional space\n                            $         # at the end of the line\n                          )
(?x:     # turn on extended mode\n                         ^      # a line beginning with\n                         \\s*    # some optional space\n                         [}\\]]  # and the close of an object or array\n                       )
(?x:  # extended mode\n    ^\\s*          # start of line and some space\n    (?i:(end))        # the word end, case insensitive\n    .*$            # anything until the end of the line\n  )
(?x:(?<=;|^|{)(?=\\s*\n                (?:\n                    (?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final) # visibility/modifier\n                        |\n                    (?:def)\n                        |\n                    (?:\n                        (?:\n                            (?:void|boolean|byte|char|short|int|float|long|double)\n                                |\n                            (?:@?(?:[a-zA-Z]\\w*\\.)*[A-Z]+\\w*) # object type\n                        )\n                        [\\[\\]]*\n                        (?:<.*>)?\n                    ) \n                    \n                )\n                \\s+\n                ([^=]+\\s+)?\\w+\\s*\\(\n      ))
(?x:(?=\n                        (?:\n                            (?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final) # visibility/modifier\n                                |\n                            (?:def)\n                                |\n                            (?:void|boolean|byte|char|short|int|float|long|double)\n                                |\n                            (?:(?:[a-z]\\w*\\.)*[A-Z]+\\w*) # object type\n                        )\n                        \\s+\n                        [\\w\\d_<>\\[\\],\\s]+\n                        (?:=|$)\n                        \n              ))
(?x:(?=\n                        (?:\n                            (?:private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final) # visibility/modifier\n                                |\n                            (?:def)\n                                |\n                            (?:void|boolean|byte|char|short|int|float|long|double)\n                                |\n                            (?:(?:[a-z]\\w*\\.)*[A-Z]+\\w*) # object type\n                        )\n                        \\s+\n                        (?!private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final|def|void|boolean|byte|char|short|int|float|long|double)\n                        [\\w\\d_<>\\[\\],\\?][\\w\\d_<>\\[\\],\\? \\t]*\n                        (?:=|$)\n                        \n          ))
(?x:\n              (([\\|}]+)(\\|)([\\|}]+))?   #  from | to \n              ([^}]*)                   # anything\n              (}})                      # closing brackets\n          )
(?x:\n              ((\\|)[ ]*( [^\\[\\]|]+ )[ ]*)? # pipe, spaces, anything, spaces\n            (\\]\\])                         # closing brackets\n          )
(?x:\n              (\\|[ ]*([^\\[\\]\\|]+)[ ]*)?     # pipe, spaces, anything, spaces\n            (\\]\\])                         # closing brackets\n          )
(?x:\n            (\\[\\[)                         # opening brackets\n              ( [ ]*(((i|I)mage)(:))       # spaces, image, colon\n                ([^\\[\\]|]+)                # anything\n                (?<!\\s)[ ]*                # spaces\n              )\n          )
(?x:\n            (\\[\\[)                       # opening brackets\n              (:)?                       # colon to suppress image or category?\n              ((\\s+):[^\\[\\]]*(?=\\]\\]))?  # a colon after spaces is invalid\n              [ ]*                       # spaces\n              ( (([^\\[\\]|]+)(:))?        # namespace\n                ([^\\[\\]|]+)(?<!\\s)[ ]*   # link name\n              )?\n          )
(?x:\n          ((?i:end))      # 1: the word end\n          \\s*          # possibly some space\n          ((?i:interface)?)     # 2: possibly interface\n          )
(?x:\n          ((?i:end))      # 1: the word end\n          \\s*          # possibly some space\n          (?i:(type))?       # 2: possibly the word type\n          (\\s+[A-Za-z_][A-Za-z0-9_]*)?  # 3: possibly the name\n          )
(?x:\n          ({{)                       # opening brackets\n            ([Rr]edirect|subst:.*)   # redirect?\n            [ ]*                   # spaces\n            (\\|)                   # pipe\n          )
(?x:\n        (\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])\n                      # Match the link text.\n        ([ ])?            # Space not allowed\n        (\\()            # Opening paren for url\n          (<?)(.*?)(>?)      # The url\n          [ \\t]*          # Optional whitespace\n          (?:\n              ((\\().+?(\\)))    # Match title in parens\u2026\n            | ((\").+?(\"))    # or in quotes.\n          )?            # Title is optional\n          \\s*            # Optional whitespace\n        (\\))\n       )
(?x:\n        (\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])\n                      # Match the link text.\n        ([ ])?            # Space not allowed\n        (\\()            # Opening paren for url\n          (<?)(.*?)(>?)     # The url\n          [ \\t]*          # Optional whitespace\n          (?:\n              ((\\().+?(\\)))   # Match title in parens\u2026\n            | ((\").+?(\"))   # or in quotes.\n          )?            # Title is optional\n          \\s*           # Optional whitespace\n        (\\))\n       )
(?x:\n        \\!              # Images start with !\n        (\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])\n                      # Match the link text.\n        ([ ])?            # Space not allowed\n        (\\()            # Opening paren for url\n          (<?)(\\S+?)(>?)      # The url\n          [ \\t]*          # Optional whitespace\n          (?:\n              ((\\().+?(\\)))   # Match title in parens\u2026\n            | ((\").+?(\"))   # or in quotes.\n          )?            # Title is optional\n          \\s*           # Optional whitespace\n        (\\))\n       )
(?x:\n        \\!              # Images start with !\n        (\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])\n                      # Match the link text.\n        ([ ])?            # Space not allowed\n        (\\()            # Opening paren for url\n          (<?)(\\S+?)(>?)      # The url\n          [ \\t]*          # Optional whitespace\n          (?:\n              ((\\().+?(\\)))    # Match title in parens\u2026\n            | ((\").+?(\"))    # or in quotes.\n          )?            # Title is optional\n          \\s*            # Optional whitespace\n        (\\))\n       )
(?x:\n        \\s*            # Leading whitespace\n        (\\[)(.+?)(\\])(:)    # Reference name\n        [ \\t]*          # Optional whitespace\n        (<?)(\\S+?)(>?)      # The url\n        [ \\t]*          # Optional whitespace\n        (?:\n            ((\\().+?(\\)))    # Match title in quotes\u2026\n          | ((\").+?(\"))    # or in parens.\n        )?            # Title is optional\n        \\s*            # Optional whitespace\n        $\n      )
(?x:\n\t    (?<!\\.)\\b # not preceeded by . (?<_1>method call)\n\t    (?!new) # not before new\n\t    (?= # looking forward we see\n\t        (?:\n\t            (?:\\w|<)\\S* # a word (?<_2>modifier or return type) or a parameter type\n\t            \\s+ # some space\n\t            (?:\\w|<)\\S*[^=\\.\\s]*? # another word and anything but =, . or space\n\t            | # or\n\t            [A-Z_]\\w* # a capitalised word (?<_3>i.e. constructor name)\n\t        )\n\t        \\( # and the leading parens of the params\n\t    )\n\t)
(?x:\n\t(?<_1>\\[)(?<_2>(?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(?<_3>\\])\t\n\t# Match the link text.\n\t(?<_4>[ ])?\t\t\t\t\t\t# Space not allowed\n\t(?<_5>\\()\t\t\t\t\t\t# Opening paren for url\n\t(?<_6><?)(?<_7>.*?)(?<_8>>?)\t\t\t# The url\n\t[ \\t]*\t\t\t\t\t# Optional whitespace\n\t(?:\n\t  (?<_9>(?<_10>\\().+?(?<_11>\\)))\t\t# Match title in parens\u2026\n\t| (?<_12>(?<_13>\").+?(?<_14>\"))\t\t# or in quotes.\n\t)?\t\t\t\t\t\t# Title is optional\n\t\\s*\t\t\t\t\t\t# Optional whitespace\n\t(?<_15>\\))\n\t )
(?x:\n\t(?<_1>\\[\\[)                         # opening brackets\n\t  (?<_2> [ ]*(?<_3>(?<_4>(?<_5>i|I)mage)(?<_6>:))       # spaces, image, colon\n\t    (?<_7>[^\\[\\]|]+)                # anything\n\t    (?<!\\s)[ ]*                # spaces\n\t  )\n\t)
(?x:\n\t(?<_1>\\[\\[)                       # opening brackets\n\t  (?<_2>:)?                       # colon to suppress image or category?\n\t  (?<_3>(?<_4>\\s+):[^\\[\\]]*(?=\\]\\]))?  # a colon after spaces is invalid\n\t  [ ]*                       # spaces\n\t  (?<_5> (?<_6>(?<_7>[^\\[\\]|]+)(?<_8>:))?        # namespace\n\t    (?<_9>[^\\[\\]|]+)(?<!\\s)[ ]*   # link name\n\t  )?\n\t)
(?x:\n\t\\!\t\t\t\t\t\t\t# Images start with !\n\t(?<_1>\\[)(?<_2>(?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(?<_3>\\])\t\n\t# Match the link text.\n\t(?<_4>[ ])?\t\t\t\t\t\t# Space not allowed\n\t(?<_5>\\()\t\t\t\t\t\t# Opening paren for url\n\t(?<_6><?)(?<_7>\\S+?)(?<_8>>?)\t\t\t# The url\n\t[ \\t]*\t\t\t\t\t# Optional whitespace\n\t(?:\n\t  (?<_9>(?<_10>\\().+?(?<_11>\\)))\t\t# Match title in parens\u2026\n\t| (?<_12>(?<_13>\").+?(?<_14>\"))\t\t# or in quotes.\n\t)?\t\t\t\t\t\t# Title is optional\n\t\\s*\t\t\t\t\t\t# Optional whitespace\n\t(?<_15>\\))\n\t )
(?x:\n\t\\s*\t\t\t\t\t\t# Leading whitespace\n\t(?<_1>\\[)(?<_2>.+?)(?<_3>\\])(?<_4>:)\t\t# Reference name\n\t[ \\t]*\t\t\t\t\t# Optional whitespace\n\t(?<_5><?)(?<_6>\\S+?)(?<_7>>?)\t\t\t# The url\n\t[ \\t]*\t\t\t\t\t# Optional whitespace\n\t(?:\n\t  (?<_8>(?<_9>\\().+?(?<_10>\\)))\t\t# Match title in quotes\u2026\n\t| (?<_11>(?<_12>\").+?(?<_13>\"))\t\t# or in parens.\n\t)?\t\t\t\t\t\t# Title is optional\n\t\\s*\t\t\t\t\t\t# Optional whitespace\n\t$\n\t)
(?x:\t\t# extended mode\n\t^\\s*\t\t\t\t# start of line and some space\n\t(?i:(?<_1>end))\t\t# the word end, case insensitive\n\t.*$\t\t\t\t# anything until the end of the line\n\t)
(?x:\t\t# extended mode\n\t^\\s*\t\t\t\t\t\t# start of line and some space\n\t(?i:\t\t\t\t\t\t# case insensitive match\n\t(?<_1>\n\tif.*then\t\t\t# if ... then\n\t|for|do|select\\s+case|where|interface\t# some easy keywords\n\t|module(?!\\s*procedure)\t\t\t\t# module not followed by procedure\n\t|type(?!\\s*\\()\t# type but not type(?<_2>\n\t)\n\t|\t\t\t\t\t# ...or...\n\t(?<_3>\n\t[a-z]*(?<!end)\\s*(?<_4>function|subroutine)\t# possibly some letters, but not the word end, and a space, then function\n\t)\n\t)\n\t.*$\t\t\t\t\t\t# anything until the end of the line\n\t)
(?x:\t\t\t# extended mode\n\t^\\s*\t\t\t# begining of line and some space\n\t(?i:(?<_1>type))\t# 1: word type\n\t\\s+\t\t\t# some space\n\t(?<_2>[a-zA-Z_][a-zA-Z0-9_]*)\t# 2: type name\n\t)
(?x:\t\t\t\t\t# extended mode\n\t^\n\t\\s*\t\t\t\t\t# start of line and possibly some space\n\t(?<_1>[a-zA-Z\\(\\)]*)(?<!end)\t# 1: possibly some type specification but not the word end\n\t\\s*\t\t\t\t\t# possibly some space\n\t(?i:(?<_2>function|subroutine))\\b\t# 2: function or subroutine\n\t\\s+\t\t\t\t\t# some space\n\t(?<_3>[A-Za-z_][A-Za-z0-9_]*)\t\t# 3: name\n\t\\s*\t\t\t\t\t# possibly some space\n\t(?<_4>\\()\t\t\t\t\t# 4: opening parenthesis\n\t(?<_5>[^)]*)?  \t\t# 5: arguments (?<_6>anything but a parenthesis)\n\t(?<_7>\\))?\t\t\t\t\t# 6: closing parenthesis\n\t)
(?x:\t\t\t\t\t# extended mode\n\t^\n\t\\s*\t\t\t\t\t# start of line and possibly some space\n\t(?i:(?<_1>interface))\t\t# 1: word interface\n\t\\s+\t\t\t\t\t# some space\n\t(?<_2>[A-Za-z_][A-Za-z0-9_]*)\t# 1: name\n\t)
(?x:\t\t\t\t\t# extended mode\n\t^\n\t\\s*\t\t\t\t\t# start of line and possibly some space\n\t(?i:(?<_1>interface))\t\t# 1: word interface\n\t\\s+\t\t\t\t\t# some space\n\t(?i:(?<_2>operator|assignment))\t\t# 2: the words operator or assignment\n\t\\(\t\t\t\t\t# opening parenthesis\n\t(?<_3>(?<_4>\\.[a-zA-Z0-9_]+\\.)|[\\+\\-\\=\\/\\*]+)\t# 3: an operator\n\t\n\t\\)\t\t\t\t\t# closing parenthesis\n\t)
(?xi) (?<=^|;) \\s* (?:(
(?xi)(?=\n                  (\n                      (\\\\[a-z_][a-z_0-9]*\\\\[a-z_][a-z_0-9\\\\]*)|\n                      ([a-z_][a-z_0-9]*\\\\[a-z_][a-z_0-9\\\\]*)\n                  )\n                  [^a-z_0-9\\\\])
(?xi)\n                    _(?P<width>[0-9]+)x(?P<height>[0-9]+)\n                    _(?P<vcodec>[a-z0-9]+)\n                    _(?P<vbr>[0-9]+)\n                    _(?P<acodec>[a-z0-9]+)\n                    _(?P<abr>[0-9]+)\n                    \\.(?P<ext>[a-z0-9]+)
(?xi)\n    (?:\n        (?P<github>(?P<github_base>https://(?:w{3}\\.)?github.com/(?P<github_user_repo>[^/]+/[^/]+))/\n            (?:issues/(?P<github_issue>\\d+)/?|\n               pull/(?P<github_pull>\\d+)/?|\n               commit/(?P<github_commit>[\\da-f]{40})/?|\n               compare/(?P<github_diff1>[\\da-f]{40})\\.{3}(?P<github_diff2>[\\da-f]{40}))) |\n\n        (?P<bitbucket>(?P<bitbucket_base>https://(?:w{3}\\.)?bitbucket.org/(?P<bitbucket_user_repo>[^/]+/[^/]+))/\n            (?:issues/(?P<bitbucket_issue>\\d+)(?:/[^/]+)?/?|\n               pull-requests/(?P<bitbucket_pull>\\d+)(?:/[^/]+(?:/diff)?)?/?|\n               commits/commit/(?P<bitbucket_commit>[\\da-f]{40})/?|\n               branches/commits/(?P<bitbucket_diff1>[\\da-f]{40})(?:\\.{2}|%0d)(?P<bitbucket_diff2>[\\da-f]{40})\\#diff)) |\n\n        (?P<gitlab>(?P<gitlab_base>https://(?:w{3}\\.)?gitlab.com/(?P<gitlab_user_repo>[^/]+/[^/]+))/\n            (?:issues/(?P<gitlab_issue>\\d+)/?|\n               merge_requests/(?P<gitlab_pull>\\d+)/?|\n               commit/(?P<gitlab_commit>[\\da-f]{40})/?|\n               compare/(?P<gitlab_diff1>[\\da-f]{40})\\.{3}(?P<gitlab_diff2>[\\da-f]{40})))\n    )\n    
(?xi)\\s*(?=\n                [a-z_0-9$\\\\]+(::)\n                        (?:\n                    ([a-z_][a-z_0-9]*)\\s*\\(\n                    |\n                    ((\\$+)[a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*)\n                    |\n                    ([a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*)\n                )?\n            )
(?xi)\\s*(?=\n                [a-z_0-9\\\\]+(::)\n                ([a-z_\\x7f-\\xff][a-z0-9_\\x7f-\\xff]*)?\n            )
(?xi)<iframe\\b[^>]+\\bsrc=([\"\\'])(?P<url>(?:(?:https?:)?//[^/]+)?/Mediasite/Play/[0-9a-f]{32,34}(?:\\?.*?)?)\\1
(?xm)\n            ^(?P<testtoken_start>\\s*\\S+)\n            \\s+SYNTAX\\sTEST\\s+\n            \"(?P<syntax_file>[^\"]+)\"\n            \\s*(?P<testtoken_end>\\S+)?$\n        
(?xm)\n        \\s*(?:\n            (?P<begin_of_token><-)|(?P<range>\\^+)\n        )(.*)$
(?xs)(\n        '(?:[^'\\\\]*(?:\\\\.[^'\\\\]*)*)'  |\n        \"(?:[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"\n    )
(?xs)\n                         ^ (?P<line> .*?)\n                           --@ (?: (?P<line1> \\d+ | < | \\^+ | v+)\n                                   (?: - (?P<line2> \\d+ | < | \\^+ | v+) )?\n                               )?\n                               \\s+ (?P<kind> \\w+): (?P<msg> .*)\n                         $
(?xs)\n                    (?P<q1>[\"'])\n                        (?:https?:)?//cdnapi(?:sec)?\\.kaltura\\.com(?::\\d+)?/(?:(?!(?P=q1)).)*\\b(?:p|partner_id)/(?P<partner_id>\\d+)(?:(?!(?P=q1)).)*\n                    (?P=q1).*?\n                    (?:\n                        (?:\n                            entry_?[Ii]d|\n                            (?P<q2>[\"'])entry_?[Ii]d(?P=q2)\n                        )\\s*:\\s*|\n                        \\[\\s*(?P<q2_1>[\"'])entry_?[Ii]d(?P=q2_1)\\s*\\]\\s*=\\s*\n                    )\n                    (?P<q3>[\"'])(?P<id>(?:(?!(?P=q3)).)+)(?P=q3)\n                
(?xs)\n                    <(?:iframe[^>]+src|meta[^>]+\\bcontent)=(?P<q1>[\"'])\n                      (?:https?:)?//(?:(?:www|cdnapi(?:sec)?)\\.)?kaltura\\.com/(?:(?!(?P=q1)).)*\\b(?:p|partner_id)/(?P<partner_id>\\d+)\n                      (?:(?!(?P=q1)).)*\n                      [?&;]entry_id=(?P<id>(?:(?!(?P=q1))[^&])+)\n                      (?:(?!(?P=q1)).)*\n                    (?P=q1)\n                
(?xs)\n                    kWidget\\.(?:thumb)?[Ee]mbed\\(\n                    \\{.*?\n                        (?P<q1>['\"])wid(?P=q1)\\s*:\\s*\n                        (?P<q2>['\"])_?(?P<partner_id>(?:(?!(?P=q2)).)+)(?P=q2),.*?\n                        (?P<q3>['\"])entry_?[Ii]d(?P=q3)\\s*:\\s*\n                        (?P<q4>['\"])(?P<id>(?:(?!(?P=q4)).)+)(?P=q4)(?:,|\\s*\\})\n                
(?xus)\n    (?:\n        (?P<comments>(\\r?\\n?\\s*)<!--[\\s\\S]*?-->(\\s*)(?=\\r?\\n)|<!--[\\s\\S]*?-->)|\n        (?P<open><(?P<tag>img))\n        (?P<attr>(?:\\s+[\\w\\-:]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'))?)*)\n        (?P<close>\\s*(?:\\/?)>)\n    )\n    
(?xus)\n    (?P<attr>\n        (?:\n            (?P<name>\\s+(?:href|src)\\s*=\\s*)\n            (?P<path>\"[^\"]*\"|'[^']*')\n        )\n    )\n    
(?xus)\n    (?P<attr>\n        (?:\n            (?P<name>\\s+src\\s*=\\s*)\n            (?P<path>\"[^\"]*\"|'[^']*')\n        )\n    )\n    
(@
(@(?P<repo>[[:alnum:]-_.]*[[:alnum:]-_./]*))?//(?P<package>[[:alnum:]-_.]*[[:alnum:]-_./]*):(?P<target>[[:alnum:]_/.+-=,@~.]*)+
(@(param|var) )([\\w\\|\\\\]+)( \\$\\w*)?
(@(param|var) )({[\\w\\|\\\\]*} )?\\$(\\w*)
(@)([ \\t]*)(
(@@)|(\\R)|(!####n####!)|(!####r####!)|(?=@)
(@|\\n|\\\\)
(@<\\w+>\\{(?:[^\\}\\\\]|\\\\.)*?\\})
(@function)(\\s+)(
(@import\\s*[\"']\\s*(?P<url>.*?)[\"'])
(@include)(\\s+)(
(@include\\s*
(@mixin)(\\s+)(
(@mixin\\s*
(@ORM\\\\JoinColumn\\()
(@sanity\\\\[^\\\\]+)\\\\src\\\\
([
([ \\n\\\\])
([ \r\n\t]+)|(%[^\n]*[\n]|[!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff][\u0300-\u036f]*|[\ufffd-\ufffd][\ufffd-\ufffd][\u0300-\u036f]*|\\\\verb\\*([^]).*?\\3|\\\\verb([^*a-zA-Z]).*?\\4|\\\\[a-zA-Z@]+|\\\\[^\ufffd-\ufffd])
([ \r\n\t]+)|(---?|[!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff]|[\ufffd-\ufffd][\ufffd-\ufffd]|\\\\(?:[a-zA-Z]+|[^\ufffd-\ufffd]))
([-!(){}\\[\\]^\"~*?:\\+\\/\\\\])
([#\\\\])
([#a-z0-9\\-\\_]+)\\.{0,1}([#a-z0-9\\-\\_]*)\\s*\\({0,1}\\s*([\\$a-z0-9\\-\\_\\.\\s]*)\\){0,1}([\\!\\?]{0,1})
([$#@])\\\\(\\\\*)([{:])
([$\\\\])
([$\\u00A3\\u00A5\\u20AC#]?)(-?[0-9,]*)(\\.[0-9]*)?+
([$]
([$^.?*!+:=()\\[\\]{}|\\\\])
([$`\\\"\\\\\\\\])
([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1
([$escape_re\"\\\\])
([$escaped\\\\])
-([$chanmodes->[0]])
([%\\\\_])
([%A-Za-z\\\\.\\\\-\\\\_\\\\/ ]+\\\\.(plist|app|pkg))
([&\\$\"\\@\\\\])
([&\\|\\!\\^\\---\\(\\)])
([()[\\]{}\\-.*+?^$|/\\\\])
([()[\\]{}\\-.*+?^$|\\/\\\\])
([-()[\\]{}+?*.$^|,:#<!\\\\])
([()\\',\\[\\]\\?\\!:;\\/.\\+\\-\\*\\#\\{\\}\\\\])
([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])
([()\\\\])
([()\\s\"';&|#\\\\])
([()+.'\\\\])
([(].*?[)])(
([)(\\\\])
([*_\\[\\]\\\\])
([,;\\\\])
([,\\\\])
([.$+?{}()\\[\\]\\\\])
([.*+?\\^${}()|\\[\\]\\/\\\\])
([-.*+?\\^${}()|\\[\\]\\/\\\\])
([.*+?\\^=!:${}()|\\[\\]\\/\\\\])
([.*+?^$(){}|[\\]\\/\\\\])
([.*+?^$\\{\\}()|[\\]\\/\\\\])
([.*+?^${}()|[\\]/\\\\])
([.*+?^${}()|[\\]\\/\\\\])
([-.*+?^${}()|[\\]\\/\\\\])
([.*+?^${}()|[\\]\\\\])
([.*+?^${}()|\\[\\]\\/\\\\])
([.*+?^=!:${}()|[\\]/\\\\])
([.*+?^=!:${}()|[\\]\\/\\\\])
([.*+?^=!:${}()|\\[\\]\\/\\\\])
([.*+?|{}()\\[\\]\\\\])
([.*+?=^!:${}()|[\\]\\/\\\\])
([-.,*+?^${}()|[\\]\\/\\\\])
([.:/\\\\])
([.:\\/\\\\])
([.\\s]*?)[^\\\\](?=((#{)|'))
([.\\s]*?)[^\\\\](?=((#{)|\"))
([.\\s]*?)[^\\\\](?=(}))
([.])([ \\t]*)(
([.+*?=^!:${}()[\\]|/\\\\])
([.+*?=^!:${}()[\\]|\\/\\\\])
([.+*?=^!:()[\\]|\\/\\\\])
([.+?^=!:${}()|[\\]/\\\\])
([.+?^=!:${}()|[\\]\\/\\\\])
([.+?^=!:${}()|\\[\\]\\/\\\\])
([.+\\\\])
([-.+^${}()|[\\]\\/\\\\])
([.+^()|\\${}\\[\\]\\\\])
([.+^=!:${}()|\\[\\]\\/\\\\])
([/:\\\\])
([/\\\\])[/\\\\]+
([/\\\\])[^/\\\\]*$
([/\\\\])lib\\b
([/\\w]+)=(([,\\w]+)|(\"(?:\\\\.|[^\"\\\\])*)\")
([/][*])|([/][/][^\\n]*)|('[^'\\\\]*(?:\\.[^'\\\\]*)*')|(\"[^\"\\\\]*(?:\\.[^\"\\\\]*)*\")
([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}
([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}
([:*])(\\w+)|\\{(\\w+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}
([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')(?=[ \\t]*($|,|]|}))
([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*')(?=[ \\t]*(\\n|$|,|]|}))
([:\\\\])
([:\\]\\\\])
([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}
([:]?)([\\w\\[\\]-]+)|\\{([\\w\\[\\]-]+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}
([;&,\\.\\+\\*\\~'`:\"\\!\\^#$%@\\[\\]\\(\\)=<>\\|\\/? {}\\\\])
([;,\"\\\\])
([;/?:@&=+,\\$\\[\\]%\\\\])
([;\\/\\\\])
([;\\\\])
([?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\])
([?!\\.]) +(['\"([\\x{00bf}\\x{00A1}\\p{IsPi}]+[\\ ]*[\\p{IsUpper}])
([?!\\.][\\ ]*['\")\\]\\p{IsPf}]+) +(['\"([\\x{00bf}\\x{00A1}\\p{IsPi}]*[\\ ]*[\\p{IsUpper}])
([?!]) +(['\"([\\x{00bf}\\x{00A1}\\p{IsPi}]*[\\p{IsUpper}])
([?|&]
([@?+*]\\(|\\/\\*\\*\\/|\\*\\*|[?*]|\\[[\\!\\^]?(?:[^\\]\\\\]|\\\\.)+\\]|\\{|,|\\/|[|)}])
([@\\$\"\\\\])
([[:alnum:]\\/\\.\\-\\_*]+)
([[:alnum:]\\/\\.\\-\\_*]+);([[:digit:]]{1,5})
([[:alpha:]]+)\\\\Form\\\\
([[:digit:]]+)\\pP+(?=[[:digit:]])
([[:upper:]]{1}\\.)\\Q$marker\\E
([[\\]{}~?*\\\\])
([[^$.|?*+(){}\\\\])
([[^[]*])|(\\\\)?(Mo|MM?M?M?|Do|DD?D?D?|dddddd?|ddddd?|dddd?|do?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|zz?|ZZ?|X|LT|ll?l?l?|LL?L?L?)
([\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\'\\\"\\?\\<\\>\\\\])
([\"$\\\\])
([\"$`\\\\])
([\\\"$`\\\\\\\\])
([\"'$`\\\\])
([\".^$]|\\\\(?![*?]))
([\"\\$\\@%\\\\])
([\"\\$\\@\\\\])
([\"'\\/])((?:(?!\\1|\\\\).)*(?:\\\\.(?:(?!\\1|\\\\).)*)*)\\1
(['\"\\/]).*?[^\\\\]\\1|\\.\\w*|\\w*:|\\b(?:(?:new|typeof|in|instanceof) |(?:this|true|false|null|undefined)\\b|function *\\()|([a-z_$]\\w*)
([\\\"\\'](?P<module>[a-z\\.]+)[\\\"\\'])
([\"\\\\])
([\\\"\\\\])
([\"'\\\\])
(['\"\\\\])
([\"\\'])(?P<url>http.+?\\.m3u8.*?)\\1
([\"\\\\])\\1
(['\"\\p{ClosePunctuation}]\\s*\\p{IsEndOfSentenceCharacter}+\\s+)
(['\"\\p{OpenPunctuation}]\\s*\\p{IsEndOfSentenceCharacter}+['\"\\p{ClosePunctuation}]\\s*)$EOS
([\"\\r\\\\])
([\"\\s'$`\\\\])
([\"\\t\\n\\r$`\\\\])
([\"\\t\\n\\r\\\\])
(['\"])((?:[^\\\\]\\\\\\1|.)*?)\\1
([\"'])((?:[^\\\\\\1]|(?:\\\\\\\\)*?\\\\[^\\\\])*?)\\1
([\"'])((\\\\\\n|\\\\.|((?!\\1)(?!\\\\).))*?((?!\\1)(?!\\\\).)?)\\1
([\"'])(.+)\\1(?=\\s?+=>)
([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1
([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]
([\"])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1
([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1
([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1
([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1
([\"'])(?:\\\\\\\\|\\\\?[^\\\\])*?\\1
([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1
([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1
([\"']).*?(?<!\\\\)\\1
(['\"]).*[^\\\\]\\1
([\"']).*\\\\u\\{[0-9a-f]+\\}.*\\1
([\"'])source\\1 *: *([\"']).*?[^\\\\]\\2
([\"'])version\\1 *: *([\"'])(.*?[^\\\\])\\2
(['\"]?)\\(?(global|ref|names)?\\u0012@([\\w\\.\\-\\/\\\\]+?)(\\.css|\\.less|\\.scss|\\.sass|\\.mx|\\.mmx|\\.style)(?::?\\[([\\w-,]+)\\]|:\\.?([\\w\\-]+))?\\)?\\1(;?)
([\"`\\$\\\\])
(['\"`\\/]).*?(?!<\\\\)\\1
([\"'`\\\\])
([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?
([\"`])(\\\\.|(?!\\1)[^\\\\])*\\1[cwd]?
([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1
(['\"`])bare\\x12@([\\w\\.\\-\\/\\\\]+)\\1
([\\\"<>&\\x
([\\#\\&\\;\\`\\|\\*\\?<>\\^\\(\\)\\[\\]\\{\\}\\$\\,\\x0A\\xFF\\' \\\"\\\\])
([\\#\\^\\$\\*\\+\\|\\(\\)\\{\\}\\[\\]\\\\])
([\\$\\\"\\\\])
([\\$\\#\\_\\^\\%])
([\\$\\@\\%]\\s*)\\Q${\\SQL_MARK}\\E
([\\$\\\\])
([\\$\\^\\.\\*\\+\\?\\(\\)\\{\\}\\[\\]\\|\\\\])
([\\$>\\\\])
([\\&\\_\\$\\{\\#])
([\\(\\)\\,\\:\\[\\]\\_\\'\\x00-\\x1f\\x7f])
([\\(\\)\\\\])
([\\(\\[\u00ab])[ \u200c]*[
([\\(=:]\\s*)\\/[^\\*\\/][^\\n]*?[^\\*\\n\\\\](?!\\\\\\/)\\/
([\\)\\(]|\\s+|
([\\*\\(\\)\\\\])
([\\*\\.\\?\\+\\$\\^\\[\\]\\(\\)\\{\\}\\|\\/\\\\])
([\\,\\;\\\\])
([\\,\\;\\s(and)]{0,4}
([\\-.*+?\\^${}()|\\[\\]\\/\\\\])
([\\-.*+?^${}()|[\\]\\/\\\\])
([\\-.*+?^=!:${}()|\\[\\]\\/\\\\])
([\\.\\$\\^\\{\\[\\(\\|\\)\\*\\+\\?\\\\])
([\\.\\(\\)\\^\\$\\*\\+\\?\\|\\[\\]\\{\\}\\\\])
([\\.\\*\\_\\'\\(\\)\\{\\}\\+\\?\\\\])
([\\.\\?\\!:\\\\]\\s*)(\\w)
([\\.\\\\])
([\\.\\^\\$\\?\\+\\[\\]\\{\\}\\(\\)\\|\\\\])
([\\.\\_])+
([\\.\\p{Alnum}]+)\\.[\\p{Alnum}]+
([\\/()[\\]{}|*+-.,^$?\\\\])
([\\/()\\[\\]{}|*+-.,^$?\\\\])
([\\/\"%;\\t\\\\])
([\\/\\.\\*\\+\\?\\|\\(\\)\\[\\]\\{\\}\\\\])
([\\/\\\\])
([\\/\\\\]\\.)|(node_modules)
([\\/\\\\]_)|(^_)
([\\/\\\\]|::)
([\\/\\\\]|^)[^\\/\\\\]+$
([\\/\\{]{2})*(\\s*)(?<!\\[\\[)\\s*(http:\\/\\/[_\\p{IsDigit}\\p{IsAlpha}\\p{IsXDigit};&?:.\\-='\"\\/]{7,})(?!\\|)
([\\/\\{]{2})*(\\s*)(?<!\\[\\[)\\s*(http:\\/\\/[_\\p{IsDigit}\\p{IsAlpha}\\p{IsXDigit};&?:.='\"\\/]{7,})(?!\\|)
([\\:\\-\\_\\.]+(.))
([\\:\\-\\_]+(.))
([\\:\\]\\\\])
([\\[(\\^=,{}:;&|!*?]\\s*)(\\/(\\\\\\/|[^\\/*])(\\\\.|[^\\/\\n\\\\])*\\/[mgi]*)
([\\[\\(])(??{\"[^$close{$1}]+[$close{$1}]\"})
([\\[\\]\\\\])
([\\'\\\"%\\\\])
([\\'\\\"\\(,]\\s*|# sourceMappingURL=)([^\\s\\'\\\"\\)\\(>]+(
([\\'\"\\\\])
([\\'\"])(.*?)(?<!\\\\)(\\1)
([\\'\"])(?P<src>(?:(?!\\1).)+)\\1\\s*,\\s*(?P<val>\\d+)
([\\'\\\\])
([\\-\\_\\s])(\\w)
([\\-\\_])
([\\-\\_]?)([\\%0-9]+)
([\\-\\_]?)([0-9]+)
([\\-\\_][a-z0-9])
([\\-\\s])\\\\ham\\{a\\}([^\\\\])
([\\-\\s])\\\\ham{a}([^\\\\])
([\\\\])
(['\\\\])
([\\\\]*)\\\"
([\\\\]*)\\z
(['\\]\\\\])
([\\\\]+)$
([\\\\]+)\\\\\"
([\\\\]+|/{2,})
([\\^$(){}+*?\\-|\\[\\]\\:\\\\])
([\\^\\$\\(\\)\\[\\]\\{\\}\\*\\.\\+\\?\\|\\\\])
([\\^\\$\\?\\[\\]\\*\\+\\-\\.\\(\\)\\|\\\\])
([\\^\\$\\[\\]\\*\\.\\\\])
([\\^\\/.*+?|()[\\]{}\\\\])
([\\^\\-\\]\\:\\\\])
([\\\\_%])
([\\_\\.\\^]?\\w)\\\\shadda\\{\\}
([\\_\\.\\^]?\\w)\\\\shadda{}
([\\\\_]+)(.)
([\\_A-Z]+)=([a-z0-9]+)
([\\\\`\\*\\_])
([\\`]*
([\\{\\}\\[\\]\\(\\)\\^\\$\\.\\|\\*\\+\\?\\\\])
([\\{\\}\\\\_])
([\\+\\-!\\(\\)\\{\\}\\[\\]\\^\"~\\*\\?:\\\\])
([\\+\\?\\*\\$\\@\\(\\)\\[\\]\\{\\}\\|\\\\])
([\\+\\-\\!\\(\\)\\{\\}\\[\\]\\^\\~\\*\\?\\:\\\\])
([\\>\\\\])
([\\0\\n\\r\\032\\'\\\"\\\\])
([\\000-\\037\\200-\\377()\\\\])
([\\A(]|^asdf(df)s)
([\\A)]|^asdf(df)s)
([\\A\\[~]|^asdf(df)s)
([\\A\\]]|^asdf(df)s)
([\\A]|^asdf(df)s)
([\\d\\.\\-]+)\\\\([\\d\\.\\-]+)
([\\d]|
([\\d_-]\\Q$err\\E|\\Q$err\\E[\\d_-])
([\\d+-\\.]+)\\s*(
([\\h:]*)\\/(\\d.*)$
([\\n\\r\\t\\f\\b\"'\\\\])
([\\p{Alpha}\\p{Digit}$])
([\\p{Alpha}])([^\\p{Space}])
([\\p{Alpha}_][\\p{Alpha}\\p{Digit}@$#_]*)(?:\\(([<>=](?:,\\s*[<>=])*)?(:)?\\))?
([\\p{Digit}])(,|:)([^\\p{Digit}])
([\\p{Han}#]+)
([\\p{Han}+[:alnum:]+#&\\._]+)
([\\p{Hiragana}\\p{Katakana}\u30fc\u2010\u30fb]*)?(?:\u3010(.*)\u3011)?
([\\p{IsAlnum}\\.\\-]*)([\\'\\\"\\)\\]\\%\\p{IsPf}]*)(\\.+)$
([\\p{Letter}\\p{Mark}]+)
([\\pL`]+)
([\\\\\\Q!~<>|\"\\E\\x{FF0D}]+)
([\\Q$bre\\E])
([\\Q$cruftSet\\E]+)$
([\\Q$escapes\\E])
([\\Q$keys\\E])}\n                
([\\Q$match\\E].*){$more,}
([\\Q$separators\\E]+\\s*)
([\\Q+-&|!(){}[]^\"~*?:\\\\\\E])
([\\r\\n:\\\\])
([\\r\\n\\\\])
([\\s;]?)require\\(['\"]([\\w\\_\\-\\.\\/\\@]+)['\"]\\)
([\\s\\\"\\'\\\\]+)
([\\s'\\\\])(?!(?:[^{]|\\{(?!%))*%\\})|(?:\\{%(=|#)([\\s\\S]+?)%\\})|(\\{%)|(%\\})
([\\s\\n]*
([\\s]|[^\\\\]|\\\\\\\\)+
([-\\s]+)(?u)
([\\s]+|origin\\/)(
([\\s|\\-|\\_|\\n])([^\\s|\\-|\\_|\\n]?)
([\\t\\n\\\\])
([\\t\\n\\r\\\"\\\\])}
([\\t\\n\\r\\\\])
([\\u0080-\\uFFFF\\x00-\\x1f\\\"\\'\\\\])
([\\u0080-\\uFFFF]+)|[\\n\\r\\t\"'\\\\]
([\\u{20}-\\u{7e}])
([\\u3040-\\u312f\\u3200-\\u32ff\\u3400-\\u4dbf\\u4e00-\\u9fff\\uf900-\\ufaff])([a-z0-9`@&%=\\$\\^\\*\\-\\+\\|\\/\\\\])
([\u3042-\u3093](?:[\u3041-\u3093\u30fc\u30fd\u30fe]|\\\\CID\\{12107\\})*?)\u300a(.+?)\u300b
([\u30a2-\u30f4](?:[\u30a1-\u30f4\u30fc\u309d\u309e]|\\\\CID\\{12107\\})*?)\u300a(.+?)\u300b
([\\w :\\\\])
([\\w\\*\\s]+\\(\\*\\w*\\)\\(.*?\\)|[\\w\\*\\s\\[\\]]+)(?:
([\\w\\.\\-\\_]*?)[:\\s]*\\{(([^{}]*|(?R))+)\\}
([\\w\\.\\-\\_]+)[\\s:]+(.+?);
([\\w\\.\\-\\_]+?)([\\s:]*)\\{(([^{}]+|(?R))+)\\}
([\\w\\.\\-\\+\\_]+\\@[\\w\\-\\.]+)
([\\w\\.]+)\\s+in\\s+\\(([^()]|(?R))*\\)
([\\w\\-\\_]+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)
([\\w\\-\\+\\.\\_]+)@([\\w\\-\\+\\.]+)
([\\w\\\\]*?)(::)(?=\\b|\\$)
([\\w\\\\]+)::(\\w+)\\((.*)\\)
([\\w\\_\\.]|%[A-Fa-f0-9]{2})+
([\\w\\_\\d]+)\\(([\\w\\W]*)\\)
([\\w\\_]+).*\\[([\\w\\_\\/\\.]+)\\:(\\d+)\\]
([\\w\\_]+)\\.bas$
([\\w\\d\\.\\-\\_]+)\\s+((?<![><=])[\\w\\d\\.\\-\\_]+?(?!\\*))(\\s+[\\w\\d\\.\\_]+)?$
([\\w\\s\\.\\-\\_\\:\\/\\\\\\\"\\'\\`\\#\\+\\{\\}\\[\\]\\;\\*]+)\\(?([\\w\\s\\.\\-\\_\\:\\/\\\\\\\"\\'\\`\\#\\+\\{\\}\\[\\]\\;\\*]+)?\\)?
([\\w-]+)\\s*\\:\\s*(
([\\w]+\\s+)?\\bKEY\\s+(`[^`]+`)?\\s*\\([^)]+(\\(\\d++\\))*\\)
([\\w_.]++)\\s*(?:(=|<>)\\s*(?>'(?>[^']++|'')*+'|[\\d-.]++|([\\w_.]++))|(?:NOT )?IN\\s*\\((?>'(?>[^']++|'')*+',? ?|[\\d-.]++,? ?)*+\\))
([\\w_]++)\\s*=\\s*('(?:[^']++|'')*+'|[\\d-.]++)
([\\w|\\\\]+)(?:\\s+(.*))?
([\\x
([\\x0-\\x1f])
([\\x00-\\x08\\x0B\\x0C\\x0E\\x1F\\x7F-\\x
([\\x00-\\x1F\\*\\(\\)\\\\])
([\\x00-\\x1F\\x7F\"\\\\])
([\\x00-\\x20\\x7F\",;\\\\])
([\\x{0000}-\\x{001f}])
([\\x{0600}-\\x{06FF}])
([\\x{06F0}-\\x{06F9}]+)
([\\x{1000}-\\x{1021}])\\x{1031}([\\x{103b}\\x{103c}\\x{103d}\\x{103e}]+)
([\\x{1000}-\\x{1021}])\\x{1031}(\\x{1039}[\\x{1000}-\\x{1021}])
([\\x{1000}-\\x{1021}])\\x{103b}\\x{1031}\\x{103d}(\\x{103e})?
([\\x{1000}-\\x{1021}])\\x{103c}\\x{1031}\\x{103d}
([\\x{1000}-\\x{1021}])\\x{103c}\\x{103a}
([\\x{1000}-\\x{1021}])\\x{103d}\\x{1031}\\x{103b}
([\\x{1000}-\\x{1021}])\\x{1064}
([\\x{1000}-\\x{1021}])\\x{108b}
([\\x{1000}-\\x{1021}])\\x{108c}
([\\x{1000}-\\x{1021}])\\x{108d}
([\\x{10000}-\\x{10ffff}])
([\\x{10000}-\\x{1FFFF}])
([\\x{20000}-\\x{2FFFF}])
([\\x{2018}-\\x{201f}]|'|\")
([\\x21-\\x7E]
([\\x{256}-\\x{1000}])
([\\x{3041}-\\x{309f}\\.]+)\\s*
([\\x{30a1}-\\x{30ff}]+)\\s*
([\\x80-\\x{10FFFF}])
([-]{1,2}+)([0-9]+)([hdwmy])
([]>]+)\\Q$decimal\\E([[<]+)
([^
([^ !\"\"\\#\\$%&''()*+,\\-.\\/0-9:;<=>?\\@A-Z[\\\\\\]^_`a-z
([^ !\"\\#\\$%&'()*+,\\-.\\/0-9:;<=>?\\@A-Z[\\\\\\]^_`a-z
([^ =]++)=\"([^\"]*)
([^ a-zA-Z0-9\\.\\\\\\-\\/\\_]+)
([^!#&()*+,\\-.\\/0123456789:;<=>?ABCDEFGHIJKLMNOPQRSTUVWXYZ\\[\\]\\^_`abcdefghijklmnopqrstuvwxyz
([^#\\n]|#[^{\\n]|(\\\\\\\\)*\\\\#\\{)+
([^#]#|^#)titlepage(\\[(?P<plain>plain)\\])*
-([^$chanmodes->[3]])
([^%]*)(%\\d*)?(
([^%]*)?%([$
([^&]*
([^*?]*)(?:^|[^\\\\])?[*?]
([^,()]+|\\((?:(?1)|,)*\\))+
([^/\\\\])[\\\\/]+$
([^/\\\\])\\.[^./\\\\]*$
([^/\\\\]+)$
([^/\\\\\\\\]+)$
([^/\\\\]+)\\.t$
([^/\\\\]+)\\.vue$
([^/|\\\\]+)
([^:/\\\\])(?=[/\\\\]|$)
([^:\\s\\%\\3\\A])\\/+
([^:])[\\/\\\\]{2,}
([^:]+):\\s+([^]+)
([^:]+://)?((?P<user>[a-z_][a-z0-9_]{0,30})@)?
([^:=\\\\s][^:=]*)\\\\s*(?P<vi>[:=])\\\\s*(.*)$
([^?]*)\\?(?:\\s*'((?:\\\\.|[^'\\\\])*)'\\s*):\\s*'((?:\\\\.|[^'\\\\])*)'\\s*
([^?]*)\\?(?:\\s*\"((?:\\\\.|[^\"\\\\])*)\"\\s*):\\s*\"((?:\\\\.|[^\"\\\\])*)\"\\s*
([^\" ]+)\\.(
([^\"\\\\])\"\"\\s*\\:
([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"
([^\"\\\\]|\\\\(.|$))+
([^\"\\\\]|\\\\.)*
([^\\\"\\\\]|\\\\.)*\\\"
'([^\\\\\"]|\\\\([abfnrtv\\\\\"'&]|\\^[A-Z@[\\]\\^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'
([^\\#a-zA-Z0-9\\-\\_\\.\\!\\*\\?\\[\\]\\{\\}\\:])
([^\\/\\\\]*)$
([^\\/\\\\]*)\\.[^\\.]*$
([^\\/\\\\]+)$
([^\\/\\\\]+)-([^\\/\\\\]+)\\.([^.]+)$
([^\\/\\\\]+)\\.pm$
([^\\/\\\\]+)\\.pod$
([^\\/\\\\]+)\\.t$
([^\\/\\\\]+)\\.vue$
([^\\/\\\\]+?Initializer).php$
([^\\/\\s]+)\\s*(?:\\/((?:[^\\/\\\\]|(?:\\\\\\/?))+)\\/)?\\s*(-?)
([^\\/\\s]+)\\s*(?:\\/((?:[^\\/\\\\]|(?:\\\\\\/?))+)\\/\\s*(?:\\(((?:[^\\\\\\)]|(?:\\\\[^\\n]))*)\\))?)?\\s*((?:\\^+)|(?:[a-zA-Z_][a-zA-Z_0-9]*))?\\s*(-?)
([^\\/^\\\\]+)
([^\\[]*+)\\[(.*)\\]
([^\\[]*+)\\[(.+)\\]
([^\\[]+)\\[{1}([\\w\\_\\-/]+)
([^\\'\\\\]|\\\\.)*\\'
'([^\\'\\\\\\n\\r]|
([^\\-\\s])(\\\\ham\\{i\\})
([^\\-\\s])(\\\\ham{i})
([^\\\\](?:\\\\\\\\)*)\\.
([^\\\\]([\\\\]{2})*)\\\\\"
([^\\\\](\\\\\\\\)*)\\\\[\\n\\r][[:space:]]*
([^\\\\]) 
([^\\\\])'
([^\\\\])#.*$
([^\\\\])#.*\\Z
([^\\\\])%
([^\\\\])%$
([^\\\\])%name
([^\\\\])((?:\\\\\\\\)*)#
([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))
([^\\\\])(['\"])(.*?)([^\\\\])\\2
([^\\\\])(\\$(\\{.*?\\}|[\\w\\.]+))
([^\\\\])(\\$)
([^\\\\])(\\\\(?!\\\\))
([^\\\\])(\\\\\\\\)*\\.
([^\\\\])(\\\\*)\\2\\\\n
([^\\\\])(\\,)
([^\\\\])(\\\\[^nrt\\\\])
([^\\\\])(\\\\n|\\\\ )+
([^\\\\])(\\s)
([^\\\\])({\\s*([a-zA-Z0-9-_$\\.]+)\\s*})
([^\\\\]),
([^\\\\])','
([^\\\\]),(\\s*,\\s*)*
([^\\\\])/
([^\\\\])/$
([^\\\\]):
([^\\\\])?\\{(\\w+)\\}
([^\\\\])[ \\t\\n]+
([^\\\\])[()]
([^\\\\])\\\\'
([^\\\\])\\-
([^\\\\])\"
([^\\\\])\\\"
([^\\\\])\\\\\\\\\"
([^\\\\])\\\".*?[^\\\\]\\\"
([^\\\\])\"|^\"
([^\\\\])\\$
([^\\\\])\\$$
([^\\\\])\\$\\{\\d+\\}
([^\\\\])\\\\([^\\\\])
([^\\\\])\\\\([^\\\\]|$)
([^\\\\])\\\\(\\d{1,3})
([^\\\\])\\*
([^\\\\])\\.
([^\\\\])\\/
([^\\\\])\\\\:
([^\\\\])\\?
([^\\\\])\\?$
([^\\\\])\\[
([^\\\\])\\|
([^\\\\])\\\\+([^\\\\])
([^\\\\])\\\\=
([^\\\\])\\\\\\\\=
([^\\\\])\\\\n
([^\\\\])\\\\o
([^\\\\])\\\\r
([^\\\\])\\s+$
([^\\\\])\\s+(.*)
([^\\\\])|(\\\\.)
([^\\\\]')|(^')
([^\\\\])~
([^\\\\])a
([^\\\\])A
([^\\\\])ALO
([^\\\\])D
([^\\\\])F
([^\\\\])l
([^\\\\])M
([^\\\\])S
'([^\\\\']*(?:(?:\\\\'|\\\\)[^\\\\']*)*)'
([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'
('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')
'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'
([^\\\\]*)\\..*$
([^\\\\]*?)\\..*?$
([^\\\\]*\\\\)?([^\\\\]*)\\.(sock|spec|json)$
([^\\\\]*\\\\?)
([^\\\\]?)\\\\
([^\\\\]?)\\\\n
([^\\\\]?)<
([^\\\\]-[^\\\\] | [_ ] | \\\\[trnws])
([^\\\\\\\\]\\\"\\\\z|\\\\A\\\"\\\\z)
([^\\\\]\\:|\\s)0(?:em|ex|ch|rem|vw|vh|vm|vmin|cm|mm|in|px|pt|pc|%)
([^\\\\]\\\\\\]$|\\[\\n\\]$)
([^\\]\\='\"]|^)(https?\\:\\/\\/[a-zA-Z0-9\\:\\/\\-\\?\\&\\;\\.\\=\\_\\~\\#\\%\\$\\!\\+\\,]+)
([^\\\\]\\s)*$
([^\\\\]{1,1})%
([^\\\\]{1,1})_
([^'\\\\]|\\\\(.|$))+
'([^\\\\']|\\\\([abfnrtv\\\\\"'&]|\\^[A-Z@[\\]\\^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'
([^\\\\]|\\\\\\\\)\\s*\\n\\s*$
'([^'\\\\]|\\\\.)*'
'([^'\\\\]|\\\\.)*$
([^\\\\]|\\A);
([^\\\\]|^)'
([^\\\\]|^)&
([^\\\\]|^)((?:\\\\\\\\)*)\\\\s
([^\\\\]|^)((?:\\\\\\\\)*)\\\\W
([^\\\\]|^)(\\\\\\\\)*\\$$
([^\\\\]|^)(\\\\\\\\)*\\\\\\d+
([^\\\\]|^)(\\\\\\\\)*\\\\n
([^\\\\]|^)[[*?]
([^\\\\]|^)\"
([^\\\\]|^)\\\\\\$
([^\\\\]|^)\\[
([^\\\\]|^)\\\\`
([^\\\\]|^)\\\\{
([^\\\\]|^)\\n
([^\\\\]|^)<
([^\\\\]|^)>
([^\\\\]|^|[^\\\\])([\\\\]{2})*[
([^\\\\]+)$
([^\\\\]+)\\\\([^\\\\]+)
([^\\\\]+)\\\\?
([^\\\\]+)\\\\altaffilmark{([^\\\\]+)}
([^\\\\]+)Controller$
([^\\\\]+)Generator
([^\\\\]+)Vertex$
([^\\\\]+?)(flow)?$
([^\\\\]+?)(type)?$
([^\\\\]+|\\A)[~/]\\Z
([^\\\\]++\\\\)++
([^\\`\\\\]+$)
([^\\}\\s])\\\\ham\\{a\\}
([^\\}\\s])\\\\ham{a}
([^\\}])(\\\\ham\\{w\\})
([^\\}])(\\\\ham\\{y\\})
([^\\}])(\\\\ham{w})
([^\\}])(\\\\ham{y})
([^\\047\"/\\000-\\040]+)|((?:(?:\\047[^\\047\\\\\\r\\n]*(?:\\\\(?:[^\\r\\n]|\\r?\\n|\\r)[^\\047\\\\\\r\\n]*)*\\047)|(?:\"[^\"\\\\\\r\\n]*(?:\\\\(?:[^\\r\\n]|\\r?\\n|\\r)[^\"\\\\\\r\\n]*)*\"))[^\\047\"/\\000-\\040]*)|(?:(?<=[(,=:\\[!&|?{};\\r\\n])(?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/))*((?:/(?![\\r\\n/*])[^/\\\\\\[\\r\\n]*(?:(?:\\\\[^\\r\\n]|(?:\\[[^\\\\\\]\\r\\n]*(?:\\\\[^\\r\\n][^\\\\\\]\\r\\n]*)*\\]))[^/\\\\\\[\\r\\n]*)*/)[^\\047\"/\\000-\\040]*))|(?:(?<=[\\000-#%-,./:-@\\[-^`{-~-]return)(?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/))*((?:/(?![\\r\\n/*])[^/\\\\\\[\\r\\n]*(?:(?:\\\\[^\\r\\n]|(?:\\[[^\\\\\\]\\r\\n]*(?:\\\\[^\\r\\n][^\\\\\\]\\r\\n]*)*\\]))[^/\\\\\\[\\r\\n]*)*/)[^\\047\"/\\000-\\040]*))|(?<=[^\\000-!#%&(*,./:-@\\[\\\\^`{|~])(?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/))*(?:((?:(?://[^\\r\\n]*)?[\\r\\n]))(?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/))*)+(?=[^\\000-#%-\\047)*,./:-@\\\\-^`|-~])|(?<=[^\\000-#%-,./:-@\\[-^`{-~-])((?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/)))+(?=[^\\000-#%-,./:-@\\[-^`{-~-])|(?<=\\+)((?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/)))+(?=\\+\\+)|(?<=-)((?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/)))+(?=--)|(?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/))+|(?:(?:(?://[^\\r\\n]*)?[\\r\\n])(?:[\\000-\\011\\013\\014\\016-\\040]|(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/))*)+
([^\\40-\\176\\\\])
([^\\\\A-Z\\x{c1}\\x{c9}\\x{cd}\\x{d3}\\x{da}a-z\\x{e1}\\x{e9}\\x{ed}\\x{f3}\\x{fa}'-][A-Z\\x{c1}\\x{c9}\\x{cd}\\x{d3}\\x{da}a-z\\x{e1}\\x{e9}\\x{ed}\\x{f3}\\x{fa}])([.?!])
([^\\a-zA-Z0-9\\-\\_\\.])
([^\\n]{
([^\\p{Common}]+)
([^\\p{Digit}])(,|:)
([^\\p{Digit}])(,|:)(\\p{Digit})
([^\\p{javaLowerCase}\\p{javaUpperCase}])+$
([^\\p{Letter}\\p{Digit}\\-_.:])
([^\\p{Upper}]*)(\\p{Upper}*)
([^\\p{Upper}_])(\\p{Upper}+)
([^\\pL\\pN]|^)(\\pL|\\pN)
([^\\pL\\s\\d])
([^\\pL0-9]\\s*)\\/([^\\/].*?[^\\\\])\\/
([^\\PP.\\-_])
([^\\PS+])
([^\\Q;/?:@&=+,\\$\\[\\]%-_.!~*'()\\EA-Za-z0-9])
([^\\Q+-*/=\\E]+)([\\Q+-*/\\E]?)\\=\\\"\\+\\((.*)\\)\\+\\\"$
([^\\s,\"=]*)\\s*=\\s*([^\\s,\"]+|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")\\s*
([^\\s\\[{(>
([^\\s]*)github\\.com[\\/\\\\]gapid
([^\\s]*)src[\\/\\\\]runtime
([^\\s']+?)(?=test(?:[\\/\\\\])feature(?:[\\/\\\\]))
([^\\s]+?)\\s+(.*+)
([^\\sa-zA-Z0-9\\\\])(\\^|\\\\A)?(.*?)(\\$|\\\\z|\\\\Z)?\\1[a-zA-Z]*
([^\\u0040\\u0023\\p{Alnum}\\p{Space}\\.\\u2014\\u8212?\\-\\?\\?\\?\\!'`,:/\\u0027\\u0091\\u0092\\u2019\\u201A\\u201B\\u203A\\u2018\\u2039\\u00B7])
([^\\w\\r\\n]{0,
([^\\w]*?)$prefix([A-Z()\\[\\]0-9\\._]*)\\|\\[(.*?)(?<!\\\\)\\]
([^\\x
([^\\x00-\\x7F]|[.*+?^=!:${}()|\\[\\]\\/\\\\]|&\\s+)
([^\\x{1040}-\\x{1049}])\\x{1040}$
([^\\x{1040}-\\x{1049}])\\x{1040}(?=[\\\\f\\\\n\\\\r])
([^\\x{1040}-\\x{1049}])\\x{1040}([^\\x{1040}-\\x{1049}]|[\\x{104a}\\x{104b}])
([^\\x{200C}\\x{200D}\\P{Join_Control}])
([^\\x{32}-\\x{128}])
([^]*?);
([^]*?)\\n{2,}
([^']\\S*|'.+?(?<!\\\\)')\\s*
'([^']++)'
([^{,a-zA-Z0-9_\\\\x24\\.])\\Q$block_var\\E:
([^|\\\\]+|\\\\.)+
([^-+={}<()\\\\]+)(?=[-+=*<{}])?
([^= ]+)='((?:\\\\.|[^'\\\\])*)'
([^= ]+)=\"((?:\\\\.|[^\"\\\\])*)\"
([^=,\\s]*)\\s*=\\s*((?:\"(?:\\\\.|[^\"\\\\]+)*\"|'(?:\\\\.|[^'\\\\]+)*')|[^'\"\\s]*)
([^=]*)=(\\s*\".*?[^\\\\]\";?|\\S*)\\s*
([^=]*)=\\s*\"(.*?[^\\\\])\"\\s*
([^=]+)=(U|[\\d\\.,\\-]+)([\\pL\\/%]*);?([\\d\\.,\\-:~@]+)?;?([\\d\\.,\\-:~@]+)?;?([\\d\\.,\\-]+)?;?([\\d\\.,\\-]+)?;?\\s*
([^=]+)=\"((?:[\\\\][\"\\\\]|[^\"\\\\])+)\"(:?,|$)
([^=]+?(?:\\\\\\\\)*$)
([^=]++)=\"([^\"]*)\" *
([^0-9a-zA-Z-\\\\\\\"\\_\\.\\/\\:])
([^A-Z]):(?!\\\\)
([^a-z0-9\\-\\_])
([^a-z0-9\\_\\\\])
([^a-z0-9_\\\\]+)
([^a-zA-Z\\-\\_0-9])
([^a-zA-Z0-9 \\!\\#\\$\\%\\&\\(\\)\\*\\+\\,\\-\\.\\/\\:\\;\\=\\?\\@\\^\\_\\{\\|\\}]+)
([^A-Za-z0-9;\\/\\?\\:\\@\\&\\=\\+\\$,\\[\\]\\-\\_\\.\\!\\~\\*\\'\\(\\)%\\#])
([^A-Za-z0-9\\'\\(\\)\\*\\+\\,\\-\\/\\<\\>\\:\\;\\?\\_])
([^a-zA-Z0-9\\-\\_\\.\\!\\~\\*\\'\\(\\)\\/])
([^A-Za-z0-9\\-_.!~*'()/:\\$@&=+,;?\\\\\\]\\[^`|<>
([^A-Za-z0-9\\_\\:\\.])
([^a-zA-Z0-9\\_]+)
([^a-zA-Z0-9\\x{007f}-\\x{ffe5}\\-\\_\\@]+)+
([^a-zA-Z0-9_.
([^a-zA-Z0-9_.-
([^a-zA-Z0-9_\\\\x24\\.])\\Q$block_var\\E([^a-zA-Z0-9_\\\\x24:])
([_%\\\\])
([_'%\\\\])
([_-\\s]?([a-z0-9]+))
([_a-z]|
([_a-z0-9-]|
([`\"\\$\\\\])
([`\"'\\\\])
(['`\"])((?:[^\\\\]\\\\\\1|.)*?)\\1
([`\\\\])
(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1
([{,])\\s*([0-9a-zA-Z\\_]+)\\s*:
([|])(\\s*)(
([|])(\\s+)(
([|<>\\\\])
([~`!\\@#\\$\\%^&*()_+\\-=\\[\\]{};:'\",<\\.>\\/\\?\\|\\\\]+)
([+!(){}\\[\\]^\"~*?:\\\\]|\\&\\&|\\|\\|)
([+\\-!(){}\\[\\]^\"~:/]|\\\\(?![*?])|&&|\\|\\|)
([+\\-|!(){}\\[\\]\\^'\"~*?:\\\\])
([+\\-=!(){}\\[\\]^\"~:/]|\\\\(?![*?])|\\\\u|&&|\\|\\|)
([+]
([-+])?0[xX](((\\p{XDigit}+)\\.?)|((\\p{XDigit}*)\\.(\\p{XDigit}+)))[pP]([-+])?(\\p{Digit}+)[fFdD]?
([+{($^|.\\\\])
([<>\"\\\\])
([=<>()|!@~&/^$\\-\\'\\\"\\\\])
([0-5]?[0-9](?=?(?!?)))|((?<=((?<!(?|??|\\d))([0-2]?[0-9])(?|?)))[0-5]?[0-9](?!?))
([0-5]?[0-9](?=?))|((?<=?)[0-5]?[0-9])
([0-7]|
([0-9???????????])(?)
([0-9???????????]+)(?)
([0-9???????????]+)(??)
([0-9???????????]+)??(?)
([0-9???????????]+)??(??|??)
([0-9\\.\\+\\-]*)[\\s](
([0-9\\.\\+\\-]*)[\\s]([0-9\\.\\+\\-]*)[\\s]([0-9\\.\\+\\-]*)[\\s](
([0-9\\.\\+\\-]*)[\\s]([0-9\\.\\+\\-]*)[\\s]([0-9\\.\\+\\-]*)[\\s]([0-9\\.\\+\\-]*)[\\s]([0-9\\.\\+\\-]*)[\\s](
([0-9\u00ef\u00bc\u0090-\u00ef\u00bc\u0099]*[\\p{Han}\u00e3\u0082\u00b1\u00e3\u0083\u00b6]+[0-9\u00ef\u00bc\u0090-\u00ef\u00bc\u0099]*|[^\\p{Han}]+)
([0-9]{1,2})[-,/,\\\\]([0-9]{1,2})([-,/,\\\\]([0-9]{1,4}))?
([0-9]{1,2})[-,/,\\\\]([0-9]{1,2})[-,/,\\\\]([0-9]{1,4})
([0-9]{12}]*)\\_(.*)
([0-9]{2})\\9([0-9]{4})([0-9]{4})
([0-9]+\\s*\\.?\\s*\\(?[SBU/NTSC]+\\)[ ]*)  # Something like 1. (C)\n                    |(\\-{3,}|={3,}|_{3,}|/{3,}|\\#{3,}|\\*{3,}|\\.{3,})      # Section delimiters\n                    |(\\s*[A-Z]+\\s+[0-9 \\.]+OF\\s+[0-9]+)    # Section numbers like ROME 0001 003.2 OF 004\n                    |(^[0-9]+\\s*\\.\\s*)                     # Paragraph numbering without classification\n                    |((END )?\\s*SUMMAR?Y(\\s+AND\\s+COMMENT)?(\\s+AND\\s+ACTION\\s+REQUEST)?\\s*\\.?:?[ ]*) # Introduction/end of summary\n                    |((END )?\\s*COMMENT\\s*\\.?:?[ ]*)       # Introduction/end of comment\n                    |(^\\s*SIPDIS\\s*)                       # Trends to occur randomly ;)\n                    
([0-9]+\\s*\\.?\\s*\\(?[SBU/NTSC]+\\)[ ]*)  # Something like 1. (C)\n                    |(\\-{3,}|={3,}|_{3,}|/{3,}|\\#{3,}|\\*{3,}|\\.{4,})      # Section delimiters\n                    |(\\s*[A-Z]+\\s+[0-9 \\.]+OF\\s+[0-9]+)    # Section numbers like ROME 0001 003.2 OF 004\n                    |(^[0-9]+\\s*\\.\\s*)                     # Paragraph numbering without classification\n                    |((END )?\\s*SUMMAR?Y(\\s+AND\\s+COMMENT)?(\\s+AND\\s+ACTION\\s+REQUEST)?\\s*\\.?:?[ ]*) # Introduction/end of summary\n                    |((END )?\\s*COMMENT\\s*\\.?:?[ ]*)       # Introduction/end of comment\n                    |(^\\s*SIPDIS\\s*)                       # Trends to occur randomly ;)\n                    |((?<=[a-z])?xx+)                      # xxx\n                    
([0-9a-f]{
([0-9a-zA-Z\\.\\-\\_]+)\\s+x\\.x
([0-9a-zA-Z\\_\\-]*?\\.jpe?g|png|gif)
([AE@IU][12]?|=[.#:\\^/\\\\]|[\\^#][!:\\\\]|.)
([a-f0-9]{40}) refs/(remotes/
([achlmqstvz])([0-9e\\.,\\+-\\s]*)
([a-z\\-\\_\\/]*)#([a-z\\-\\_]*)
--([a-z\\-]+)([\\s=]+)?['\"]?((?!--)[-\\w/.,\\\\]+)?['\"]?
([a-z\\_]+)\\s+\\:\\s+(.*)
([a-z\\d\\-\\_\\.\\/]+)
([a-z]*)\\h(.*)\\h\\((.*)\\)
([A-Z]:\\\\)\\\\*[^\\\\]+\\\\+\\.\\.$
([A-Z][a-z]{
([a-z][a-zA-Z\\d@_]*+)\\s*+(,)?
([a-z][a-zA-Z\\d@_]*+)\\s*+(/)
([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(,)?
([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(/)
([A-Z]{2,5}+)
([A-Z]+) \\([A-Z\\_]+\\)
([a-z]+) => ([+-]? [0-9]+ (?: \\. [0-9]+ )?+|(?:(?:\\')(?:[^\\\\\\']*(?:\\\\.[^\\\\\\']*)*)(?:\\')))
([a-z]+)\\s+([^]*)
([a-z]+)=([^,\\\\ ][^,\\\\]*(?:\\\\.[^,\\\\]*)*)
([a-z-]+)=(\"[^\"]+(?<!\\\\)\"|[^,]+)
([a-z]+:)?[/\\\\]
([A-Z]+[A-Za-z0-9\\_]*)\\_([0-9]*)
(--[a-z-_]+|-[a-z])(=([a-zA-Z-._\\/\\\\]+))?
([A-z_0-9]+)\\s*\\[label=\\\"([^\\\\]+)
([a-z0-9!
([A-Z0-9\\!\\#\\$\\&\\.\\+\\-\\^\\_]{1,127})/([A-Z0-9\\!\\#\\$\\&\\.\\+\\-\\^\\_]{1,127})
([a-z0-9\\.\\-\\_]+)
([a-z0-9\\.\\_\\/\\%\\-]+)
([a-z0-9\\.\\_\\-\\:]+)\\#?([a-z0-9_-]+)?
([a-z0-9\\-\\_\\/]{3,})
([a-z0-9\\-\\_\\@\\$])+\\=\\\"
([a-z0-9\\-\\_]+)=\"(.*?)(\\{\\{.+?\\}\\})(.*?)\"
([a-z0-9\\_:-]+)\\s*(?:=\\s*('[^']*'|\"[^\"]*\"|[^'\"\\s]+))?()
([a-z0-9\\_]+)(\\?|\\=)?$
([A-Z0-9\\_]+): (.+)\\s*
([a-z0-9\\_]+)\\s*\\=\\s*[\\\"]{1}([^\\\"]+)[\\\"]{1}
([a-z0-9]{2})[/\\\\]([a-z0-9]{38})
([a-z0-9]+((\\_)([a-z0-9]+))*)+((\\.)[a-z0-9]+((\\_)([a-z0-9]+))*)+
([-a-zA-Z$._][-a-zA-Z$._0-9]*|
([a-zA-Z\\-\\_0-9\\.]+)/([a-zA-Z\\-\\_0-9\\.]+)
([a-zA-Z\\\\])
([A-Za-z\\_]*?)\\((.*?)\\)
([a-zA-Z\\_][a-zA-Z0-9\\_]*)\\(
([A-Za-z]*)\\\\([A-Za-z]*)
([a-zA-Z]:[\\/\\\\\\\\]+(?:[^:*?\\\"<>|;]+[\\/\\\\\\\\]*)*)
([a-zA-z-]+)=(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')
([a-zA-Z_][a-zA-Z_\\.\\d]*+)
([A-Za-z_][A-Za-z0-9_]*)(
([a-zA-Z0-9\\!\\$\\&\\*\\+\\-\\.\\/\\:\\;\\<\\>\\?\\[\\]\\^\\_\\`\\|]+)\\s*(\\=)
([a-zA-Z0-9\\.\\-\\_\\s\\(\\)]+)\\.([a-zA-Z0-9]+)$
([a-zA-Z0-9\\-\\.\\_]+@[a-zA-Z0-9\\-\\.\\_]+\\.[a-zA-Z0-9\\-\\.\\_]+)
([a-zA-Z0-9\\-\\_\\.\\/]+)
([a-zA-Z0-9\\-\\_\\.]+)(=|<=|>=|<|>|~)(.*)
([a-zA-Z0-9\\\\]+Bundle)
([a-zA-Z0-9\\_\\-\\*]+):not\\(([^\\)]*)\\)
([a-zA-Z0-9\\_\\-\\*]+):nth-child\\(([^\\)]*)\\)
([a-zA-Z0-9\\_\\-\\.]*?)\\.(lib)$
([a-zA-Z0-9\\_\\-]+)(\\(([a-zA-Z0-9\\_\\-\\., ]+)\\))?
([A-Za-z0-9\\_]+)$
([a-zA-Z0-9\\_]+)[\\s]*\\([\\s]*\\$module[\\s]*\\,[\\s]*\\$data\\_block[\\s]*\\,[\\s]*\\$lang\\_block[\\s]*\\)
([a-zA-Z0-9\\_]+)[\\s]*\\([\\s]*\\$module[\\s]*\\,[\\s]*\\$lang\\_block[\\s]*\\)
([a-zA-Z0-9\\_]+)\\s+(\\d+)\\s+(\\d+)
([A-Za-z0-9]*)\\\\([A-Za-z0-9]*)Bundle\\\\(Propel)\\\\(.*)
([a-zA-Z0-9]+://([a-zA-Z0-9\\:\\_\\-\\.])+(/)?)(.)*
([a-zA-Z0-9_\\xFF-\\x{10FFFF}]+)(?:\\+([0-9]+))\\(FP\\)
([A-Za-z0-9_]!|[A-Za-z0-9_?])(
([A-Za-z0-9_])+|['\"`](\\\\.|[^'\"`\\\\\\\\])*['\"`]
([a-zA-Z0-9_]+)\\s+extends\\s+([a-zA-Z0-9_\\\\]*ServiceProvider)
([a-zA-Z0-9_]+\\\\[a-zA-Z0-9_]+)\\\\(.+)
([a-zA-Z0-9+$\u2019\u201d\\]\\)@#!\\/]|[\\d[\u5e74\u6708\u65e5]]{2,})((?![\u5e74\u6708\u65e5\u53f7])\\p{Han})
([hH][dD][lL]:\n                          |https?://hdl\\.handle\\.net/)\n                         (?P<hdl_id>\\S+/\\S+)
([iI]|y\\\\O\\{\\})'(|\\\\D\\{\\})
([iI]|y\\\\O{})'(|\\\\D{})
([iIuU]})(\\\\ham\\{a\\})
([iIuU]})(\\\\ham{a})
([msixpodualgcern]*+)$
([ptdf]\\.|system\\.|get\\_|is\\_|set\\_)+([^=]*)
([r
(\\\\
(\\\\ |[^\\s\\\\])\\s+$
(\\ +)(def 
(\\!?(?<!\\\\)\\$\\{?([a-zA-Z0-9_]+)(\\(\\))*(((\\.[a-zA-Z0-9_]+(\\(\\))*)*(\\[\\$*[a-zA-Z_.0-9]+\\])*)*)\\}?)
(\"
(\"((\\\\.)|[^\"])*\"|\\\\.|[^\\}
(\"(?:[^\"\\\\]*(?:\\\\\\\\)*(?:\\\\\"?)?)*(?:\"|$))|(\\'(?:[^\\'\\\\]*(?:\\\\\\\\)*(?:\\\\\\'?)?)*(?:\\'|$))|(?:\\/\\/(?:.|\r|\t)*?(\n|$))|(?:\\/\\*(?:.|\n|\r|\t)*?(?:\\*\\/|$))
(\"(?:[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")[ ,]*|([^ ,]+)[ ,]*|[ ,]+
(\"(?:[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|'(?:[^'\\\\]*(?:\\\\.[^'\\\\]*)*)'|[^\\s]+)
(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')
(\"(?:[^\"\\\\]+|\\\\.)*\")
(\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*')
(\"(?:\\\\.|[^\"\\\\\\\\])*\"|[^,]*)(?:\\s*,\\s*|\\s*$)
(\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')
(\"([^\"\\\\]|\\\\.)*\")
(\"([^\\\\\"]|\\\\.|\\\\)*\")|('([^\\\\']|\\\\.|\\\\)*')
(\\\"([^\\\\\\\\\\\"]|\\\\\\\\.|\\\\\\\\)*\\\")|('([^\\\\\\\\']|\\\\\\\\.|\\\\\\\\)*')
(\\\"([^\\\\\\\"]|\\\\.|\\\\)*\\\")|(\\'([^\\\\\\']|\\\\.|\\\\)*\\')
(\\\"([^\\n\\r\\f\\\\\\\"]|\\\\
(\"(\\\\\\\\)*)(?!\\\\)
(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)
(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)
(\"(<a .+?a>|[^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)*')
(\"(<a .+?a>|[^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)?')
(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])
(\"?
(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")
(\\\"[^\\\"\\\\\\\\]*(?:\\\\\\\\.[^\\\"\\\\\\\\]*)*\\\")
(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|_(?:[^ \\n<]|<(?![-0-9:#@ ]*>))*|[^ \\n:#@\\[\\]\"<>]+|[:#@\\[\\]<>])
(\"[^\"]*+\")+( DESC)?
(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1
(\"\\s*\\.\\s*\\$(
(\"\\s*\\.\\s+(
(\"|')(#\\{[^}]+\\}|\\\\(?:\\r?\\n|\\r)|\\\\?.)*?\\1
(\"|')((?:\\\\.|[^\"\\\\])*)(\"|')
(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1
(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*?\\1
(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1
(\"|')(?:[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*?\\1
(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1
(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"
(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1
(\"|')(?=
(\"|')(?P<swf>[^\"']+.swf)(\"|')
(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1
(\"|')(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\])*\\1
(\"|')(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1
(\"|')(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"
(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1
(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1
(\"|').+?[^\\\\]\\1|\\.\\w*|\\$\\w*|\\w*:|\\b(?:this|true|false|null|undefined|new|typeof|Number|String|Object|Array|Math|Date|JSON)\\b|([a-z_]\\w*)\\(|([a-z_]\\w*)
(\"|').+?[^\\\\]\\1|\\.\\w*|\\w*:|\\b(?:this|true|false|null|new|typeof|Number|String|Object|Array|Math|Date)\\b|([a-z_]\\w*)
(\"|').+?[^\\\\]\\1|\\.\\w*|\\w*:|\\b(?:this|true|false|null|undefined|new|typeof|Number|String|Object|Array|Math|Date|JSON)\\b|([a-z_]\\w*)
(\"|[^\\\\]\")
(\"|\\\\(?![*?]))
(\"|\\\\(?![*?])|\\+)
(\"|\\\\)
(\\\"|\\\\)
(\"|\\')(?P<url>(/|[a-zA-Z]:\\\\)[\\w/\\s\\\\\\.\\-]*)(\"|\\')(, line (?P<line>\\d*))?
(\\\\\"|\\\\[0-7]{1,3}\\D|\\\\[abfnrtv]|\\\\\\\\)
(\\\"|\\]|\\\\)
(\\\"|\\'|\\\\)
(\"|'|\\\\)
(\"|'|\\)|\\\\)
(\"|'|`)[^\\\\]*(\\\\+-?[0-7]{1,3}(?![0-9]))(?:.|\\n|\\t|\\u2028|\\u2029)*(?:\\1)
(\"a|\"o|\"u|\\\\3)
(\"card_number\\\\?\":\\\\?\")[^\"\\\\]*
(\\#)(
(\\$
(\\$(
(\\$)(
(\\$)((\\\\)([bdefnrstv\\\\'\"]|(\\^)[@-_]|[0-7]{1,3}))
(\\$\\$?|\\\\(?:begin|end)\\{[a-z]*\\*?\\}|\\\\[{}$]|[{}]|(?:\\n\\s*)+|@@\\d+@@|\\\\\\\\(?:\\(|\\)|\\[|\\]))
(\\$\\$kameleon\\_data\\_dir|\\$\\${kameleon\\_data\\_dir})(.*)
(\\$\\.
(\\$\\{|(\\A|[^\\\\])(\\\\\\\\)*\")
(\\${|`|\\\\)
(\\\\\\$|\\\\\"|\\\\'|'|\\r|\\t|\\\\t|\\n|\\\\n|\\\\\\\\)
(\\$|\\@|\\\\)
(\\$+?[a-z0-9\\_]+?\\s*?)\\(.+?\\)
(\\$PROTECTED-(?P<num>[0-9]*))
(\\$this->initializer[0-9a-f]++) && \\1->__invoke\\(\\$this->(valueHolder[0-9a-f]++), (.*?), \\1\\);
(\\$VERSION\\s*=\\s')([\\d\\.\\_]+)'
(\\%
(\\&\\#(\\d
(\\((?:[^\\[\\]\\(\\)\\{\\}]*+\\g<1>*+)*+\\)|\\[(?:[^\\[\\]\\(\\)\\{\\}]*+\\g<1>*+)*+\\]|\\{(?:[^\\[\\]\\(\\)\\{\\}]*+\\g<1>*+)*+\\})
(\\(([^()]|(?R))*\\))
(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]
(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]
(\\()(\\s*)(
(\\\\(.)(\\\\?\\w{1,2}))
(\\\\(.))
(\\\\(.))(?=(?:[^\"]|\"[^\"]*\")*$)
(\\\\(.))|(;)|(\\/)
(\\\\(.)\\{(\\\\?\\w{1,2})\\})
(\\\\(?! ))
(\\\\(?:$DIAC_RE_BASE|$ACCENTS_RE))\\{\\\\i\\}
(\\\\(?:(
(\\\\(?:[0x]..|c?.))
(\\\\(?:[a-fA-F0-9]{1,6}\\x20|\\x20))?(\\x20{2,})
(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})
(\\\\(?:M[-^].|\\^.|[0-7]{3}|\\\\|[0abtnvfrs]))
(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)
(\\\\\\\\(?=\\\\*[{}])|\\\\[{}]|[{}\\n])
(\\\\(?P<escaped>.)|(?P<unescaped>[^\\\\]+)|(?P<error>.+))
(\\\\([\\[$.|?*+\\]]))
(\\\\([^ ]))(?=(?:[^\"]|\"[^\"]*\")*$)
(\\'([^\\n\\r\\f\\\\']|\\\\
(\\\\([0-7]{1,3}))
(\\\\([ntvbrf\\\\$qq]))
(\\'(\\\\\\\\)*)(?!\\\\)
(\\(\\)|{}|\\[\\]|
(\\\\(\\\\|\")|[^\"])*
(\\\\\\\\(\\\\\\\\|N|n))
(\\(\\Q$expression\\E\\))
(\\\\(\\w+)(\\d+))
(\\\\(\\w+\\*?)[ \\t]+(\\S+))
(\\(|,\\s?)([\\w\\\\]*?)(?=\\s\\$)
(\\(|\\)|\\\\)
(\\(|\\)|\\,|\\s|\\'|\\\"|\\\\)
(\\(|\\[|\\{|\\+|\\-|\\*|\\/|\\>|\\<|\\=|\\!|\\,|\\;|\\?|\\:|\\&|\\|)\\s*([a-z\\_0-9\\$]+)
(\\(|\\[|\\s)+(
(\\(|\\||\\)|\\\\(?!w\\*)|\\[|\\|-|\\.|\\^|\\+|\\$|\\?|^(?!w)\\*)
(\\(dist[\\/|\\\\]\\w*.js:)(\\d*)(:)(\\d*)(\\))
(\\\\)
(\\\\\\\\)
(\\\\)(.)(\\\\.|.)*?(\\2)
(\\\\)(.*)$\\n?
(\\\\)([\\S]*)
(\\\\)([^a-zA-Z]|[A-Za-z]+)(?=\\b|\\}|\\]|\\^|\\_)
(\\\\)([^utrn])
(\\-)([0-9]+\\.[0-9]*
(\\\\)([bdefnrstv\\\\'\"]|(\\^)[@-_]|[0-7]{1,3})
(\\\\)(\\*|_|`|\\!)
(\\\\)(arccos|arcsin|arctan|arg|cos|cosh|cot|coth|csc|deg|det|dim|exp|gcd|hom|inf|ker|lg|lim|liminf|limsup|ln|log|max|min|pr|sec|sin|sinh|sup|tan|tanh)\\b
(\\\\)(backmatter|else|fi|frontmatter|ftrue|mainmatter|if(case|cat|dim|eof|false|hbox|hmode|inner|mmode|num|odd|undefined|vbox|vmode|void|x)?)\\b
(\\\\)(newcommand|renewcommand)\\b
(\\\\)(s(s(earrow|warrow|lash)|h(ort(downarrow|uparrow|parallel|leftarrow|rightarrow|mid)|arp)|tar|i(gma|m(eq)?)|u(cc(sim|n(sim|approx)|curlyeq|eq|approx)?|pset(neq(q)?|plus(eq)?|eq(q)?)?|rd|m|bset(neq(q)?|plus(eq)?|eq(q)?)?)|p(hericalangle|adesuit)|e(tminus|arrow)|q(su(pset(eq)?|bset(eq)?)|c(up|ap)|uare)|warrow|m(ile|all(s(etminus|mile)|frown)))|h(slash|ook(leftarrow|rightarrow)|eartsuit|bar)|R(sh|ightarrow|e|bag)|Gam(e|ma)|n(s(hort(parallel|mid)|im|u(cc(eq)?|pseteq(q)?|bseteq))|Rightarrow|n(earrow|warrow)|cong|triangle(left(eq(slant)?)?|right(eq(slant)?)?)|i(plus)?|u|p(lus|arallel|rec(eq)?)|e(q|arrow|g|xists)|v(dash|Dash)|warrow|le(ss|q(slant|q)?|ft(arrow|rightarrow))|a(tural|bla)|VDash|rightarrow|g(tr|eq(slant|q)?)|mid|Left(arrow|rightarrow))|c(hi|irc(eq|le(d(circ|S|dash|ast)|arrow(left|right)))?|o(ng|prod|lon|mplement)|dot(s|p)?|u(p|r(vearrow(left|right)|ly(eq(succ|prec)|vee(downarrow|uparrow)?|wedge(downarrow|uparrow)?)))|enterdot|lubsuit|ap)|Xi|Maps(to(char)?|from(char)?)|B(ox|umpeq|bbk)|t(h(ick(sim|approx)|e(ta|refore))|imes|op|wohead(leftarrow|rightarrow)|a(u|lloblong)|riangle(down|q|left(eq(slant)?)?|right(eq(slant)?)?)?)|i(n(t(er(cal|leave))?|plus|fty)?|ota|math)|S(igma|u(pset|bset))|zeta|o(slash|times|int|dot|plus|vee|wedge|lessthan|greaterthan|m(inus|ega)|b(slash|long|ar))|d(i(v(ideontimes)?|a(g(down|up)|mond(suit)?)|gamma)|o(t(plus|eq(dot)?)|ublebarwedge|wn(harpoon(left|right)|downarrows|arrow))|d(ots|agger)|elta|a(sh(v|leftarrow|rightarrow)|leth|gger))|Y(down|up|left|right)|C(up|ap)|u(n(lhd|rhd)|p(silon|harpoon(left|right)|downarrow|uparrows|lus|arrow)|lcorner|rcorner)|jmath|Theta|Im|p(si|hi|i(tchfork)?|erp|ar(tial|allel)|r(ime|o(d|pto)|ec(sim|n(sim|approx)|curlyeq|eq|approx)?)|m)|e(t(h|a)|psilon|q(slant(less|gtr)|circ|uiv)|ll|xists|mptyset)|Omega|D(iamond|ownarrow|elta)|v(d(ots|ash)|ee(bar)?|Dash|ar(s(igma|u(psetneq(q)?|bsetneq(q)?))|nothing|curly(vee|wedge)|t(heta|imes|riangle(left|right)?)|o(slash|circle|times|dot|plus|vee|wedge|lessthan|ast|greaterthan|minus|b(slash|ar))|p(hi|i|ropto)|epsilon|kappa|rho|bigcirc))|kappa|Up(silon|downarrow|arrow)|Join|f(orall|lat|a(t(s(emi|lash)|bslash)|llingdotseq)|rown)|P(si|hi|i)|w(p|edge|r)|l(hd|n(sim|eq(q)?|approx)|ceil|times|ightning|o(ng(left(arrow|rightarrow)|rightarrow|maps(to|from))|zenge|oparrow(left|right))|dot(s|p)|e(ss(sim|dot|eq(qgtr|gtr)|approx|gtr)|q(slant|q)?|ft(slice|harpoon(down|up)|threetimes|leftarrows|arrow(t(ail|riangle))?|right(squigarrow|harpoons|arrow(s|triangle|eq)?))|adsto)|vertneqq|floor|l(c(orner|eil)|floor|l|bracket)?|a(ngle|mbda)|rcorner|bag)|a(s(ymp|t)|ngle|pprox(eq)?|l(pha|eph)|rrownot|malg)|V(dash|vdash)|r(h(o|d)|ceil|times|i(singdotseq|ght(s(quigarrow|lice)|harpoon(down|up)|threetimes|left(harpoons|arrows)|arrow(t(ail|riangle))?|rightarrows))|floor|angle|r(ceil|parenthesis|floor|bracket)|bag)|g(n(sim|eq(q)?|approx)|tr(sim|dot|eq(qless|less)|less|approx)|imel|eq(slant|q)?|vertneqq|amma|g(g)?)|Finv|xi|m(ho|i(nuso|d)|o(o|dels)|u(ltimap)?|p|e(asuredangle|rge)|aps(to|from(char)?))|b(i(n(dnasrepma|ampersand)|g(s(tar|qc(up|ap))|nplus|c(irc|u(p|rly(vee|wedge))|ap)|triangle(down|up)|interleave|o(times|dot|plus)|uplus|parallel|vee|wedge|box))|o(t|wtie|x(slash|circle|times|dot|plus|empty|ast|minus|b(slash|ox|ar)))|u(llet|mpeq)|e(cause|t(h|ween|a))|lack(square|triangle(down|left|right)?|lozenge)|a(ck(s(im(eq)?|lash)|prime|epsilon)|r(o|wedge))|bslash)|L(sh|ong(left(arrow|rightarrow)|rightarrow|maps(to|from))|eft(arrow|rightarrow)|leftarrow|ambda|bag)|Arrownot)\\b
(\\\\)(sum|prod|coprod|int|oint|bigcap|bigcup|bigsqcup|bigvee|bigwedge|bigodot|bigotimes|bogoplus|biguplus)\\b
(\\\\)(text(s(terling|ixoldstyle|urd|e(ction|venoldstyle|rvicemark))|yen|n(ineoldstyle|umero|aira)|c(ircledP|o(py(left|right)|lonmonetary)|urrency|e(nt(oldstyle)?|lsius))|t(hree(superior|oldstyle|quarters(emdash)?)|i(ldelow|mes)|w(o(superior|oldstyle)|elveudash)|rademark)|interrobang(down)?|zerooldstyle|o(hm|ne(superior|half|oldstyle|quarter)|penbullet|rd(feminine|masculine))|d(i(scount|ed|v(orced)?)|o(ng|wnarrow|llar(oldstyle)?)|egree|agger(dbl)?|blhyphen(char)?)|uparrow|p(ilcrow|e(so|r(t(housand|enthousand)|iodcentered))|aragraph|m)|e(stimated|ightoldstyle|uro)|quotes(traight(dblbase|base)|ingle)|f(iveoldstyle|ouroldstyle|lorin|ractionsolidus)|won|l(not|ira|e(ftarrow|af)|quill|angle|brackdbl)|a(s(cii(caron|dieresis|acute|grave|macron|breve)|teriskcentered)|cutedbl)|r(ightarrow|e(cipe|ferencemark|gistered)|quill|angle|brackdbl)|g(uarani|ravedbl)|m(ho|inus|u(sicalnote)?|arried)|b(igcircle|orn|ullet|lank|a(ht|rdbl)|rokenbar)))\\b
(\\))(\\s*)(:)(\\s+)(
(\\))\\s*+(\\.)
(\\\\)*$
(\\\\)*'$
(\\\\\\\\)*(\\\\)?/
(\\\\)*\"$
(\\\\\\\\)*\\\\\\(
(\\\\\\\\)*\\\\\\(\\?:
(\\\\\\\\)*\\\\?\\/
(\\\\).|([*?]|\\[.*\\]|\\{.*\\}|\\(.*\\|.*\\)|^!)
(\\\\).|([@?!+*]\\(.*\\))
(\\\\)?#\\[((?:.|\\n)*)$
(\\\\)?#\\{(.+)
(\\\\)?#\\{([^}]+)\\}
(\\\\)?#\\{.+\\}
(\\\\)?#{(.*?)}
(\\\\)?(?:\\[\\[([
(\\\\)?([#!])\\{
(\\\\)?([#!])\\{(.*?)\\}
(\\\\)?([#!]){((?:.|\\n)*)$
(\\\\)?([#!]){((?:.|\\n)*)$$
(\\\\)?([#!]){(.*?)}
(\\\\)?([#!]){([^}]*)}
(\\\\)?([:.\\[\\],])
(\\\\)?([A-Z])
(\\\\)?(\\$)(\\()?\\{?([A-Z0-9_]+)?\\}?
(\\\\)?(\\?)
(\\\\)?(\\{\\{([^\\}\\n]+)\\}\\})
(\\\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S)
(\\\\)?(kbd|btn):\\[(
(\\)?)\\s*+(\\.)
(\\\\)?[$sigils]
(\\\\)?\\$(?:\\{(-?\\d+|\\*)(-)?(-?\\d+)?\\}|(-?\\d+|\\*))
(\\\\\\\\)?\\(([^)]+)\\)
(\\\\\\\\\\\\\\\\)?\\([^)]+\\)
(\\\\)?\\*
(\\\\)?\\\\\\*
(\\\\)?\\.
(\\\\)?\\\\\\.
(\\\\)?\\.(\\*)?
(\\\\)?\\.\\*
(\\\\)?\\{(
(\\\\)?\\{((set|counter2?):.+?|\\w+(?:[\\-]\\w+)*)(\\\\)?\\}
(\\\\)?\\{\\{([^\\}]+)\\}\\}
(\\\\\\\\)?\\{\\{([^\\}]+)\\}\\}
(\\\\)?\\<\\<(\\w+)\\>\\>\n              }
(\\\\)?\\b(GLOB_(MARK|BRACE|NO(SORT|CHECK|ESCAPE)|ONLYDIR|ERR|AVAILABLE_FLAGS)|XML_(SAX_IMPL|HTML_DOCUMENT_NODE|N(OTATION_NODE|AMESPACE_DECL_NODE)|C(OMMENT_NODE|DATA_SECTION_NODE)|TEXT_NODE|OPTION_(SKIP_(TAGSTART|WHITE)|CASE_FOLDING|TARGET_ENCODING)|D(TD_NODE|OCUMENT_(NODE|TYPE_NODE|FRAG_NODE))|PI_NODE|E(RROR_(RECURSIVE_ENTITY_REF|MISPLACED_XML_PI|B(INARY_ENTITY_REF|AD_CHAR_REF)|SYNTAX|NO(NE|_(MEMORY|ELEMENTS))|TAG_MISMATCH|IN(CORRECT_ENCODING|VALID_TOKEN)|DUPLICATE_ATTRIBUTE|UN(CLOSED_(CDATA_SECTION|TOKEN)|DEFINED_ENTITY|KNOWN_ENCODING)|JUNK_AFTER_DOC_ELEMENT|PAR(TIAL_CHAR|AM_ENTITY_REF)|EXTERNAL_ENTITY_HANDLING|A(SYNC_ENTITY|TTRIBUTE_EXTERNAL_ENTITY_REF))|NTITY_(REF_NODE|NODE|DECL_NODE)|LEMENT_(NODE|DECL_NODE))|LOCAL_NAMESPACE|ATTRIBUTE_(N(MTOKEN(S)?|O(TATION|DE))|CDATA|ID(REF(S)?)?|DECL_NODE|EN(TITY|UMERATION)))|M(HASH_(RIPEMD(1(28|60)|256|320)|GOST|MD(2|4|5)|S(HA(1|2(24|56)|384|512)|NEFRU256)|HAVAL(1(28|92|60)|2(24|56))|CRC32(B)?|TIGER(1(28|60))?|WHIRLPOOL|ADLER32)|YSQL(_(BOTH|NUM|CLIENT_(SSL|COMPRESS|I(GNORE_SPACE|NTERACTIVE))|ASSOC)|I_(RE(PORT_(STRICT|INDEX|OFF|ERROR|ALL)|FRESH_(GRANT|MASTER|BACKUP_LOG|S(TATUS|LAVE)|HOSTS|T(HREADS|ABLES)|LOG)|AD_DEFAULT_(GROUP|FILE))|GROUP_FLAG|MULTIPLE_KEY_FLAG|B(INARY_FLAG|OTH|LOB_FLAG)|S(T(MT_ATTR_(CURSOR_TYPE|UPDATE_MAX_LENGTH|PREFETCH_ROWS)|ORE_RESULT)|E(RVER_QUERY_(NO_(GOOD_INDEX_USED|INDEX_USED)|WAS_SLOW)|T_(CHARSET_NAME|FLAG)))|N(O(_D(EFAULT_VALUE_FLAG|ATA)|T_NULL_FLAG)|UM(_FLAG)?)|C(URSOR_TYPE_(READ_ONLY|SCROLLABLE|NO_CURSOR|FOR_UPDATE)|LIENT_(SSL|NO_SCHEMA|COMPRESS|I(GNORE_SPACE|NTERACTIVE)|FOUND_ROWS))|T(YPE_(GEOMETRY|MEDIUM_BLOB|B(IT|LOB)|S(HORT|TRING|ET)|YEAR|N(ULL|EWD(ECIMAL|ATE))|CHAR|TI(ME(STAMP)?|NY(_BLOB)?)|INT(24|ERVAL)|D(OUBLE|ECIMAL|ATE(TIME)?)|ENUM|VAR_STRING|FLOAT|LONG(_BLOB|LONG)?)|IMESTAMP_FLAG)|INIT_COMMAND|ZEROFILL_FLAG|O(N_UPDATE_NOW_FLAG|PT_(NET_(READ_BUFFER_SIZE|CMD_BUFFER_SIZE)|CONNECT_TIMEOUT|INT_AND_FLOAT_NATIVE|LOCAL_INFILE))|D(EBUG_TRACE_ENABLED|ATA_TRUNCATED)|U(SE_RESULT|N(SIGNED_FLAG|IQUE_KEY_FLAG))|P(RI_KEY_FLAG|ART_KEY_FLAG)|ENUM_FLAG|A(S(SOC|YNC)|UTO_INCREMENT_FLAG)))|CRYPT_(R(C(2|6)|IJNDAEL_(1(28|92)|256)|AND)|GOST|XTEA|M(ODE_(STREAM|NOFB|C(BC|FB)|OFB|ECB)|ARS)|BLOWFISH(_COMPAT)?|S(ERPENT|KIPJACK|AFER(128|PLUS|64))|C(RYPT|AST_(128|256))|T(RIPLEDES|HREEWAY|WOFISH)|IDEA|3DES|DE(S|CRYPT|V_(RANDOM|URANDOM))|PANAMA|EN(CRYPT|IGNA)|WAKE|LOKI97|ARCFOUR(_IV)?))|S(TREAM_(REPORT_ERRORS|M(UST_SEEK|KDIR_RECURSIVE)|BUFFER_(NONE|FULL|LINE)|S(HUT_(RD(WR)?|WR)|OCK_(R(DM|AW)|S(TREAM|EQPACKET)|DGRAM)|ERVER_(BIND|LISTEN))|NOTIFY_(RE(SOLVE|DIRECTED)|MIME_TYPE_IS|SEVERITY_(INFO|ERR|WARN)|CO(MPLETED|NNECT)|PROGRESS|F(ILE_SIZE_IS|AILURE)|AUTH_RE(SULT|QUIRED))|C(RYPTO_METHOD_(SSLv(2(_(SERVER|CLIENT)|3_(SERVER|CLIENT))|3_(SERVER|CLIENT))|TLS_(SERVER|CLIENT))|LIENT_(CONNECT|PERSISTENT|ASYNC_CONNECT)|AST_(FOR_SELECT|AS_STREAM))|I(GNORE_URL|S_URL|PPROTO_(RAW|TCP|I(CMP|P)|UDP))|O(OB|PTION_(READ_(BUFFER|TIMEOUT)|BLOCKING|WRITE_BUFFER))|U(RL_STAT_(QUIET|LINK)|SE_PATH)|P(EEK|F_(INET(6)?|UNIX))|ENFORCE_SAFE_MODE|FILTER_(READ|WRITE|ALL))|UNFUNCS_RET_(STRING|TIMESTAMP|DOUBLE)|QLITE(_(R(OW|EADONLY)|MIS(MATCH|USE)|B(OTH|USY)|SCHEMA|N(O(MEM|T(FOUND|ADB)|LFS)|UM)|C(O(RRUPT|NSTRAINT)|ANTOPEN)|TOOBIG|I(NTER(RUPT|NAL)|OERR)|OK|DONE|P(ROTOCOL|ERM)|E(RROR|MPTY)|F(ORMAT|ULL)|LOCKED|A(BORT|SSOC|UTH))|3_(B(OTH|LOB)|NU(M|LL)|TEXT|INTEGER|OPEN_(READ(ONLY|WRITE)|CREATE)|FLOAT|ASSOC)))|CURL(M(SG_DONE|_(BAD_(HANDLE|EASY_HANDLE)|CALL_MULTI_PERFORM|INTERNAL_ERROR|O(UT_OF_MEMORY|K)))|SSH_AUTH_(HOST|NONE|DEFAULT|P(UBLICKEY|ASSWORD)|KEYBOARD)|CLOSEPOLICY_(SLOWEST|CALLBACK|OLDEST|LEAST_(RECENTLY_USED|TRAFFIC))|_(HTTP_VERSION_(1_(1|0)|NONE)|NETRC_(REQUIRED|IGNORED|OPTIONAL)|TIMECOND_(IF(MODSINCE|UNMODSINCE)|LASTMOD)|IPRESOLVE_(V(4|6)|WHATEVER)|VERSION_(SSL|IPV6|KERBEROS4|LIBZ))|INFO_(RE(DIRECT_(COUNT|TIME)|QUEST_SIZE)|S(SL_VERIFYRESULT|TARTTRANSFER_TIME|IZE_(DOWNLOAD|UPLOAD)|PEED_(DOWNLOAD|UPLOAD))|H(TTP_CODE|EADER_(SIZE|OUT))|NAMELOOKUP_TIME|C(ON(NECT_TIME|TENT_(TYPE|LENGTH_(DOWNLOAD|UPLOAD)))|ERTINFO)|TOTAL_TIME|PR(IVATE|ETRANSFER_TIME)|EFFECTIVE_URL|FILETIME)|OPT_(R(E(SUME_FROM|TURNTRANSFER|DIR_PROTOCOLS|FERER|AD(DATA|FUNCTION))|AN(GE|DOM_FILE))|MAX(REDIRS|CONNECTS)|B(INARYTRANSFER|UFFERSIZE)|S(S(H_(HOST_PUBLIC_KEY_MD5|P(RIVATE_KEYFILE|UBLIC_KEYFILE)|AUTH_TYPES)|L(CERT(TYPE|PASSWD)?|_(CIPHER_LIST|VERIFY(HOST|PEER))|ENGINE(_DEFAULT)?|VERSION|KEY(TYPE|PASSWD)?))|TDERR)|H(TTP(GET|HEADER|200ALIASES|_VERSION|PROXYTUNNEL|AUTH)|EADER(FUNCTION)?)|N(O(BODY|SIGNAL|PROGRESS)|ETRC)|C(RLF|O(NNECTTIMEOUT(_MS)?|OKIE(SESSION|JAR|FILE)?)|USTOMREQUEST|ERTINFO|LOSEPOLICY|A(INFO|PATH))|T(RANSFERTEXT|CP_NODELAY|IME(CONDITION|OUT(_MS)?|VALUE))|I(N(TERFACE|FILE(SIZE)?)|PRESOLVE)|DNS_(CACHE_TIMEOUT|USE_GLOBAL_CACHE)|U(RL|SER(PWD|AGENT)|NRESTRICTED_AUTH|PLOAD)|P(R(IVATE|O(GRESSFUNCTION|XY(TYPE|USERPWD|PORT|AUTH)?|TOCOLS))|O(RT|ST(REDIR|QUOTE|FIELDS)?)|UT)|E(GDSOCKET|NCODING)|VERBOSE|K(RB4LEVEL|EYPASSWD)|QUOTE|F(RESH_CONNECT|TP(SSLAUTH|_(S(SL|KIP_PASV_IP)|CREATE_MISSING_DIRS|USE_EP(RT|SV)|FILEMETHOD)|PORT|LISTONLY|APPEND)|ILE(TIME)?|O(RBID_REUSE|LLOWLOCATION)|AILONERROR)|WRITE(HEADER|FUNCTION)|LOW_SPEED_(TIME|LIMIT)|AUTOREFERER)|PRO(XY_(SOCKS(4|5)|HTTP)|TO_(S(CP|FTP)|HTTP(S)?|T(ELNET|FTP)|DICT|F(TP(S)?|ILE)|LDAP(S)?|ALL))|E_(RE(CV_ERROR|AD_ERROR)|GOT_NOTHING|MALFORMAT_USER|BAD_(C(ONTENT_ENCODING|ALLING_ORDER)|PASSWORD_ENTERED|FUNCTION_ARGUMENT)|S(S(H|L_(C(IPHER|ONNECT_ERROR|ERTPROBLEM|ACERT)|PEER_CERTIFICATE|ENGINE_(SETFAILED|NOTFOUND)))|HARE_IN_USE|END_ERROR)|HTTP_(RANGE_ERROR|NOT_FOUND|PO(RT_FAILED|ST_ERROR))|COULDNT_(RESOLVE_(HOST|PROXY)|CONNECT)|T(OO_MANY_REDIRECTS|ELNET_OPTION_SYNTAX)|O(BSOLETE|UT_OF_MEMORY|PERATION_TIMEOUTED|K)|U(RL_MALFORMAT(_USER)?|N(SUPPORTED_PROTOCOL|KNOWN_TELNET_OPTION))|PARTIAL_FILE|F(TP_(BAD_DOWNLOAD_RESUME|SSL_FAILED|C(OULDNT_(RETR_FILE|GET_SIZE|S(TOR_FILE|ET_(BINARY|ASCII))|USE_REST)|ANT_(RECONNECT|GET_HOST))|USER_PASSWORD_INCORRECT|PORT_FAILED|QUOTE_ERROR|W(RITE_ERROR|EIRD_(SERVER_REPLY|227_FORMAT|USER_REPLY|PAS(S_REPLY|V_REPLY)))|ACCESS_DENIED)|ILE(SIZE_EXCEEDED|_COULDNT_READ_FILE)|UNCTION_NOT_FOUND|AILED_INIT)|WRITE_ERROR|L(IBRARY_NOT_FOUND|DAP_(SEARCH_FAILED|CANNOT_BIND|INVALID_URL))|ABORTED_BY_CALLBACK)|VERSION_NOW|FTP(METHOD_(MULTICWD|SINGLECWD|NOCWD)|SSL_(NONE|CONTROL|TRY|ALL)|AUTH_(SSL|TLS|DEFAULT))|AUTH_(GSSNEGOTIATE|BASIC|NTLM|DIGEST|ANY(SAFE)?))|I(MAGETYPE_(GIF|XBM|BMP|SWF|COUNT|TIFF_(MM|II)|I(CO|FF)|UNKNOWN|J(B2|P(X|2|C|EG(2000)?))|P(SD|NG)|WBMP)|NPUT_(REQUEST|GET|SE(RVER|SSION)|COOKIE|POST|ENV)|CONV_(MIME_DECODE_(STRICT|CONTINUE_ON_ERROR)|IMPL|VERSION))|D(NS_(MX|S(RV|OA)|HINFO|N(S|APTR)|CNAME|TXT|PTR|A(NY|LL|AAA|6)?)|OM(STRING_SIZE_ERR|_(SYNTAX_ERR|HIERARCHY_REQUEST_ERR|N(O(_(MODIFICATION_ALLOWED_ERR|DATA_ALLOWED_ERR)|T_(SUPPORTED_ERR|FOUND_ERR))|AMESPACE_ERR)|IN(DEX_SIZE_ERR|USE_ATTRIBUTE_ERR|VALID_(MODIFICATION_ERR|STATE_ERR|CHARACTER_ERR|ACCESS_ERR))|PHP_ERR|VALIDATION_ERR|WRONG_DOCUMENT_ERR)))|JSON_(HEX_(TAG|QUOT|A(MP|POS))|NUMERIC_CHECK|ERROR_(S(YNTAX|TATE_MISMATCH)|NONE|CTRL_CHAR|DEPTH|UTF8)|FORCE_OBJECT)|P(REG_(RECURSION_LIMIT_ERROR|GREP_INVERT|BA(CKTRACK_LIMIT_ERROR|D_UTF8_(OFFSET_ERROR|ERROR))|S(PLIT_(NO_EMPTY|OFFSET_CAPTURE|DELIM_CAPTURE)|ET_ORDER)|NO_ERROR|INTERNAL_ERROR|OFFSET_CAPTURE|PATTERN_ORDER)|SFS_(PASS_ON|ERR_FATAL|F(EED_ME|LAG_(NORMAL|FLUSH_(CLOSE|INC))))|CRE_VERSION|OSIX_(R_OK|X_OK|S_IF(REG|BLK|SOCK|CHR|IFO)|F_OK|W_OK))|F(NM_(NOESCAPE|CASEFOLD|P(ERIOD|ATHNAME))|IL(TER_(REQUIRE_(SCALAR|ARRAY)|SANITIZE_(MAGIC_QUOTES|S(TRI(NG|PPED)|PECIAL_CHARS)|NUMBER_(INT|FLOAT)|URL|E(MAIL|NCODED)|FULL_SPECIAL_CHARS)|NULL_ON_FAILURE|CALLBACK|DEFAULT|UNSAFE_RAW|VALIDATE_(REGEXP|BOOLEAN|I(NT|P)|URL|EMAIL|FLOAT)|F(ORCE_ARRAY|LAG_(S(CHEME_REQUIRED|TRIP_(BACKTICK|HIGH|LOW))|HOST_REQUIRED|NO(NE|_(RES_RANGE|PRIV_RANGE|ENCODE_QUOTES))|IPV(4|6)|PATH_REQUIRED|E(MPTY_STRING_NULL|NCODE_(HIGH|LOW|AMP))|QUERY_REQUIRED|ALLOW_(SCIENTIFIC|HEX|THOUSAND|OCTAL|FRACTION))))|E(_(BINARY|SKIP_EMPTY_LINES|NO_DEFAULT_CONTEXT|TEXT|IGNORE_NEW_LINES|USE_INCLUDE_PATH|APPEND)|INFO_(RAW|MIME(_(TYPE|ENCODING))?|SYMLINK|NONE|CONTINUE|DEVICES|PRESERVE_ATIME)))|ORCE_(GZIP|DEFLATE))|LIBXML_(XINCLUDE|N(SCLEAN|O(XMLDECL|BLANKS|NET|CDATA|E(RROR|MPTYTAG|NT)|WARNING))|COMPACT|D(TD(VALID|LOAD|ATTR)|OTTED_VERSION)|PARSEHUGE|ERR_(NONE|ERROR|FATAL|WARNING)|VERSION|LOADED_VERSION))\\b
(\\\\)?\\b(RADIXCHAR|GROUPING|M(_(1_PI|SQRT(1_2|2|3|PI)|2_(SQRTPI|PI)|PI(_(2|4))?|E(ULER)?|L(N(10|2|PI)|OG(10E|2E)))|ON_(GROUPING|1(1|2|0)?|7|2|8|THOUSANDS_SEP|3|DECIMAL_POINT|9|4|5|6))|S(TR_PAD_(RIGHT|BOTH|LEFT)|ORT_(REGULAR|STRING|NUMERIC|DESC|LOCALE_STRING|ASC)|EEK_(SET|CUR|END))|H(TML_(SPECIALCHARS|ENTITIES)|ASH_HMAC)|YES(STR|EXPR)|N(_(S(IGN_POSN|EP_BY_SPACE)|CS_PRECEDES)|O(STR|EXPR)|EGATIVE_SIGN|AN)|C(R(YPT_(MD5|BLOWFISH|S(HA(256|512)|TD_DES|ALT_LENGTH)|EXT_DES)|NCYSTR|EDITS_(G(ROUP|ENERAL)|MODULES|SAPI|DOCS|QA|FULLPAGE|ALL))|HAR_MAX|O(NNECTION_(NORMAL|TIMEOUT|ABORTED)|DESET|UNT_(RECURSIVE|NORMAL))|URRENCY_SYMBOL|ASE_(UPPER|LOWER))|__COMPILER_HALT_OFFSET__|T(HOUS(EP|ANDS_SEP)|_FMT(_AMPM)?)|IN(T_(CURR_SYMBOL|FRAC_DIGITS)|I_(S(YSTEM|CANNER_(RAW|NORMAL))|USER|PERDIR|ALL)|F(O_(GENERAL|MODULES|C(REDITS|ONFIGURATION)|ENVIRONMENT|VARIABLES|LICENSE|ALL))?)|D(_(T_FMT|FMT)|IRECTORY_SEPARATOR|ECIMAL_POINT|A(Y_(1|7|2|3|4|5|6)|TE_(R(SS|FC(1(123|036)|2822|8(22|50)|3339))|COOKIE|ISO8601|W3C|ATOM)))|UPLOAD_ERR_(NO_(TMP_DIR|FILE)|CANT_WRITE|INI_SIZE|OK|PARTIAL|EXTENSION|FORM_SIZE)|P(M_STR|_(S(IGN_POSN|EP_BY_SPACE)|CS_PRECEDES)|OSITIVE_SIGN|ATH(_SEPARATOR|INFO_(BASENAME|DIRNAME|EXTENSION|FILENAME)))|E(RA(_(YEAR|T_FMT|D_(T_FMT|FMT)))?|XTR_(REFS|SKIP|IF_EXISTS|OVERWRITE|PREFIX_(SAME|I(NVALID|F_EXISTS)|ALL))|NT_(NOQUOTES|COMPAT|IGNORE|QUOTES))|FRAC_DIGITS|L(C_(M(ONETARY|ESSAGES)|NUMERIC|C(TYPE|OLLATE)|TIME|ALL)|O(G_(MAIL|SYSLOG|N(O(TICE|WAIT)|DELAY|EWS)|C(R(IT|ON)|ONS)|INFO|ODELAY|D(EBUG|AEMON)|U(SER|UCP)|P(ID|ERROR)|E(RR|MERG)|KERN|WARNING|L(OCAL(1|7|2|3|4|5|0|6)|PR)|A(UTH(PRIV)?|LERT))|CK_(SH|NB|UN|EX)))|A(M_STR|B(MON_(1(1|2|0)?|7|2|8|3|9|4|5|6)|DAY_(1|7|2|3|4|5|6))|SSERT_(BAIL|CALLBACK|QUIET_EVAL|WARNING|ACTIVE)|LT_DIGITS))\\b
(\\\\)?\\b(STD(IN|OUT|ERR)|ZEND_(THREAD_SAFE|DEBUG_BUILD)|DEFAULT_INCLUDE_PATH|P(HP_(R(OUND_HALF_(ODD|DOWN|UP|EVEN)|ELEASE_VERSION)|M(INOR_VERSION|A(XPATHLEN|JOR_VERSION))|BINDIR|S(HLIB_SUFFIX|YSCONFDIR|API)|CONFIG_FILE_(SCAN_DIR|PATH)|INT_(MAX|SIZE)|ZTS|O(S|UTPUT_HANDLER_(START|CONT|END))|D(EBUG|ATADIR)|URL_(SCHEME|HOST|USER|P(ORT|A(SS|TH))|QUERY|FRAGMENT)|PREFIX|E(XT(RA_VERSION|ENSION_DIR)|OL)|VERSION(_ID)?|WINDOWS_(NT_(SERVER|DOMAIN_CONTROLLER|WORKSTATION)|VERSION_(M(INOR|AJOR)|BUILD|S(UITEMASK|P_M(INOR|AJOR))|P(RODUCTTYPE|LATFORM)))|L(IBDIR|OCALSTATEDIR))|EAR_(INSTALL_DIR|EXTENSION_DIR))|E_(RECOVERABLE_ERROR|STRICT|NOTICE|CO(RE_(ERROR|WARNING)|MPILE_(ERROR|WARNING))|DEPRECATED|USER_(NOTICE|DEPRECATED|ERROR|WARNING)|PARSE|ERROR|WARNING|ALL))\\b
(\\\\)?\\bT_(RE(TURN|QUIRE(_ONCE)?)|G(OTO|LOBAL)|XOR_EQUAL|M(INUS_EQUAL|OD_EQUAL|UL_EQUAL|ETHOD_C|L_COMMENT)|B(REAK|OOL(_CAST|EAN_(OR|AND))|AD_CHARACTER)|S(R(_EQUAL)?|T(RING(_(CAST|VARNAME))?|A(RT_HEREDOC|TIC))|WITCH|L(_EQUAL)?)|HALT_COMPILER|N(S_(SEPARATOR|C)|UM_STRING|EW|AMESPACE)|C(HARACTER|O(MMENT|N(ST(ANT_ENCAPSED_STRING)?|CAT_EQUAL|TINUE))|URLY_OPEN|L(O(SE_TAG|NE)|ASS(_C)?)|A(SE|TCH))|T(RY|HROW)|I(MPLEMENTS|S(SET|_(GREATER_OR_EQUAL|SMALLER_OR_EQUAL|NOT_(IDENTICAL|EQUAL)|IDENTICAL|EQUAL))|N(STANCEOF|C(LUDE(_ONCE)?)?|T(_CAST|ERFACE)|LINE_HTML)|F)|O(R_EQUAL|BJECT_(CAST|OPERATOR)|PEN_TAG(_WITH_ECHO)?|LD_FUNCTION)|D(NUMBER|I(R|V_EQUAL)|O(C_COMMENT|UBLE_(C(OLON|AST)|ARROW)|LLAR_OPEN_CURLY_BRACES)?|E(C(LARE)?|FAULT))|U(SE|NSET(_CAST)?)|P(R(I(NT|VATE)|OTECTED)|UBLIC|LUS_EQUAL|AAMAYIM_NEKUDOTAYIM)|E(X(TENDS|IT)|MPTY|N(CAPSED_AND_WHITESPACE|D(SWITCH|_HEREDOC|IF|DECLARE|FOR(EACH)?|WHILE))|CHO|VAL|LSE(IF)?)|VAR(IABLE)?|F(I(NAL|LE)|OR(EACH)?|UNC(_C|TION))|WHI(TESPACE|LE)|L(NUMBER|I(ST|NE)|OGICAL_(XOR|OR|AND))|A(RRAY(_CAST)?|BSTRACT|S|ND_EQUAL))\\b
(\\\\)?\\\\n
(\\\\)?\\n
(\\\\)?\\\\r
(\\\\)?\\\\\\r?\\n$
(\\\\)?\\\\t
(\\\\)?{(.*?)}
(\\\\\\\\\\\\\\\\)?{([^}]*)}
(\\\\\\\\)?{([^}]*)}
(\\\\)?{{ *(\\w+) *}}
(\\\\)?u(\\\\)?r(\\\\)?l(\\\\)?
(\\\\)[\\.a-zA-Z0-9_][\\.a-zA-Z0-9_]*\\b
(\\\\)[^\\S\\n]*
(\\\\)[^a-zA-Z@]
(\\\\)[A-Za-z@]+
(\\\\)[A-Za-z]+
(\\\\)[a-zA-Z-]+\\b
(\\\\){1,2}[.$^\\[\\]{}]
(\\\\)|(')
(\\\\)|(/)|(:)(|)|(\\?)|(>)|(<)|(\\\")
(\\\\\\\\)|(?<!\\\\)\\$(?:(\\w+)|\\{(.*?)\\})
(\\\\\\\\)|(?<!\\\\){([^,{}]*)(?<!\\\\)}
(\\\\\\\\)|(\\$\\$)|\\$\\{([^}]+)\\}
(\\\\\\\\)|(\\\\\\d+)$|(\\d+)$
(\\)|\\])[\\s]*\\,[\\s]*\\$([0-9a-zA-Z\\_'\"\\[\\]]+)[\\s]*\\)[\\s]*\\;
(\\\\\\\\)|\\\\u\\{([\\da-fA-F]+)\\}
(\\\\)+
(\\\\\\\\)+$
(\\\\)breathe
(\\\\)item\\b
(\\*)(
(\\*)(\\{
(\\\\*)\n                  [\\$\\@]\\w+\n                  (?:::\\w+)*\n                  \\\\([[{-])\n                 
(\\\\*)\\\\u{([0-9a-fA-F]+)}
(\\*\\\\)|(\\*)
(\\*\\h*)(text\\h*)(=\\h*auto)
(\\\\*\\s*)(
(\\*\\s*@namespace\\s[^\\n\\r]+)\\\\
(\\*\\s*[^*]*?\\b\\w+[^\\n\\r ]+)\\\\([A-Z])
(\\*\\s*[^*]*\\s)\\\\([A-Z])
(\\*{1,2}\\??|(?<!\\\\):{1,2}[^/*$]+\\??)
(\\*|_|`|~|\\\\)
(\\.
(\\\\.(*SKIP)(*FAIL)|(?P<token>[,{}]))
(\\.(?<lang>[a-z]{2}(-[a-z]{2})?)
(\\.)(
(\\.)([^./\\\\]+?)$
(\\.)[\\p{IsUpper}\\-]+(\\.+)$
(\\\\.)|(\\A(\\=\\]|\\|)|[^\\\\](\\=\\]|\\|)|\\Z)
(\\.[\\.]+) +(['\"([\\x{00bf}\\x{00A1}\\p{IsPi}]*[\\p{IsUpper}])
(\\.[^.\\/\\\\]+?)$
(\\.[^\\.\\/\\?\\\\]*)(\\?.*)?$
(\\\\\\.\\.?\\\\)|(\\\\\\.\\.?)$|^(\\.\\.?\\\\)|(\\\\\\\\+)|(\\/)
(\\.\\.?\\s*)(
(\\.\\.|\\/\\.|[?*[~^: \\\\]|\\/\\/|\\/.$|\\/$)
(\\.\\d
(\\.\\s*([a-zA-Z_][a-zA-Z0-9_]*|\\*|\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\")|(\\[\\s*([0-9]+|\\*)\\s*\\])|\\*\\*)
(\\.\\s*)('
(\\.\\w+)|\\[((?:[^\\[\\]]*|(?R))*)\\]
(\\\\.|[\\]|*?+()\\[]|[^\\\\])
'(\\\\.|[^'\\\\])*'
(\\\\.|[^\\\\])*?(\\n|$)
'(\\\\.|[^'\\\\])*'|\"(\\\\.|[^\"\\\\])*\"
'(\\\\.|[^\\\\']|(\\\\x[0-9a-fA-F]{2})|(\\\\u{[0-9a-fA-F]{1,6}}))'
(\\\\.|[^\\n\\\\])+
(\\.|\\\\)
(\\.|\\[|\\]|\\{|\\}|(?<!\\\\)\\\"|(?<!\\\\)\\'|\\b$)
'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-f0-9]{1,2}|[^\\\\'\\n])'
'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,3}|\\\\u[a-fA-F0-9]{1,4}|\\\\U[a-fA-F0-9]{1,6}|[^\\\\\\'\\n])'
(\\.delete\\('.*?')\\s*,\\s*\"[^]+[^\\\\]\"\\)
(\\.get\\('.*?')\\s*,\\s*\"[^]+[^\\\\]\"\\)
(\\.merge\\('.*?')\\s*,\\s*\"[^]+[^\\\\]\"\\)
(\\.patch\\('.*?')\\s*,\\s*\"[^]+[^\\\\]\"\\)
(\\.post\\('.*?')\\s*,\\s*\"[^]+[^\\\\]\"\\)
(\\.put\\('.*?')\\s*,\\s*\"[^]+[^\\\\]\"\\)
(\\/
(\\/)((?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+)(\\/)(?!\\/)([igm]{0,3})
(\\/)((?![*+?])(?:[^\\r\\n\\[\\/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+)(\\/)(?!\\/)([igm]{0,3})
(\\/){2,}|(\\\\){1,}
(\\/\\.\\.?\\/)|(\\/\\.\\.?)$|^(\\.\\.?\\/)|(\\/\\/+)|(\\\\)
(\\/\\/ --- START lexer error class ---)[^]+?(\\/\\/ --- END lexer error class ---)
(\\/\\/ --- START lexer kernel ---)[^]+?(\\/\\/ --- END lexer kernel ---)
(\\/\\/ --- START parser error class ---)[^]+?(\\/\\/ --- END( of)? parser error class ---)
(\\/\\/ --- START parser kernel ---)[^]+?(\\/\\/ --- END( of)? parser kernel ---)
(\\/\\/ @START@)[^]*(\\/\\/ @END@)
(\\/\\/ @START@)[^]*(\\s.*\\/\\/ @END@)
(\\/\\/|\\/\\*\\*)([^]+?)(\\w+):\\s*.*?PropTypes(.*)
(\\\\\\/|\\\\\\\\)
(\\/|\\\\)
(\\/|\\\\\\\\)$
(\\/|\\\\)$
(\\/|\\\\\\\\)([^(\\/|\\\\\\\\)]+)$
(\\/|\\\\)(cjs|commonjs)(\\/|\\\\)
(\\/|\\\\)*$
(\\/|\\\\)[^/\\\\]*$
(\\/|\\\\)[^\\/\\\\]+\\/\\.\\.(\\/|\\\\)
(\\/|\\\\)\\.(\\/|\\\\|$)
(\\/|\\\\)\\.\\.?\\1
(\\/|\\\\)\\s*$
(\\/|\\\\)\\w+-files(\\/|\\\\)
(\\/|\\\\){2}\\.(\\/|\\\\)pipe
(\\/|\\\\)+
(\\/|\\\\)+$
(\\/|\\\\)content(\\/|\\\\)images$
(\\/|\\\\)content(\\/|\\\\)images(\\/|\\\\)animated$
(\\/|\\\\)content(\\/|\\\\)images(\\/|\\\\)photo$
(\\/|\\\\)content(\\/|\\\\)images(\\/|\\\\)photos$
(\\/|\\\\)externals\\.json$
(\\/|\\\\)files(\\/|\\\\)
(\\/|\\\\)js$
(\\/|\\\\)lib\\.json$
(\\/|\\\\)node(\\/|\\\\)
(\\/|\\\\)style(\\/|\\\\)index\\.js
(\\/|\\\\)style(\\/|\\\\)index\\.less$
(\\/|\\\\)style(\\/|\\\\)v2-compatible-reset\\.less$
(\\/|\\\\)test(\\/|\\\\).*utf8
(\\/|\\\\)test(\\/|\\\\)main(\\/|\\\\)stack\\.js
(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}\\\\)
(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\)
(\\/|\\\\|\\A)ChangeLog[^\\/\\\\]*\\z
(\\/|\\\\|^)([^\\/\\\\]+)?php([^\\/\\\\]+)?$
(\\/|^)(
(\\/|^)[.]{1,2}(\\/|$)|\\\\
(\\/||\\\\)
(\\?\\??)\\s*+([a-zA-Z\\d@_]++)
(\\?<!\\\\);.*
(\\@?[a-zA-Z0-9\\-_\\.\\\\]+)
(\\@[a-zA-Z0-9\\-_\\.\\\\]+)
(\\[
(\\[ (?P<attr>[^=><!]+?) (\\s* (?P<op>[><!]?[=]|[><]) \\s* (?P<val>(?:\\/.*?\\/ | [^\\]]+)) )? \\])
(\\[(?P<section>\\S+)\\]|)(?P<option>[a-zA-z0-9._/]+)=(?P<value>.+)
(\\[(?P<text>.*?)\\]\\((?P<url>.*?)\\))
(\\[(?P<text>[^\\]]+)\\]\\((?P<uri>/[^\\)]+)\\))
(\\[(?P<text>[^\\]]+)\\]\\[(?P<uri>[A-Za-z_][A-Za-z_.0-9]*)?\\])
(\\\\\\\\[(]co)
(\\[)(
(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)([^\\]]*+)(\\])
(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)(\\])
(\\[[^[]*])|(\\\\)?(LTS|LT|LLLL|LLL|LL|L|llll|lll|ll|l)
(\\[[^[]*])|(\\\\)?(x|ss|s|mm|m|hh|h|do|dddd|ddd|dd|d|aa|a|ZZ|Z|YYYY|YY|X|Wo|WW|W|SSS|SS|S|Qo|Q|Mo|MMMM|MMM|MM|M|HH|H|GGGG|GG|E|Do|DDDo|DDDD|DDD|DD|D|A|.)
(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|MMMM|MMM|MM|M|dd?d?|yy?yy?y?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(LT|LL?L?L?)
(\\[[^\\[]*\\])|(\\\\)?(LT|LL?L?L?|l{1,4})
(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})
(\\[[^\\[]*\\])|(\\\\)?(MMMM|MMM|MM?|DDDD|DDD|DD|D|dd?|yyyy|YYYY|yy|YY|y|Y|aa?|AA?|hh?|HH?|mm?|ss?|x|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYY|YY|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|zz?|ZZ?)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|dddd?|do?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|zz?|ZZ?|LT|LL?L?L?)
(\\[[^\\[]*\\])|(\\\\)?i(Mo|MM?M?M?|Do|DDDo|DD?D?D?|w[o|w]?|YYYYY|YYYY|YY|gg(ggg?)?)|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)
(\\[[^\\[]*\\])|(\\\\)?j(Mo|MM?M?M?|Do|DDDo|DD?D?D?|w[o|w]?|YYYYY|YYYY|YY|gg(ggg?)?|)|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)
(\\[[^\\[]*])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})
(\\[[^\\]]+\\]\\([^)]+\\))\\s+\\[([\\w\\_\\/\\.]+)\\:(\\d+)\\]
'(\\\\['\"?\\\\abfnrtv]|\\\\x[0-9a-fA-F]{2}|\\\\[0-7]{1,3}|\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}|\\\\&\\w+;|.)'
(\\\\['\"]|['\":,\\/\\\\]|\\\\.)
(\\\\['\"]|['\":,\\\\]|\\\\.)
(\\[\\[(?P<page_title>.*?)\\]\\]) +((?P<flags>[A-Z\\!]+) )?(?P<url>\\S*) +\\* (?P<user>.*?) \\* (\\((?P<change_size>[\\+\\-][0-9]+)\\))? ?(?P<summary>.+)?
(\\\\[\\[\\]\\-\\\\])|\\\\(.)|([\\[\\]\\\\])
(\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))
(\\\\[\\\\])|(\\\\U[\\da-fA-F]{8}|\\\\u[\\da-fA-F]{4}|\\\\x[\\da-fA-F]{2})|(\\\\[0-7]{3})
(\\[\\]|\\[.*?[^\\\\]\\])
(\\[\\{\\{
(\\\\[\\S][^-+={}<()\\\\]*)(?=[-+=*<{}])?
(\\\\[0-7]{3}|\\\\x[0-9A-Fa-f]{2}|\\\\(\\n|\\r\\n|[^N]))
(\\\\[abfrtnv\\\\])|(\\\\U[\\da-fA-F]{8}|\\\\u[\\da-fA-F]{4}|\\\\x[\\da-fA-F]{2})|(\\\\[0-7]{1,3})
(\\\\[a-z]*?bou\\{(?:\\w|(?:\\\\UTF\\{[0-9a-fA-F]+\\}|\\\\CID\\{[0-9]+\\}))+?)(\\\\ajD?Kunoji)\\{\\}((?:\\w|(?:\\\\UTF\\{[0-9a-fA-F]+\\}|\\\\CID\\{[0-9]+\\}))*?)\\}
(\\\\[a-zA-Z]+)\\\\(\\s+)
(\\\\[nrt\\\\|.\\-^?*+{}()\\[\\]sSdDiIcCwW]|\\\\[pP]{[a-zA-Z\\-0-9]+})
(\\\\[nrtbf()\\\\])|(\\\\[0-9]{1,3})|(\\\\(\\r\\n|\\r|\\n))|(\\r\\n|\\r|\\n)|(\\()|(\\))
(\\[thumbnail\\-image)[;]{0,1}([A-Za-z0-9\\-\\_\\.\\#\\ ]*)\\]
(\\_(.))
(\\_)([a-z]{1})
(\\_[0-9]+|value)$
(\\_[0-9]+|value|Seq|Bag|Alt|Statement|Property|List)$
(\\_[a-z])
(\\_[a-zA-Z])
(\\_\\w)
(\\_|\\-)\\w+$
(\\_base\\/js\\/base|wink).*\\.js
(\\{(?:[^{}]+|(?R))*\\})
(\\{(?P<url>.+)\\})?(?P<name>.+)$
(\\{?\"([^\"\\\\]|\\\\.)*\"|[^,{}]+)+([,}]+)
(\\{@\\p{Alpha}[^\\}]*\\})|(\\r?\\n)
(\\{[\\n ]*)((([A-Za-z\\$\\_][0-9A-Za-z\\$\\_]*|`)[\\n ]*\\:[\\n ]*[^,\\}]+,?)+)([\\n ]*\\})
(\\{[^{}]+)\\\\(?:$markups)\\s+([^{}]+\\})
(\\{\\\\(.)(\\\\?\\w{1,2})\\})
(\\{\\\\(.)\\{(\\\\?\\w{1,2})\\}\\})
(\\{\\{
(\\{\\{([a-z\\-\\_]{1,})\\}\\})
(\\\\{\\\\{[^\\\\]+\\\\}\\\\})
(\\\\|
(\\|[^\\|]+\\||
(\\'|\\\"|\\.|\\*|\\/|\\-|\\\\)
(\\'|\\\\((?P<octal>[0-7]{1,3})|(?P<hexadecimal>[xX][0-9a-fA-F]{1,2})|(?P<numeric_character_reference>[uU][0-9a-fA-F]{4})|(?P<backspace>b)|(?P<escape>e)|(?P<form_feed>f)|(?P<new_line>n)|(?P<carriage_return>r)|(?P<tab>t)|(?P<backslash>\\\\)|(?P<double_quote>\")|(?P<special_key><[^>]+>)))
'(\\\\\\\\|\\\\.|[^'\\\\])*'
(\\\\|\\^|\\~|[\\#\\$\\%\\&\\_\\{\\}])
(\\-|\\_|\\.)+$
(\\-|\\_|\\.|\\s)+(.)?
(\\\\|\\\\\\\\+|[^\\\\]|\\b|\\A)\\$([[:alnum:]_]+|{[[:alnum:]_]+})
(\\\\|\\A)([^\\\\]*)$
(\\\\|\\r\\n|[\\n\\r
(\\\\|^)((\\.\\\\)|(\\.$))
(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+
(\\})\\\\(\\\\*)([$#@])
(\\\\+)([
(\\\\+)([^\\\\]*)
(\\+)([0-9]+\\.[0-9]*
(\\+)?\\d+ #<Thread:0x\\h+(@.+:\\d+)? (sleep|sleep_forever|run)>
(\\+\\+\\+|---|\\*\\*\\*)(\\s+(?P<path>.*?)(\\t.*?)?)?\\s*$
(\\\\\\\\\\\\\\\\+|[^\\\\\\\\]|\\\\b|\\\\A)\\\\$({?)([[:alnum:]_]+)(}?)
(\\+|\\-)?((\\d++)?(\\.))?\\d++
(\\+|-|&&|\\|\\||!|\\(|\\)|\\{|}|\\[|]|\\^|\"|~|\\*|\\?|:|\\\\)
(\\+|-|&&|\\|\\||!|\\(|\\)|\\{|}|\\[|]|\\^|\"|~|\\*|\\?|:|\\/|\\\\)
(\\+|-|&&|\\|\\||!|\\(|\\)|{|}|\\[|\\]|`|\"|~\\*|\\?|:|\\\\)
(\\<cds.JOURNAL(?P<ibid>ibid)?\\>([^\\<]+)\\<\\/cds.JOURNAL(?:ibid)?\\>\\s*.?\\s*([A-H]|(I{1,3}V?|VI{0,3}))\\s+:)
(\\<cds.JOURNAL(?P<ibid>ibid)?\\>([^\\<]+)\\<\\/cds.JOURNAL(?:ibid)?\\>\\s*.?\\s*\\<cds\\.SER\\>([A-H]|(I{1,3}V?|VI{0,3}))\\<\\/cds\\.SER\\>)
(\\<WD>.*?<\\/WD>)
(\\=)(
(\\>(((?>([^><]+|(?R)))*)\\<))
(\\0)(\\C)
(\\015\\012)(--\\Q$bdry\\E\\015\\012)
(\\A
(\\A(
(\\A(?P<User>[%\\+\\--\\.0-9A-Z_a-z]+)@(?P<Host>.+)(?-m:$))
(\\\\a)|(\\\\b)|(\\\\f)|(\\\\n)|(\\\\r)|(\\\\t)|(\\\\v)|\\\\x([0-9a-fA-F]+)\\\\|\\\\([0-7]+)\\\\|(\\\\\\\\)|(\\\\')|('')|(\\\\\")|(\\\\`)|(\\\\.)|(.)
(\\A.+?)(?=
(\\A\\s*\\#.*?^\\s*def 
(\\A|
(\\A|(\\]([^\\[\\\\]|\\\\[^\\\\])*?))\\^
(\\A|[:\\.]) \\Q$_\\E ([:\\.]|\\z)
(\\A|[-\\'\\\"\\(\\[\\{</: \\\\])$
(\\A|[^\\\\](?:\\\\\\\\)*)([
(\\A|[^\\\\])$1
(\\A|[^\\\\])(\\\\\\\\)*'
(\\A|[^\\\\])(\\\\\\\\)*/
(\\A|[^\\\\])('|\")(\\2)
(\\A|[^\\\\])('|\").*?[^\\\\](\\2)
(\\A|[^\\\\])\\'
(\\A|[^\\\\])\\\"
(\\A|[^\\\\])\\\\([
(\\A|[^\\\\])\\/
(\\A|[^\\\\])\\\\G
(\\A|[^\\\\])~
(\\A|\\:)\\Q$tag\\E\\z
(\\\\a|\\\\e|\\\\v|\\\\x|\\\\#)
(\\A|\\s)(
(\\A|^)module\\s+(?P<name>\\w+)\\s*(!.*|)$
(\\Aimport[\\t-\\n\\f-\\r ]+(?P<Package>[0-9A-Z_a-z]+)(?P<Alias>([\\t-\\n\\f-\\r ]+as[\\t-\\n\\f-\\r ]+(?P<Name>[0-9A-Z_a-z]+))?)(?-m:$))
(\\b
(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+
(\\b)(
(\\b)(\\Q$known_title\\E\\b)
(\\b|[^\\d])(\\d
(\\b|\\/|\\\\)(test)(\\/|\\\\)
(\\bAS\\b\\s*)`([^`]++)`(\\s*)$
(\\bdata-video=\"|<meta property=\"og:video\" content=\".+?&videoId=)(?P<video_id>[0-9]+)\"
(\\bmy\\b|\\b
(\\\\c|\\\\\\\\)
(\\\\Controller)?\\\\?$
(\\\\cos|\\\\sin|\\\\tan|\\\\sec|\\\\csc|\\\\cot)([h]*)\\\\left\\((.+?),(.+?)\\\\right\\)
(\\d
(\\d)(?=\\d{3}+$)
(\\d)(?=\\d{3}+(?:\\.|$))(\\d{3}\\..*)?
(\\d)(?=\\d{3}+(\\.\\d*)?$)
(\\d)(\\d\\d\\d\\Q$g\\E)
(\\D[A-Z1-9]{1,8})[ ]+(?P<sign>[+-=])(?=\\d)
(\\d\\p{Upper}\\p{Upper}?)
(\\d{1,2})(st|nd|rd|th)?\\s+(
(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s?+(.+)?
(\\d{4})(?:\\/|\\\\)(\\d{2})
(\\d{4}-\\d{1,2}-\\d{1,2})-([^\\\\]+?)(\\.\\w+)$
(\\d+(?=(?)???[??]??))|((?<=??)\\d+(?=(?)???))
(\\d+(?=??[??]??))|((?<=??)\\d+(?=??))
(\\d+(?=?[??]??))|((?<=??)?\\d+(?=?))
(\\d+) (\\d
(\\d+)((\\N{FULLWIDTH SOLIDUS}|\\/)(\\d+))?
(\\d+)(?:,(\\d+))?+
(\\d+)(?:[\\x\\/](\\d+))?
(\\d+)(?:\\.(\\d+))?+(?:\\.(\\d+))?+(?:[-.](.+))?
(\\d+)(?|??|?)?
(\\d+)([
(\\d+)(\\p{Alpha}*)
(\\d+)[\\*\\/\\\\](\\d+)
(\\d+)\\\\
(\\d+)\\N{MULTIPLICATION SIGN}(\\d+)
(\\d+)\\s*/\\s*(
(\\d+)\\S*\n\t\t \\s+\n\t\t (
(\\d+)\\S*\r\n         \\s+\r\n         (
(\\d+)\\s+(?:(url\\(\\s*(?:'(?:[^']|\\\\')*'|\"(?:[^\"]|\\\\\")*\"|(?:[^'\"\\\\]|\\\\.)*?\\s*)\\))|\"((?:[^\"\\\\]|\\\\.)*)\"|'((?:[^'\\\\]|\\\\.)*)'|([^'\",]+))
(\\d+)\\s+(\\d+)\\s+([0-9a-fx]+)\\s+([0-9a-fx]+)\\s+([a-zA-Z0-9\\_]+)
(\\\\d+,)?(?P<uid>\\\\d+),l,apk,\\\\d+,(?P<pkgName>[^,]+),.*
(\\d+.)\\Q$marker\\E(\\d+)
(\\d+.)\\Q$marker\\E(\\d+.)\\Q$marker\\E(\\d+)
(\\d+\\)/\\d+
(\\d+\\.?\\d?+)(-\\w+)?
(\\d+\\.\\d+)\\\\(ultimate|professional|premium|community)
(\\d+\\.\\d+\\.\\d+(?:-(?:
(\\d+\\s+[ap]\\.)\\Q$marker\\E(m\\.\\s*)\\Q$marker\\E
(\\d+\\s+[ap]m\\.\\s+)\\Q$marker\\E
(\\d+\\w*(\\.|\\-|\\_))*\\d+\\w*
(\\d+{1,2})%
(\\d+|
(\\d+|\\*|?|?|?|?|?|\\(..?\\)|\\{|?|\\[..?\\]|\\+|\\||?|\\^|?|?|?|#|?|?|?|?|?)(.*)
(\\d++)\\s*+(\\*)
(\\G[^\\\\]?)\\{(.*?)[^\\\\]?\\}
(\\G|[^\\\\]{1})\"(?!.*\\\\).*?\"
(\\H\\d{5})
(\\h{2})(?=\\h)
(\\h{2})(\\h{2})(\\h{2})
-(\\h{32}|\\h{64})\\.css\\z
(\\\\ham\\{.\\})\\\\shadda\\{\\}
(\\\\ham\\{w\\})([^\\\\])
(\\\\ham\\{y\\})([^\\\\])
(\\\\ham{.})\\\\shadda{}
(\\\\ham{w})([^\\\\])
(\\\\ham{y})([^\\\\])
(\\\\I[a-z]|[A-Z])\\w*
(\\\\item\\[.*\\])
(\\\\k\\<)([a-z]\\w*)(\\>)
(\\\\lms[^\\{]+\\{|(?<!\\\\)(\\\\\\\\)*[\\{\\}])
(\n                                  \\\\hyper(def|ref\\{\\})\n                                  \\{\n                              )\n                              amuse\n                              (\\})\n                             
(\n                               \\w+(::\\w+)*[.\\#]\\w+(\\([\\.\\w+\\*\\/\\+\\-\\=\\<\\>]+\\))?  # A::B.meth(**) (for operator in Fortran95)\n                             | \\#\\w+(\\([.\\w\\*\\/\\+\\-\\=\\<\\>]+\\))?  #  meth(**) (for operator in Fortran95)\n                             | \\b([A-Z]\\w*(::\\w+)*[.\\#]\\w+)  #    A::B.meth\n                             | \\b([A-Z]\\w+(::\\w+)*)       #    A::B..\n                             | \\#\\w+[!?=]?                #    #meth_name \n                             | \\b\\w+([_\\/\\.]+\\w+)*[!?=]?  #    meth_name\n                             )
(\n                      # A::B::C.meth\n                      
(\n                \\/\\*.*?\\*\\/|\n                \\/\\/.*?\\n|\n                \\#.[^a-fA-F0-9]+?\\n|\n                \\&lt;\\!\\-\\-[\\s\\S]+\\-\\-\\&gt;|\n                (?<!\\\\)&quot;.*?(?<!\\\\)&quot;|\n                (?<!\\\\)'(.*?)(?<!\\\\)'\n            )
(\n       (?:\\s*     # whitespace\n         (?<!\\\\)  # unescaped\n         \\%[^\\n]* # comment\n       \\n)+       # newline\n    )
(\n    (?P<select>\\.[^.\\[\\]]+) |\n    (?P<find>\\.\\.[^.\\[\\]]+) |\n    (?P<index>\\[-?\\d+\\]) |\n    (?P<star>\\[\\*\\]) |\n    (?P<range>\\[(?:-?\\d+)?:(?:-?\\d+)?(?:\\:\\d+)?\\])\n)
(\\N*)$
(\\n*)([^]*)
(\\\\N\\{[^}]+\\})
(\\\\N\\{[^}]+}|\\\\u[0-9A-Fa-f]{4}|\\\\U[0-9A-Fa-f]{8})
(\\n\\n)\\t(http:\\/\\/[A-Za-z0-9\\/\\%\\&\\=\\-\\_\\\\\\.]+)\\n([^\\t]|\\t\\n)
(\n\t\t       [()]\n\t\t      |\n\t\t       \"(?:[^\"\\\\]+|\\\\.)*\"\n\t\t      |\n\t\t       \\#<[^>]+>\n\t\t      |\n\t\t       [^()\\s]+\n\t\t       )
(\n\t\t\t\t[\\xC0-\\xC1] # Invalid UTF-8 Bytes\n\t\t\t\t| [\\xF5-\\xFF] # Invalid UTF-8 Bytes\n\t\t\t\t| \\xE0[\\x80-\\x9F] # Overlong encoding of prior code point\n\t\t\t\t| \\xF0[\\x80-\\x8F] # Overlong encoding of prior code point\n\t\t\t\t| [\\xC2-\\xDF](?![\\x80-\\xBF]) # Invalid UTF-8 Sequence Start\n\t\t\t\t| [\\xE0-\\xEF](?![\\x80-\\xBF]{2}) # Invalid UTF-8 Sequence Start\n\t\t\t\t| [\\xF0-\\xF4](?![\\x80-\\xBF]{3}) # Invalid UTF-8 Sequence Start\n\t\t\t\t| (?<=[\\x0-\\x7F\\xF5-\\xFF])[\\x80-\\xBF] # Invalid UTF-8 Sequence Middle\n\t\t\t\t| (?<![\\xC2-\\xDF]|[\\xE0-\\xEF]|[\\xE0-\\xEF][\\x80-\\xBF]|[\\xF0-\\xF4]\n\t\t\t\t\t| [\\xF0-\\xF4][\\x80-\\xBF]|[\\xF0-\\xF4][\\x80-\\xBF]{2})[\\x80-\\xBF] # Overlong Sequence\n\t\t\t\t| (?<=[\\xE0-\\xEF])[\\x80-\\xBF](?![\\x80-\\xBF]) # Short 3 byte sequence\n\t\t\t\t| (?<=[\\xF0-\\xF4])[\\x80-\\xBF](?![\\x80-\\xBF]{2}) # Short 4 byte sequence\n\t\t\t\t| (?<=[\\xF0-\\xF4][\\x80-\\xBF])[\\x80-\\xBF](?![\\x80-\\xBF]) # Short 4 byte sequence (2)\n\t\t\t)
(\n\t\t\t\t\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"                           # match double quoted string\n\t\t\t\t|\n\t\t\t\t'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'                       # match single quoted string\n\t\t\t\t|\n\t\t\t\t(?s:\\/\\*.*?\\*\\/)                                     # multi line comments\n\t\t\t\t|\n\t\t\t\t\\/\\/.*?\\n                                             # single line comments\n\t\t\t\t|\n\t\t\t\t(?<![A-Za-z_])([0-9]+\\.[0-9]+|[0-9]+)(?![A-Za-z_])                       # an number\n\t\t\t\t|\n\t\t\t\t(?i:\\sIN\\s*\\(\\s*[0-9.]+(?:\\s*,\\s*[0-9.])*\\s*\\))  # in (1, 2, 3)\n\t\t\t\t|\n\t\t\t\t(?i:\\sIN\\s*\\(\\s*['].+?['](?:\\s*,\\s*['].+?['])*\\s*\\))  # in ('a', 'b', 'c')\n\t\t\t)
(\\n|(\\n\\r)|(\\r\\n)){2,}+|'\\u2029+
(\\n|)(<h
(\\n|\\r\\n|\\r)\\s*(?:currentfile eexec\\s+|\\/sfnts\\s+\\[\\1<)\\h{8,}\\1
(\\\\n|\\\\r|\\\\l)
(\n|^) ?(?P<file_name>.*\\.py)\\s+\\|
(\\p
(\\p{$block}+)
(\\p{Alnum})\\s*(\\u00B6\\u00B6)+\\s*([\\p{Lower}\\p{Digit}])
(\\P{ASCII})
(\\p{Digit}+[\\.])[\\ ]*(\\p{Digit}+)
(\\p{Digit}+\\.\\p{Digit}+)(:?;.*)?
(\\p{Ethiopic}|\\p{P})
(\\p{Han})+
(\\p{Han}+)
(\\p{Hangul})
(\\p{HexDigit}+)
(\\p{InArabic}+)\\s+(\\p{InArabic}+)\\s+(\\p{InArabic}+)
(\\p{InCJKUnifiedIdeographs})
(\\p{InHebrew}+)\\s+(\\p{InHebrew}+)
(\\p{InKana})\u00e3\u0080\u009c
(\\p{InVWPP0Fullwidth}+)|(\\p{InVWPP0Halfwidth}+)
(\\p{InVWPP1Fullwidth}+)|(\\p{InVWPP1Halfwidth}+)
(\\p{Is_DisallowedAssigned})
(\\p{IsConsonant})\\1\\Kle$
(\\p{IsDeviation})
(\\p{IsDisallowed})
(\\p{IsDisallowedSTD3Mapped})
(\\p{IsDisallowedSTD3Valid})
(\\p{IsEndOfSentenceCharacter}\\w+\\p{IsEndOfSentenceCharacter}\\p{Punctuation}*\\s*)$EOS
(\\p{IsEndOfSentenceCharacter}+(['\"\\p{ClosePunctuation}])?\\s+)
(\\p{IsEndOfSentenceCharacter}+['\"\\p{ClosePunctuation}]?\\s+)(?!$EOS)
(\\p{IsIDNADot})
(\\p{IsIgnored})
(\\p{IsLetter})
(\\p{IsLl}+)\\.([\\w\\$]+)$
(\\p{IsLu}+)
(\\p{IsMapped}|\\p{IsDisallowedSTD3Mapped})
(\\P{IsPrint})
(\\p{IsPunct}|\\p{IsSpace})
(\\p{IsWord}|\\p{IsSpace}|\\p{IsPunct}|[[:punct:]])
(\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*\\.)*\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*
(\\p{Katakana}{$kana_size,}|\\p{Han}{$han_size,}|\\p{Latin}{$latin_size,})
(\\p{Katakana}|\\p{Hiragana})
(\\p{Letter}${chartypes{notacute}}*)\\x{0301}(${chartypes{notacute}}*)$
(\\p{Letter}\\p{ModifierLetter}*)$
(\\p{Letter}\\p{NonspacingMark}*)[\\x{0300}\\x{030C}]+(\\p{NonspacingMark}*)$
(\\p{Letter}+)
(\\p{Lower})(\\p{Upper})
(\\p{Lowercase})(\\p{Uppercase})
(\\p{Punctuation}[\\w\\p{IsEndOfSentenceCharacter}]['\"\\p{ClosePunctuation}]\\s*)$EOS
(\\p{STerm}) .*
(\\p{Unassigned})
(\\p{Upper})
(\\p{Word}|-)
(\\p{Word}+)
(\\p{XDigit}{10})(______|\\p{XDigit}{6})
(\\p{XDigit}{4}-){3}\\p{XDigit}{4}
(\\p{XDigit}{8})(\\p{XDigit}{4})(\\p{XDigit}{4})(\\p{XDigit}{4})(\\p{XDigit}+)
(\\pL[\\pL']*)
(\\pL[\\pL']*) \\) 
(\\pL\\pM*)($re)
(\\pL{4,})
(\\pL|\\pM|\\pN|\\p{Pc})+
(\\pL|\\pN)([^\\pL\\pN]|$)
(\\pL|\\pN)+
(\\pL+)(?:\\[@(\\pL+)='([\\w-]+)'\\])?
(\\pL+)|(\\pL[\\pL-]*\\pL)
(\\Q$;\\E....\\Q$;\\E)
(\\Q${\\SQL_MARK}\\E$top_parse_re)(?::$top_parse_re2)?(\\s*\\{)
(\\Q${\\SQL_MARK}\\E($top_parse_re)(?::($top_parse_re2))?\\s*\\{)
(\\Q$bn\\E)
(\\Q$decimal\\E\\d+?)(0+)$
(\\Q$dels\\E|\\Q$dels\\E)
(\\Q$EACHLINE\\E)
(\\Q$END\\E)
(\\Q$end\\E+)$
(\\Q$esc\\E|\\Q$r\\E)
(\\Q$filename\\E(?:/.*|\\.pm)$)
(\\Q$find\\E(?: during global destruction)?(\\.?\\n?))$trace_re\\z
(\\Q$highlight\\E)
(\\Q$highlight_str\\E)
(\\Q$char\\E|\\\\)
(\\Q$lib_path\\E[/\\\\]+([^\\.]+\\.[^\\s]+)\\s+line\\s+(\\d+))[^<]?
(\\Q$options{hl_tag}\\E(.*?)\\Q$options{hl_end}\\E)
(\\Q$query\\E)
(\\Q$star\\E.*\\Q$end\\E)
(\\Q$START\\E)
(\\Q$var\\E)
(\\Q$word\\E)
(\\Q$x\\E|\\Q$y\\E)
(\\Q\\hspace*{\\E)
(\\Q\\hspace*{-0mm}\\E)
(\\Q\\rotatebox{0}\\E)
(\\Q\\scalebox{1.}\\E)
(\\Q}% closing rotatebox\\E)
(\\Q}% closing scalebox\\E)
(\\Qdir1\\dir2\\\\E)
(\\Qhttp://miud.in/\\E\\w+)
(\\Qhttp://tinyurl.com/\\E\\w+)
(\\R)
(\\R){2,}
(\\r\\n|
(\\R|)(\\R|)\\{\\#\\s--\\s(.*)\\s--\\s(.*)\\#\\}(\\R|)
(\\R+)\\z
(\\s
(\\S
(\\s)(
(\\S)(
(\\s)\\\\([A-Z]\\w+)
(\\S)\\Q${stop}\\E
(\\s)vary!!\\Q$vary\\E(?:!![,\\w]+)?(\\s)
(\\s*
(\\s*&)?\\s*((\\$+)
(\\s*(?:'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|[\\[\\]\\{\\}:,])\\s*)
(\\s*(?P<key>[\\w\\d_\\-]*)\\s*=\\s*)?((?P<value>(\"[^\"]*\"|'[^']*'|[^,]*)),?)
(\\s*(\\{% *(?:
(\\s*)\\$latex[= ](.*?[^\\\\])\\$(\\s*)
(\\s*)\\S*\\Q$(BASEEXT)\\E\\S*(\\s*)
(\\s*,\\s*
(\\s*?)(?P<af>IPv[46]) Unicast:\\s*(?P<sent>\\d+)\\s*(?P<received>\\d+)
(\\s*['\\\"]\\s*(
(\\s*|
(\\s\\w\\p{IsEndOfSentenceCharacter}\\s+)
(\\S{
(\\s|&nbsp;|--|&[mn]dash;|
(\\s|(#.*$))++
(\\s|\\#|\\'|\\\"|\\\\)*
(\\s|\\()+run\\s*\\(\\s*\"(?P<name>.*?)\"\\s*\\)
(\\s|\\.|\\$|\\/|\\\\)+
(\\s|\\'|\\\"|\\\\)+
(\\s|\\G)(\\@(?P<login>[\\w-\\._]+)[\\s]{0,1})
(\\\\s|\\\\n|\\\\\\\\)
(\\s|^)@([^\\s\\pP<]+)
(\\s+(href|src|poster)\\s*=\\s*[\"|'])(\\/
(\\s+)(?u)
(\\s+)([a-z\u0430-\u044f\u0410-\u042f0-9]{1,2}
(\\s+)(\\w++(?<!\\baction|\\balt|\\bcontent|\\bsrc)=\"\")
(\\S+)[\\/\\_](\\d+)\\-(\\d+)
(\\S+)\\\\(.+)
(\\s+)|('|\\\\)(?![^%]*%\\})|(?:\\{%(=|#)(.+?)%\\})|(\\{%)|(%\\})
(\\S+:'(?:[^'\\\\]|\\\\.)*')|(\\S+:\"(?:[^\"\\\\]|\\\\.)*\")|(-?\"(?:[^\"\\\\]|\\\\.)*\")|(-?'(?:[^'\\\\]|\\\\.)*')|\\S+|\\S+:\\S+
(\\S+@[A-Za-z0-9\\-\\.\\_]+)
(\\s+[[:upper:]]\\.\\s+)\\Q$marker\\E
(\\s+|(?P<equals>\\=))(?P<context>\\S+?)\\([^\\)\\s]*?\\Z
(\\s+|^)(?P<key>[^\\s]+?):(?P<value>[^\\s]+)
(\\s+mod_echo.c\\s+\\\\)
(\\\\u([0-9A-F]{4}))|(\\\\U([0-9A-F]{4})([0-9A-F]{4}))
(\\\\u([0-9a-fA-F]{4}))
(\\\\u(\\p{XDigit}{4}))
(\\\\u(00)?[0-9a-fA-F][0-9a-fA-F])
(\\\\u)([\\da-f]{4})
(\\\\u)([0-9a-f]{4}
(\\\\U)([0-9a-f]{8}
(\\\\u.{4})
(\\\\u[\\dabcdef]{4}|\\\\x[\\dabcdef]{2})
(\\\\u[0-9a-fA-F]{0,4})|(\\\\.)|(\\\\$)
(\\\\u[0-9a-fA-F]{0,4})|(\\\\.)|(\\\\$)|([ \\t\\f]*[ \\t\\f:=][ \\t\\f]*)
(\\\\u[0-9A-Fa-f]{4}|\\\\U[0-9A-Fa-f]{8})
(\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\u\\{[0-9A-Fa-f]+\\}|\\\\.|.)
(\\\\U[0-9A-Fa-f]{8})|(\\\\u[0-9A-Fa-f]{4})|(\\\\N\\{[a-zA-Z ]+\\})
(\\\\u[a-fA-F0-9]{4})
(\\\\u[ed][0-9a-f]{3})
(\\\\u\\{[a-z0-9]+\\})|([\\{\\}])
(\\\\u00[2-3][0-9])(\\\\u20e3)
(\\u{00a9}|\\u{00ae}|\\u{002a 20e3})[\\ufe0e\\ufe0f]?
(\\u00B6\\u00B6)+\\s*([\\p{Lower}\\!#\\$%&\\(\\)\\*\\+,-\\/:;=>\\?@\\[\\\\\\]\\^\\{\\|\\}~])
(\u203b)(\\\\footnote\\{[^(?:\\\\footnote)]+\\})((?:
(\\u{66}|\\u{000062})oo
(\\\\url\\{)[^}]+(?=\\})
(\\\\UTF{.+?})
(\\w):[/\\\\](.*)
(\\w)\\\\
(\\w)\\\\(\\w)
(\\W)\n                (
(\\w*)\\\\(\\w*)\\\\Test\\\\Handler\\\\(\\w*)\\\\(\\w*)
(\\w:[/\\\\])(.*)
(\\w\\:\\\\\\w[\\w\\\\\\_\\-\\. ]+)
(\\w{@{[$self->min_length]},})
(\\w|?|?|?|?|?)\\.
(\\w+(?:\\(\\))?)\\s+([*\\\\])(.*\\S)
(\\w+)(/|\\\\){1,}
(\\w+).+(:[^]+)
(\\w+):([\\w\\pL.]+)
(\\w+):\\\\
(\\w+):\"(.*?)(?<!\\\\)\"
(\\w+)\\((\\X*)\\)$
(\\w+)\\|([A-Z\\d\\.\\_]+)(\\|[A-Z\\d\\_]+)?
(\\w+)\\h*=\\h*(.+?)(?=,|$)
(\\w+)\\Q$stem\\E$
(\\w+)\\Q$suffix\\E
'(\\w+)'\\Q: '{proto}://{host}:\\E(\\d+)'
(\\w+)\\s*\\:\\s*(
(\\w+)\\s+from\\s+(
(\\w+)\\s+in\\s+(
(\\w+)=((?:\"[^\"]+\")|(?:'[^']+')|[\\w\\.\\_-]+)
(\\w+)=([\\w\\p{InCJKUnifiedIdeographs}]+)
(\\w+)=[\"']([^\"']*)(?<!\\\\)[\"']
(\\w+)=\"(.*[^\\\\])\"
(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)
(\\w+[\\_]?[\\-]?)+
(\\w+[\\_]?[\\-]?)+\\[\\d+\\]{1}
(\\w+\\.(
(\\w+\\h*)(=)(\\h*\\\"[^\\\"]+\\\")
(\\\\x([0-1]|[8-9A-F])[0-9A-F])+
(\\x([0-9A-Fa-f][0-9A-Fa-f]))
(\\X)
(\\X)*
(\\\\x..|\\\\u....|\\\\?[\\s\\S])(?:-(\\\\x..|\\\\u....|\\\\?[\\s\\S]))?
(\\\\x[0-1][0-9a-f])
(\\\\x[0-9A-F]{2})|(\\\\[0-7]{3})|(\\\\\\n)|(\\\\\\\\)|(\\\\\\\")|(\\\\')|(\\\\a)|(\\\\b)|(\\\\f)|(\\\\n)|(\\\\r)|(\\\\t)|(\\\\v)
(\\\\x[0-9A-F]{2}|\\\\?.){40}
(\\\\x[0-9a-f]{2}|\\\\[0-7]{1,3})
(\\\\x[0-9a-fA-F]{2})|(\\\\u[0-9a-fA-F]{4})
(\\\\x[2-7][0-9A-F]){3,}
(\\\\\\\\x[a-fA-F0-9]{2})
(\\\\x\\{[0-9a-fA-F]+\\})
(\\\\\\Z|[^\\w\\\\])
(^
(^ *)\\[([^\\n]+?)\\](
(^ *)\\[([^\\n]+?)\\]:\\s+<?(
(^ {
(^#[a-z0-9){6}$)
(^---$[^]*?^---$)?(\\r\\n|\\r|\\n){1,}
(^$|[ =\"\\\\])
(^(
(^((\\t)+)?(
(^(/\\*\\*|\\h*\\*/?\\h?)|\\*/$)
(^(?:\\h*\\*)\\h*|\\h+$)
(^([ \\t]|)+)[+][\\w.\\-\\_]*($|[ \\t]+|[(]([^)]|)+[)]([ \\t]+|))$
(^([a-z]|[A-Z]):(?=\\\\(?![\\0-\\37<>:\"/\\\\|?*])|\\/(?![\\0-\\37<>:\"/\\\\|?*])|$)|^\\\\(?=[\\\\\\/][^\\0-\\37<>:\"/\\\\|?*]+)|^(?=(\\\\|\\/)$)|^\\.(?=(\\\\|\\/)$)|^\\.\\.(?=(\\\\|\\/)$)|^(?=(\\\\|\\/)[^\\0-\\37<>:\"/\\\\|?*]+)|^\\.(?=(\\\\|\\/)[^\\0-\\37<>:\"/\\\\|?*]+)|^\\.\\.(?=(\\\\|\\/)[^\\0-\\37<>:\"/\\\\|?*]+))((\\\\|\\/)[^\\0-\\37<>:\"/\\\\|?*]+|(\\\\|\\/)$)*()$
(^)?(
(^.
(^.*
(^.*)(- 
(^.*)?+[mM]ore\\:+.*$
(^.*)[/|\\\\].*
(^.*/d)/(?P<type_id>\\w{0,32})/(!.*)?$
(^.*/d)/(?P<type_id>\\w{0,32})/(?P<entity_id>\\w{0,32})/(!.*)?$
(^.*/l/\\w{0,32})/(?P<type_id>\\w{0,32})/(!.*)?$
(^.*/v/\\w{0,32})/(?P<type_id>\\w{0,32})/(!.*)?$
(^.*/v/\\w{0,32})/(?P<type_id>\\w{0,32})/(?P<entity_id>\\w{0,32})/(!.*)?$
(^.*[\\s\\r\\n]+)namespace\\s+([_a-zA-Z0-9\\\\]+);\\s*$
(^.*\\/
(^/ ([^/]+)
(^[
(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|.)+
(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+
(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]
(^[ \\t]+)?(?=\\\\\\\\)
(^[ \\t]+.*$)|(\\S.{0,
(^[/\\\\]|:)
(^[\\/\\-\\_]+)|([\\/\\-\\_]+$)
(^[\\pC\\pC\\pM\\pP\\pS\\pZ]+|[\\pC\\pC\\pM\\pP\\pS\\pZ]+$)
(^[\\x21-\\x2F\\x3A-\\x40\\x5B-\\x60\\x7B-\\x7F\\x{2000}-\\x{206F}\\x{2E00}-\\x{2E7F}\\x{00A1}-\\x{00A9}\\x{00AB}-\\x{00B1}\\x{00B4}\\x{00B6}-\\x{00B8}\\x{00BB}\\x{00BF}\\x{00D7}\\x{00F7}]+|[\\x21-\\x2F\\x3A-\\x40\\x5B-\\x60\\x7B-\\x7F\\x{2000}-\\x{206F}\\x{2E00}-\\x{2E7F}\\x{00A1}-\\x{00A9}\\x{00AB}-\\x{00B1}\\x{00B4}\\x{00B6}-\\x{00B8}\\x{00BB}\\x{00BF}\\x{00D7}\\x{00F7}]+$)
(^[a-zA-Z0-9]+([a-zA-Z0-9\\_\\.\\-\\+]*))$
(^\\$\\{?|\\$\\{)(?P<group_name>\\w+)=(?P<pattern>\\w+)(\\}?$|\\})
(^\\$|[^\\\\]\\$)[^\\$]+\\$
(^\\\\(['\"])|\\\\(['\"])$)
(^\\.)|[/\\\\]
(^\\/)|(^\\\\)
(^\\/)|(^\\\\)|(\\/$)|(\\\\$)
(^\\[)|(\\\\)|\\]$
(^\\[Term\\]\\s*?id:\\s*?
(^\\_)
(^\\\\item)
(^\\s*
(^\\s*#\\s*
(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*
(^\\s*)#\\s*[a-z]+([^\\r\\n\\\\]|\\\\.|\\\\(?:\\r\\n?|\\n))*
(^\\s*\\#{2,3}\\s*$|
(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):
(^\\s*|[^\\\\])%.*
(^\\s*gem ['\"]
(^|
(^| )#[A-Za-z][\\w\\.\\-\\_]+( |$)
(^| )(
(^| )\\Q$prefix\\E(?=\\d+)
(^| |\\G)\\Q$delete_class\\E( |$)
(^|(?!\\\\).)($MARK_START)
(^|(?<='))(
(^|(?<=[ ]))(?P<number>\\d+)(TH|ST|ND|RD)?(?P<rest>(\b|[ ]).*)
(^|(?<=\\s))@(?P<name>[a-zA-Z]+)
(^|,)\\s*(?:(true|false)|(\"[^\"]*\")|(\\{[^\\}]*\\})|(([0-9]+[a-zA-Z\\_]|[a-zA-Z])[\\w\\-\\.]*[\\?\\!]?))\\s*(?=$|,)
(^|.*?\\r?\\n)--\\Q$b\\E\\r?\\n
(^|.*\\\")(\\[[a-zA-Z\\.\\!?-]+\\][\\s_]*)?(\\[BD\\][\\s_]*)?(\\[\\d{3,4}[ip]\\][\\s_]*)?(?P<title>[\\w\\s_.+!?'-\\(\\)]+)(New Edit|(Blu-?ray)?( ?Box)?( ?Set)?)?([ _]-[ _]|([ ._-]Epi?(sode)?[ ._-]?0?)?[ ._-]?|[ ._-]Vol\\.|[ ._-]E)(?P<epno>\\d{1,3}|Movie|OVA|Complete Series)(v\\d|-\\d+)?[-_. ].*[\\[\\(\\\"]
(^|/)(?P<name>[^/]+?)-(?P<ver>.+?)\n    (-(?P<pyver>.+?))?(-(?P<arch>.+?))?.egg-info(/|$)
(^|/)comments/(?P<id>.+?)($|/)
(^|/|\\\\\\\\)
(^|/|\\\\)\\.\\.(/|\\\\|$)
(^|/|\\\\)\\.{1,2}$
(^|;)\\Q$path\\E(;|$)
(^|[
(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)
(^|[,{])(\\w+):\"([\\w\\-%]++\\.[\\w\\-%.]++)\"
(^|[.])ip-10-(?P<b>[0-9]*)-(?P<c>[0-9]*)-(?P<d>[0-9]*)[.]example[.]$
(^|[/\\\\])\\.
(^|[/\\\\])\\..
(^|[/\\\\])\\.\\.([/\\\\]|$)
(^|[/\\\\])\\.git(ignore|modules|keep)?([/\\\\]|$)
(^|[\\/\\\\])\\..
(^|[\\/\\\\])\\.git([\\/\\\\]|$)
(^|[\\/\\\\])\\.svn([\\/\\\\]|$)
(^|[\\/\\\\])\\Q${\\__PACKAGE__}\\E\\.pmc?$
(^|[\\/\\\\])_darcs([\\/\\\\]|$)
(^|[\\/\\\\])core$
(^|[\\/\\\\])CVS([\\/\\\\]|$)
(^|[\\/\\\\])node_modules([\\/\\\\]|$)
(^|[\\-\\_\\s])(\\w)
(^|[-\\_])ad([-\\_]|$)
(^|[\n ])@([A-Za-z0-9\\_]*)
(^|[\\s>])(@
(^|[^
(^|[^-!#$%*+=\\?&@|~.:<>^\\\\])(--[^-!#$%*+=\\?&@|~.:<>^\\\\].*(\\r?\\n|$)|{-[\\w\\W]*?-})
(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>
(^|[^.0-9\\\\])(?:0?\\.)?0(?:ex|ch|r?em|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|g?rad|turn|m?s|k?Hz|dpi|dpcm|dppx|%)
(^|[^:])\\\\b(
(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2
(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2
(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2
(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")
(^|[^\"{\\\\])#.*
(^|[^\"{\\\\])(#.*?(\\r?\\n|$))
(^|[^\\\\](\\\\\\\\)*+)(?=/)
(^|[^\\\\](\\\\\\\\)*+)\\\\(?=/)
(^|[^\\\\](\\\\\\\\)*+)\\\\n
(^|[^\\\\](\\\\\\\\)*+)\\\\\\n
(^|[^\\\\](\\\\\\\\)*+)\\\\t
(^|[^\\\\])'
(^|[^\\\\])''
(^|[^\\\\]) \\% .*
(^|[^\\\\])#
(^|[^\\\\])##.*
(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|.)*
(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*
(^|[^\\\\])#.*
(^|[^\\\\])#.*?(\\r?\\n|$)
(^|[^\\\\])#.+
(^|[^\\\\])#@
(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*
(^|[^\\\\])#[a-z_](?:-?[a-z]|\\d)*
(^|[^\\\\])#\\*[\\s\\S]*?\\*#
(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#
(^|[^\\\\])#\\{[^}]+\\}
(^|[^\\\\])#1
(^|[^\\\\])#2
(^|[^\\\\])#3
(^|[^\\\\])#4
(^|[^\\\\])#5
(^|[^\\\\])#6
(^|[^\\\\])#7
(^|[^\\\\])#8
(^|[^\\\\])#9
(^|[^\\\\])%
(^|[^\\\\])((?:\\\\\\\\)*)
(^|[^\\\\])((?:\\\\\\\\)*)\\\\\\s*$
(^|[^\\\\])((\\\\\\\\)+)?[\\\\]$
(^|[^\\\\])((\\\\{2})*)\\\\(\\{query\\})
(^|[^\\\\])((\\\\{2})*)\\{query\\}
(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))
(^|[^\\\\])(?:\\$([\\w_]+)|\\$\\{([^}]+)\\})([^\\\\]|)
(^|[^\\\\])(?:\\*(?:\\n(?!\\n)|.)+?\\*|_(?:\\n(?!\\n)|.)+?_)
(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2
(^|[^\\\\])(\\$+)(.+?)\\2
(^|[^\\\\])(\\\\\\\\)*$
(^|[^\\\\])(\\\\\\\\)*[\\$@]
(^|[^\\\\])(\\\\\\\\)*[\\[\\?\\*]
(^|[^\\\\])(\\\\\\\\)*[\\r\\n\\u2028\\u2029]
(^|[^\\\\])(\\\\\\\\)*\\\\$
(^|[^\\\\])(\\\\\\\\)*\\\\[a-z]+$
(^|[^\\\\])(\\\\\\\\)*\\{
(^|[^\\\\])(\\\\\\\\)*\\s
(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2
(^|[^\\\\])(\\*\\*|__)(?:\\n(?!\\n)|.)+?\\2
(^|[^\\\\])(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)
(^|[^\\\\])(\\{|\\})
(^|[^\\\\])(\\\\|\\s)
(^|[^\\\\])(_|%)
(^|[^\\\\])(`+)(.+?)\\2
(^|[^\\\\])(`+)([^\\n]*?[^`\\n])\\2(?!`)
(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)
(^|[^\\\\])/
(^|[^\\\\]);
(^|[^\\\\])[:\\*]([a-zA-Z0-9_]+)
(^|[^\\\\])[\"']
(^|[^\\\\])[\\$\\@]
(^|[^\\\\])[\\?\\*\\{\\}]
(^|[^\\\\])[|!]=*
(^|[^\\\\])\\\\
(^|[^\\\\])\"
(^|[^\\\\])\\\"
(^|[^\\\\])\"$
(^|[^\\\\])\"|'
(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*
(^|[^\\\\])\\$(T|N|U|H|A)
(^|[^\\\\])\\$\\{
(^|[^\\\\])\\$D
(^|[^\\\\])\\$D\\{($S)\\}
(^|[^\\\\])\\$D\\{\"(.*?)\"\\}
(^|[^\\\\\\\\])\\(.*?\\)
(^|[^\\\\])\\([^?]
(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)
(^|[^\\\\])\\(\\*[\\w\\W]*?\\*\\)
(^|[^\\\\])\\*
(^|[^\\\\\\\\])\\\\*([^*]+[^\\\\\\\\])\\\\*
(^|[^\\\\])\\.
(^|[^\\\\\\\\])\\\\.
(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)
(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\/
(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\/
(^|[^\\\\])\\/\\/.*
(^|[^\\\\])\\?
(^|[^\\\\\\\\])\\[.*?\\]
(^|[^\\\\])\\\\[lcnr]
(^|[^\\\\\\\\])\\{.*?\\}
(^|[^\\\\])\\{\\{
(^|[^\\\\])\\|
(^|[^\\\\])\\\\\\|
(^|[^\\\\])''\\+
(^|[^\\\\])\\\\a
(^|[^\\\\])\\\\c
(^|[^\\\\])\\\\e
(^|[^\\\\])\\\\n
(^|[^\\\\])\\\\u
(^|[^\\\\])_
(^|[^\\\\]){=[\\S\\s]*?}
(^|[^\\\\])D
(^|[^\\\\])F
(^|[^\\\\])l
(^|[^\\\\])M
(^|[^\\\\]{1})\"
(^|[^\\\\]|(\\\\\\\\)+)\\}
(^|[^\\\\]+)\\\\\\*(?=.+)
(^|[^`
(^|\\\\)(int|float|bool|string|void|null|false|true|resource|object|numeric|mixed)$
(^|\\\\)out($|\\\\)
(^|\\.)([\\w$-]{1,
(^|\\.)\\Q$accept_id_dom\\E\\z
(^|\\.)\\Q$domain_to_use\\E$
(^|\\.)\\Q$signing_domain\\E\\z
(^|\\/)\\_
(^|\\/)\\Q$lib\\E(\\.$so)?$
(^|\\/|\\\\)(?:((?:u[0-9a-f]{4,6},?)+)-)(.+)\\.svg$
(^|\\/|\\\\)(\\.git|\\.hg|\\.svn|CVS)
(^|\\/|\\\\)\\.\\.(\\\\|\\/|$)
(^|\\/|\\\\)_
(^|\\_).
(^|\\|)\\Q$path\\E$
(^|\\n)( +)?[\\.\\:\\#\\[\\]][a-z0-9\\-\\_\\=\\(\\)\\, \\[\\]]([\\s\\S]+)?\\{
(^|\\n)(?P<initial_indent>[ \\t]*)$
(^|\\n)(?P<level>#{1,6})(?P<header>.*?)#*(\\n|$)
(^|\\n)(?P<level>h[1-6]\\.)(?P<header>.*?)#*(\\n|$)
(^|\\n)(\\{[^\\}]*\\}\\n)?[ ]{0,3}:[ ]{1,3}(?P<caption>.*?)(\\n|$)
(^|\\n)\\p{javaWhitespace}*@([^\\p{javaWhitespace}]+)
(^|\\n\\n)\n            (?P<sep_open>---)[ ]*  # open YAML stream\n            (?P<alias>.+)?  # cell split, or !tag\n            (\\n\n            (?P<body>(.+\\n)+)  # optional YAML\n            (?P<sep_close>(\\.{3}|-{3}))  # close YAML stream\n            )?(?:\\n{2}|$)
(^|\\n|
(^|\\n| |\\\\)--( |\\n|$)
(^|\\r)\\s*(\\\\font|\\\\magnification|\\\\input|\\\\def|\\\\special|\\\\baselineskip|\\\\begin)
(^|\\r)\\s*\\\\(end|bye)(\\s|$)
(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)
(^|\\s) (-l\\Q$_\\E) ($|\\s)
(^|\\s)(
(^|\\s)(\\\\)?(@([a-z\\d\\-]+))(?=[.!?;,[\\]()]|\\s|$)
(^|\\s)(\\\\)?(@([a-z\\d]+(?:[a-z\\d._-]+?[a-z\\d]+)*))
(^|\\s|
(^|\\s|\\(|,)url\\((.*?[^\\\\])\\)(?=$|\\s|\\)|,)
(^|\\s+)#(\\p{Word}+)
(^|\\s+)(
(^|\\s+)(?P<st>_?st_)(?P<context>\\S+?)\\((?P<quote>[^\\)]*?\")(?P<pre>[^\\)]*?)\\Z
(^|\\s+)\\Q$_\\E($|\\s+)
(^|\\s+)\\Q$tostrip\\E(\\s+|$)
(^|\\W)(
(^|\\W)([
(^|\\W)\\ba\\b(?=$|\\W)(?! (?:
(^|\\W)\\Q$var\\E(\\W|$)
(^|\\W|\\_)([\\@\\.\\/A-Za-z\\*][\\*\\.\\@\\/\\w\\:\\-]*(?:\\(\\)){0,1})
(^|^[^\\\\]|[^\\\\]{2})\"
(^|_)(
(^|>)\\s++(<|$)
(^|link:|
(^~(?P<user>[^/]*))(?P<path>.*)
(^C:[\\/\\\\])|(^\\/)
(^ctl\\d+\\$m)(\\_)
(^http{1}[s]?://([w]{3}\\.)?.+\\.(
(^https?:\\/\\/[\\p{Han}a-zA-Z0-9\\-\\.\\/]+)
(^mailto:)|\\p{Alnum}+
(^plugin\\|)(?P<plugin>.*?)(\\|site\\|)(?P<site>.*?)(\\|class\\|)(?P<class>.*?)(\\|subclass\\|)(?P<subclass>.*?)(\\|type\\|)(?P<type>.*?)(\\|id\\|)(?P<id>.*?)(\\|endpoint\\|)(?P<endpoint>.*?$)
(^whitespace)|(char$)|(^[oe]$)|(^sym\\_)
(_.+?)??(_?(
(_?)(
(_[a-zA-Z\\d@_]++|[A-Z][a-zA-Z\\d@_]*+)|(_)
(_LOCAL_)(\\.(.*?))?\\\\
(_x\\h\\h\\h\\h_)+
(`(?P<identifier>.*?)`|(?P<null>NULL)|'(?P<string>(?:\\\\.|''|[^'])*?)'|0x(?P<hex>[0-9a0-f]+)|(?P<number>[+-]?\\d+\\.?\\d*(?:e[+-]?\\d+)?)|(?P<close_paren>\\)))
(`)(
(`)[^`\\\\]*(`)
(`|\\\\)
(`|\\*{1,3}|_)(.*?[^\\\\])\\1
(`+)(?:
(`+)([^`]|(?!(?<!`)\\1(?!`))`)*+(\\1)
(`+)[^\\S\\n]*(\\S[^\\n]*?)[^\\S\\n]*(
({(?P<closing>\\/)?(?:(?P<symbol>[\\~\\#\\?\\@\\:\\<\\>\\+\\^\\%])\\s*)?(?P<refpath>[a-zA-Z0-9_\\$\\.]+|\"[^\"]+\")(?:\\:(?P<contpath>[a-zA-Z0-9\\$\\.]+))?(?P<filters>[\\|a-z]+)*?(?P<params>(?:\\s+\\w+\\=((\"[^\"]*?\")|([$\\w\\.]+)))*)?\\s*(?P<selfclosing>\\/)?\\})
({(?P<closing>\\/)?(?:(?P<symbol>[\\~\\#\\?\\@\\:\\<\\>\\+\\^\\%])\\s*)?(?P<refpath>[a-zA-Z0-9_\\$\\.]+|\"[^\"]+\")(?:\\:(?P<contpath>[a-zA-Z0-9\\$\\.]+))?(?P<filters>[\\|a-z]+)*?(?P<params>(?:\\s+\\w+\\=((\"[^\"]*?\")|([\\w\\.]+)))*)?\\s*(?P<selfclosing>\\/)?\\})
({(?P<namespace>.*)})?(?P<localname>.*)
({)\\s+|(\\;)\\s+|/\\*.+?\\*\\/|\\R
(-{1}[a-z0-9]{32}*\\.{1}){1}
('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1
('|\\\\)
(~)((\\-)?\\d++|(\\*))?((\\.)(\\d++|(\\*)))?((\\.)((\\*)|.))?[~cfegswpWPBX#bx\\+ni]
(~)(\\*)?(\\d++)?[~du\\-#fsacl]
(~[^/\\\\]+)\\.less$
(-+|All files|% Lines|
(<
(<!-- !tree -->)[^]*(<!-- tree! -->)
(<(a |span data-)href=\"https://
(<)(
(<)([a-zA-Z0-9:]++)(?=[^>]*></\\2>)
(<[^<>]*)\\Q$o\\E($safe)\\Q$c\\E([^>]*>)
(<[^>]+?)style[\\x00-\\x20]*=[\\x00-\\x20]*[`'\"]*.*?behaviour[\\x00-\\x20]*\\([^>]*+>
(<[^>]+?)style[\\x00-\\x20]*=[\\x00-\\x20]*[`'\"]*.*?expression[\\x00-\\x20]*\\([^>]*+>
(<[^>]+?)style[\\x00-\\x20]*=[\\x00-\\x20]*[`'\"]*.*?s[\\x00-\\x20]*c[\\x00-\\x20]*r[\\x00-\\x20]*i[\\x00-\\x20]*p[\\x00-\\x20]*t[\\x00-\\x20]*:*[^>]*+>
(<[^>]+?)style[\\x00-\\x20]*=[\\x00-\\x20]*[`'\"]*.*?s[\\x00-\\x20]\n            *c[\\x00-\\x20]*r[\\x00-\\x20]*i[\\x00-\\x20]*p[\\x00-\\x20]*t[\\x00-\\x20]*:*[^>]*+>
(<[^>]+?[\\x00-\\x20\"'])(?:on|xmlns)[^>]*+[>\\b]?
(<[^>]+?[\\x00-\\x20\"'])(?:on|xmlns)[^>]*+>
(<[^>]+>\\s*(;\\s*\\w+\\s*(=\\s*(\\w+|\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\")\\s*)?)*)
(<\\?xml\\s+\n                              (version=\\\"(?P<xmlversion>[\\d.]+)\\\")?\\s*\n                              (encoding=\\\"(?P<encoding>[\\w-]+)\\\")?\\s*\n                              (standalone=\\\"(?P<standalone>[\\w]+)\\\")?\\s*\n                              \\?>)\\s*
(<\\[)\\s*(
(<\\\\[^\\\\])|([^\\\\]\\\\>)
(<|&((
(<|&(?!(
(<<|>>|/\\\\|\\\\/|\\\\)
(<<<)(([^\\s\\\\]|\\\\.)+)
(<code ?.*>)([^]*)<\\/code>
(<img\\s*)([^>]*?class\\s*=\\s*[\"']?[^\"']*?
(<input.*id=\"
(<jnlp.*?)(
(<meta[^>]*charset=[\"']?(?P<charset>[^\"'>]*)[\"']?[ ]?[/]?[>])
(<p>
(<p>&lt;p align=&quot;center&quot;&gt;[^]+?)(<h2>Dependencies<\\/h2>)
(<pre
(<script
(<script(?=\\s|>)(?:\"[^\"]*\"|'[^']*'|[^\"'>])*+>)(.*?)(</script>)
(<style
(<table:table-row[^>]*>)?<table:table-cell [^>]*table:style-name=\"(
(<table:table-row[^>]*>\\s*<table:table-cell [^>]+>\\s*)?(<text:list-item>\\s*)?(<text:p [^>]+>\\s*)?(<\\/text:span>\\s*)?<text:span text:style-name=\"(
(<textarea
(=\\s*)(([\\\"\\'])(?:(?:[^\\3\\\\]*?(?:\\3\\3|\\\\.))*?[^\\3\\\\]*?)\\3)
(==|~=|!=|<=|>=|\\.\\.\\.|\\.\\.|->|=>|[=+\\-*/%^<>#!\\\\])
(=>\\s?+)(.+)(?=::)
(>?
(->\\\\?\\s*|&\\s*)(
(->|::)(\\s*)(
(>https?:\\/\\/[^\\<\\\\]+)
(1[0-2]|0?[1-9]|
(1Z.\\d{15})|\\T\\d{10}|\\d{9,12}
(9u|(2\\`shj{2147483649,}\\r|3|f|y|3*)+8\\B)\\W93+
(a(b)a)\\k<-1>
(a(b|\\g<0>))
(a)(\\g<1>|ccc)
(a)(b)(?idsumx)(?<named>x)
(a)(b)(?idsumx:Z)(?<named>x)
(a)(b)(c)\\k<-1>
(a)(b)(c)\\k<-3>
(a)(b)(c)\\k'-1'
(a)(b)(c)_d++
(a)(b)\\g<-1>
(a)(b)\\Q[\\E(?<named>c)\\]
(a)*+bc|d
(a)?+bc|d
(a)\\1\\2
(a)\\g<+1>(b)
(a)\\g<1>
(a)\\k<-1>_1(?>33|3)37
(a)\\\\Q(?<named>\\d+)\\\\E
(a)\\\\Q(?<named>d)\\E
(a)++bc|d
(a\\)
(a\\\\\\Kb)
(a\\Kb)|(c\\\\\\Kd)ef
(A{9999999999}B|C*)*
(A{9999999999}B|C*)*D
(a|t)\\_tree\\-$lang\\-.+
(a|t)\\_tree\\-$lang\\_$sel\\-.+
(abc)(def)\\3
(abc)\\\\Q(?<named>\\d+)\\\\E
(address=\\/
(against 
(and\\_with|and|with)?\\_(.*)$
(android|webos|palm\\os|qnx|bada|rim\\stablet\\sos|meego)[\\/\\s-]?([\\w\\.]+)*
(android|webos|palm\\os|qnx|bada|rim\\stablet\\sos|meego|contiki)[\\/\\s-]?([\\w\\.]+)*
(as)(\\s*)(
(at|gt|gte|lt|lte)?\\.?(
(audio( format)?|codec( name)?|format).*?\\b(?P<audio>0x0055 MPEG-1 Layer 3|AAC( LC)?|AC-?3|\\(AC3|DD5(.1)?|(A_)?DTS-?(HD)?|Dolby(\\s?TrueHD)?|TrueHD|FLAC|MP3)\\b
(Authorization: )[^\\\\]*
(autoload\\s+[:\\w]+,\\s+[\"'])(
(AWS|aws)?_(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(?P<secret>[A-Za-z0-9/\\+=]{41})
(-----BEGIN\\s+PRIVATE\\s+KEY-----)[0-9A-Za-z+\\/=\\s\\\\]+(-----END\\s+PRIVATE\\s+KEY-----)
(bet|bet.|between)\\s+(?P<start>.+)\\s+and\\s+(?P<stop>.+)
(boost_)?(?P<version>\\d[._]\\d\\d(?P<minor>[._]\\d)?)
(border|margin):(\\d+(?:\\p{Alpha}*))(\\2){3}
'(C:)?(\\/|\\\\)[^']+(\\/|\\\\)([^'\\/\\\\]+)'
(C:\\\\)(\\w+)(\\\\)
(C-|c)\\\\
(C-|c)\\\\[\\\\MCc]
(card_number\\\\?\":\\\\?\")[^\"\\\\]*
(CertificateID=\\\\\\\")[^\\\\]*
(Class)?\\/([a-z\\-\\/\\_]+)$
(class|include)(\\s*)(
(class|interface)\\s+[a-z0-9A-Z\\_]+
(class=\"navbar-toggler\").+(data-target=\"#
(codec( (name|code))?|(original )?format|res(olution)|video( (codec|format|res))?|tv system|type|writing library).*?\\b(?P<video>AVC|AVI|DBrip|DIVX|\\(Divx|DVD|[HX][._ -]?264|MPEG-4 Visual|NTSC|PAL|WMV|XVID)\\b
(Concur(ring)? in )?(?P<type>((the )?(Senate|House) Amendments? (with an amendment )?to )+)(?P<bill>.*)
(const commonJsMain = `)[^]+?(\\/\\/ --- END( of)? commonJsMain chunk ---)
(const debugTraceSrc = `)[^]+?(\\/\\/ --- END( of)? debugTraceSrc chunk ---)
(const define_parser_APIs_1 = `)[^]+?(\\/\\/ --- END( of)? define_parser_APIs_1 chunk ---)
(const parseErrorSourceCode = `)[^]+?(\\/\\/ --- END( of)? parseErrorSourceCode chunk ---)
(const)(\\s+)(
(cpu at |processor: |
(create|make|start|build|construct|prepare|whip).*(directory|folder|catalogue)(\\s)(and\\s)?(call(ed)?|name(ed)?)(\\sit\\s)?(?P<name>.*)
(ctl\\d+)(\\_)
(cvv2\\\\?\":\\\\?\")\\d+[^\"\\\\]*
(d+\\/(\\d+)
(dbname|Database)=([a-zA-Z0-9\\_]+)
(de)\\s+(?P<start>.+)\\s+(\u00e0)\\s+(?P<stop>.+)
(define)(\\s*)(\\()(
(define)(\\s+)(
(delete|select)\\s.*from\\s+\\Q$word\\E$
(dist\\/dev\\/)|(dist\\\\dev\\\\)
(Domain\\\\Model|Controller)\\\\(.+)
(Double\\\\.+?\\\\P)\\d+
(egg=)?(?P<package_name>.*)==.*$
(en|zh)\\_?\\w*
(entre|ent\\.|ent)\\s+(?P<start>.+)\\s+(et)\\s+(?P<stop>.+)
(envAppend|pathAppend)[(](?P<var>.+?)[,]\\s(?P<target>.+?)[)]
(envPrepend|pathPrepend)[(](?P<var>.+?)[,]\\s(?P<target>.+?)[)]
(escape)|\\\\(\\n|\\r\\n?|\\f)
(eval[\\s]*\\(|system\\(|\\\\x)
(exception|and)(\\s*)(
(exception|and)(\\s+)(
(fast_)*(s_)*mp\\_[a-z_0-9]*
(find|bash):\\s(?P<ERROR_MSG_FIND>.*)
(font-family|font-style|font-weight)\\s*+:\\s*+[^;\n\r]*+;
(foo(bar))\\g<2>+
(foo)(?<x>bar)(baz)\\g<x>+
(foo)(bar)(qux)\\g<-2>+
(foo)(bar)\\g<2>+
(foo)\\g<+2>(bar)(quz)
(foo)\\g<1>(bar)\\2
(foo){2}(bar)\\g<1>
(fr\u00e1)?\\s*(?P<start>.+)\\s*(til|--|\u2013)\\s*(?P<stop>.+)
(fr\u00e5n)?\\s*(?P<start>.+)\\s*(till|--|\u2013)\\s*(?P<stop>.+)
(fra)?\\s*(?P<start>.+)\\s*(til|--|\u2013)\\s*(?P<stop>.+)
(frame size|(video )?res(olution)?|video).*?(?P<res>(272|336|480|494|528|608|\\(?640|688|704|720x480|810|816|820|1 ?080|1280( \\@)?|1 ?920(x1080)?))
(from)((?:\\\\\\s|\\s)+)(
(from)\\s+(?P<start>.+)\\s+to\\s+(?P<stop>.+)
(from|to) ([a-z0-9.]+) using ([a-z0-9\\\\_]+)\\.?
(g|\\\\0{0,4}(47|67)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\g)
(gbrowse[^/]*)(?\\!.*gbrowse)/.+$
(get|create)\\(\\s*([a-z0-9\\\\]+)::class\\s*\\)
(git\\+)?((?P<protocol>\\w+)://)((?P<username>[^:]+)(:(?P<password>[^@]+))?@)?((?P<hostname>[\\w\\.\\-]+))(:(?P<port>\\d+))?(?P<pathname>(\\/(?P<owner>\\w+)/)?(\\/?(?P<name>[\\w\\-]+)(\\.git)?)?)
(go|change|move).*\\sto\\s(?P<alias>\\w*)$
(group :
(group\\.)?(?P<name>(all|android|chrome|windows10|phone|tablet|pc))
(h|\\\\0{0,4}(48|68)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\h)
(h|t|r|e|l|u|U|s(/|%|\\#)(.*?)(?<!\\\\)\\2(.*?)(?:(?<!\\\\)\\2|$))
(href[\\s\\\"\\'\\=]{2,})([a-z0-9\\/\\.\\_]{3,})([\\?a-z\\=]*[0-9a-zA-Z]*)[\\'\\\"]
(hstore, unknown, text[])
(http.:\\/\\/[w\\.]*mega\\.[a-z\\.]+\\/\\#[A-Z0-9\\_\\-\\!\\=]+)
(http://orcid\\.org/|https://orcid\\.org/|orcid\\.org/)?(?P<orcid>(\\d{4}-\\d{4}-\\d{4}-\\d{3}[0-9x]))$
(http|https)://(www\\.)?(?P<host>putlocker\\.(com|ws))/(embed/|file/)(?P<id>[\\w]+)
(http|https)?:?\\/\\/[^\"'\\s<>()\\\\]*
(https://([a-zA-Z0-9\\-\\.]+)?\\.google.com)([a-zA-Z0-9\\-\\_/]+)?
(https?:\\/\\/)([a-zA-Z0-9.\\/\\-\\_]*)
(https?\\:\\/\\/[a-zA-Z0-9\\:\\/\\-\\?\\&\\;\\.\\=\\_\\~\\#\\'\\%$\\!\\+]*)
(https?\\:\\/\\/|)(youtu(\\.be|be\\.com)|vimeo).*+
(chr\\d+)\\_(\\d+)-(\\d+)
(i|\\\\0{0,4}(49|69)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\i)
(I|y\\\\O\\{\\})'(aN[AY]?[\\s\\-])
(I|y\\\\O{})'(aN[AY]?[\\s\\-])
(i18n_getf?|__) ?\\(\\s*[\"']([^\"'\\\\]*(?:\\\\.[^\"'\\\\]*)*)[\"'](?U).*\\)
(id)(\\s*)(:)(\\s*)(
(id|label|source|target|value)\\s+(?|([0-9\\.]+)|\\\"([^\\\"]+)\\\")
(idiomas|lang|language|langue|sprache).*?\\b(?P<lang>Brazilian|Chinese|Croatian|Danish|DE|Deutsch|Dutch|Estonian|ES|English|Englisch|Finnish|Flemish|Francais|French|FR|German|Greek|Hebrew|Icelandic|Italian|Japenese|Japan|Japanese|Korean|Latin|Nordic|Norwegian|Polish|Portuguese|Russian|Serbian|Slovenian|Swedish|Spanisch|Spanish|Thai|Turkish)\\b
(image:)?(?:(https?:[^\\[]+)|{([a-z0-9_-]+)})\\[(|.*?[^\\\\])\\]
(import)(\\s+)(
(in 
(include_once|include)[ ]+\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"[ ]*\\r?(?:\\n|$)
(install)\\s(?P<package>\\w*)
(invalid regexp
(iPhone|iPad|CPU)\\s+OS\\s+(\\d+\\_\\d+)
(is|was)\\s(?P<package>\\w*)\\s(installed)
(k|\\\\0{0,4}(4b|6b)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\k)
(kl\\.\\s+)\\Q$marker\\E(\\d+.)(\\d+.)\\Q$marker\\E(\\d+)
(kl\\.\\s+)\\Q$marker\\E(\\d+.)\\Q$marker\\E(\\d+)
(lang\\s*=)(\\s*)(\"(?:\\\\.|[^\\\\])*?\"|'(\\\\.|[^\\\\])*?'|[^\\s>]+)
(largeur|width).*?(?P<res>(\\(?640|688|704|720|1280( \\@)?|1 ?920))
(latest|
(let|into)(\\s+)(
(let|var)\\b(\\s*)(
(locales/.*\\.yml)|((config/routes|
(Lor)([^]?m)
(m|\\\\0{0,4}(4d|6d)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\m)
(mailto:)?([\\w\\.\\_]+)@(\\w+)\\.(\\w+)\\.?(\\w+)?
(mellan)\\s+(?P<start>.+)\\s+och\\s+(?P<stop>.+)
(mellem)\\s+(?P<start>.+)\\s+og\\s+(?P<stop>.+)
(mellom)\\s+(?P<start>.+)\\s+og\\s+(?P<stop>.+)
(method)(\\s+)(
(mezi)\\s+(?P<start>.+)\\s+(a)\\s+(?P<stop>.+)
(milli)\\s+(?P<start>.+)\\s+og\\s+(?P<stop>.+)
(module) (
(mswin\\d+)((\\_|-)(\\d+))?
(mswin\\d+)(\\_(\\d+))?
(multigroup\\_)?collections(_\\d+)?
(NAME\\s*:\\s*)?'([^\\\\']|\\\\([bfnrtv'\\\\/]|u[0-9a-fA-F]{4}))*'
(NAME\\s*:\\s*)?\"([^\\\\\"]|\\\\([bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"
(native\\_(dash|hls)|html5)
(now|today)(?P<sign>[+-])(?P<time>\\d+)(?P<unit>day|week|month|year)(s)?
(o|\\\\0{0,4}(51|71)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\o)
(-o|--open)(=?|\\s)(?P<LinkId>\\d+)
(od)\\s+(?P<start>.+)\\s+(do)\\s+(?P<stop>.+)
(open|navigate to|browse)\\s(?P<site>.*)
(p|\\\\0{0,4}(50|70)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\p)
(package)(\\s+)(
(packages\\\\[^\\\\]+)\\\\src\\\\
(packages\\\\Xamarin\\.UITest\\.)(\\d+(\\.\\d+)+)
(paste.*(to)?\\s((?P<location>\\\"?(.)*\\\"?)$)?)|paste.*
(pci|usb)-[0-9a-zA-Z:_-]*_(?P<usbid>[0-9a-zA-Z]*)-.*$
(perl5\\.(?|([0-9]{3})_?([0-9]{2})|([0-9]{1,2})\\.([0-9]+)))
(PHPUnit\\\\)|(Test.php)|(phpunit.phar)|(vendor)|(Interface.php)
(pod|item|defn|nested|finish|\\U $name\\E )
(property)(\\s+)(
(protected static \\$unicodePropsRegexp)[^;]++;
(public\\s\\$(
(public\\s+\\$(
(public|protected|private|provide)(\\s+)(
(public|protected|private|provide)(\\s+)((
(-r|--results)(=?|\\s)(?P<ResultsCount>\\d+)
(react-cosmos[a-z0-9-]*|react-querystring-router)(\\/|\\\\)src
(record)(\\s*)(\\()(
(remove|delete|terminate|kill)\\s(?P<file>\\\"?(.)*\\\"?)
(remove|delete|terminate|kill)\\s(?P<original>\\\"?(.)*\\\"?)
(rename|name)\\s(?P<original>\\\"?(.)*\\\"?)\\sto\\s(?P<new>\\\"?(.)*\\\"?)
(rule\\s+([\\w\\_\\-]+)(\\s*:\\s*(\\w[\\w\\s]+\\w))?\\s*\\{\\s*(meta:\\s*(.*?))?(strings:\\s*(.*?)\\s*)?condition:\\s*(.*?)\\s*\\})
(run) (
(run|down): ([/\\w\\_\\-\\.]+): \\(pid ([\\d]+)\\) (\\d+s); (run|down): log: \\(pid ([\\d]+)\\) (\\d+s)
(s
(s)(.)(
(sanity-plugin-[^\\\\]+)\\\\src\\\\
(sass|scss)[/\\\\]custom-importer\\.(scss|sass)
(save|alias|nickname).*(as|name\\w*|call\\w*)\\s(?P<alias>\\w*)$
(sd|hd)_src[\"']?\\s*:\\s*(?P<quote>[\"'])(?P<url>.+?)(?P=quote)
(self)(\\s*->\\s*)('
(Settings for|Time stamping parameters for)\\s+(?P<INT>\\S+):
(signal)(\\s+)(
(Sprint|sprint) (?P<sprint_number>[\\d+])
(src|file): (?P<q>[\\\"'])(?P<url>(https?:)?//.+?m3u8.*?)(?P=q)
(ss|sh|t?ch|zz|x|
(ssh\\:\\/\\/\\w+@(?P<host>[a-zA-Z0-9_.-]+))(:{0,1})(?P<port>(\\d+))?
(stable|beta|nightly)(-[\\d-]+)?-(?P<target>.+)
(styled(\\.\\w+|\\([^)]*\\))(\\.\\w+(\\([^)]*\\))*)*|css|injectGlobal|keyframes|css={)`(?:\\$\\{[^}]+\\}|\\\\\\\\|\\\\?[^\\\\])*?`
(subroutine|function)\\s*(?P<name>\\w+)\\s*\\(
(SYS-(SW[0-9]+-)?5-CONFIG_I|VSHD-5-VSHD_SYSLOG_CONFIG_I): Configured from .+ by (?P<user>.+) on .*
(TEMP\\_OCEANLAYERS\\_?\\w*)\\.OUT$
(tracking url|the url to track the job):\\s+(?P<url>.+)$
(translate|scale|rotate|matrix)\\(([0-9,.eE+-\\s]+)(?:,|\\s?)+\\)
(tz=>['\"][a-zA-Z0-9\\/\\_]+['\"])
(U\u222fS|U\\.S|U\u222fK|E\u222fU|E\\.U|U\u222fS\u222fA|U\\.S\\.A|I|i.v|I.V)\u222f(?=\\s
(u8|u|U|L)?'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-f0-9]{1,2}|[^\\\\'\\n])'
(unpack\\w*|unzip|unload|unarchive|unrar|untar|extract)\\s(?P<file>\\\"?(.)*\\\"?\\.(?P<format>(\\w)*))
(unpack\\w*|unzip|unload|unarchive|unrar|untar|extract)\\s(?P<file>\\\"?.*\\\"?\\.(?P<format>\\w*))(\\s(to|here)\\s(?P<location>\\\"?.*\\\"?))?
(unset |Remove-Item Env:\\\\)(.+?)$
(url\\(['\"]?)(?P<link>.*?)['\"]?\\)
(url\\(['\"]{0,1}\\s*(?P<url>.*?)[\"']{0,1}\\))
(url\\(\\s*(?:'(?:[^']|\\\\')*'|\"(?:[^\"]|\\\\\")*\"|(?:[^'\"\\\\]|\\\\.)*?\\s*)\\))|counter\\(\\s*([a-z0-9-]+)\\s*,\\s*([a-zA-Z0-9-]+)\\s*\\)|counters\\(\\s*([a-z0-9-]+)\\s*,\\s*(?:\"((?:[^\"\\\\]|\\\\.)*)\"|'((?:[^'\\\\]|\\\\.)*)')\\s*(?:,\\s*([a-zA-Z0-9-]+)\\s*)?\\)|\"((?:[^\"\\\\]|\\\\.)*)\"|'((?:[^'\\\\]|\\\\.)*)'|([^'\"]+)
(use\\s+Psr\\\\Http\\\\Server\\\\RequestHandlerInterface).*;
(v?c?s)  # collection type\n        /\\w+     # collection name\n        (\n            /?                 # no key\n            |                  # OR\n            /(?P<key>[^/]+)/?  # item key\n        )\n        $\n    
(van)\\s+(?P<start>.+)\\s+(tot)\\s+(?P<stop>.+)
(verify_internal_consistency_reachable_i:\\sWB\\smiss\\s\\S+\\s\\(T_ARRAY\\)\\s->\\s)\\S+\\s\\((proc|T_NONE)\\)\\n\n             \\K(?:\\1\\S+\\s\\(\\2\\)\\n)*
(VG
(VH
(volume|chapter) (?P<chapter>[0-9]{1,2})
(von|vom)\\s+(?P<start>.+)\\s+(bis)\\s+(?P<stop>.+)
(vuosien\\s*)?(?P<start>.+)\\s+ja\\s+(?P<stop>.+)\\s+v\u00e4lill\u00e4
(webos|palm\\os|qnx|bada|meego)[\\/\\s-]?([\\w\\.]+)*
(X)(?>aa|a)\\k<-1>
(X)\\\\(Y)
(x|\\\\0{0,4}(58|78)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\x)
(y)(.)(
)
) {  # 
)(.
);
)+}{} unless $path eq \".
*
* Always start with 2 *
* Build the set of points *
* compute tau *
* compute the power at this frequency *
* Compute the value for each frequency *
* Dereference to get the original array *
* Draw an ellipse tilted toward the mouse. Thanks to\n\t\t\t * http:
* First integer indicates how much room we have *
* get \"items\" variable, and stack pointer variables used by ST() *
* if none of the primes below sqrt_candidate divide\n\t\t\t\t\t * into it, it must be prime. *
* If the array was previously allocated, then call for a\n\t\t\t * reallocation. *
* If the array was previously unallocated, call for a new\n\t\t\t * block of memory. *
* Indicate we're returning a single value on the stack. *
* Iterate through the number of x and y ellipses to draw *
* mostly equivalent to Perl code above *
* Note: no need for aTHX_ because Newx and Safefree do not need\n\t * them. *
* ponto de referencia   *
* posicao do observador *
* Prepare stack to receive return values. *
* Push the sum onto the return stack *
* Re-assign the array to its new memory slot *
* Second integer indicates how many items are \"used\", which will\n\t\t * not change during this procedure. However, if the initial array\n\t\t * was empty, then the newly allocated stretchy has no \"used\" slots,\n\t\t * so mark it as such. *
* Set up variables *
* so that with increment, it'll go to 3 *
* Sum the given numeric values. *
* Unpack the data *
* vup                   *
**
***
**.* match can be followed with :name to make it into a\n    named match, so:\n\n      sub (
*.mustache
*.pm>, <lib
*.t>);\nshift if $ARGV[0] eq '-fail';\nmy $Mblib = $^O eq 'MSWin32' ? '-Iblib\\arch -Iblib\\lib' : \"-Iblib
*DELETED at \\d+ with token [\\w.]+* 
, [a-zA-Z\\_]+=None
,(?![^()]*+\\))
,(?!\\\\)
,(?!\\p{IsDigit})
,(?=
,?(?:\\$(?P<var>[\\w]+))\\s*=(?P<val>[^,]+)
,?\\s*(
,\\\\
,\\Q$args{\"-as\"}\\E
,\\s*([^\\s,\"=]*)\\s*=\\s*([^\\s,\"]+|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")\\s*
,|?
,|\\||?|\t|\\n|\\r|\\n\\r
,|\\R
.(?<$>a).
.(?P<nick>.+)!.*
.* (?P<sign>[+-])(?P<hours>\\d\\d)(?P<minutes>\\d\\d)$
.* (?P<version>\\d+\\.\\d)
.* ^ \\s* use \\s+ \\Q$package\\E \\s* ; \\n 
.* anaconda upload (?P<pkg_path>.+)$
.* socat\\[\\d*\\]\\s(?P<INFO_MSG>[NWID].*)
.* socat\\[\\d*\\]\\s[E|F]\\s(?P<ERROR_MSG>.*)
.*![\\p{Alnum}]+
.*(
.*((
.*((?![\\._])[\\p{Punct}|\\s])
.*((?>/\\*.*?\\*/\\s+))\n                         ([\\w\\.\\s]+\\s* = \\s+)?rb_define_(class|module).*?\"(
.*((?>/\\*.*?\\*/\\s+))\n                         ([\\w\\.\\s]+\\s* = \\s+)?rb_define_(class|module)_under.*?\"(
.*(/|\\\\)
.*(?:^|\\s)(?:__)?(?P<cc>cdecl|stdcall|thiscall|fastcall)(?:__)?.*
.*(?|(<!--)|(-->))
.*(?<!\\\\)[\\!\\\\\"\\#\\$\\%\\&\\\\'\\(\\)\\+\\,\\.\\/\\:\\;\\<\\=\\>\\@\\[\\]\\^\\`\\{\\|\\}\\~\\-].*
.*(?P<basefile>\\d{4}[:/_-]\\d{1,3}).pdf$
.*(?P<basefile>\\d+[:/_-]\\d+).pdf$
.*(?P<basefile>EIFS_\\d{4}_\\d+).pdf$
.*-(?P<bitrate>[0-9]+k)\\.mp4
.*(?P<CPU_ROW>Cpu).*:\\s*(?P<US>\\d*.\\d*).*us,\\s*(?P<SY>\\d*.\\d*).*sy,\\s*(?P<NI>\\d*.\\d*).*ni,\\s*(?P<ID>\\d*.\\d*).*id,\\s*(?P<WA>\\d*.\\d*).*wa,\\s*(?P<HI>\\d*.\\d*).*hi,\\s*(?P<SI>\\d*.\\d*).*si,\\s*(?P<ST>\\d*.\\d*).*st
.*(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+).*
.*(?P<year>\\d{4})/(?P<month>\\d{2})?/(?P<day>\\d{2})?.*
.*(?P<year>\\d{4})/week/(?P<week>\\d+)?.*
--.*([\\n\\Z]|$)
.*(\\.(??????|?????|????|????|????|?????|??????))$
.*(\\/|\\\\)
.*(\\/|\\\\)(.*)$
.*(\\/|\\\\)(.*\\.jar)
.*(\\/|\\\\)([^(\\/|\\\\)]*)\\.ngdoc
.*(\\/|\\\\)+?(.*)$
.*(\\/|\\\\)themes(\\/|\\\\).*?(?=(\\/|\\\\))
.*(\\{.*?[^\\\\]?\\})
.*(\\b
.*(\\n|^)(?P<name>[A-Z0-9 ]+):\\w*.+
.*(azext_[^/\\\\]+).*
.*(closes #|fixes #|adresses #)(?P<bugid>\\d+)
.*(ep|eh)[\\/\\\\](.*)[\\/\\\\]hqmf1.xml
.*(Plugin|plugins)[/\\\\]
.*/(?P<basefile>[LVHSF\\-]+FS_ ?\\d{4}[_\\-]\\d+)\\.pdf$
.*/(?P<url>[-\\w\\.]+)/?$
.*/d/(?P<key>[^/]+)/.*?(?:gid=(?P<gid>\\d+))?$
.*/lagrum/gallande-ffs.*/ffs.*(?P<basefile>\\d{4}[\\.:/_-]\\d{1,3})[^/]*.pdf$
.*/objects/(?<domain-type>\\\\w*)/(?<object-id>\\\\d*)
.*/sok-fffs/\\d{4}/((?P<baseact>\\d{5,}/)|)(?P<basefile>\\d{5,})/$
.*: (?P<domains>\\d*) .*, \\d* .*$
.*: \\d* .*, (?P<backups>\\d*) .*$
.*: In (?:member )?function '(?P<func>.*)':
.*://(?P<namespace>.+)
.*::(\\p{Word}+)$
.*? login attempt \\[(?P<name>.*?)/(?P<pass>.*?)\\] (?P<status>.*?)$
.*? New connection: (?P<ip>.*?):(?P<port>.*?) .*?$
.*? Remote SSH version: (?P<client>.*?)$
'.*?(?<!\\\\)'
.*?(?<!\\\\)\"
.*?(?=\\]={
.*?-(?P<id>[a-zA-Z0-9_-]+)(?:/watch_as3|/html5player(?:-new)?|(?:/[a-z]{2}_[A-Z]{2})?/base)?\\.(?P<ext>[a-z]+)$
.*?(?P<loc>[A-Z0-9]{3,4})\\s?(?P<dir>[0-9]{3})(?P<dist>[0-9]{3})
.*?([^\\\\]+)$
.*?(\\R)
.*?(FROM\\s*(?P<gnames>\\<.*\\>+))?\\s*(WHERE\\s*)?\\{(?P<tpattern>.*)\\}.*
.*?:(?P<lineno>\\d+):\\s*\\[(?P<what>[A-Z]\\d{4})(,\\s+(?P<where>[^\\]]+))?\\]\\s+(?P<message>.*)
.*?[^\\\\](?:\\\\{2})*(?=\\))
.*?[^\\\\](?=')
.*?[^\\\\](?=\")
'.*?[^\\\\]'|''
'.*?[^\\\\]'|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z
.*?[0-9.]*[0-9]++([xX][0-9.]*[0-9.]++)+$
.*?\\.dev(?P<dev_num>\\d+)
.*?\\[ \\<[^\\>]+\\> (?:HH\\\\)?(\\w+)(.*?)\\$
.*?\\_\\d+\\.(.*?)\\_(\\d+)\\.
.*?\\{@(\\p{Alpha}+)\\b(.*?)}
.*?\\15\\12--\\Q$self->{boundary}\\E(..)
.*?\\b(?P<name>\\w+)\\Z
.*?\\n(?=\\Q$label\\E\\n)
.*?\\R\\.\\h*(?=\\R|\\z)
.*?_\\(((?:\".*?(?<!\\\\)\")|(?:'.*?(?<!\\\\)')).*?\\)
.*?<FILENAME docid=\"(?P<stream_id>.*?)\">(?P<tagged_doc>(.|\n)*?)</FILENAME>
.*@([@_\\d\\p{IsAlpha}]+).*
.*@param\\s++(?<name>\\S*)(\\s++)?(?<descr>.+)?
.*@return(\\s++)?(?<descr>.+)?
.*@throws\\s++(?<name>\\S*)(\\s++)?(?<descr>.+)?
.*[/\\\\]
.*[/\\\\](.*)$
.*[/\\\\](.*)[/\\\\](.*)\\.xml
.*[/\\\\](.+)(\\:\\d+|\\(\\d+\\))\\: 
.*[/\\\\](.+)(\\:\\d+|\\(\\d+\\))\\:
.*[/\\\\](?!$)
.*[/\\\\]([^/\\\\\\?]*).*
.*[/\\\\]([^\\\\/]+)$
.*[/\\\\](repository|local-repo)[/\\\\].*
.*[/\\\\]\\.git
.*[/\\\\]+
.*[/\\\\]Examples[/\\\\].*
.*[/\\\\]OVRUI[/\\\\]node_modules[/\\\\].*
.*[/\\\\]OVRUI[/\\\\]package\\.json
.*[/\\\\]website
.*[/\\\\]website[/\\\\].*
.*[:/\\\\](.*)
.*[\\\":=,+?`!@#$^&*{}\\[\\]\\\\].*
.*[\\.\\/\\\\]
.*[\\/\\\\]
.*[\\/\\\\]((ep|eh)_.*)\\.xml
.*[\\/\\\\](.*)
.*[\\/\\\\](.*)$
.*[\\/\\\\](.*)\\.(.*)
.*[\\/\\\\](.+)[\\/\\\\]?$
.*[\\/\\\\]([\\w-]+).*
.*[\\/\\\\](\\w+)$
.*[\\/\\\\](\\w+)Controller\\.php$
.*[\\\\\\/]([^\\/\\\\]+)$
.*[\\/|\\\\](.+)$
--.*[\\n\\Z]
.*[\\s<>;'\\\\].*
.*[\\w\\_]+_\\d{4}-\\d{2}-\\d{2}-\\d{2}_(\\d{2})-(\\d{2})_\\d{1,2}\\.tar
.*[^\\\\].
.*[^\\\\];\\s*$
.*[^\\\\]\\\\..+
.*[^\\\\]\\\\\\s$
.*[^\\\\]=.*
.*[^\\p{Alnum}].*
.*[^\\p{ASCII}]+.*
.*[0-9]++%.*
.*[a-f0-9]{8}+$
.*[a-zA-Z0-9\\s<>;'\\\\]+.*
.*\\\\
.*\"CrumbStore\":\\{\"crumb\":\"(?P<crumb>[^\"]+)\"\\}
.*\\$\\p{Alnum}+\\.class
.*\\((?P<myint>\\d+)\\).*|(?P<myint2>\\d+).*
.*\\\\(.*)$
.*\\\\(.*?)Test$
.*\\\\(.:)$
.*\\\\(.+?)
.*\\\\(.+?)Command$
.*\\\\([^\\\\]+)Definition
.*\\\\([^\\\\]+)Node$
.*\\.(
.*\\.(?P<extension>.*)
.*\\.(?P<format>\\w{1,8})$
.*\\.([\\p{Alpha}]+)$
.*\\..*_(?P<index>\\d+).json
.*\\/(
.*\\/\\jst\\/
.*\\@Route\\(\\\"([\\w\\/\\-\\{\\}]+)\\\", name=\"([^\\w\\_]+)\"\\).*
.*\\[(?P<percent>.+)%.*\\].*
.*\\[(http|.*HttpServer.*)\\s*] \\[.*\\] .*publish_address {(?:inet\\[[\\w\\d\\.-]*/|\\[)?(?:[\\w\\d\\.-]+/)?(?P<addr>[\\d\\.:]+)(?:\\])?}
.*\\\\[^\\\\\\/\\\"\\[\\]:|<>+=;,?*@]+$
.*\\\\[a-zA-Z0-9]{1,}\\\\Proxy$
.*\\\\[UL][\\$\\\\]\\d.*
.*\\_(\\w*\\-?\\w*\\_CONC)\\.IN$
.*\\_(\\w*\\_EMIS)\\.IN$
.*\\_(\\w*\\_OT)\\.IN$
.*\\_(\\w*\\_RF)\\.(IN|MON)$
.*\\_allergies.c32.erb
.*\\9
.*\\\\CVS\\\\
.*\\d+[\\_\\-\\.x]\\d+[\\_\\-\\.x]\\d+[\\_\\-\\.x]\\d+[^\\.]+
.*\\K at .* line \\d+\\.$
.*\\K::.*
.*\\K\\..*
.*\\p{Punct}alignment\\p{Punct}.*
.*\\p{Punct}start\\p{Punct}.*
.*\\Q$file_ext\\E$
.*\\R|.+\\z
.*\\s+(?P<fivesecs>\\d+)\\s+(?P<onemin>\\d+)\\s+(?P<fivemin>\\d+)\\s+(?P<onehour>\\d+)
.*\\s+(?P<packets_input>\\d+) packets input.*\\s+(?P<bytes_input>\\d+) bytes.*
.*\\s+(?P<packets_output>\\d+) packets output.*\\s+(?P<bytes_output>\\d+) bytes.*
.*\\s+(?P<unknown_drops>\\d+) unknown protocol drops.*
.*\\s+lo:(?P<label>\\S+).*
.*\\s+This is Suricata version (?P<version>[\\d\\.]+ .*)
.*\\s+Version (?P<version>[\\d\\.]+ .*)
.*\\\\site-packages\\\\
.*\\sMaxTime=(?P<MaxTime>[^ \t]+)\\s+
.*^chruby: (
.*_(?P<bitrate>[0-9]+)\\.mp4
.*_(?P<bitrate>[0-9]+k)\\.mp4
.*{(?P<size>\\d+)}$
.*+foo
.*<(?P<email>.*@*.)>
.*AMMR_VERSION\\s\"(?P<version>.*)\"
.*appIdKey=(\\h+)
.*app-only-begin[^]*?app-only-end.*
.*azure/cli/command_modules/(?P<module>[^/]*)/__init__.*
.*BGP version 4, remote router ID (?P<rid>.*?), VRF (?P<vrf>.*?)$
.*BODY.PEEK\\[HEADER.FIELDS \\((?P<headers>.+)\\)\\].*
.*Bug-Url: https?://bugzilla.*/[^\\d]*(?P<bugid>\\d+)
.*console.cloud.google.com/dataflow.*/jobs/([a-z|0-9|A-Z|\\-|\\_]+).*
.*DisplayViewport\\{valid=true, .*orientation=(?P<orientation>\\d+), .*deviceWidth=(?P<width>\\d+), deviceHeight=(?P<height>\\d+).*
.*FLAGS \\((?P<flags>.*?)\\)
.*FLAGS \\((?P<flags>[^\\)]*)\\)
.*for (?P<subscriber>\\S+):(?P<plan>\\S+)
.*go\\:linkname some\\_name some\\_name.*
.*HAIL\\.\\.\\.(?P<haildir>[><]?)(?P<hail>[0-9\\.]+)IN
.*hazelcast-[1-9][\\p{Alnum}\\-_\\.]+\\.jar.*
.*hazelcast-client-[\\p{Alnum}\\-_\\.]+\\.jar.*
.*if_not_exists\\s*\\((?P<path>.+),\\s*(?P<default>.+)\\).*
.*INFO.*Launching Job (?P<job_number>[0-9]+) out of (?P<max_jobs>[0-9]+)
.*INFO.*Stage-(?P<stage_number>[0-9]+).*map = (?P<map_progress>[0-9]+)%.*reduce = (?P<reduce_progress>[0-9]+)%.*
.*INFO.*Total jobs = (?P<max_jobs>[0-9]+)
.*INTERNALDATE \"(?P<day>[ 0123][0-9])-(?P<mon>[A-Z][a-z][a-z])-(?P<year>[0-9][0-9][0-9][0-9]) (?P<hour>[0-9][0-9]):(?P<min>[0-9][0-9]):(?P<sec>[0-9][0-9]) (?P<zonen>[-+])(?P<zoneh>[0-9][0-9])(?P<zonem>[0-9][0-9])\"
.*it\\s*([\"'])(.*
.*modules[/\\\\](\\w*)[/\\\\]?\\w*[/\\\\]?
.*name *= *(?P<name>[^\\(\\),]+)
.*ni, (?P<idle>.*).id.*
.*part.(?P<i>[\\d]+).parquet$
.*PhysicalDisplayInfo{(?P<width>\\d+) x (?P<height>\\d+), .*, density (?P<density>[\\d.]+).*
.*project *= *(?P<project>[^\\(\\),]+)
.*'skia_revision': '(?P<revision>[0-9a-fA-F]{2,40})'.*
.*Template[/\\\\]
.*TinderboxPrint: ?(?P<line>.*)$
.*TORNADO DAMAGE THREAT\\.\\.\\.(?P<damage>CONSIDERABLE|SIGNIFICANT|CATASTROPHIC)
.*TORNADO\\.\\.\\.(?P<tornado>RADAR INDICATED|OBSERVED|POSSIBLE)
.*Total output drops:\\s+(?P<output_drops>\\d+)\\s+.*
.*UID (?P<uid>[0-9]+)
.*urlpatterns\\s*=\\s*patterns\\((?P<params>.*)\\)
.*version\\s:\\s(?P<version>(?P<v1>\\d)\\.\\s(?P<v2>\\d)\\.\\s(?P<v3>\\d)\\.\\s(?P<build>\\d+)\\s\\((?P<arc>.*)\\))
.*WATERSPOUT\\.\\.\\.(?P<waterspout>RADAR INDICATED|OBSERVED|POSSIBLE)
.*WIND\\.\\.\\.(?P<winddir>[><]?)\\s?(?P<wind>[0-9]+)\\s?(?P<windunits>MPH|KTS)
.*WIND\\.\\.\\.HAIL (?P<winddir>[><]?)(?P<wind>[0-9]+)(?P<windunits>MPH|KTS) (?P<haildir>[><]?)(?P<hail>[0-9\\.]+)IN
.*yaml-tests[\\/\\\\]
.@\\{iconfont-css-prefix\\}-([^:]+):before\\s*\\{content:\"\\\\([0-9a-f]+)\";\\}
.[/\\\\]test[/\\\\]fixture[/\\\\]error\\.js
.[/\\\\]test[/\\\\]fixture[/\\\\]failedRunner\\.js
.[/\\\\]test[/\\\\]fixture[/\\\\]legacyDoneRunner\\.js
.[/\\\\]test[/\\\\]fixture[/\\\\]legacyFailedRunner\\.js
.[/\\\\]test[/\\\\]fixture[/\\\\]runner\\.js
.[/\\\\]test[/\\\\]fixture[/\\\\]runnerAllSuccess\\.js
.[/\\\\]test[/\\\\]fixture[/\\\\]runnerWithFailed\\.js
.[/\\\\]test[/\\\\]fixture[/\\\\]success\\.js
.-[^\\\\]
.\\\\(\\w+)$
.\\.\\_.|.\\-\\_.|.\\_\\..|.\\_\\-.|.\\_\\_.
.\\js$
.^$*+?{}()[]\\|
-.~:@!$&'()*+,;/?
-.~:@!$&'()*+,;/?=
-.~:@!$&'()*+,;=
.+(?::|?|?)(?:?|?|?)?(?:.+(?::|?)?|??|??|.+?)?(?:.+??)
.+(?:???|???|?|?|??)
.+(?:\\Q\u00acO\\E|\\Q\u00b7|\\E|\\Q\u00b4\u00bf\\E|\\Q\u00b1N\\E|\\Q\u00af\u00e0\\E|\\Q\u00a6\u00b3\\E)
.+(?:\\Q\u00e6\u0098\u00af\\E|\\Q\u00e6\u009c\u0083\\E|\\Q\u00e6\u009b\u00be\\E|\\Q\u00e5\u00b0\u0087\\E|\\Q\u00e8\u0083\u00bd\\E|\\Q\u00e6\u009c\u0089\\E|\\Q\u00e7\u0082\u00ba\\E)
.+(?<!\\\\)[\\*].+
.+(?<!\\\\)[\\?].+
.+/in/(?P<username>.+)
.+?((?/w)|(?/w )|(?/w )|\\n|$)
.+?(?=
.+?(?=\\\\)(.*)\\Http
.+?(?P<db>\\d+)
.+?(?P<ext>\\.[^.]*$|$)
.+@.+\\.(
.+[/\\\\]
.+[/\\\\](.+)
.+[\\/\\\\]
.+[^\\\\]\\..+
.+\\\\
.+\\\\(.+)
.+\\\\(.+\\((19|20)\\d\\d\\)\\.avi)
.+\\\\(.+\\((19|20)\\d\\d\\)\\.avi)$
.+\\\\(.+\\((19|20)\\d\\d\\)\\.iso)
.+\\\\(.+\\((19|20)\\d\\d\\)\\.iso)$
.+\\\\([^\\\\]*)$
.+\\\\(\\w+)Test$
.+\\. (?P<challenger>.+?) challenged.*? the play was (?P<callUpheld>upheld|overturned)\\.
.+\\.(
.+\\.[\\p{Alnum}]+
.+\\/\\^\\[A-Z][^]+line: 1.+column: 8
.+\\/|.+\\\\
.+\\[Time:\\s*(?P<time>[0-9]+.[0-9]+)\\].+\\[Ctxt:\\s*(?P<nrCtxt>[0-9]+)\\].+\\[IRQ:\\s*(?P<nrIrq>[0-9]+)\\].+\\[Core:\\s*(?P<nrCore>[0-9]+)\\].+\\[Task:\\s*(?P<nrProc>[0-9]+)/(?P<nrThread>[0-9]+)
.+\\_
.+\\\\Entity\\\\
.+\\\\Mod\\\\.+
.+\\s+(?P<topic>[a-zA-Z0-9\\\\._\\\\-]+)\\s+(?P<partitionId>\\d+)\\s+(?P<currentOffset>\\d+)\\s+\\d+\\s+(?P<lag>\\d+)\\s+(?P<clientId>\\S+)_/(?P<consumerAddress>.+)
.+_(?P<start_time>\\d+)(?:_v\\d+)?\\.nc\\Z
.+coding[:=][ \\t]*(?P<encoding>[-_.a-zA-Z0-9]+)\\b
.+SPHEROID\\[\\\"(?P<name>.+)\\\",(?P<major>\\d+(\\.\\d+)?),(?P<flattening>\\d{3}\\.\\d+),
.+UNIT ?\\[\"(?P<unit_name>[\\w \\'\\(\\)]+)\", ?(?P<unit>[\\d\\.]+)(,AUTHORITY\\[\"(?P<unit_auth_name>[\\w \\'\\(\\)]+)\",\"(?P<unit_auth_val>\\d+)\"\\])?\\]([\\w ]+)?(,AUTHORITY\\[\"(?P<auth_name>[\\w \\'\\(\\)]+)\",\"(?P<auth_val>\\d+)\"\\])?\\]$
.<>(){}[]+&!$;-%_?:#@~='\" ^\\`|
.hla.(?P<hlatype>[\\w-]+).fq
.if_str_equal(\\(.*\\)
.NET[\\/\\]VC7
/(
/(?:(?:
/(?:(?:\\\\.)|(?:\\[(?:\\\\.|[^\\[\\]])+\\])|[^/\\\\])+/[a-z]*
/(?:[^/\\\\]*(?:\\\\.[^/\\\\]*)*)/[a-zA-Z]*(?s)
/(?:video|klipp)/(?P<id>[0-9]+)/
/(?P<a>foo|bar)/b
/(?P<basefile>\\d+\\-\\d+\\-\\d+)/$
/(?P<CONTEST>[^/]+)(/(?P<PROBLEM>[^/]+))?
/(?P<CONTEST>[a-zA-Z0-9]+)(/(problems/)?(?P<PROBLEM>[a-zA-Z0-9]+))?
/(?P<height>\\d+)[pP]_(?P<tbr>\\d+)[kK]
/(?P<height>\\d+)\\.mp4
/(?P<letter>[A-Za-z])/
/(?P<prefixes>[^/:]+):
/(?P<radio_id>\\d+)/(?P<audio_id>\\d+)
/(?P<rating>[ERATINnG]+)\\.png$
/(?P<total>[0-9]+)
/(?P<version>[0-9.]+)/
/(?P<width>\\d+)x(?P<height>\\d+)/
/(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})/
/(?P<year>\\d{4})/(?P<month>\\d{2})/
/(?P<year>\\d{4})/(?P<month>\\d{2})/(?P<day>\\d{2})/
/([^/\\\\]+\\.src.rpm)\\b
/(detail|kill)/(?P<kill_id>\\d+)/?
/(sections|
/, $ct, 2;\n      given @ct[0] {\n\ts:g/\\s+//;\n\t$_ .= lc;\n      }\n\n      given want {\n\twhen List   { return @ct }\n\twhen Scalar { return @ct[0] }\n      }\n    },\n    STORE => -> Str $type {\n      ./:header(\"Content-Type\", $type);\n    });\n}\n\nmethod referer () is rw {\n  return Proxy.new(\n    FETCH => { @{./:header(\"Referer\")}[0] },\n    STORE => -> $new is copy {\n      if ($new ~~ /\\#/) {\n\t# Strip fragment per RFC 2616, section 14.36.\n\tif ($new ~~ URI) {\n\t  $new .= clone;\n\t  $uri.fragment = undef;\n\t} else {\n\t  $new ~~ s/\\#.
// *CLIF:? +include +\"(?P<path>[^\"]+)\"
// *CLIF:? +init_module +(?P<cpp_statement>.+)
// *CLIF:? +macro +(?P<name>.+) +(?P<def>.+)$
// *CLIF:? +use +`(?P<cname>.+)` +as +(?P<pyname>[\\w.]+)
// [^\\n\\\\]* (?: \\\\. [^\\n\\\\]* )* | /\\* (?: .*? \\*/ | .* )
//(?P<package>[[:alnum:]-_.][[:alnum:]-_./]+)
//) {\n\t#my $val = MIME::Base64::decode($cur);\n\n\tgiven want {\n\t  when Scalar { return $val }\n\t  when List   { return split /\\:/, $val, 2 }\n\t}\n      }\n\n      return undef;\n    },\n    # -- XXX does this create a reasonable warning? If not, put\n    #   Carp::croak(\"Basic authorization user name can't contain ':'\")\n    # back.\n    # XXX Str where { $^str !~ /\\:/ }\n    STORE => -> Str $user, Str ?$passwd = \"\" {\n      #./:header($h, \"Basic \" ~ MIME::Base64::encode(\"$user:$passwd\", \"\"));\n    });\n}\n\nmethod redirect (::?CLASS ::class: Str $location, Str ?$target, Str ?$status = \"302 Found\", Str 
//.* | /\\*(?:[^*]++|\\*(?!/))*\\*/
//\\s*(?P<Comment>.*)
//\\s*\\Q]]>\\E$
//\\s?[\\-]*\\s(?P<desc>.*?)\\*/\\W*?struct\\s(?:ASSIMP_API\\s)?(?P<name>[a-z][a-z0-9_]\\w+\\b)[^{]*?\\{(?P<code>.*?)\\}\\s*(PACK_STRUCT)?;
//++
//code (?P<syntax>[a-zA-Z]+)(?P<code>.*?)//code
/?((?P<model>[^\\\\.]*)\\\\.)?(?P<appname>[^:]*)(:(?P<endpoints>.*))?
/?(?P<zoom>[0-9]?[0-9])/(?P<x>[0-9]{1,10})/(?P<y>[0-9]{1,10})(\\\\.[a-zA-Z]{3,4})?$
/?\\Q$mod_file\\E$
/?\\Q$prefix\\E$
/[
/[^/\\\\]*$
/[^/\\\\]+$
/[^/]+(?=/
/[^\\\\]\\\\\\d+/g
/[^a-zA-Z0-9\\-\\_]/g
/\\\\\\\\
/\\* ( (?>[^/*]+ | /[^*] | \\*[^/] ) | (?R) )* \\*/
/\\*.*?\\*/(?us)
/\\*.*+\\*
/\\*[^*]*\\*+([^/*][^*]*\\*+)*/|//([^\\\\]|[^\\n][\\n]?)*?\\n|(\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'|.[^/\"'\\\\]*)
/\\*\\*.*?\\*/\\s*(?:function |var )?([\\w.]+)\\N*
/\\*\\*?\\s*@(?P<name>[A-Za-z_-]+)(?:[ \\t]+(?P<value>.*?))?[ \\t]*\\r?\\*/$
/\\*\\s*\\Q]]>\\E\\s*\\*/$
/\\*{2,}\\s*@(\\p{Alpha}+)\\s
/\\Q$0\\E/?
/\\Q$filename\\E$
/\\Q$key2\\E/$
/\\Q$mod_pm\\E$
/\\Q$name
/\\Q$name_match\\E$
/\\Q$path_dir\\E/[^/]*$
/^(CBeebies:?|CBBC|\\[Ages?
/_api/simple/(?P<simple>\\w*)|/_api/(?P<direct>\\w*)
/|#|\\\\$|!|\\\\^|\\\\*|'| |\\\"|%|&|\\\\(|\\\\)|\\\\+|\\\\,|/|:|;|<|>|=|\\\\?|@|\\\\||\\\\\\\\
/|\\\\
/++
/api/(?P<Version>.+)/(?P<Format>.+)/(?P<Service>.+)/(?P<Method>.+)
/avatars/(?P<hash>[\\S\\s]*?)\\.(?P<ext>svg|png)(?:[\\S\\s]*?)$
/clubs\\.php\\?cid=(?P<id>[0-9]+)
/CPAN/(?:source/)?(.*\\Q$archive\\E)
/Date\\((-?\\p{Digit}+)(?:(\\+|-)(\\p{Digit}{1,4}))?\\)/
/Date\\((-?\\p{Digit}+)\\)/
/gems/([\\w\\-\\_]+)/?([\\d\\.]+)?/?
/gems/doc/([\\w\\-\\_]+)/?([\\d\\.]+)?/?(.*)?
/grails-app/views/(.+\\.(
/hello/(?P<name>[a-zA-Z]+)
/hls_(?P<height>\\d{3,4})_(?P<tbr>\\d{2,})/
/invites/([\\pL\\pM\\p{Nd}-_]*)(\\?.*)?$
/kafka_(?P<ver>[-\\d.]*)\\.jar
/kill/(?P<kill_id>\\d+)/?
/lang/(?P<id>[0-9]+)$
/lib/rspec/(
/member-reviews/(?P<id>[^/]+)
/not/here/clang++
/OUT:(?P<out>.+)$
/postcodes/(?P<postcode>[^/]+)
/product-reviews/(?P<asin>[^/]+)
/readme(
/recorded/(?P<id>\\d+)/?$
/review/(?P<id>[^/]+)
/sites/([\\w\\.\\-\\_]+)/
/spreadsheets/d/(?P<id>[a-zA-Z0-9-_]+)
/subscriptions/(?P<subscription>[^/]*)/
/subscriptions/[^/]*(/resource[gG]roups/(?P<resource_group>[^/]*)(/providers/(?P<resource_provider_namespace>[^/]*)(/(?P<parent_resource_path>.*))?/(?P<resource_type>[^/]*)/(?P<resource_name>[^/]*))?)?/providers/Microsoft.Authorization/locks/(?P<lock_name>[^/]*)
/Sysdb/(?:lag|slice/phy/.+)/intfCounterDir/(?P<intf>.+)/intfCounter
/Sysdb/(lag|slice/phy/.+)/intfCounterDir/(?P<intf>.+)/intfCounter
/threads/.*\\.(?P<id>[0-9]+)/
/todos/(?P<id>\\d+)
/tv/tags/[^/]+/\"\\s*>(?P<tag>[^<]*?)<
/v1/killmails/(?P<kill_id>\\d+)/[0-9a-f]+/
/views/(.+\\.(
/vpnp/exec:EXITCODE=(?P<code>\\d+)\n
: ENOENT[^]*$
: iconv.h\n[Alien::SDL] Testing header(s
: SDL_mixer.h\nChecking prerequisites...\n  requires:\n    !  Compress::Bzip2 is not installed\n    !  File::Which is not installed\n  build_requires:\n    !  Compress::Bzip2 is not installed\n    !  SDL (2.504
:(
:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+
:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"']+
:(?!
:(?!\\\\)|;
:(?!\\/|\\\\)
:(?:(?=[^/\\\\]))
:(?:.*?)\\s+303(?:.*?):(?P<nicks>.*)
:(?P<k>[a-zA-Z_]+)
:(?P<key>[^:]+): (?:`{2})?(?P<value>[^`\n]+)(?:`{2})?$
:(?P<key>[a-zA-Z0-9_-]+)
:(?P<label>[a-z0-9_-]+)|{\\s*(?P<multilabel>(?::[a-z0-9_-]+(?: .. )*)+\\s*)}|\\.(?P<directive>[a-z0-9_-]+)|\"(?P<string>.*)\"|(?P<reg>[vp][0-9]+)|{(?P<multireg>[vp0-9,. ]+)}|(?P<id>[a-z][a-z/-]*[a-z0-9/-]*)|(?P<reflike>[A-Za-z_0-9/;$()<>\\[-]+(?::[A-Za-z_0-9/;$()<>\\[-]+)?)|#(?P<comment>.*)
:(?P<nick>.*?)!\\S+\\s+?JOIN\\s+.*?(?P<channel>#+[-\\w]+)
:(?P<nick>.*?)!\\S+\\s+?PART\\s+(?P<channel>#+[-\\w]+)
:(?P<nick>.*?)!\\S+\\s+?PRIVMSG\\s+(?P<channel>#+[-\\w]+)\\s+:(?P<message>[^\n\r]+)
:(?P<nick>.*?)!\\S+\\s+?QUIT\\s+.*
:(?P<nick>.*?)!~\\S+\\s+?PRIVMSG\\s+[^#][^:]+:(?P<message>[^\n\r]+)
:(?P<old_nick>.*?)!\\S+\\s+?NICK\\s+:\\s*(?P<new_nick>[-\\w]+)
:(?P<role>[A-Za-z0-9_]+)(?:\\s+(?P<args>[A-Za-z0-9_]+))?:`(?P<content>[^`]*)`
:(?P<server>.*?)\\s+(?:376|422)
:(?P<sym>.*?)(?P<energy>-?\\d*\\.\\d*) eV
:(?P<tag>[A-z]*):`(?P<val>.*?)`
:(?P<var_name>[a-zA-Z0-9_]+)
:([\\w\\d]+(\\___[\\w\\d\\_]+)?(\\[.*\\])?)
:([^]+)
:([0-9A-Za-z\\_]*)
:([a-z\\_\\-][a-z0-9\\_\\-]+)
:([a-z\\_]+)
:([a-z]+)(?:\\((?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\))?(\\?)?
:([a-zA-Z]):\\\\
:(init|main|factory|state|prefix|load-impl-ns|implements|constructors|exposes|impl-ns|exposes-methods|methods)(?![a-zA-Z+!\\-_?0-9*~
:(lang|nth-(?:last-)?(?:child|of-type))\\((.*?[^\\\\])\\)
://(?P<user>[^:/\\s]+):(?P<password>[^@\\s/]+)@
://(?P<user>[^@]+?):(?P<password>.+?)@
::(
::\\Kid([^:]+)$
::\\Q$tbl\\E$
::\\Q$to\\E\\z
::|\\\\
::|\\/|\\\\
::attr\\((?P<attr>.*)\\)$
::C\\u{30b9 30ec 30c3 30c9}:
::DBD::\\Q$driver\\E$
::uml::\n                        \\s*(format=(?P<quot>\"|')(?P<format>\\w+)(?P=quot))?\n                        \\s*(classes=(?P<quot1>\"|')(?P<classes>[\\w\\s]+)(?P=quot1))?\n                        \\s*(alt=(?P<quot2>\"|')(?P<alt>[\\w\\s\"']+)(?P=quot2))?\n                    
::X\\u{df}:
:?(?P<nick>.*?)!~?(?P<user>.*?)@(?P<host>.*)
:?(?P<target>[[:alnum:]_/?.+-=,@~.]*)+
:[ ]?(\\d+{4}|--)$
:[\\s:\\\\]*
:[^/#?()\\.\\\\]+
:[^/#?()\\.\\\\]+\\*
:[^:]+:([A-Z]:\\\\)?[^:]+$
:[^]*
:\\\\\\.\\\\
:\\/=\\\\
:\\@]+)(?::(\\d+))?(
:\\Q$ID\\E/bin$
:\\Q$ID\\E/bin:
:\\s*(?P<state>on|off)(?:\\s+|$)
:\\s*param\\s*(?P<param>\\w+)\\s*:(?P<help>.*)$
:\\s?(\\W*
:\\S+\\(\\p{ASCII}*\\)
:|?
:=|[-+*/%=<>&|!?\\\\]+
:0x\\h+
:date_header('Client-Date')         }\n\n# The retry_after field is dual format (can also be a expressed as\n# number of seconds from now), so we don't provide an easy way to\n# access it until we have know how both these interfaces can be\n# addressed.  One possibility is to return a negative value for\n# relative seconds and a positive value for epoch based time values.\n#sub retry_after       { shift->_date_header('Retry-After',       @_); }\n\nmethod content_type () is rw {\n  return Proxy.new(\n    FETCH => {\n      my $ct = (.:header(\"Content-Type\"))[0];\n      return \"\" unless $ct.defined and $ct.chars;\n\n      my @ct = split 
:doc:`(?P<value>.*) <(?P<path>.*)>`
:enqueue(\"KICK $channel $nick :{$reason 
:header($header, HTTP::Date::time2str($time));\n    }\n  );\n}\n\nmethod date ()                is rw { .
:in `(
:ivar (?P<attr>[a-z_]+): \\w+ operations\\n\\s+:vartype (?P=attr): .*.operations.(?P<clsname>\\w+)\\n
:mac => \"08:00:27:\\h{2}:\\h{2}:\\h{2}\"
:math:`(?P<math>.*?)`
:mod:`(?P<value>.*) <(?P<module>.*)>`
:model\\.([A-Za-z\\_]+)
:model\\.[A-Za-z\\_]+
:register_default_handlers;\n    $:nickgen = Permutation.new($.nick);\n    $:queue = new Queue: floodcontrol => $floodcontrol;\n  }\n\n  method :enqueue(Str $msg) {\n    $:queue.enqueue({ .
:stale_content;\n            \n            return @old if want.List;\n            return @old[0];\n        });\n}\n\n# XXX ::?CLASS $part\nmethod add_part ($part) returns Void {\n    if ((.content_type 
;   # from newest release\nour $author         : Getopt(au=s
;   # of the newest release\n\nour $add_change     : Getopt(ac=s
; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?)?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))
; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))
; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+))?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))
; *(?:HTC[ _/])+([^ _/]+)(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))
; CPU(?: iPhone)? OS (\\d+\\_\\d+(?:_\\d+)?) like Mac OS X
; charset=(?P<charset>[^;]+)
;(
;(?P<hlsurl>[^;]+video\\.m3u8.+?)\\\\&quot;
;(?P<param>[-[:alnum:]]+)=(?P<value>[^[:cntrl:]\";:,]+|\"[^[:cntrl:]\"]+\")
;[A-Z]:\\\\
;\n    }\n    else {\n        return ();\n    }\n}\n\n__PACKAGE__->meta->make_immutable;\n\n1;\n\n__END__\n\n=pod\n\n=encoding utf-8\n\n=head1 NAME\n\nApp::BatParser - Parse DOS .bat and .cmd files\n\n=head1 VERSION\n\nversion 0.011\n\n=head1 DESCRIPTION\n\nParse DOS .bat and .cmd files\n\n=head1 SYNOPSYS\n\n    use App::BatParser;\n    use Path::Tiny;\n    use Data::Dumper;\n\n    my $parser = App::BatParser->new;\n    my $bat_string = Path::Tiny::path('t
;\n  } else {\n    my $err = Dumper(\\@!);\n    die \"couldn't parse $self->{def_name}: ($err)\";\n  }\n\n  my $output = $def_parsed->{pipeline}->{command};\n\n  foreach my $pipeline_component (@$output) {\n    $pipeline_component->{shell_arg} = [ map { $self->process_arg($_) } @{$pipeline_component->{shell_arg}} ];\n  }\n\n  return $output;\n}\n\n\nsub process_arg {\n  my ($self, $arg) = @_;\n\n  unless ($arg =~ 
;\n*ERRNO = *!;\n\nuse Carp;\n\n$gensym = 0;\n\nwhile ($ARGV[0] =~ 
;\n\n  my @components;\n\n  foreach my $element (@{ $parsed->{regexp}->{element} }) {\n    my $component = {};\n\n    if ($element->{literal}) {\n      $component->{chars} = [ $element->{literal} ];\n    } elsif ($element->{charclass}) {\n      $component->{chars} = $element->{charclass}->{literal};\n      $component->{negate} = 1 if $element->{charclass}->{negate_charclass};\n    } else {\n      die \"unknown element type\";\n    }\n\n    if ($element->{repeat}) {\n      $component->{min} = $element->{repeat}->{min};\n      $component->{max} = $element->{repeat}->{max};\n    } else {\n      $component->{min} = 1;\n      $component->{max} = 1;\n    }\n\n    push @components, $component;\n  }\n\n  $self->{components} = \\@components;\n\n  if ($type eq 'dna' || $type eq 'rna') {\n    $self->normalize_dna_rna;\n  } else {\n    die \"protein not impl\";\n  }\n\n  return $self;\n}\n\n\nsub compute_min_max {\n  my ($self) = @_;\n\n  my $min = my $max = 0;\n\n  for my $component (@{ $self->{components} }) {\n     $min += $component->{min};\n     $max += $component->{max};\n  }\n\n  return ($min, $max);\n}\n\n\nmy $iupac_lookup = {\n  R => [ qw
;\n\nopen(IN, shift || '../README'
;\n\nour $format_yaml    : Getopt(fy
;\nour $filename : Getopt(file|f=s
;\nour $new_file       : Getopt(new|n
;\\Q$path
;\\s*(?:
;\\s*charset=(?P<charset>[^\\s;]+)
;\\s*charset=(\")?(?P<charset>.+?(?(1)(?=(?<!\\\\)\")|($|(?=[;\\s]))))(?(1)\")
?
-? (?:0x\\h* \\. \\h+ (?:p[+\\-]?\\d+)? | \\d*\\.\\d+ (?:e[+\\-]?\\d+)?)
-? (?:0x\\h+ (?:p[+\\-]?\\d+)? | \\d+ (?:e[+\\-]?\\d+)?)
? (MPC-HC v\\d+.\\d+.\\d+.\\d+).*
? [Ll]e 
? [Ll]es 
?$
?(?!?)
?(?)??
-?(?:(?:[a-zA-Z_]|[^\\x00-\\x7F]|\\\\(?:\\$|\\n|[0-9a-fA-F]{1,6}\\s?))(?:[a-zA-Z_0-9\\-]*|\\\\(?:\\$|\\n|[0-9a-fA-F]{1,6}\\s?))*)
-?(?:\\p{IsDigit}+(?:\\.\\p{IsDigit}*)?|\\.\\p{IsDigit}+)
?(?|?|?)
?(?|?|?|?)
?([\\u4E00-\\u9FA5]{2,10})?.{0,5}([abcdefghijklmnopqrstuwxyz????????????????????????????]+)(.*)
?([\\u4E00-\\u9FA5]+)?([abcdefghijklmnopqrstuwxyz????????????????????????????]+)
'?([\\w\\:]+)'?\\s*=>\\s*'?\\d[\\d\\.\\-\\_]*'?
?([^\\s])
--?([a-z\\-\\_]+)\\s([\\d]+)\\s?
'?(\\d+)[^-\\d\\s]*\n                 \\s*\n                 (
'?(\\d+)[^-\\d\\s]*\n       \\s*\n       (
'?(\\d+)[^-\\d\\s]*\n\t\t \\s*\n\t\t (
??
??(.*?)?
??(?<DETAIL>.+?)(?<AMOUNT>\\d+)?
??(?<DETAIL>.+?)??(?<AMOUNT>\\d+)?
??([0-1]?[0-9])?([0-3]?[0-9])[??]
??([0-3]?[0-9])[??]
??(\\d)
???(?<DETAIL>.+?)??(?<AMOUNT>\\d+)?
????
????(?<VAL>[^?]+)??([^?]+)??
????([^?]+)??(?<VAL>[^?]+)??
??????
????????
?????????(?<VAL>.+??)?
??????????(?<VAL>[^??]+)???????
???????[:?](?<VAL>[^?]+)?
?????[:?](?<VAL>[^??]+)??
????\\)???(?<VAL>[^?]+)?
???[????????????????????????]+
??\\(???\\)[:?](?<VAL>.+)($|\\n)
??|??
-?\\p{Digit}+
?_
?|?
?|?|(?:?|?|?|?|?|?)?|???|??|??|??|??|??|??|???|(?:??)??|??|??|??|??|??
?|?|?|?
?|?|?|?|?|?|?|?
?|?|?|?|?|?|?|?|\\u0670
?|?|?|?|\\u0671
?|[\\u2014\\u8212]
?+
?ddaaad?
?org
?s
?www.?.com/?/app
?www.?.com/?/app?
@(
@((?:\\.\\.\\/)*
@(?:[\\w\\.\\-\\/\\\\]+?)\\.(?:css|less|scss|sass|mx|style)
@(?=\\w{1,15}+(?!\\w))
@(?i)(PhpUnitGen|Pug)\\\\
@(?P<dllname>.*),-(?P<index>\\d+)(?:;(?P<comment>.*))?
@(?P<family_name>\\w+)
@(?P<key>[\\w_]+)\\s+(?P<value>.*?)\\s*(?=$|@[\\w_]+\\s)
@(?P<name>[A-Za-z_-]+)(?:[ \\t]+(?P<value>.*?))?[ \\t]*\\r?$
@(?P<name>\\w+)
@(?P<type>command|admin)\\((?P<aliases>.*?)\\)\\ndef (?P<command>\\w+)\\(.*?\\):.*?(?P<docs>(?:\\s+#-[^\\n]*?\\n)+)
@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1
@([\\p{Alpha}@][@$\\d\\w_]{0,127})
@([\\pL-_+]+)
@([\\w\\-\\_]{3,20})
@([\\w-]+):\\s*'(\\\\E[0-9A-F]+)';
@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1
@'(\\\\[0-7]{1,3}|\\\\x[a-fA-F0-9]{1,2}|\\\\.|[^\\\\'\\n]')
@(\\p{Word}++):?
@(Neos\\\\Flow\\\\Annotations|Flow)\\\\Introduce.+$
@@ -(?P<line_start>\\d+),?\\d* \\+\\d+,?\\d* @@
@@ \\-(?P<removed_start>\\d+),(?P<removed_length>\\d+) \\+(?P<added_start>\\d+),(?P<added_length>\\d+) @@
@[\\w.$]+|@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1
@[^@]+\\.(?:
@[A-Za-z0-9\\\\]+\\\\([A-Za-z0-9]+)(?:\\((.*)\\))?$
@\"(
@\\Q$m[1]\\E@
@\\w+(?<paren>\\{(?:[^{}]|\\g<paren>)*\\})
@{[ $other->data() ]}
@{[ $self->what() ]}
@{[$self->get_regexes->{'abbreviations'}]}
@{[$self->get_regexes->{'livres_avec_un_chapitre'}]}
@{[$self->get_regexes->{'livres'}]}
@+(?P<ssh_git_url>.*)?:
@<(?:(?P<name>\\S+?)\\s+)?(?P<url>\\S+?://.*?)>
@0x\\h+[lL]?
@context\\s*(?P<defaults>\\(.*\\))?\\s+(?P<name>\\w+)\\s*(=(?P<aliases>.*))*
@dataProvider\\s+(?P<methodName>\\w+)
@fa-var-(.*): \\\"\\\\(.*)\\\"
@fa-var-([\\w-]+): \"\\\\([0-9A-Fa-f]+)\";
@fa-var-([\\w-]+):\\s*\"\\\\([0-9a-f]+)\";
@fa-var-([^:]+):\\s*\"\\\\([0-9a-f]+)\";
@fa-var-([a-z0-9-]+)\\s*:\\s*\"\\\\([0-9a-f]+)\";
@group\\s+(?P<name>\\w+)\\s*(using\\s(?P<used_groups>.*))*
@charset \"[^\"]++\";
@import (\"|')(?P<filename>(/?[-a-zA-Z0-9_\\.]+)+\\.css)(\"|');
@JsonCreator[\\s]+public[\\s]+(static\\s+)?(\\w+)[\\w\\s]*\\((?:\\s*
@media [^{]*+{([^{}]++|{[^{}]*+})*+}
@media\\b[^{]*({((?:[^{}]+|(?1))*)})
@mixin\\s+([\\w\\\\]+)
@module\\s+([\\w\\.\\\\]+)
@ORM\\\\(ManyToOne|OneToOne)\\(
@ORM\\\\JoinColumn\\(
@ORM\\\\Table\\(name=\"(.*)\"\\)
@property-read (?P<type>[\\w|]+) \\$(?P<name>\\w+).*\\[(?P<id>\\d+)\\]
@Relational\\\\isNotColumn
@return\\h+(\\H+)(\\h|\\n)
@return\\s+\\\\Illuminate\\\\Database\\\\Eloquent\\\\Relations
@see\\s+([\\w\\.\\:\\\\]+)
@set\\((?<q>'|\")(.+)\\k{q}\\,\\s?(.*)\\)
@spec\\s+([a-zA-Z0-9_\\\\]+)
@SuppressRule\\(\"(?P<Rule>\\S+)\"\\)
@system\\s+(?P<name>\\w+)\\s*(using\\s(?P<used_groups>.*))*
@title\\s(.+)|@desc\\s(.+)|(\\nimport [^]+?\\n})|@component\\s(.+)
@var ([\\\\A-Za-z0-9]*)
@var\\h+([a-zA-Z0-9\\\\_]+)(?:\\h+\\[([a-zA-Z0-9\\\\\\s,_]+)\\]\\h*|.*)\\v
@var\\s([A-Za-z_0-9\\\\]+)\\s
@var\\s*(.*+)
@var\\s+(?:([\\w\\\\]+)\\s+)?(\\$\\w+(?:\\s*,\\s*\\$\\w+)*)
@var\\s+([\\w\\.\\\\]+(\\[\\s*\\])?)\\s*?(.*)$
@var\\s+([\\w\\\\]+)
[
[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]
[ .$\\/\\\\]
[ ;#]?\\b(?:(?:w(?:idth)?+|h(?:eight)?+)\\s*+=\\s*+(['\"])?+|\\d++X)\\d++\\b(?(1)\\1)?+
[ \\.\\#\\/\\\\]
[ \\/\\\\]
[ \\-\\_]
[ \\\\]
[ \\_\\-\\.]+|(?=[A-Z][^A-Z])
[ \\n\\t\\r\\(\\)\\*:;@!&'\"\\+\\|~>,\\[\\]\\\\]|\\/(?=\\*)
[ \\n\\t\\r\\(\\)\\{\\},:;@!'\"\\\\]|\\*(?=\\/)|#(?={)
[ \\n\\t\\r\\(\\)\\{\\},:;@!'\"\\\\]|\\/(?=\\*)|#(?={)
[ \\n\\t\\r\\(\\)\\{\\}:;@!'\"\\\\]|\\/(?=\\*)
[ \\n\\t\\r\\(\\)\\{\\}?:;&#\\+\\|~,\\[\\]\\\\]|\\/(?=\\*)
[ \\n\\t\\r\\(\\)\\{\\}\\*:;@!&'\"\\-\\+\\|~>,\\[\\]\\\\]|\\/
[ \\n\\t\\r\\(\\)\\{\\}\\*:;@!&'\"\\+\\|~>,\\[\\]\\\\]|\\/(?=\\*)
[ \\n\\t\\r\\f'\"\\\\]
[ \n\t]+\\_from\\_
[ \\t\\n\\v\\\"\\\\]
[ \\t\\u000c]*(?:[^ \\t\\u000c\\r\\n=:\\\\]|\\\\u[0-9a-f]{4,4}|\\\\(?:\\r\\n|\\r|\\n)[ \\t\\u000c]*|\\\\[\\s\\S])+[ \\t\\u000c]*([ \\t\\u000c=:](?:[^\\r\\n\\\\]|\\\\u[0-9a-f]{4,4}|\\\\\\r\\n|\\\\[\\s\\S])*)
[ \\t]*(?:
[ \t]*(?P<time>[\\[\\]\\w\\.:]+) +(?P<sample>\\d+) +(?P<symbol>.) +(?P<subtype>\\d+) +(?P<chan>\\d+) +(?P<num>\\d+)\t?(?P<aux_note>.*)
[ \\t]*[_a-zA-Z0-9\\\\]+:
[ \\t]*\\r?\\n[ \\t]*+\\*[ \\t]*+
[ \\t]*+(?:#.*)?$
[ \\t]+(vi|vim([<>=]?\\d{3})?|ex):\\s*(?P<rhs>.*?)$
[ \\t]+(vi|vim([<>=]?\\d{3})?|ex):\\s*set? (?P<rhs>.*?)(?<!\\\\):
[ \\u{A}-\\u{D}\\u{85}\\u{2028}\\u{2029}\\t\\u{200B}\\u{00AD}\\u{00A0}-]
[ ]*+\\n
[ ]:(
[ ]\\Q$v\\E(?:[ ]|$)
[ _\\-:\\/\\\\]
[ _\\xA0\\x{1680}\\x{180E}\\x{2000}-\\x{200A}\\x{2028}\\x{2029}\\x{202F}\\x{205F}\\x{3000}]+
[ {}();\\/\\\\]+
[ +\\-i\\\\]
[!
[!#-&(-[\\]-_a-~]
[!?.,:\"';()#\\/\\\\]
[!?/\\\\]
[!@
[!\"#$%&'()*+,.\\/:;<=>?@\\[\\]^`{|}~\\\\]
[!-~
[#
[#*\\/\\\\]
[#/\\\\\\\\]
[#:\\/\\?\\\\]+
[#'\"\\\\]
[#\\\\\\n
[#\\N{U+A0}-\\N{U+10FFFF}]
[#\\p{word}][\\p{word}_.!]+
[#\\s\"'\\\\]|\\\\n
[#{}\\\\]
[#<>:\"/\\|?*\\\\]
[#0-\\s+]
[$%@.(){}\\[\\];,\\\\]
[$*+?.|\\^\\{\\}\\[\\]\\(\\)\\\\]
[$\\\\]([0-9]{1,2}|[^0-9{]|(?<=\\$)\\{[0-9]{1,2}\\})
[$_RE_BidiClass_L\\p{Bc:EN}][\\p{Bc:NSM}\\P{Assigned}]*$
[${\\\\]+
[${}\\\\]
[$}\\\\]
[$ALEPH-$TAV]
[$chanmodes->[2]]
[$rx->{'params'}]
[$self->{spaces}]+
[$statmodes$chanmodes->[0]$chanmodes->[1]]
[%:;=<>\u201d|\\\\]
[%\\\\]
[%\\\\]u([0-9a-fA-F]{4})
[& +$,:;=?@\"#{}|^~[`%!'\\]\\.\\/\\(\\)\\*\\\\]
[& +$,:;=?@\"#{}|^~[`%!'<>\\]\\.\\/\\(\\)\\*\\\\]
[&\"<>\\\\]
[&\\\"'<>\\\\]
[&\\s+$,:;=?@\"#{}|^~[`%!'\\]./()*\\\\]
[&|\\/|\\+][^\\z]*
[&<>\"'/\\\\]
[&<>\"'\\/\\\\]
[()&|^=;]|\\$.|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"
[()\\[\\]{}:;,?\\\\]
[(){ \\x00-\\x1f\\x7f%*\"\\\\]
[(?![\u5e74\u6708\u65e5\u53f7])\\w\\p{Han}]
[(\\s)(\\`)(\\~)(\\!)(\\@)(\\#)(\\$)(\\%)(\\^)(\\&)(\\*)(\\()(\\))(\\-)(\\_)(\\+)(\\=)(\\[)(\\])(\\{)(\\})(\\|)(\\\\)(\\;)(\\:)(\\')(\\\")(\\,)(\\.)(\\/)(\\<)(\\>)(\\?)(\\)]+
[(]([^()]++)[)]
[(]HEAD[^,]*[,] (?P<branches>[^)]+)[)]
[(|)\\\\]
[* ]*\\n(?P<header>CM Version:[\\s\\S]*?ABI:.*\\n)(?P<thread>pid:.*\\n)(?P<signal>signal.*\\n)?(?P<abort>Abort.*\\n)?(?P<registers>\\s+x0[\\s\\S]*?\\n)\\n(?:backtrace:\\n(?P<backtrace>[\\s\\S]*?\\n)\\nstack:\\n(?P<stack>[\\s\\S]*?\\n)\\n)?
[*-!`{}~[]='<>:/;.&%|=+_]
[*?[:alnum:] \\\\]
[*?\\[\\{\\\\]
[*\":<>?|\\/\\\\]
[*][(]\\\\h
[*][(]\\\\i
[*][(]\\\\o
[*][(]\\\\u
[*][)]\\\\h
[*][)]\\\\i
[*][)]\\\\o
[*]\\[(?P<abbr>[^\\]]*)\\][ ]?:\\s*(?P<title>.*)
[*]\\\\h
[*]\\\\i
[*]\\\\o
[*]\\\\u
[*_+\\\\]?-?[_a-z\\\\][\\\\_a-z0-9-]*
[', \")}\\\\]
[,;\\\\]
[,?!/;\\\\]
[,\"\\\\]
[,\\\\]
[,\\\\]$
[,\\\\]\\s*\\z
[,\\\\]\\Z
[. \\/\\\\]+
[-.*+?^${}()|[\\]/\\\\]
[.*+?^${}()|[\\]\\/\\\\]
[-.*+?^${}()|[\\]\\/\\\\]
[.*+?^${}()|[\\]\\\\]
[.*+?^\"${}()|[\\]\\\\]
[.*+?^=!:${}()|[\\]\\/\\\\]
[.*+?|()\\[\\]{}\\\\]
[.,\\h]+
[.,_!?/\\\\]
[.,~{}()!\\\\]
[./\\\\]
[.:/\\\\]
[.?!]+\\Q$pbm\\E
[.?*+|(){}\\[\\]\\\\]
[.\\\\]
[.\\-_/\\\\]+
[.\\p{Word}_]+
[.-](?P<hlatype>HLA-[\\w-]+).fq
[.](TRUE|FALSE)[.](_
[.][.][/\\\\]
[.][^\\/\\\\]*$
[.]\\Q$imp\\E\\z
[-._~+ ]?(?P<comp>[a-zA-Z0-9%]+)
[.|\\-[\\]()\\\\]
[.+*?|^$[\\]{}()\\\\]
[.+?^${}()|[\\]\\\\]
[.+?^=!:${}()|[\\]\\/\\\\]
[.+^${}()|[\\]\\\\]
[//\\\\]\\.
[/:\\s\\\\]|\\.git
[/\\\\]
[/\\\\]$
[/\\\\](?:mini)?perl\\.exe 
[/\\\\]([^/\\\\]*)$
[/\\\\]([^/\\\\]+)$
[/\\\\]([12][09][0-9]{2})[/\\\\]
[/\\\\](\\.|~)[^/\\\\]+$
[/\\\\](\\d+)$
[/\\\\](\\w+)[^/\\\\]*$
[/\\\\](index|main)$
[/\\\\]*$
[/\\\\].generated.js:2$
[/\\\\].generated.js:3$
[/\\\\].original\\.js
[/\\\\].original\\.js:1$
[/\\\\]?$
[/\\\\]@std[/\\\\]esm[/\\\\]index\\.js$
[/\\\\][^/\\\\]*$
[/\\\\][^/\\\\]*[/\\\\]$
[/\\\\][^/\\\\]*\\)\\?.*$
[/\\\\][^/\\\\]*\\*.*$
[/\\\\][a-z0-9]{2}[/\\\\]
[/\\\\]\\.
[/\\\\]\\.\\.?$
[/\\\\]\\.\\.[/\\\\]
[/\\\\]\\.svn$
[/\\]\\\\]
[/\\\\]\\d+
[/\\\\]_config[/\\\\][^/\\\\]+\\.y(a?)ml$
[/\\\\]{1,}
[/\\\\]{2,}
[/\\\\]|(\\w\\:)
[/\\\\]|\\.xsd$|\\.wsdl$
[/\\\\]+
[/\\\\\\\\]+
[/\\\\]+$
[/\\\\]1$
[/\\\\]a.tar.gz$
[/\\\\]abc
[/\\\\]apsw.c$
[/\\\\]at-rule-empty-line-before\\.html$
[/\\\\]b$
[/\\\\]b[/\\\\]package.json$
[/\\\\]BIN
[/\\\\]c$
[/\\\\]c[/\\\\]package.json$
[/\\\\]comment-empty-line-before\\.html$
[/\\\\]content([/\\\\][a-zA-Z\\-_]*|$)
[/\\\\]d$
[/\\\\]deferred[/\\\\]
[/\\\\]demo$
[/\\\\]detailed-results-
[/\\\\]documentation.config.php$
[/\\\\]dojo[/\\\\]dojo.js[^/\\\\]*$
[/\\\\]e[/\\\\]1$
[/\\\\]e[/\\\\]1[/\\\\]package.json$
[/\\\\]e[/\\\\]2$
[/\\\\\\\\]elm-stuff[/\\\\\\\\]
[/\\\\]es5-ext[/\\\\]
[/\\\\]integrationtest[/\\\\]
[/\\\\]LanguageServer[/\\\\]
[/\\\\]Modules[/\\\\]pyexpat.c
[/\\\\]node_modules[/\\\\]
[/\\\\\\\\]node_modules[/\\\\\\\\]
[/\\\\]node_modules[/\\\\]*$
[/\\\\]node_modules[/\\\\]jedi$
[/\\\\\\\\]node_modules|scripts[/\\\\\\\\]
[/\\\\]no-empty-source\\.html$
[/\\\\]original\\.js:1002$
[/\\\\]packages[/\\\\]
[/\\\\]packages[/\\\\]bazel[/\\\\]
[/\\\\]packages[/\\\\]benchpress[/\\\\]
[/\\\\]packages[/\\\\]compiler-cli[/\\\\]
[/\\\\]packages[/\\\\]elements[/\\\\]schematics[/\\\\]
[/\\\\]packages[/\\\\]examples[/\\\\]
[/\\\\]packages[/\\\\]language-service[/\\\\]
[/\\\\]packages[/\\\\]service-worker[/\\\\]
[/\\\\]perl(?:[0-9]+(\\.[0-9]+)+)?(\\.exe)?$
[/\\\\]prove\\z
[/\\\\]rule-empty-line-before\\.html$
[/\\\\]src
[/\\\\]td\\z
[/\\\\]test[/\\\\]
[/\\\\]testing_internal\\.ts$
[/\\\\]vendor[/\\\\]
[/\\\\]vscode-languageserver[/\\\\]lib[/\\\\]files\\.js
[/|\\\\]
[/|\\\\][^/\\\\]*$
[: \\]\\[\\\\]+
[:*?/\\\\]
[:*?\"<>^|\\/\\\\]
[:*?\\/\\\\]
[:/\\\\]
[:;xX8][\\-oO][dDpP\\)\\(\\[\\]\\\\/\\\\]+
[:?*<>\"'\\/\\\\]
[:?/\\\\]
[:\\n\\\\\\\\]
[:\\s](?:\\Q$un\\E|\\Q$ul\\E)(?:\\s|\\Z)
[:{}[\\],&*#?|\\-<>=!%@\\\\]
[:~^ \\t\\r\\n\\\\]
[;\\s]?+\\b(?:(?:w(?:idth)?+|h(?:eight)?+)\\s*+=\\s*+|\\d++[Xx])\\d++\\b
[?????????????????????]{4}+?
[??????????123456789]?[??????????123456789](?!(?|?))
[??????????123456789]?[??????????123456789](?!(?|?|?))
[??????????123456789]?[??????????123456789](?!?)
[?<>:*|\"\\\\]
[@*]?(?:
[[
[[/\\\\]node_modules[/\\\\]
[[:
[[:^print:]]|[ \\\\\\\\]
[[:^print:]]|[\\\\\\\\]
[[:blank:]
[[:cntrl:][:space:]~^:\\\\]
[[:cntrl:]\"\\\\]
[[:cntrl:]\\\\]+
[[:cntrl:]]|^[\\p{Space}]+|[\\p{Space}]+$
[[:lower:]\\_]*
[[:space:]
[[:upper:]]{2}[0-9]+[[:upper:]\\.0-9]+[-][0-9]+[-][0-9]+[\\p{Han} \\(\\)\\/~]
[[\\](){}+*?.$^\\\\]
[[\\p{Punct}\\u2014\\u2015\\u201C\\u201D\\u2033]&&[^-_.'`]]+
[\\\\
[\\ \\-\\_\\.]
[\\!\\#\\$\\%\\&\\'\\*\\-\\/\\=\\?\\+\\-\\^\\_\\`\\{\\|\\}\\~]
[\\!\\$\\&\\*\\(\\)\\=\\%\\+\\@\\,\\.\\/\\`\\[\\]\\#\\~\\?\\:\\<\\>\\|\\*\\/]{1}([\\-\\_\\.]?)([a-zA-Z0-9]+):((\\s\\S*?));
[\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\`\\~\\=\\,\\/\\<\\>\\?\\;\\'\\:\\\"\\[\\]\\{\\}\\\\\\|\\ ]
[\\!\\'\\\"\\>\\<\\\\]
[\"$`\\\\]
[\"'\\.,@!$%\\^&\\*\\(\\)\\[\\]\\+\\-\\_\\:\\;\\<\\>\\\\\\/\\?\\`\\~]
[\"\\\\\\/\\x0-\\x1f]
[\\\"\\/](?:\\\\.|[^\\\"\\/\\\\])*[\\\"\\/]
[\\\"\\'\\\\]
[\"\\\\]
[\\\"\\\\]
[\\\\\"\\\\]
['\"\\\\]
[\"\\\\](['\"]?[^\"'\\\\]['\"]?)
[\"\\\\]\"
[\\\\\"\\]\\\\]
[\"\\\\]|[^\"\\\\]+
['\"\\n\\\\]
[\"\\n\\f\\t\\r\\b\\\\]
['\"\\n\\r<\\\\]
['\"\\s\\\\]
[\"\\\\\\x0-\\x1f]
['\"\\\\\\x0]
[\\\\\\\\\"\\x00-\\x1f\\x7f-\\u{9f}\\u{00ad}\\u{0600}-\\u{0604}\\u{070f}\\u{17b4}\\u{17b5}\\u{200c}-\\u{200f}\\u{2028}-\\u{202f}\\u{2060}-\\u{206f}\\u{feff}\\u{fff0}-\\u{ffff}]
[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\x{00ad}\\x{0600}-\\x{0604}\\x{070f}\\x{17b4}\\x{17b5}\\x{200c}-\\x{200f}\\x{2028}-\\x{202f}\\x{2060}-\\x{206f}\\x{feff}\\x{fff0}-\\x{ffff}]
['\"](.*?[^\\\\])['\"]
[\\\"'](?:[^\\\"'\\\\]*(?:\\\\.)?)*[\\\"']
['\"](?:[^\"'\\\\]++|\\\\.)*+[\"']
[\"'](?P<url>[^\"']+\\.m3u8(?:[^\"']+)?)[\"']
[\"'](?P<url>[^\"']+\\.m3u8[^\"']*?)[\"']
[\"'](?P<url>https?://[^/]+/live/hls/[^\"']+)[\"']
['\"](?P<value>.*)[\"']$
['\"]([^'\"\\\\]*(\\\\.[^\"\\\\]*)*)['\"]
[\"']([^\"'\\Q$delim\\E]+)\\Q$delim\\E([^\"'\\Q$delim\\E]+)[\"']
['\"]|\\\\(?:([0-3]?[0-7]{2}|[1-7]|0(?=[89]))|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|([xu])|[\\\\0bfnrtv]|[^\\n\\S]|([\\w\\W]))?
['\"]+([^'\"]+\\.(?:
[\"']file[\"']:\\s?[\"'](?P<url>[^\"']+\\.m3u8[^\"']+)[\"']
['\"]file['\"]\\s*:\\s*(?P<quote>['\"])(?P<url>.*?)(?P=quote)
[\"`\\\\]
[\\\"'`\\\\\\\\]
[\"'<>\\\\]
[\">\\0\\\\].*
[\\#\\.]\\w++(?:\\-\\w++)*
['\\#\\\\]
[\\#\\_\\!\\[\\]\\=\\~\\*\\-]
[\\#\\+\\%\\&\\=\\,\\;\\:\\!\\?\\.\\\"\\'\\-\\<\\>\\(\\)\\[\\]\\@\\\\\\_\\s]
[\\$
[\\$\\\\]
[\\$\\\\]*
[\\$\\^\\)\\(\\*\\|\\\\]
[\\%\\\\]
[\\&\"<>\\\\]
[\\(\\)\"\\\\]
[\\(\\)\\\\]
[\\)\\.a-zA-Z0-9_\\$\\\\]
[\\*\\?]|\\Q$wildcard
[\\*\\^\\&\\(\\)\\[\\]\\+\\?\\\\]
[\\,\\\\\\/\\:\\(\\)\\[\\]\\{\\}\\_\\-\\?]
[\\.!,?\\[\\]\\\\]
['\\.,/@%&;:(){}\\[\\]_\\-+\\\\]$
[\\./\\\\]
[\\.\\,\\?\\/\\)\\(\\\"\\!\\\\]
[\\.\\,\\?\\/\\'\\\"\\;\\:\\[\\]\\{\\}\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\_\\+\\-\\=]
[\\.\\/\\]
[\\.\\-\\_\\=\\+\\$]
[\\.\\-\\_]
[\\.\\\\]+
[\\.\\-_ ](?P<platform>XBLA|WiiWARE|N64|SNES|NES|PS[2-4]|PS 3|PSX(2PSP)?|PSP|WIIU|WII|XBOX360|XBOXONE|X\\-?BOX|X360|3DS|NDS|N?GC)
[\\.\\_,\\-]
[\\.\\_\\-]
[\\.\\_]
[\\.\\e\\E]
[\\.\\s-\\/\\\\]+
[\\.](not)?[\\_]?(have|has|be|to|that|\\_is|is\\_not|satisfy|which|that\\_is|which\\_is|include)[\\_]?(not)?[\\.]
[\\.]+(\\/|\\\\)
[\\._]?(?P<Index>\\d+)(?=[\\._])
[\\/ $&*\\\\]
[\\/,\\\\](?<no>no)?cite(?<type>p|t|al[tp]|NP)?(?<star>\\*)?(\\[(?<opt1>
[\\/,\\\\]\\.\\.[\\/,\\\\]
[\\\\\\/:_;.,\\t\\T\\s-]
[\\/\\\\\"\\*\\?\\:\\<\\>\\|\\\\]
[\\\\\\/\\.\\:\\-\\_\\s]
[\\/\\-\\_]+$
[\\/\\-\\+\\x\\*]
[\\/\\\\]
[\\/\\\\]$
[\\/\\\\](.*?):\\d+:\\d+
[\\/\\\\](?!\\.|_)[^\\/\\\\]+\\.js
[\\/\\\\](?!mixins|variables|_|\\.)[^\\/\\\\]+\\.less
[\\/\\\\]([^\\/\\\\*]*)\\.overrides
[\\/\\\\]([^\\/\\\\]+)$
[\\/\\\\](__tests__|node_modules|bower_components|webpackShims)[\\/\\\\]
[\\/\\\\](app|platforms)[\\/\\\\]
[\\/\\\\](CVS|RCS|\\.svn)[\\/\\\\]
[\\/\\\\](dev|prd|src)[\\/\\\\]
[\\/\\\\](index|main)$
[\\/\\\\](node_modules|global|src)[\\/\\\\].*\\.css$
[\\/\\\\](node_modules|global|src)[\\/\\\\].*\\.scss$
[\\/\\\\]*$
[\\/\\\\]*(.*)[\\/\\\\]{1,}.*
['\\/\\\\]:?|\\beach\\b
[\\/\\\\]@angular[\\/\\\\].+\\.js$
[\\/\\\\]@angular[\\/\\\\]core[\\/\\\\].+\\.js$
[\\/\\\\][^/\\\\]*\\.[^/\\\\]*$
[\\/\\\\][^\\/\\\\]*$
[\\/\\\\][^\\/\\\\]*\\)\\?.*$
[\\/\\\\][^\\/\\\\]*\\*.*$
[\\/\\\\][^\\/\\\\]+$
[\\/\\\\]\\.
[\\/\\\\]\\.\\.([\\/\\\\]|$)
[\\/\\\\]\\.{1,2}$
[\\/\\\\]\\.|node_modules
[\\/\\\\]\\.|tmp_
[\\/\\\\]\\d+
[\\/\\\\]_
[\\/\\\\]+
[\\/\\\\]+$
[\\/\\\\]application\\.zip$
[\\/\\\\]Codec[\\/\\\\]Setup\\.exe
[\\/\\\\]Codec[\\/\\\\]Setup\\.exe$
[\\/\\\\]fake[\\/\\\\]\\.jshintrc$
[\\/\\\\]foo[\\/\\\\]bar[\\/\\\\]baz[\\/\\\\].aws[\\/\\\\]credentials
[\\/\\\\]home[\\/\\\\]user[\\/\\\\].aws[\\/\\\\]config
[\\/\\\\]home[\\/\\\\]user[\\/\\\\].aws[\\/\\\\]credentials
[\\/\\\\]index\\.js$
[\\/\\\\]lib[\\/\\\\]browser\\.js$
[\\/\\\\]lib\\Q$lib\\E[\\-\\d\\.]*\\.($dlext[\\d\\.]*|so|dll)$
[\\/\\\\]manifest\\.webapp$
[\\/\\\\]metadata\\.json$
[\\/\\\\]node_modules[\\/\\\\]
[\\/\\\\]node_modules[\\/\\\\]bluebird[\\/\\\\].+\\.js$
[\\/\\\\]node_modules[\\/\\\\]mocha[\\/\\\\]
[\\/\\\\]parser.js$
[\\/\\\\]src[\\/\\\\]
[\\/\\\\]td-\\d+.\\d+.\\d+\\z
[\\/\\\\]templates[\\/\\\\]
[\\/\\\\]tests[\\/\\\\]
[\\/\\\\]update\\.webapp$
[\\/\\\\]userprofile[\\/\\\\].aws[\\/\\\\]credentials
[\\/\\_\\-\\?\\.\\&=,]
[\\/\\_]
[\\\\/]([^/\\\\]+)$
[\\\\\\/]([^\\/\\\\]+)$
[\\/][^\\/]+\\.[^\\/]++$
[\\\\\\/]\\Q$script\\E(\\.exe)?$
[\\\\/]test[/\\\\]not-ok\\.js \\.+ 0/[12]( [0-9.]+m?s)?$
[\\\\/]test[/\\\\]ok\\.js \\.+ 10/10( [0-9.]+m?s)?$
[\\\\\\/]tpl_[0-9a-f]{8}_[^\\\\]+$
[\\/|\\:|\\\\]
[\\/|\\\\]
[\\/|\\\\]\\s*$
[\\/|\\\\]app\\.css$
[\\/|\\\\]app\\.scss$
['\\/~`\\!@#\\$%\\^&\\*\\(\\)_\\-\\+=\\{\\}\\[\\]\\|;:\"\\<\\>,\\.\\?\\\\]
[\\:\\\"\\<\\>\\/\\?\\{\\}\\[\\]\\+\\=\\(\\)\\*\\^\\%\\$\\#\\@\\!\\~\\_]
[\\?#&](?P<name>[^&=]+)=(?P<value>[^&=]+)
[\\?#][^]*$
[\\?&]page=(?P<page>[\\d]+)
[\\?\\s\\/\\:\\\\]+
[\\?|#]([^]*)$
[\\?|&]?[A-Za-z0-9_\\-\\[\\]]+\\s*=\\s*(?<wrapped>\"|\"|'|')(?<attr>[^\\1]*?)\\g{wrapped}
[\\@\\\\]
[\\[\\?\\*\\{\\\\]
[\\[\\]$\"\\\\]
[\\[\\]:*?/\\\\]
[\\[\\]:*?\\/\\\\]
[\\[\\]:\\*\\?\\/\\\\]
[\\[\\]\\*\\?/\\\\]
[\\[\\]\\:\\*\\?\\/\\\\]
[\\[\\]\\\\_]
[\\[\\]\\p{Word}\\._|\\{\\}]{2,}
[\\[\\]{}$\"\\\\]
[\\'\"\\\\]
[\\'\\\"\\\\]
[\\'\"\\\\]*
[\\-\\.\\_\\s]
[\\-\\/\\\\]
[\\-\\[\\]\\{\\}\\(\\)\\*\\+\\?\\.\\^\\$\\|\\/\\\\]
[\\'\\\\]
[\\-\\_].*$
[\\-\\_]+(\\w?)
[\\-\\_]+\\.
[\\\\] 
[\\\\]
['\\\\]
['\\\\]'
[-\\\\]
['\\\\]$
[\\\\]%
[\\\\](.)
[\\\\]([a-zA-Z]+[*]?) ?({|\\s*\\n?)
[\\\\].
[\\\\][\\\\]*
[\\\\][\\\\][^\\\\].{0,255}[\\\\]{1}[^\\\\]*.*
[\\]\\[\\!\\'\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\\\\\^\\_\\{\\|\\}\\~\\`\u3002\uff0c\u3001\uff1b\uff1a\uff1f\uff01\u2026\u2014\u00b7\u02c9\u00a8\u2018\u2019\u201c\u201d\u3005\uff5e\u2016\u2236\uff02\uff07\uff40\uff5c\u3003\u3014\u3015\u3008\u3009\u300a\u300b\u300c\u300d\u300e\u300f\uff0e\u3016\u3017\u3010\u3011\uff08\uff09\uff3b\uff3d\uff5b\uff5d]
[\\]\\\\]
[\\]\\\\]|#{|\\/\\/\\/
[\\\\]\\n*
[\\\\]\\n*$
[\\\\]\\n\\s*
[\\\\]\\s*$
[\\\\]{1,1}
[\\\\]{1,2}
[\\\\]{1,2}\\$\\{
[\\\\]{2,}
[\\\\]{2}
[\\\\]{2}(?=\\s+\\|)
[\\\\]+
[\\\\]begin{([^}]*)}
[\\\\]end{([^}]*)}
[\\\\]r[\\\\]n|([\\\\])?[\\\\]n
[\\^\\$\\/\\.\\*\\+\\?\\|\\(\\)\\[\\]\\{\\}\\\\]
[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]
[\\\\_.,:;~+|\\\\[\\\\]?`\\\"!@#$%^&*()\\\\s]+
[\\_.,<>:;~+|\\[\\]?`\"!@#$%^&*()\\s]
[\\_\\*]$
[\\_\\-\\.]+
[\\_\\-\\s]+
[\\_\\-]+
[\\_\\|\\$].
[\\_\\W]
[\\\\_]
[\\_]+
[\\\\_]+
[\\_a-z-A-Z0-9]
[\\`\\\\]
[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\\"']|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void 
[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void 
[\\{\\.\\\\]\\z
[\\{\\}\\(\\)\\/@:\\\\]
[\\{\\}\\(\\)\\[\\]\\.\\+\\*\\?\\^\\$\\|\\\\]
[\\{\\}\\\\]
[\\{\\<]\\?(php)?\\s+(?P<content>.+)\\?[\\}\\>]
[\\|\\/\\\\]
[\\|\\?\"\\<\\>\\/\\*\\\\]+
[\\+\\.\\?\\(\\)\\[\\]\\{\\}\\\\]
[\\+\\-\\d\\.xXabcdefABCDEF\\/\\_]
[-\\+]?+(\\.\\d+)?
[\\<\\>\\.\\,\\?\\/\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\[\\]\\{\\}\\'\\\"\\:\\;\\\\]
[\\0-@\\[-\\xBF\\xD7\\xDF-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9-\\u01BB\\u01BD-\\u01C3\\u01C5\\u01C6\\u01C8\\u01C9\\u01CB\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F2\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u036F\\u0371\\u0373-\\u0375\\u0377-\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u0390\\u03A2\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F6\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481-\\u0489\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0530\\u0557-\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE-\\u139F\\u13F6-\\u1DFF\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F17\\u1F1E-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F47\\u1F4E-\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F60-\\u1F67\\u1F70-\\u1FB7\\u1FBC-\\u1FC7\\u1FCC-\\u1FD7\\u1FDC-\\u1FE7\\u1FED-\\u1FF7\\u1FFC-\\u2101\\u2103-\\u2106\\u2108-\\u210A\\u210E\\u210F\\u2113\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u212F\\u2134-\\u213D\\u2140-\\u2144\\u2146-\\u2182\\u2184-\\u2BFF\\u2C2F-\\u2C5F\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7D\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3-\\u2CEA\\u2CEC\\u2CEE-\\u2CF1\\u2CF3-\\uA63F\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D-\\uA67F\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B-\\uA721\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787-\\uA78A\\uA78C\\uA78E\\uA78F\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7AE\\uA7AF\\uA7B5\\uA7B7-\\uFF20\\uFF3B-\\u{103FF}\\u{10428}-\\u{10C7F}\\u{10CB3}-\\u{1189F}\\u{118C0}-\\u{1D3FF}\\u{1D41A}-\\u{1D433}\\u{1D44E}-\\u{1D467}\\u{1D482}-\\u{1D49B}\\u{1D49D}\\u{1D4A0}\\u{1D4A1}\\u{1D4A3}\\u{1D4A4}\\u{1D4A7}\\u{1D4A8}\\u{1D4AD}\\u{1D4B6}-\\u{1D4CF}\\u{1D4EA}-\\u{1D503}\\u{1D506}\\u{1D50B}\\u{1D50C}\\u{1D515}\\u{1D51D}-\\u{1D537}\\u{1D53A}\\u{1D53F}\\u{1D545}\\u{1D547}-\\u{1D549}\\u{1D551}-\\u{1D56B}\\u{1D586}-\\u{1D59F}\\u{1D5BA}-\\u{1D5D3}\\u{1D5EE}-\\u{1D607}\\u{1D622}-\\u{1D63B}\\u{1D656}-\\u{1D66F}\\u{1D68A}-\\u{1D6A7}\\u{1D6C1}-\\u{1D6E1}\\u{1D6FB}-\\u{1D71B}\\u{1D735}-\\u{1D755}\\u{1D76F}-\\u{1D78F}\\u{1D7A9}-\\u{1D7C9}\\u{1D7CB}-\\u{10FFFF}]
[\\0\\b\\f\\n\\r\\t\\v\"\\\\]
[\\0\\b\\t\\n\\r\\x1a\\\"\\'\\\\]
[\\0\\b\\t\\n\\r\\x1a\"'\\\\]
[\\0\\n\\r\\032\\'\\\"\\\\]
[\\0\\x0B\\t\\n\\r\\f\\a&=+%#<>\"~`@\\?\\[\\]\\{\\}\\|\\^'\\\\]
[\\000-\\040:\\s\\\\]
[\\010\\f\\n\\r\\t\"\\\\]
[\\200-\\377]([^\\\\]|\\\\20.)
[\\65-\\90\\66-\\72]
[\\90-\\97]
[\\A;]
[\\A\\/]embed\\/
[\\A\\s\\n\\b]
[\\b\\f\\n\\r\\t\\\"\\\\]
[\\b\\f\\n\\r\\t\\v\\'\\\"\\\\]
[\\B]
[\\cB\\\\]
[\\d
[\\d\\p{Punct}]*
[\\\\\\d]*\\\\(.+)$
[\\d][\\d\\.\\_,\\-]*
[\\d]{4}+[\\-]+[\\d]{2}+[\\-]+[\\d]{2}
[\\f\\n\\r\\t\\v\\x{00a0}\\x{1680}\\x{180e}\\x{2000}-\\x{200a}\\x{2028}\\x{2029}\\x{202f}\\x{205f}\\x{3000}\\x{feff}]
[\\h ]*>
[\\\\h;m,.\\-:\\/\\s]
[\\h\\s]+
[\\H]
[\\h]
[\\h]+
[\\n\\\\]
[\\n\\r\\t\\b\\f()\\\\]
[\\n\\r\\t\\b\\f\\(\\)\\\\]
[\\n\\r\\t\\f\"\\\\]
['\\n\\r\\t\\u2028\\u2029\\\\]
['\\n\\r\\u2028\\u2029\\\\]
[\n\\s]*[\\#]+[\n\\s]+\\#nukeviet\\_rewrite\\_start(.*)\\#nukeviet\\_rewrite\\_end[\n\\s]+[\\#]+[\n\\s]*
[\\n\\t/\\\\]
[\n]*[ \t]*(?P<tag><[!][ \t]*[dD][oO][cC][tT][yY][pP][eE].*[>])
[\\n]+{3,}
[\\N{ali}\\N{xref}\\N{spu}\\N{err}\\N{obs}\\N{ill}]\\h*
[\\N{LEFT DOUBLE QUOTATION MARK}\\N{RIGHT DOUBLE QUOTATION MARK}\\N{DOUBLE LOW-9 QUOTATION MARK}\\N{DOUBLE HIGH-REVERSED-9 QUOTATION MARK}]
[\\N{LEFT SINGLE QUOTATION MARK}\\N{RIGHT SINGLE QUOTATION MARK}\\N{SINGLE LOW-9 QUOTATION MARK}\\N{LEFT SINGLE QUOTATION MARK}\\N{SINGLE HIGH-REVERSED-9 QUOTATION MARK}]
[\\N{LEFTWARDS ARROW}\\N{RIGHTWARDS ARROW}].*
[\\N{MIDDLE DOT}\\N{ONE DOT LEADER}]
[\\N{stress1}\\N{stress2}]
[\\p{Alnum}\"']\\z
[\\p{Alnum}-]+
[\\p{Alnum}_]|[^\\u0000-\\uFFFF]
[\\p{Alpha}\\-']+
[\\P{alpha}]
[\\p{Alpha}][\\p{Alnum}-.+_]+://.+
[\\p{Alpha}][\\p{Alnum}_]*
[\\p{Alpha}]+://.+
[\\p{Alpha}]+[0-9]+
[\\P{Any}\\d]+
[\\P{Any}]+
[\\p{ASCII}]+
[\\P{ASCII}]+
[\\P{Assigned}]
[\\P{Assigned}]+
[\\p{Bc:R}\\p{Bc:AL}\\p{Bc:AN}]
[\\p{Bc:R}\\p{Bc:AL}\\p{Bc:EN}\\p{Bc:AN}][\\p{Bc:NSM}\\P{Assigned}]*$
[\\p{bc=AL}\\p{bc=AN}]
[\\p{bc=R}\\p{bc=AL}\\p{bc=AN}\\p{bc=RLE}\\p{bc=RLO}]
[\\P{Bidi_M}]
[\\p{BidiClass:R}\\p{BidiClass:AL}\\p{BidiClass:RLE}\\p{BidiClass:RLO}]
[\\p{Blank}]+$
[\\p{Cc}\\pM\\pP\\pS\\pZ]
[\\p{Cntrl}&&[^\\n]]
[\\p{Cntrl}&&[^\\r\\n\\t]]
[\\p{Cntrl}]
[\\p{Common}\\p{Inherited}]
[\\p{Cyrillic}]
[\\p{Digit}\\.]*
[\\p{EA=F}\\p{EA=W}]
[\\\\p{Graph}\\\\x20]*
[\\p{Han}\\p{Hangul}\\p{Kannada}\\p{Katakana}\\p{Hiragana}\\p{Tai_Tham}\\p{Thai}]+
[\\p{Han}\\p{Hiragana}\\p{Katakana}]
[\\p{Han}\\p{Katakana}\\p{Hiragana}\\p{Hangul}]
[\\p{Han}]
[\\p{Han}]+
[\\P{Han}]+
[\\p{Hangul}\\p{Hiragana}\\p{Katakana}\\p{Latin}\\p{Common}]
[\\p{Hex}]
[\\p{Hiragana}]
[\\p{InCombiningDiacriticalMarks}]
[\\p{IsC} ]+$
[\\p{IsControl}\\s]
[\\p{IsDigit}\\p{IsAlpha}\\p{IsXDigit}\\\\]
[\\p{IsDigit}\\p{IsAlpha}\\p{IsXDigit}]
[\\p{IsGraph}]
[\\P{IsPrint}]
[\\p{IsUpper}\\W]
[\\p{javaWhitespace}\\p{gc=Cc}]+$
[\\p{Katakana}]
[\\p{Latin}\\p{Greek}]
[\\p{lower}\\p{upper}]
[\\p{Math}]
[\\p{Punct}&&[^.]]*$
[\\p{Punct}&&[^-_.'`]]+
[\\p{Punct}&&[^'`.]]+\\s+|[\\\"\\u2014\\u2015\\u201C\\u201D\\u2033]
[\\p{Punct}&&[^'`]]+\\s+|[\\\"\\u2014\\u2015\\u201C\\u201D\\u2033]
[\\p{Punct}\\p{Symbol}\\r\\n]+
[\\p{Punct}]+
[\\p{Space}]+
[\\p{SpacingMark}\\p{Whitespace}\\x{A0}]+
[\\P{Uppercase}]
[\\p{Word};:<>&]
[\\p{word}][\\p{word}_.]+
[\\p{XPosixAlpha}\\-']
[\\pC\\p{White_Space}]
[\\pC\\pZ]
[\\pC\\pZ]+
[\\pC\u00a2\u20ac\u2022\u2014\u2122\u00b0\u00bd]|shipping
[\\pC]
[\\pL\\p{Mc}\\p{Mn}\\p{Nd}-_']+
[\\pL\\p{Mc}\\p{Mn}-_']+
[\\\\pL]
[\\pL-_']+
[\\pP????]
[\\pP\\pS\\s]
[\\pP]
[\\pP]+
[\\PP]+
[\\pZ\\pC]+
[\\pZ\\pC]+$
[\\pZ\\s]+
[\\Q!(){}<>-;:.?,\\/\\\\@*%=\\$^_~\\E]
[\\Q$bre\\E]
[\\Q$delimiters\\E]
[\\Q$self->{quote_char}\\E]
[\\Q$separators\\E\\s]$
[\\Q$signs\\E]
[\\Q$special\\E]
[\\Q$split$split2\\E]
[\\Q'[]|\\E]
[\\Q[{\\E]
[\\Q]}\\E]
[\\r\\l\\n\\s]+$
[\\r\\n\"\\\\]
[\\r\\n\\\\]
[\\r\\n\\f\\t\\b\"\\\\]
[\\r\\n\\l]+
[\\r\\n\\t
[\\r\\n\\t\"\\\\]
[\\r\\n]++
[\\s
[\\s(]\\\\Noselect[)\\s]
[\\s,;\"\\'&\\\\]
[\\s,\\|]++
[\\s;,.})\\]\\\\]
[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]
[\\s'\"</=\\\\]
[\\s\\(\\/\\\\](node|module|timers)\\.js:|when([\\/\\\\]{1,2}(lib|monitor|es6-shim)[\\/\\\\]{1,2}|\\.js)|(new\\sPromise)\\b|(\\b(PromiseMonitor|ConsoleReporter|Scheduler|RunHandlerTask|ProgressTask|Promise|.*Handler)\\.[\\w_]\\w\\w+\\b)|\\b(tryCatch\\w+|getHandler\\w*)\\b
[\\s\\*\\#\\_\\[\\]()]+
[\\s\\*\\#\\_\\|]+
[\\s\\*\\#\\_]+
[\\s\\.,?!;:()\\]\\[\\{\\}\\-\\_]+
[\\s\\.\\,\\!\\?\\(\\)\\_\\\\\\/\\\"\\n]
[\\s\\.\\/\\\\]
[\\s\\.\\-\\_]+
[\\s\\/\\-\\_\\:\\\"\\&\\.]
[\\s\\/\\-\\_\\:\\\"\\&\\/]
[\\s\\/\\\\]
[\\s-\\/\\\\]+
[\\s\\[\\]\\\"'#\\\\]|(?:/[/\\*])
[\\s\\[\\]\\\"'\\\\]
[\\s\\-\\.\\,\\/\\\\]
[\\s\\-\\_](.)
[\\s\\-\\_]+
[\\s\\\\]
[\\s\\]\\[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\\\\\^\\_\\`\\{\\|\\}\\~\\-]+
[\\s\\_]+
[\\s\\n\\_\\.]+
[\\s\\p{Punct}]
[\\s\\p{Punct}]*[eE][tT][cC].?$
[\\s\\p{Punct}]*[eE][tT]\\s+[aA][lL].?$
[\\s\\pP]+
[\\s\\Q$sep\\E]
[\\s\\t]*+
[\\s]+COLLATE[\\s]+([a-zA-Z0-9\\_]+)
[\\s+\\p{Punct}]+
[\\t\"&><\\0-\\x8\\xB-\\x1F]
[\\t\\n\\r \\x0B\\0\\x{A0}\\x{AD}\\x{2000}-\\x{200F}\\x{201F}\\x{202F}\\x{3000}\\x{FEFF}]+
[\\u\\x\\z\\8\\9]
[\\u{0000000000000061}-\\u{7A}]
[\\\\u0]
[\\u{0}-\\u{1F444}]
[\\u0000-\\u001f\"\\\\]
[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]
[\\u0000-\\u001F\\u2028\\u2029\"\\\\]
[\\U0001F300-\\U0001F579\\U0001F57B-\\U0001F5A3\\U0001F5A5-\\U0001F5FF]+
[\\u0063-b]
[\u00e5\u00e7%:;=<>\u201d|/\\\\]
[\u00e9-\u00e8]
[\\u{2}]
[\u04e9\u04af\u04d9\u0456\u0435][^
[\\u{09}\\u{0A}\\u{0C}\\u{0D}\\u{20}\\u{2f}]
[\\u{09}\\u{0A}\\u{0C}\\u{0D}\\u{20}]
[\\u1234\\p{ASCII}]+
[\\u{20}-\\u{7E}]
[\\u{20}-\\u{7EE}]
[\u3042-\u3093](?:[\u3041-\u3093\u30fc\u30fd\u30fe]|\\\\CID\\{12107\\})*?\u300a.+?\u300b
[\u30a2-\u30f4](?:[\u30a1-\u30f4\u30fc\u309d\u309e]|\\\\CID\\{12107\\})*?\u300a.+?\u300b
[\\u4E00-\\u9FA5]{2,5}(?:?[\\u4E00-\\u9FA5]{2,5})*
[\\u{61}-b][\\u0061-b][a-\\u{62}][a-\\u0062]\\u{1ffff}
[\\u{62}-\\u{00000066}]oo
[\\u{63}-b]
[\\uD800\\uDC00-\\uDB7F\\uDFFF]
[\\ud800\\udc00-\\udbff\\udfff\\ud800-\\udfff]
[\ud800\udc03-\ud900\udc01]+
[\\ud800\\udc03-\\ud900\\udc01]+
[\\ud808\\udf40-\\ud808\\udf45]
[\\ud834\\udd21-\\ud834\\udd24]
[\\uD834\\uDF06-\\uD834\\uDF08a-z]
[\\ud83c\\udc00-\\ud83c\\udfff]|[\\ud83d\\udc00-\\ud83d\\udfff]|[\\u2600-\\u27ff]
[\\uD83D\\uDCA9-\\uD83D\\uDCAB]
[\ud83d\udca9-\ud83d\udcab]
[\\uff-\\uffff]
[\\uff40-\\u{10428}]+
[\\u{ff80}-\\u{12345}]
[\\u{ff80}-\\ud808\\udf45]
[\\v\\h]+
[\\V]
[\\w\\$\\\\]
[\\w\\$_\\\\]
[\\w\\.\\-\\_]+
[\\w\\.\\_\\-]*
[\\w\\: ]*Lnr:(?P<court>\\w+) ?(?P<year>\\d+) ?not ?(?P<ordinal>\\d+)
[\\w\\-\\.\\_\\ ]*
[\\w\\-\\.\\_]*
[\\w\\-\\_]+
[\\w\\-\\_]+==[\\w\\.]+
[\\w\\\\]+
[\\w\\\\]+\\.\\w+
[\\w\\_\\-]+:\\S+
[\\w\\_\\-]+=\\\"\\\"
[\\W\\_]
[\\W\\_]+
[\\w\\d\\-\\_]\\[\\]+
[\\W\\s\\_]+
[\\x-\\x20\\x22\\x3C\\x3E\\x7F-\\xFF]+
[\\x-\\x8\\xb-\\xc\\xe-\\x1f\\x7f]
[\\x0-\\x19]+
[\\x0-\\x1F\\x21-\\x2C\\x2E-\\x2F\\x3A-\\x40\\x5B-\\x60\\x7B-\\x7F]
[\\x0-\\x1f\\x7f,;]
[\\x0-\\x1f\\x7f=;, ]
[\\x0-\\x7f]
[\\x0-\\x8\\xA-\\x1F\\x7F]
[\\x0-\\x8\\xA-\\x1F\\x7F0-9]
[\\x0-\\x8\\xB\\xC\\xE-\\x1F]
[\\x0-\\x8\\xB-\\xC\\xE-\\x1F]
[\\x00-\\ ()<>@,;:\"\\/[\\]?.=\\\\]
[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\'\\\\]+
[\\x00-\\x1f\\\\]
[\\x00-\\x1F\\x7F \\/?*`\"'\\\\]
[\\x00-\\x1F\\x7F-\\uFFFF \"#<>?`\\/@\\\\]
[\\x00-\\x1F\\x7F-\\x9F\\s\\\\]
[\\x00-\\x1f\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb\"\\\\]
[\\x00-\\x1f]|\\x7f|[^\\p{ASCII}]
[\\x00-\\x1F<>a-zA-Z0-9'\",;\\\\]
[\\x{0000}-\\x{0009}\\x{000B}-\\x{001F}\\x{007F}]
[\\x{0000}-\\x{001F}]
[\\x{0021}-\\x{002D}\\x{002F}\\x{003A}-\\x{0040}\\x{005B}-\\x{0060}\\x{007B}-\\x{007E}\\x{00A1}-\\x{00BF}]
[\\\\x{0080}-\\\\x{10FFFF}]
[\\x{00A0}-\\x{1F9EF}]
[\\x{00A0}-\\x{1F9EF}]|<(a)?:[^<>:]+:[0-9]+>
[\\x{00C0}-\\x{00C3}\\x{00E0}-\\x{00E3}\\x{0102}\\x{0103}\\x{1EA0}-\\x{1EB7}]
[\\x{00C0}-\\x{00C5}\\x{00E0}-\\x{00E5}]
[\\x{00C8}-\\x{00CA}\\x{00E8}-\\x{00EA}\\x{1EB8}-\\x{1EC7}]
[\\x{00C8}-\\x{00CB}]
[\\x{00CC}\\x{00CD}\\x{00EC}\\x{00ED}\\x{0128}\\x{0129}\\x{1EC8}-\\x{1ECB}]
[\\x{00CC}-\\x{00CF}]
[\\x{00D2}-\\x{00D5}\\x{00F2}-\\x{00F5}\\x{01A0}\\x{01A1}\\x{1ECC}-\\x{1EE3}]
[\\x{00D2}-\\x{00D8}]
[\\x{00D9}-\\x{00DA}\\x{00F9}-\\x{00FA}\\x{0168}\\x{0169}\\x{01AF}\\x{01B0}\\x{1EE4}-\\x{1EF1}]
[\\x{00D9}-\\x{00DC}]
[\\x{00DD}\\x{00FD}\\x{1EF2}-\\x{1EF9}]
[\\x01-\\x08\\x10\\x1F\\x7F\"\\\\\\\\]
[\\x{0300}-\\x{036f}]+
[\\x{0430}-\\x{04FF}]
[\\x{064b}-\\x{0655}\\x{fe70}-\\x{fe7f}]
[\\x{0700}-\\x{0745}]
[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]*(?P<token>[\\x00-\\x08\\x0A-\\x1F\\d:a-zA-Z\\x7F-\\xFF]+)
[\\x{0E00}-\\x{0E7F}]
[\\x1-\\x8\\xB-\\xC\\xE-\\x1F]
[\\x{1000}-\\x{1021}]
[\\x{10000}-\\x{10FFFF}]
[\\x{10000}-\\x{1FFFF}]
[\\x{1100}-\\x{115F}\\x{2329}\\x{232A}\\x{2E80}-\\x{303E}\\x{3040}-\\x{A4CF}\\x{AC00}-\\x{D7A3}\\x{F900}-\\x{FAFF}\\x{FE10}-\\x{FE19}\\x{FE30}-\\x{FE6F}\\x{FF00}-\\x{FF60}\\x{FFE0}-\\x{FFE6}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}]
[\\x{1F3F4}](?:\\x{E0067}\\x{E0062}\\x{E0077}\\x{E006C}\\x{E0073}\\x{E007F})|[\\x{1F3F4}](?:\\x{E0067}\\x{E0062}\\x{E0073}\\x{E0063}\\x{E0074}\\x{E007F})|[\\x{1F3F4}](?:\\x{E0067}\\x{E0062}\\x{E0065}\\x{E006E}\\x{E0067}\\x{E007F})|[\\x{1F3F4}](?:\\x{200D}\\x{2620}\\x{FE0F})|[\\x{1F3F3}](?:\\x{FE0F}\\x{200D}\\x{1F308})|[\\x{0023}\\x{002A}\\x{0030}\\x{0031}\\x{0032}\\x{0033}\\x{0034}\\x{0035}\\x{0036}\\x{0037}\\x{0038}\\x{0039}](?:\\x{FE0F}\\x{20E3})|[\\x{1F441}](?:\\x{FE0F}\\x{200D}\\x{1F5E8}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F467}\\x{200D}\\x{1F467})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F467}\\x{200D}\\x{1F466})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F467})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F466}\\x{200D}\\x{1F466})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F466})|[\\x{1F468}](?:\\x{200D}\\x{1F468}\\x{200D}\\x{1F467}\\x{200D}\\x{1F467})|[\\x{1F468}](?:\\x{200D}\\x{1F468}\\x{200D}\\x{1F466}\\x{200D}\\x{1F466})|[\\x{1F468}](?:\\x{200D}\\x{1F468}\\x{200D}\\x{1F467}\\x{200D}\\x{1F466})|[\\x{1F468}](?:\\x{200D}\\x{1F468}\\x{200D}\\x{1F467})|[\\x{1F468}](?:\\x{200D}\\x{1F468}\\x{200D}\\x{1F466})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F469}\\x{200D}\\x{1F467}\\x{200D}\\x{1F467})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F469}\\x{200D}\\x{1F466}\\x{200D}\\x{1F466})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F469}\\x{200D}\\x{1F467}\\x{200D}\\x{1F466})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F469}\\x{200D}\\x{1F467})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F469}\\x{200D}\\x{1F466})|[\\x{1F469}](?:\\x{200D}\\x{2764}\\x{FE0F}\\x{200D}\\x{1F469})|[\\x{1F469}\\x{1F468}](?:\\x{200D}\\x{2764}\\x{FE0F}\\x{200D}\\x{1F468})|[\\x{1F469}](?:\\x{200D}\\x{2764}\\x{FE0F}\\x{200D}\\x{1F48B}\\x{200D}\\x{1F469})|[\\x{1F469}\\x{1F468}](?:\\x{200D}\\x{2764}\\x{FE0F}\\x{200D}\\x{1F48B}\\x{200D}\\x{1F468})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F9B3})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F9B3})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F9B3})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F9B3})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F9B3})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F9B3})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F9B2})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F9B2})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F9B2})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F9B2})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F9B2})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F9B2})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F9B1})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F9B1})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F9B1})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F9B1})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F9B1})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F9B1})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F9B0})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F9B0})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F9B0})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F9B0})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F9B0})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F9B0})|[\\x{1F575}\\x{1F3CC}\\x{26F9}\\x{1F3CB}](?:\\x{FE0F}\\x{200D}\\x{2640}\\x{FE0F})|[\\x{1F575}\\x{1F3CC}\\x{26F9}\\x{1F3CB}](?:\\x{FE0F}\\x{200D}\\x{2642}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FF}\\x{200D}\\x{2640}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FE}\\x{200D}\\x{2640}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FD}\\x{200D}\\x{2640}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FC}\\x{200D}\\x{2640}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FB}\\x{200D}\\x{2640}\\x{FE0F})|[\\x{1F46E}\\x{1F9B8}\\x{1F9B9}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F9DE}\\x{1F9DF}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F46F}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93C}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{200D}\\x{2640}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FF}\\x{200D}\\x{2642}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FE}\\x{200D}\\x{2642}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FD}\\x{200D}\\x{2642}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FC}\\x{200D}\\x{2642}\\x{FE0F})|[\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{1F3FB}\\x{200D}\\x{2642}\\x{FE0F})|[\\x{1F46E}\\x{1F9B8}\\x{1F9B9}\\x{1F482}\\x{1F477}\\x{1F473}\\x{1F471}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F9DE}\\x{1F9DF}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F46F}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93C}\\x{1F93D}\\x{1F93E}\\x{1F939}](?:\\x{200D}\\x{2642}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F692})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F692})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F692})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F692})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F692})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F692})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F680})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F680})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F680})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F680})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F680})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F680})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{2708}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{2708}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{2708}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{2708}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{2708}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{2708}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F3A8})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F3A8})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F3A8})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F3A8})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F3A8})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F3A8})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F3A4})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F3A4})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F3A4})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F3A4})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F3A4})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F3A4})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F4BB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F4BB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F4BB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F4BB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F4BB})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F4BB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F52C})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F52C})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F52C})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F52C})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F52C})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F52C})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F4BC})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F4BC})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F4BC})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F4BC})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F4BC})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F4BC})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F3ED})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F3ED})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F3ED})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F3ED})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F3ED})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F3ED})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F527})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F527})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F527})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F527})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F527})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F527})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F373})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F373})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F373})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F373})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F373})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F373})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F33E})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F33E})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F33E})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F33E})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F33E})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F33E})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{2696}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{2696}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{2696}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{2696}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{2696}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{2696}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F3EB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F3EB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F3EB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F3EB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F3EB})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F3EB})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{1F393})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{1F393})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{1F393})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{1F393})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{1F393})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{1F393})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FF}\\x{200D}\\x{2695}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FE}\\x{200D}\\x{2695}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FD}\\x{200D}\\x{2695}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FC}\\x{200D}\\x{2695}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{1F3FB}\\x{200D}\\x{2695}\\x{FE0F})|[\\x{1F468}\\x{1F469}](?:\\x{200D}\\x{2695}\\x{FE0F})|[\\x{1F476}\\x{1F9D2}\\x{1F466}\\x{1F467}\\x{1F9D1}\\x{1F468}\\x{1F469}\\x{1F9D3}\\x{1F474}\\x{1F475}\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F934}\\x{1F478}\\x{1F473}\\x{1F472}\\x{1F9D5}\\x{1F9D4}\\x{1F471}\\x{1F935}\\x{1F470}\\x{1F930}\\x{1F931}\\x{1F47C}\\x{1F385}\\x{1F936}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F483}\\x{1F57A}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F6C0}\\x{1F6CC}\\x{1F574}\\x{1F3C7}\\x{1F3C2}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}\\x{1F933}\\x{1F4AA}\\x{1F9B5}\\x{1F9B6}\\x{1F448}\\x{1F449}\\x{261D}\\x{1F446}\\x{1F595}\\x{1F447}\\x{270C}\\x{1F91E}\\x{1F596}\\x{1F918}\\x{1F919}\\x{1F590}\\x{270B}\\x{1F44C}\\x{1F44D}\\x{1F44E}\\x{270A}\\x{1F44A}\\x{1F91B}\\x{1F91C}\\x{1F91A}\\x{1F44B}\\x{1F91F}\\x{270D}\\x{1F44F}\\x{1F450}\\x{1F64C}\\x{1F932}\\x{1F64F}\\x{1F485}\\x{1F442}\\x{1F443}](?:\\x{1F3FF})|[\\x{1F476}\\x{1F9D2}\\x{1F466}\\x{1F467}\\x{1F9D1}\\x{1F468}\\x{1F469}\\x{1F9D3}\\x{1F474}\\x{1F475}\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F934}\\x{1F478}\\x{1F473}\\x{1F472}\\x{1F9D5}\\x{1F9D4}\\x{1F471}\\x{1F935}\\x{1F470}\\x{1F930}\\x{1F931}\\x{1F47C}\\x{1F385}\\x{1F936}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F483}\\x{1F57A}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F6C0}\\x{1F6CC}\\x{1F574}\\x{1F3C7}\\x{1F3C2}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}\\x{1F933}\\x{1F4AA}\\x{1F9B5}\\x{1F9B6}\\x{1F448}\\x{1F449}\\x{261D}\\x{1F446}\\x{1F595}\\x{1F447}\\x{270C}\\x{1F91E}\\x{1F596}\\x{1F918}\\x{1F919}\\x{1F590}\\x{270B}\\x{1F44C}\\x{1F44D}\\x{1F44E}\\x{270A}\\x{1F44A}\\x{1F91B}\\x{1F91C}\\x{1F91A}\\x{1F44B}\\x{1F91F}\\x{270D}\\x{1F44F}\\x{1F450}\\x{1F64C}\\x{1F932}\\x{1F64F}\\x{1F485}\\x{1F442}\\x{1F443}](?:\\x{1F3FE})|[\\x{1F476}\\x{1F9D2}\\x{1F466}\\x{1F467}\\x{1F9D1}\\x{1F468}\\x{1F469}\\x{1F9D3}\\x{1F474}\\x{1F475}\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F934}\\x{1F478}\\x{1F473}\\x{1F472}\\x{1F9D5}\\x{1F9D4}\\x{1F471}\\x{1F935}\\x{1F470}\\x{1F930}\\x{1F931}\\x{1F47C}\\x{1F385}\\x{1F936}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F483}\\x{1F57A}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F6C0}\\x{1F6CC}\\x{1F574}\\x{1F3C7}\\x{1F3C2}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}\\x{1F933}\\x{1F4AA}\\x{1F9B5}\\x{1F9B6}\\x{1F448}\\x{1F449}\\x{261D}\\x{1F446}\\x{1F595}\\x{1F447}\\x{270C}\\x{1F91E}\\x{1F596}\\x{1F918}\\x{1F919}\\x{1F590}\\x{270B}\\x{1F44C}\\x{1F44D}\\x{1F44E}\\x{270A}\\x{1F44A}\\x{1F91B}\\x{1F91C}\\x{1F91A}\\x{1F44B}\\x{1F91F}\\x{270D}\\x{1F44F}\\x{1F450}\\x{1F64C}\\x{1F932}\\x{1F64F}\\x{1F485}\\x{1F442}\\x{1F443}](?:\\x{1F3FD})|[\\x{1F476}\\x{1F9D2}\\x{1F466}\\x{1F467}\\x{1F9D1}\\x{1F468}\\x{1F469}\\x{1F9D3}\\x{1F474}\\x{1F475}\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F934}\\x{1F478}\\x{1F473}\\x{1F472}\\x{1F9D5}\\x{1F9D4}\\x{1F471}\\x{1F935}\\x{1F470}\\x{1F930}\\x{1F931}\\x{1F47C}\\x{1F385}\\x{1F936}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F483}\\x{1F57A}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F6C0}\\x{1F6CC}\\x{1F574}\\x{1F3C7}\\x{1F3C2}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}\\x{1F933}\\x{1F4AA}\\x{1F9B5}\\x{1F9B6}\\x{1F448}\\x{1F449}\\x{261D}\\x{1F446}\\x{1F595}\\x{1F447}\\x{270C}\\x{1F91E}\\x{1F596}\\x{1F918}\\x{1F919}\\x{1F590}\\x{270B}\\x{1F44C}\\x{1F44D}\\x{1F44E}\\x{270A}\\x{1F44A}\\x{1F91B}\\x{1F91C}\\x{1F91A}\\x{1F44B}\\x{1F91F}\\x{270D}\\x{1F44F}\\x{1F450}\\x{1F64C}\\x{1F932}\\x{1F64F}\\x{1F485}\\x{1F442}\\x{1F443}](?:\\x{1F3FC})|[\\x{1F476}\\x{1F9D2}\\x{1F466}\\x{1F467}\\x{1F9D1}\\x{1F468}\\x{1F469}\\x{1F9D3}\\x{1F474}\\x{1F475}\\x{1F46E}\\x{1F575}\\x{1F482}\\x{1F477}\\x{1F934}\\x{1F478}\\x{1F473}\\x{1F472}\\x{1F9D5}\\x{1F9D4}\\x{1F471}\\x{1F935}\\x{1F470}\\x{1F930}\\x{1F931}\\x{1F47C}\\x{1F385}\\x{1F936}\\x{1F9D9}\\x{1F9DA}\\x{1F9DB}\\x{1F9DC}\\x{1F9DD}\\x{1F64D}\\x{1F64E}\\x{1F645}\\x{1F646}\\x{1F481}\\x{1F64B}\\x{1F647}\\x{1F926}\\x{1F937}\\x{1F486}\\x{1F487}\\x{1F6B6}\\x{1F3C3}\\x{1F483}\\x{1F57A}\\x{1F9D6}\\x{1F9D7}\\x{1F9D8}\\x{1F6C0}\\x{1F6CC}\\x{1F574}\\x{1F3C7}\\x{1F3C2}\\x{1F3CC}\\x{1F3C4}\\x{1F6A3}\\x{1F3CA}\\x{26F9}\\x{1F3CB}\\x{1F6B4}\\x{1F6B5}\\x{1F938}\\x{1F93D}\\x{1F93E}\\x{1F939}\\x{1F933}\\x{1F4AA}\\x{1F9B5}\\x{1F9B6}\\x{1F448}\\x{1F449}\\x{261D}\\x{1F446}\\x{1F595}\\x{1F447}\\x{270C}\\x{1F91E}\\x{1F596}\\x{1F918}\\x{1F919}\\x{1F590}\\x{270B}\\x{1F44C}\\x{1F44D}\\x{1F44E}\\x{270A}\\x{1F44A}\\x{1F91B}\\x{1F91C}\\x{1F91A}\\x{1F44B}\\x{1F91F}\\x{270D}\\x{1F44F}\\x{1F450}\\x{1F64C}\\x{1F932}\\x{1F64F}\\x{1F485}\\x{1F442}\\x{1F443}](?:\\x{1F3FB})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1E9}\\x{1F1F0}\\x{1F1F2}\\x{1F1F3}\\x{1F1F8}\\x{1F1F9}\\x{1F1FA}](?:\\x{1F1FF})|[\\x{1F1E7}\\x{1F1E8}\\x{1F1EC}\\x{1F1F0}\\x{1F1F1}\\x{1F1F2}\\x{1F1F5}\\x{1F1F8}\\x{1F1FA}](?:\\x{1F1FE})|[\\x{1F1E6}\\x{1F1E8}\\x{1F1F2}\\x{1F1F8}](?:\\x{1F1FD})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1EC}\\x{1F1F0}\\x{1F1F2}\\x{1F1F5}\\x{1F1F7}\\x{1F1F9}\\x{1F1FF}](?:\\x{1F1FC})|[\\x{1F1E7}\\x{1F1E8}\\x{1F1F1}\\x{1F1F2}\\x{1F1F8}\\x{1F1F9}](?:\\x{1F1FB})|[\\x{1F1E6}\\x{1F1E8}\\x{1F1EA}\\x{1F1EC}\\x{1F1ED}\\x{1F1F1}\\x{1F1F2}\\x{1F1F3}\\x{1F1F7}\\x{1F1FB}](?:\\x{1F1FA})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1EA}\\x{1F1EC}\\x{1F1ED}\\x{1F1EE}\\x{1F1F1}\\x{1F1F2}\\x{1F1F5}\\x{1F1F8}\\x{1F1F9}\\x{1F1FE}](?:\\x{1F1F9})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1EA}\\x{1F1EC}\\x{1F1EE}\\x{1F1F1}\\x{1F1F2}\\x{1F1F5}\\x{1F1F7}\\x{1F1F8}\\x{1F1FA}\\x{1F1FC}](?:\\x{1F1F8})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1EA}\\x{1F1EB}\\x{1F1EC}\\x{1F1ED}\\x{1F1EE}\\x{1F1F0}\\x{1F1F1}\\x{1F1F2}\\x{1F1F3}\\x{1F1F5}\\x{1F1F8}\\x{1F1F9}](?:\\x{1F1F7})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1EC}\\x{1F1EE}\\x{1F1F2}](?:\\x{1F1F6})|[\\x{1F1E8}\\x{1F1EC}\\x{1F1EF}\\x{1F1F0}\\x{1F1F2}\\x{1F1F3}](?:\\x{1F1F5})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1E9}\\x{1F1EB}\\x{1F1EE}\\x{1F1EF}\\x{1F1F2}\\x{1F1F3}\\x{1F1F7}\\x{1F1F8}\\x{1F1F9}](?:\\x{1F1F4})|[\\x{1F1E7}\\x{1F1E8}\\x{1F1EC}\\x{1F1ED}\\x{1F1EE}\\x{1F1F0}\\x{1F1F2}\\x{1F1F5}\\x{1F1F8}\\x{1F1F9}\\x{1F1FA}\\x{1F1FB}](?:\\x{1F1F3})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1E9}\\x{1F1EB}\\x{1F1EC}\\x{1F1ED}\\x{1F1EE}\\x{1F1EF}\\x{1F1F0}\\x{1F1F2}\\x{1F1F4}\\x{1F1F5}\\x{1F1F8}\\x{1F1F9}\\x{1F1FA}\\x{1F1FF}](?:\\x{1F1F2})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1EC}\\x{1F1EE}\\x{1F1F2}\\x{1F1F3}\\x{1F1F5}\\x{1F1F8}\\x{1F1F9}](?:\\x{1F1F1})|[\\x{1F1E8}\\x{1F1E9}\\x{1F1EB}\\x{1F1ED}\\x{1F1F1}\\x{1F1F2}\\x{1F1F5}\\x{1F1F8}\\x{1F1F9}\\x{1F1FD}](?:\\x{1F1F0})|[\\x{1F1E7}\\x{1F1E9}\\x{1F1EB}\\x{1F1F8}\\x{1F1F9}](?:\\x{1F1EF})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1EB}\\x{1F1EC}\\x{1F1F0}\\x{1F1F1}\\x{1F1F3}\\x{1F1F8}\\x{1F1FB}](?:\\x{1F1EE})|[\\x{1F1E7}\\x{1F1E8}\\x{1F1EA}\\x{1F1EC}\\x{1F1F0}\\x{1F1F2}\\x{1F1F5}\\x{1F1F8}\\x{1F1F9}](?:\\x{1F1ED})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1E9}\\x{1F1EA}\\x{1F1EC}\\x{1F1F0}\\x{1F1F2}\\x{1F1F3}\\x{1F1F5}\\x{1F1F8}\\x{1F1F9}\\x{1F1FA}\\x{1F1FB}](?:\\x{1F1EC})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1EC}\\x{1F1F2}\\x{1F1F3}\\x{1F1F5}\\x{1F1F9}\\x{1F1FC}](?:\\x{1F1EB})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E9}\\x{1F1EA}\\x{1F1EC}\\x{1F1EE}\\x{1F1EF}\\x{1F1F0}\\x{1F1F2}\\x{1F1F3}\\x{1F1F5}\\x{1F1F7}\\x{1F1F8}\\x{1F1FB}\\x{1F1FE}](?:\\x{1F1EA})|[\\x{1F1E6}\\x{1F1E7}\\x{1F1E8}\\x{1F1EC}\\x{1F1EE}\\x{1F1F2}\\x{1F1F8}\\x{1F1F9}](?:\\x{1F1E9})|[\\x{1F1E6}\\x{1F1E8}\\x{1F1EA}\\x{1F1EE}\\x{1F1F1}\\x{1F1F2}\\x{1F1F3}\\x{1F1F8}\\x{1F1F9}\\x{1F1FB}](?:\\x{1F1E8})|[\\x{1F1E7}\\x{1F1EC}\\x{1F1F1}\\x{1F1F8}](?:\\x{1F1E7})|[\\x{1F1E7}\\x{1F1E8}\\x{1F1EA}\\x{1F1EC}\\x{1F1F1}\\x{1F1F2}\\x{1F1F3}\\x{1F1F5}\\x{1F1F6}\\x{1F1F8}\\x{1F1F9}\\x{1F1FA}\\x{1F1FB}\\x{1F1FF}](?:\\x{1F1E6})|[\\x{00A9}\\x{00AE}\\x{203C}\\x{2049}\\x{2122}\\x{2139}\\x{2194}-\\x{2199}\\x{21A9}-\\x{21AA}\\x{231A}-\\x{231B}\\x{2328}\\x{23CF}\\x{23E9}-\\x{23F3}\\x{23F8}-\\x{23FA}\\x{24C2}\\x{25AA}-\\x{25AB}\\x{25B6}\\x{25C0}\\x{25FB}-\\x{25FE}\\x{2600}-\\x{2604}\\x{260E}\\x{2611}\\x{2614}-\\x{2615}\\x{2618}\\x{261D}\\x{2620}\\x{2622}-\\x{2623}\\x{2626}\\x{262A}\\x{262E}-\\x{262F}\\x{2638}-\\x{263A}\\x{2640}\\x{2642}\\x{2648}-\\x{2653}\\x{2660}\\x{2663}\\x{2665}-\\x{2666}\\x{2668}\\x{267B}\\x{267E}-\\x{267F}\\x{2692}-\\x{2697}\\x{2699}\\x{269B}-\\x{269C}\\x{26A0}-\\x{26A1}\\x{26AA}-\\x{26AB}\\x{26B0}-\\x{26B1}\\x{26BD}-\\x{26BE}\\x{26C4}-\\x{26C5}\\x{26C8}\\x{26CE}-\\x{26CF}\\x{26D1}\\x{26D3}-\\x{26D4}\\x{26E9}-\\x{26EA}\\x{26F0}-\\x{26F5}\\x{26F7}-\\x{26FA}\\x{26FD}\\x{2702}\\x{2705}\\x{2708}-\\x{270D}\\x{270F}\\x{2712}\\x{2714}\\x{2716}\\x{271D}\\x{2721}\\x{2728}\\x{2733}-\\x{2734}\\x{2744}\\x{2747}\\x{274C}\\x{274E}\\x{2753}-\\x{2755}\\x{2757}\\x{2763}-\\x{2764}\\x{2795}-\\x{2797}\\x{27A1}\\x{27B0}\\x{27BF}\\x{2934}-\\x{2935}\\x{2B05}-\\x{2B07}\\x{2B1B}-\\x{2B1C}\\x{2B50}\\x{2B55}\\x{3030}\\x{303D}\\x{3297}\\x{3299}\\x{1F004}\\x{1F0CF}\\x{1F170}-\\x{1F171}\\x{1F17E}-\\x{1F17F}\\x{1F18E}\\x{1F191}-\\x{1F19A}\\x{1F201}-\\x{1F202}\\x{1F21A}\\x{1F22F}\\x{1F232}-\\x{1F23A}\\x{1F250}-\\x{1F251}\\x{1F300}-\\x{1F321}\\x{1F324}-\\x{1F393}\\x{1F396}-\\x{1F397}\\x{1F399}-\\x{1F39B}\\x{1F39E}-\\x{1F3F0}\\x{1F3F3}-\\x{1F3F5}\\x{1F3F7}-\\x{1F3FA}\\x{1F400}-\\x{1F4FD}\\x{1F4FF}-\\x{1F53D}\\x{1F549}-\\x{1F54E}\\x{1F550}-\\x{1F567}\\x{1F56F}-\\x{1F570}\\x{1F573}-\\x{1F57A}\\x{1F587}\\x{1F58A}-\\x{1F58D}\\x{1F590}\\x{1F595}-\\x{1F596}\\x{1F5A4}-\\x{1F5A5}\\x{1F5A8}\\x{1F5B1}-\\x{1F5B2}\\x{1F5BC}\\x{1F5C2}-\\x{1F5C4}\\x{1F5D1}-\\x{1F5D3}\\x{1F5DC}-\\x{1F5DE}\\x{1F5E1}\\x{1F5E3}\\x{1F5E8}\\x{1F5EF}\\x{1F5F3}\\x{1F5FA}-\\x{1F64F}\\x{1F680}-\\x{1F6C5}\\x{1F6CB}-\\x{1F6D2}\\x{1F6E0}-\\x{1F6E5}\\x{1F6E9}\\x{1F6EB}-\\x{1F6EC}\\x{1F6F0}\\x{1F6F3}-\\x{1F6F9}\\x{1F910}-\\x{1F93A}\\x{1F93C}-\\x{1F93E}\\x{1F940}-\\x{1F945}\\x{1F947}-\\x{1F970}\\x{1F973}-\\x{1F976}\\x{1F97A}\\x{1F97C}-\\x{1F9A2}\\x{1F9B0}-\\x{1F9B9}\\x{1F9C0}-\\x{1F9C2}\\x{1F9D0}-\\x{1F9FF}]
[\\x{1F600}-\\x{1F64F}]
[\\x{1F600}-\\x{1F6FF}|[\\x{2600}-\\x{26FF}]
[\\x{2000}-\\x{200B}]
[\\x{20000}-\\x{2FFFF}]
[\\x{200b}-\\x{200f}\\x{202a}-\\x{202f}\\x{5b0}-\\x{5bb}]
[\\x{200b}-\\x{200f}\\x{202a}-\\x{202f}]
[\\x{2010}-\\x{2015}]
[\\x{2010}-\\x{201F}]
[\\x{2012}-\\x{2015}]
[\\x{2018}-\\x{201B}]
[\\x{201C}-\\x{201F}]
[\\x{30FC}\\x{2015}\\x{2500}\\x{2501}\\x{02D7}\\x{2010}-\\x{2012}\\x{FE63}\\x{FF0D}]
[\\x80-\\x{10ffff}]
[\\x{80}-\\x{10FFFF}]
[\\x80-\\x{10ffff}]|(^=\\?.*\\?=\\z)
[\\x80-\\xFF]|(?<!\\\\)\\\\(?:\\\\\\\\)*+(?-i:X|[pP][\\{CLMNPSZ]|x\\{[A-Fa-f0-9]{3})
[\\x{A0}\\x{2000}-\\x{200B}]
[\\xCD\\xCE]([^])[\\xCD\\xCE]
[]
[] has length of 0. : This is a useful message
---[-]*(?P<excl>\\!)?\\s*(?P<expr>[^-].*)?
[]*1
[-]?[0-9.xX]*[0-9.]++([\\p{Alpha}]++)[.]?$
[]_
[-]{3}theme_selector_(?P<name>[a-zA-Z][a-zA-Z0-9_\\-]*)
[^
[^-
[^ \\t\\n\\r\\f\\v\"\\\\]+
[^ -~]|\\\\\\\\
[^ A-Za-z0-9!
[^!#-#--:<-[]-~]
[^!#-+\\--:<-[\\]-~]
[^!-~&&[^#
[^#
[^#\\s;{}$\\\\]+
[^#\\w\\d-_\\[\\]{}|`^.\\\\]
[^#]\\b(?P<type>setup(Optional|Required))[(](?P<product>[[:word:]]+?\\b)(?:\\s(?P<version>\\S+?\\b)\\s\\[)?
[^#]\\b(?P<type>setup(Optional|Required))[(](?P<product>[[:word:]]+?\\b)\\s+[-]j\\s(?P<version>\\S+?\\b)[)]
[^$_RE_BidiClass_L\\p{Bc:EN}\\p{Bc:ES}\\p{Bc:CS}\\p{Bc:ET}\\p{Bc:BN}\\p{Bc:ON}\\p{Bc:NSM}]
[^$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]
[^$modes->[3]]
[^%\"\\\\]+
[^(?:
[^(\\p{Han})|(\\p{Latin})|(0-9)]
[^(\\pL|\\pN)]
[^(|)\\\\]
[^,\\.<>\\/\\?;\\:'\"\\[\\]\\{\\}\\\\\\|`~!@#\\$%\\^\\&\\*\\(\\)\\_\\+\\=\\s]+
[^,]+, (?P<topic>[a-zA-Z0-9\\\\._\\\\-]+), (?P<partitionId>\\d+), (?P<currentOffset>\\d+), \\d+, (?P<lag>\\d+), (?P<clientId>.+)_/(?P<consumerAddress>.+)
[^,<>\\/\\?;\\:'\"\\[\\]\\{\\}\\\\\\|`~!@#\\$%\\^\\&\\*\\(\\)\\_\\+\\=\\s]+
[^.!?:\\\\]+
[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]
[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))
[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(\\.|\\[\\])(?:\\4|$))
[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]
[^.\\\\]+(?:\\\\.[^.\\\\])*
[^-._0-9A-Za-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u37f-\\u1fff\\u200c-\\u200d\\u203f\\u2040\\u2070-\\u218f]
[^/\\\\]
[^/\\\\]*$
[^/\\\\]*+$
[^/\\\\]+
[^/\\\\\\\\]+$
[^/\\\\]+$
[^/\\\\]+(?:jpg|gif|png)
[^/\\\\]+[/\\\\]$
[^/\\\\]+-[^/\\\\]+\\.dist-info/
[^/\\n\\\\]+
[^/]*/|[^\\\\]*\\\\
[^:]*[:]\\s(?P<level>info|warning|error|fatal)[ :].*
[^;]+; ?charset=(?P<charset>[^;]+);?.*
[^@]?+\\@[^@]?+\\..?+
[^[/\\\\]+
[^[:alnum:]-.]
[^[:alnum:]-\\.]
[^[:alnum:]\\_:]+
[^[:alnum:]\\pL\\pN\\pP\\pM\\p{S} '\\/]
[^[\\/\\\\]+
[^[a-zA-Z0-9\\_\\.]]
[^\\\\
[^\"
[^\\\\\"
[^\"${\\\\]+
[^\",\\\\]+
[^\"'\\#\\\\]+
[^'\"\\/\\\\]
[^\\\\\"\\\\\\\\]
[^\"\\\\]
[^'\"\\\\]
[^\"\\\\]*$
[^\"\\\\]*(?:(?:\\\\.|\"(?!\"\"))[^\"\\\\]*)*\"\"\"
[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"
[^'\"\\\\]\\@EXPORT
[^\"\\\\]+
[^\"\\\\]+|\\\\.?
[^'\"\\{\\}\\\\]
[^\"'`\\{\\}\\/\\(\\)\\\\]+
[^\\$\\\\](\\$.*?[^\\\\]\\$)
[^\\\\$]\\{(.*?[^\\\\])\\}.*
[^\\(\\{\\[\\\\]
[^\\)\\$
[^\\.\\\\\\/]+\\.(.*?)(?:\\.(
[^\\.\\:\\-\\_0-9A-Za-z]
[^\\.\\-\\_0-9a-zA-Z]
[^\\.\\p{L}\\p{N}0-9]++
[^-\\.\\pL0-9_]+
[^\\.]+(\\.[\\p{Alnum}]+)$
[^\\/\\:\\\\]+$
[^\\/\\\\]*$
[^\\/\\\\]*\\.\\w{0,8}$
[^\\/\\\\]+
[^\\/\\\\]+$
[^\\/\\\\]+[\\/\\\\]{0,2}$
[^\\/\\\\]+\\.([^\\/\\\\]+)$
[^\\/\\\\]+\\..+
[^\\/\\\\]+\\.[^\\/\\\\]+$
[^\\/|\\\\]*-generator.yml
[^\\[]+\\[(?P<pages>[^\\]]*)\\]\\s*\\([0-9]+\\s+(?P<key>[^\\)]+)\\)
[^\\-\\.\\pL\\pN\\s]+
[^\\\\\\'\\\\\\\\]
[^\\-\\_0-9a-zA-Z]
[^\\\\] 
[^\\\\]
[^\\\\]'
[^\\\\]#.*
[^\\\\]#\\{
[^\\\\]#\\s*$
[^\\\\]%.*
[^\\\\]%\\s+
[^\\\\](((\\\\)(\\\\))*+')+
[^\\\\](((\\\\)(\\\\))*+\")+
[^\\\\](:)
[^\\\\](?:\\\\\\\\)*\"
[^\\\\]([\"'])$
[^\\\\](\\\\\\\\)*\\\\$
[^\\\\](\\\\\\\\)*\\+
[^\\\\](\\\\0([0-7]{3}))
[^\\\\](\\\\x([0-9A-Fa-f]{4}))
[^\\\\]*$
[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*'''
[^'\\\\]*(?:\\\\.[^'\\\\]*)*'
'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'
'[^'\\\\]*(\\\\.[^'\\\\]*)*'
'[^'\\\\]*(\\\\.[^'\\\\]*)*'|\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\"
[^\\\\]*\\${(.+?)}
[^\\\\]*\\.(xml)$
[^\\\\]*\\.\\w+$
[^\\\\],
[^\\\\]:
[^\\\\];
[^\\\\]?(\\$\\{([^}]+)\\})
[^\\\\]?\\$\\{?([a-zA-Z]+(?:\\w+)?)\\}?
[^\\\\][
[^\\\\][^\\\\]*
[^\\\\]\\'
[^\\\\]\\!.*
[^\\\\]\\\"
[^\\\\]\"
[^\\\\]\\\"$
[^\\\\]\"\\s*$
[^\\\\]\\#.*
[^\\\\]\\$
[^\\\\]\\\\$
[^\\\\]\\\\\\\\$
[^\\\\]\\$$varname
[^\\\\]\\$([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)
[^\\\\]\\$(\\d+)
[^\\\\]\\$(\\w+)
[^\\\\]\\$\\)*$
[^\\\\]\\${?([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)
[^\\\\]\\(
[^\\\\]\\)
[^\\\\]\\*$
[^\\\\]\\..+\\\\\\.
[^\\\\]\\/
[^\\\\]\\?
[^\\\\]\\\\[^\\\\]
[^\\]\\-\\\\]+
[^\\\\]\\]
[^\\\\]\\\\\\]$
[^\\]\\\\]+
[^\\\\]\\{(\\d*),?(\\d*?)\\}
[^\\\\]\\{[\\n\\r]*\\\\\\*[\\n\\r]*\\\\userprops([^a-zA-Z])
[^\\\\]\\{[\\n\\r]*\\\\info([^a-zA-Z])
[^\\\\]\\|
[^\\\\]\\\\=
[^\\\\]\\\\\\\\=
[^\\\\]\\\\\\d+
[^\\\\]\\n
[^\\\\]\\n\\z
[^\\\\]\\s
[^\\\\]\\\\\\s*$
[^\\\\]\\\\\\z
[^\\\\]\\\\Z
[^\\\\]|\\\\.
[^'\\\\]+
[^\\\\]+$
[^\\\\]=
[^\\_]*\\_([^\\?]*)\\?(.*)
[^\\_A-Za-z0-9\\x80-\\xFF]+
[^\\{\\}
[^\\~\\w\\d\\-\\:\\/\\.\\\\]*
[^\\A]([A-Z])
[^\\A]BananaLib
[^\\cH\\c?][\\cH\\c?]
[^\\d
[^\\d\\\\]+|\\\\\\d+
'[^\\d\\s\\\\]\\w*
[^\\\\h;m,.\\-:\\/\\d]+
[^\\n\\P{Space}]
[^\\n\\r\\\"\\\\]+
'[^'\\n\\r\\\\]*(?:\\\\(?:\\r\\n?|[\\S\\s])[^'\\n\\r\\\\]*)*'
[^\\p{Alnum}\\'\\\"\\)\\]\\}]*$
[^\\p{Alnum}\\'\\\"\\s]
[^\\p{Alnum}\\-_.~]
[^\\p{Alnum}]
[^\\p{Alnum}]+
[^\\p{Alnum}_.\\-\\+]
[^\\p{Alnum}_]
[^\\p{Alpha}\\p{Blank}]
[^\\p{Alpha}]
[^\\p{Alphabetic}\\p{Nd}\\-\\.\\+_]
[^\\P{Any}]+
[^\\p{ASCII}]
[^\\P{ASCII}]+
[^\\p{ASCII}]+
[^\\P{Assigned}]+
[^\\p{Bc:R}\\p{Bc:AL}\\p{Bc:AN}\\p{Bc:EN}\\p{Bc:ES}\\p{Bc:CS}\\p{Bc:ET}\\p{Bc:ON}\\p{Bc:BN}\\p{Bc:NSM}]
[^\\p{Han}\\p{Katakana}\\p{Hiragana}\\\"\\~\\*\\:\\,]
[^\\p{Han}\\p{Katakana}\\p{Hiragana}\\s;]
[^\\p{InHalfwidthKatakana}]
[^\\p{InHiragana}$DASH_UTF]
[^\\p{InHiragana}]
[^\\p{InKatakana}$DASH_UTF]
[^\\p{L}\\p{M} \\d\\-\\_]
[^\\p{L}\\p{N}\\s\\/\\-\\_\\&\\.\\\"\\~\\*\\:\\,|]
[^\\p{Latin}\\d ]
[^\\p{Latin}+\\w\\s-]
[^-\\p{PosixAlnum}_]+
[^\\p{Punct}\\s\\d]{3,}
[^\\p{Script: Latin}0-9]
[^\\p{Word}\\- \\t]
[^\\p{Word}\\ ]
[^\\p{Word}\\- ]
[^\\p{WORD}\\s]
[^\\p{Word}]+
[^\\p{Word}+]
[^\\PC\\s]
[^\\pL\\d.]+
[^\\pL\\d\\-\\+\\.\\/]
[^\\pL\\d\\s*\"]+$
[^\\pL\\d\\s]+
[^\\pL\\d\\s]+$
[^\\pL\\d]
[^\\pL\\d]+
[^\\pL\\pM\\pN\\ ]
[^\\pL\\pM\\pN\\pP\\pS\\pZ\\n\\r\\t]
[^\\pL\\pN]+
[^\\pL\\pN_\\.\\*\\?]
[^\\pL\\pN_\\.]
[^\\\\pL\\\\pN_]
[^\\\\pL]
[^\\pL]
[^\\pL]+
[^\\pL]+(?<![\\x27\\x60\\x{2019}])
[^\\pL_0-9]
[^\\pL0-9]+
[^\\pL0-9_]+
[^\\Q$1\\E]
[^\\Q$fclass\\E]
[^\\Q$ch\\E]
[^\\r\\n\\\"\\\\]+
[^\\r\\n\\'\\\\]+
[^\\s
[^\\s()'\"\\[\\\\]+
[^\\s\"]+|(?<!\\\\)\".*?(?<!\\\\)\"
[^\\s\\\\]
[^\\s\\\\]\\/[^\\s\\\\]
[^\\s\\|\\!\\+\\-\\*\\?\\~\\^\\&\\:\\(\\)\\[\\]\\{\\}\\\"\\\\]
[^\\s\\|\\!\\+\\-\\*\\?\\~\\^\\&\\:\\(\\)\\[\\]\\{\\}\\^\\\"\\\\]
[^\\S\\n]*(?:
[^\\s\\p{WORD}]
[^\\s\\w\\.\\-\\\\]
[^\\s=,][^\\s=,\\\\]*(?:\\\\.[^\\s=,\\\\]*|=[^,>])*
[^\\t]+\\t\t# array name\n\t([^\\t]+)\\t\t# ** time step **\n\t([^\\t]+)\\t\t# ** orf name **\n\t [^\\t]+\\t\t# gene name\n         [^\\t]+\\t\t# ec number\n\t [^\\t]+\\t\t# chromosome number \n\t [^\\t]+\\t\t# peptide length\n\t([^\\t]+)\\t\t# ** spot value **\n\t [^\\t]+\\t\t# description\n\t [^\\t]+
[^\\U00000000-\\U0000FFFF]+
[^\\u0009\\u000A\\u000D\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF]
[^\\u0009\\u000A\\u000D\\u0020-\\uD7FF\\uE000-\\uFFFD\\x{10000}-\\x{10FFFF}]
[^\u00e4\u00f6\u00fca-zA-Z0-9\\s\\/\\-\\_\\:\\\"\\&\\|]
[^\u00ef\u00f4\u00e5\u00f1\u00eb\u00e4\u00f6\u00fca-zA-Z0-9\\s\\/\\-\\_\\,\\&\\.\\\"\\~\\*\\:]
[^\\u{1}-\\u{1000}\\u{1002}-\\u{2000}]
[^\\u1234\\p{ASCII}]+
[^\\u{20}-\\u{7E}]
[^\\ud808\\udf40-\\ud808\\udf45]
[^\\uff40-\\u{10428}]+
[^\\u{ff80}-\\u{12345}]
[^\\u{ff80}-\\ud808\\udf45]
[^\\w \\d\\-\\_\\.\\[\\]\\{\\}\\<\\>\\(\\)]
[^\\w \\d\\-\\_]
[^\\w!\\\"#$%&'()*+,\\-\\.\\/:;<=>?@[\\_\\]\\[{\\|}~\\r*]+ 
[^\\w\\.\\/\\\\]
[^\\w\\.\\-\\:\\;\\#\\_]
[^\\w\\.\\_]+
[^\\w\\[\\]\\*\\?\\|\\\\]
[^\\w\\-\\_\\.]+
[^\\w\\-\\_\\/]
[^\\w\\-\\_]
[^\\w\\-\\_]+
[^\\w\\\\]
[^\\w\\_\\-\\/\\.\\:\\#]
[^\\w\\_]
[^\\w\\_]+
[^\\w\\+\\.\\-\\#\\-\\_\\~\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\:]
[^\\w\\d\\$\\%\\_]
[^\\w\\d\\-\\_\\.]
[^\\w\\d\\-\\_]
[^\\w\\d\\-\\_]+
[^\\w\\d\\_]+
[^\\w\\d\\_]+?
[^\\W\\d\\_]+\\.{1,1}[^\\W\\d\\_]+\\.{1,1}[^\\W\\d\\_]+$
[^\\w\\pL\\pN]
[^\\w\\pL\\pN]*[\\w\\pL\\pN]*$
[^\\w\\s\\-\\.\\_~]
[^\\w\\s\\d\\_\\-]
[^\\w\\s\\pP]+
[^'\\w](\\w[\\w\\d\\_]+)
[^\\w]|\\_
[^\\w-]++
[^\\x0-\\x7F]
[^\\x00-\\x7F\\x{0E01}-\\x{0E3A}\\x{0E3F}-\\x{0E5B}]
[^\\x00-\\x7F\\xA0\\x{0E01}-\\x{0E3A}\\x{0E3F}-\\x{0E5B}]
[^\\x00-\\x7F]++
[^\\x{0000}-\\x{007F}]
[^\\x{0009}\\x{000A}\\x{000D}\\x{0020}-\\x{D7FF}\\x{E000}-\\x{FFFD}\\x{10000}-\\x{10FFFF}]
[^\\x{0009}\\x{000a}\\x{000d}\\x{0020}-\\x{D7FF}\\x{E000}-\\x{FFFD}\\x{10000}-\\x{10FFFF}]
[^\\x{0009}\\x{000a}\\x{000d}\\x{0020}-\\x{D7FF}\\x{E000}-\\x{FFFD}\\x{10000}-\\x{10FFFF}]+
[^\\x{002D}\\x{0030}-\\x{0039}\\x{0041}-\\x{005A}\\x{005F}\\x{0061}-\\x{007A}\\x{00A1}-\\x{FFFF}]
[^\\x{0030}-\\x{0039}\\x{0041}-\\x{005A}\\x{005F}\\x{0061}-\\x{007A}\\x{00A1}-\\x{FFFF}]
[^\\x{0600}-\\x{06FF}A-Za-z0-9-_]
[^\\x09\\x0A\\x0D\\x20-\\x7E\\xA0-\\x{10FFFF}]
[^\\x09\\x0A\\x0D\\x20-\\x7E\\xA0-\\x{2FF}\\x{370}-\\x{10FFFF}]
[^\\x{9}\\x{A}\\x{D}\\x{20}-\\x{D7FF}\\x{E000}-\\x{FFFD}\\x{10000}-\\x{10FFFFFF}]+
[^\\x09\\x0A\\x0D\\x20-\\x{D7FF}\\x{E000}-\\x{FFFD}\\x{10000}-\\x{10FFFF}]
[^\\x09\\x20-\\x7E\\xA0-\\x{10FFFF}]
[^\\x20-\\x7e]|['\\\\]
[^\\x9\\xa\\x20-\\xD7FF\\xE000-\\xFFFD]
[^\\x9\\xA\\xD\\x20-\\x7F]
[^]
[^]$
[^']*('[^']*'[^']*)*\\:(?P<clob>CLOB\\('([^']+|'')*'\\))
[^]*?(:[rp][el]a[\\w-]+)[^]*
[^]*\\/\\*([^]*)\\*\\/\\}$
[^]*\\/\\*([^]*)\\*\\/\\s*\\}$
'[^']*+'|\"[^\"]*+\"|\\?[a-z]?|%
[^]*<svg
[^]*BUNDLER_PARTS.*?$([^]*)^.*?BUNDLER_PARTS_END[^]*
[^-]?api-usage=(?P<used>\\d+)/(?P<tot>\\d+)
[^]\\\\]\\.
[^]abc
[^-^\\d
[^_-\\w]+
[^`${\\\\]+
[^{}\\\\]+
[^<]*(?:The|This) playlist (?P<reason>does not exist|is private)[^<]*
[^<]*<(?P<email>[^@<>]+@[^@<>]+)>
[^-0-9:,\\/\\\\]
[^0-9\\-
[^0-9\\.\\-\\_]
[^0-9\\.\\_]
[^0-9]\\Q$ip\\E[^0-9]
[^0-9]+(?P<s>[0-9]+)\\s*(x|e|episode)\\s*(?P<e>[0-9]+)[^0-9]+
[^0-9a-z\\.\\-\\_]
[^0-9a-z\\.\\_!;,\\+\\-]
[^0-9a-z\\.\\_\\-]
[^0-9a-z\\-\\_]
[^0-9a-z\\_\\-]
[^0-9a-z\\_]
[^0-9a-z\\_-]
[^0-9a-zA-Z\\$\\.\\_\\x{0080}-\\x{ffff}]+
[^0-9a-zA-Z\\.\\-\\_\\* ]
[^0-9a-zA-Z\\/_\\\\]
[^0-9A-Za-z\\-\\_]
[^0-9A-Za-z\\_\\.]
[^0-9A-Za-z\\_\\-]
[^0-9a-zA-Z_!&\\?\\*\\/\\.\\+\\|=%\\$<>#@\\:\\-\\\\]
[^aAeEiIoOuU\\s]{5,}+
[^abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\-\\.\\_\\+\\,]+
[^A-Z\\_\\-]
[^a-z\\_]
[^a-z\\d\\-\\_\\[\\]]
[^a-z|\\-|\\_]
[^a-z0-9%.#_-\\s]
[^a-z0-9.@;#_-\\s]
[^a-z0-9\\.\\-\\_ ]
[^a-z0-9\\.\\-\\_]
[^a-z0-9\\/\\\\_. :-]
[^a-z0-9\\/\\\\_.:-]
[^a-z0-9\\/\\\\_.-]
[^a-z0-9\\:\\/\\?\\#\\[\\]\\@\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\.\\-\\_\\~\\%]
[^a-z0-9\\:\\/\\?\\#\\[\\]\\@\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\.\\-\\_\\~]
[^a-z0-9\\-\\.\\_\\~]
[^a-z0-9\\-\\_\\.\\ ]
[^a-z0-9\\-\\_\\.\\:]
[^a-z0-9\\-\\_\\.]
[^a-z0-9\\\\-\\\\_]
[^a-z0-9\\-\\_]
[^a-z0-9\\-\\_]+
[^a-z0-9\\\\]+
[^a-z0-9\\_\\$\\(\\)+\\-]
[^a-z0-9\\_\\-]
[^a-z0-9\\_\\s]+
[^a-z0-9\\_]
[^a-z0-9\\_]+
[^a-z0-9\\_]i
[^a-z0-9\\+\\/\\=\\-\\_]
[^a-z0-9\\+\\-\\_]+
[^a-z0-9\\s\\/\\-\\_\\:\\\"\\&\\.]
[^a-z0-9\\s\\-\\_]
[^a-z0-9\\xc0-\\xff\\+\\_\\-]+
[^a-z0-9](?P<year>(19|20)(\\d{2}))[^a-z0-9]
[^a-z0-9_\\-\\\\]
[^a-z0-9_\\]
[^a-z0-9_\\\\]
[^a-z0-9A-Z\\p{Han}]+
[^a-zA-Z\\.\\_]
[^a-zA-Z\\/\\\\]+
[^a-zA-Z\\:\\_]
[^A-Za-z\\\\-\\\\_0-9]+
[^a-zA-Z\\_\\ ]
[^a-zA-Z\\\\_\\\\ ]
[^a-zA-Z\\_]
[^a-zA-Z\\_0-9]
[^a-zA-Z\\d\\_\\-\\.\\/]
[^A-Za-z\\d_\\\\]+
[^a-zA-Z\\p{Cyrillic}\\s]
[^a-zA-Z\\p{Cyrillic}]
[^A-Za-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u0236\\u0250-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EE\\u0345\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03F5\\u03F7-\\u03FB\\u0400-\\u0481\\u048A-\\u04CE\\u04D0-\\u04F5\\u04F8-\\u04F9\\u0500-\\u050F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4\\u05D0-\\u05EA\\u05F0-\\u05F3\\u0610-\\u0615\\u0621-\\u063A\\u0640-\\u0657\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u074F\\u0780-\\u07B1\\u0901-\\u0939\\u093D-\\u094C\\u0950\\u0958-\\u0963\\u0981-\\u0983\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7-\\u09C8\\u09CB-\\u09CC\\u09D7\\u09DC-\\u09DD\\u09DF-\\u09E3\\u09F0-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A3E-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4C\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A74\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B43\\u0B47-\\u0B48\\u0B4B-\\u0B4C\\u0B56-\\u0B57\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B82-\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55-\\u0C56\\u0C60-\\u0C61\\u0C82-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5-\\u0CD6\\u0CDE\\u0CE0-\\u0CE1\\u0D02-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D60-\\u0D61\\u0D82-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2-\\u0DF3\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6A\\u0F71-\\u0F81\\u0F88-\\u0F8B\\u0F90-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1021\\u1023-\\u1027\\u1029-\\u102A\\u102C-\\u1032\\u1036\\u1038\\u1050-\\u1059\\u10A0-\\u10C5\\u10D0-\\u10F8\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1206\\u1208-\\u1246\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1286\\u1288\\u128A-\\u128D\\u1290-\\u12AE\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12CE\\u12D0-\\u12D6\\u12D8-\\u12EE\\u12F0-\\u130E\\u1310\\u1312-\\u1315\\u1318-\\u131E\\u1320-\\u1346\\u1348-\\u135A\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772-\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A9\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1D00-\\u1D6B\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2131\\u2133-\\u2139\\u213D-\\u213F\\u2145-\\u2149\\u2160-\\u2183\\u3005\\u3031-\\u3035\\u303B-\\u303C\\u3105-\\u312C\\u3131-\\u318E\\u31A0-\\u31B7\\uA000-\\uA48C\\uAC00-\\uD7A3\\uFA30-\\uFA6A\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFFA0-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\U00010000-\\U0001000B\\U0001000D-\\U00010026\\U00010028-\\U0001003A\\U0001003C-\\U0001003D\\U0001003F-\\U0001004D\\U00010050-\\U0001005D\\U00010080-\\U000100FA\\U00010300-\\U0001031E\\U00010330-\\U0001034A\\U00010380-\\U0001039D\\U00010400-\\U0001049D\\U00010800-\\U00010805\\U00010808\\U0001080A-\\U00010835\\U00010837-\\U00010838\\U0001083C\\U0001083F\\U0001D400-\\U0001D454\\U0001D456-\\U0001D49C\\U0001D49E-\\U0001D49F\\U0001D4A2\\U0001D4A5-\\U0001D4A6\\U0001D4A9-\\U0001D4AC\\U0001D4AE-\\U0001D4B9\\U0001D4BB\\U0001D4BD-\\U0001D4C3\\U0001D4C5-\\U0001D505\\U0001D507-\\U0001D50A\\U0001D50D-\\U0001D514\\U0001D516-\\U0001D51C\\U0001D51E-\\U0001D539\\U0001D53B-\\U0001D53E\\U0001D540-\\U0001D544\\U0001D546\\U0001D54A-\\U0001D550\\U0001D552-\\U0001D6A3\\U0001D6A8-\\U0001D6C0\\U0001D6C2-\\U0001D6DA\\U0001D6DC-\\U0001D6FA\\U0001D6FC-\\U0001D714\\U0001D716-\\U0001D734\\U0001D736-\\U0001D74E\\U0001D750-\\U0001D76E\\U0001D770-\\U0001D788\\U0001D78A-\\U0001D7A8\\U0001D7AA-\\U0001D7C2\\U0001D7C4-\\U0001D7C9]
[^A-Za-z\\w\\d\\-\\_]
[^A-Za-z\\x80-\\xFF\\x24\\u20AC\\xA3\\xA5 0-9 \\u2015\\u2116\\u2018\\u2019\\u201C|\\u201D\\u2026 \\uFF0C \\u2013 \\u2014 \\u00C0-\\u1FFF \\u2C00-\\uD7FF \\uFB50\u2013\\uFDFF \\uFE70\u2013\\uFEFF \\uFF01-\\uFFE6 \\.,\\?\"\"!@#\\$%\\^&\\*\\(\\)-_=\\+;:<>\\/\\\\\\|\\}\\{\\[\\]`~'-\\w\\n\\r]*
[^A-Za-z\\x80-\\xFF\\x24\\u20AC\\xA3\\xA5 0-9 \\u2015\\u2116\\u2018\\u2019\\u201C|\\u201D\\u2026 \\uFF0C \\u2013 \\u2014 \\u00C0-\\u1FFF \\u2C00-\\uD7FF \\uFB50\u2013\\uFDFF \\uFE70\u2013\\uFEFF \\uFF01-\\uFFE6 \\.,\\?\"\"!@#\\$%\\^&\\*\\(\\)-_=\\+;:<>\\/\\\\\\|\\}\\{\\[\\]`~'-\\w]*
[^a-zA-Z0-9 \\-\\_\\.]
[^A-Za-z0-9 \\-_
[^A-Za-z0-9!
[^a-zA-Z0-9.-\\s]+
[^a-zA-Z0-9:\\-\\_\\.]
[^A-Za-z0-9@_-.]
[^A-Za-z0-9'\\,\\(\\)\\+\\_\\,\\-\\.\\/\\:\\=\\? ]
[^a-zA-Z0-9\\,\\;\\=\\.:\\%\\^\\*\\$\\@\\!\\+\\_\\?\\-]
[^a-zA-Z0-9\\.\\/\\$\\_]
[^A-Za-z0-9\\.-\\/\\*\\_]
[^A-Za-z0-9\\.\\/\\_\\-]
[^a-zA-Z0-9\\.\\-\\:\\^\\*\\$\\@\\!\\+\\_\\?]
[^a-zA-Z0-9\\.\\-\\_\\%\\/\\\\]
[^a-zA-Z0-9\\.\\-\\_]
[^a-zA-Z0-9\\.\\-\\+/\\\"\\'\\&\\(\\)\\<\\>!:%$
[^A-Za-z0-9\\.\\_\\-]
[^a-zA-Z0-9\\.\\_]
[^A-Za-z0-9\\/\\-\\_\\.\\~\\!\\(\\)\\*\\:\\;\\=]+
[^a-zA-Z0-9\\:\\/\\?\\#\\[\\]\\@\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~]
[^a-zA-Z0-9\\:\\/\\?\\=\\&\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]
[^a-zA-Z0-9\\:\\-\\_\\.]
[^a-zA-Z0-9\\:\\_]
[^A-Za-z0-9\\@\\.\\-\\_\\#\\:]
[^A-Za-z0-9\\-\\.\\@\\_]
[^A-Za-z0-9\\-\\.\\_:\\/\\?\\&\\+\\;\\=]+
[^a-zA-Z0-9\\-\\.\\_\\/]
[^A-Za-z0-9\\-\\.\\_\\~:\\/\\?\\#\\[\\]\\@\\!\\$\\&'\\(\\)\\*\\+\\,\\;\\=]+
[^a-zA-Z0-9\\-\\.\\_\\~\\!\\$\\&'\\(\\)\\*\\+\\,\\;\\=\\:\\@\\/\\?]
[^a-zA-Z0-9\\-\\.\\_\\~\\!\\$\\&'\\(\\)\\*\\+\\,\\;\\=\\:\\@\\/]
[^a-zA-Z0-9\\-\\.\\_\\~]
[^a-zA-Z0-9\\-\\.\\_]
[^a-zA-Z0-9\\-\\_:]
[^a-zA-Z0-9\\-\\_\\ \\.]+
[^A-Za-z0-9\\-\\_\\.\\/]
[^a-zA-Z0-9\\-\\_\\:\\.]
[^A-Za-z0-9\\-\\_\\?\\*\\.\\%\\(\\)\\,\\'\\+\\=\\:\\# ]
[^a-zA-Z0-9\\-\\_\\@\\.]
[^a-zA-Z0-9\\-\\_]
[^A-Za-z0-9\\-\\_]
[^a-zA-Z0-9\\-\\_]+
[^a-zA-Z0-9\\\\]+
[^A-Za-z0-9\\_\\ ]
[^a-zA-Z0-9\\_\\$]+
[^a-zA-Z0-9\\_\\.]
[^A-Za-z0-9\\_\\.]+
[^a-zA-Z0-9\\_\\-\\.\\ \\(\\)]
[^A-Za-z0-9\\_\\-\\.\\:\\,\\/\\@\\\\]
[^A-Za-z0-9\\_\\-\\.\\:\\,\\/\\@\\x1b\\x80-\\xfe]
[^A-Za-z0-9\\_\\-\\s]
[^A-Za-z0-9\\_\\-\\s']
[^A-Za-z0-9\\_\\-]
[^a-zA-Z0-9\\_\\-]
[^a-zA-Z0-9\\\\_\\\\-]+
[^a-zA-Z0-9\\_]
[^A-Za-z0-9\\_]
[^a-zA-Z0-9\\_-]
[^a-zA-Z0-9\\\\\\_]+
[^a-zA-Z0-9\\_]+
[^A-Za-z0-9\\_|+.-]
[^a-zA-Z0-9\\s\\/\\-\\_\\.\\:\\\\]
[^A-Za-z0-9\\s]\\s+(?P<SERVICE>\\S+)\\s+-\\s+(?P<DESCRIPTION>\\S.*\\S)
[^a-zA-Z0-9_, +-./\\\\]
[^A-Za-z0-9_/\\\\]
[^a-zA-Z0-9-_\\\\]
[^a-zA-Z0-9_\\\\+/-\\\\]
[^a-zA-Z0-9_\\p{PosixSpace}-]+
[^a-zA-Z0-9_\\\\x24\\.]\\Q$block_var\\E[^a-zA-Z0-9_\\\\x24:]
[^a-zA-Z0-9_\\\\x24\\.]\\Q$short_id\\E[^a-zA-Z0-9_\\\\x24:]
[^a-zA-Z0-9_\\x7F-\\xFF\\\\]+
[^a-zA-Z0-9_](?P<call>check_relation)\\s*(?P<parameters>\\()
[^internal:
[^p{Ll}\\p{Lu}\\pL\\pN]
[^x00-xff]*??[^x00-xff]*
[_$><\\\\[\\\\].,\\\\+-/'%^&*()!\\\\\\\\]+
[_:.\\/\\\\]
[_\\\\]
[_-\\s]+
[-_]\\K(\\p{Ll})
[_]_\"(?:[^\"\\\\]+|\\\\.)+\"
[_^]|\\\\(begin\\{array\\}|frac|sqrt|stackrel)
[-_~:|{}*\\\\]
[_a-z0-9]+ (tox_[\\_a-z]+\\()
[`$\\\\]
[`%\\+=\\{\\}\\|\\\\.<>\\/\\_]+
[`\"'][^`\"']*[`\"'](*SKIP)(*FAIL)|utf8mb4
[`\\\\]
[`\\\\]|\\$\\{
[`\\>\\#\\*\\_\\-\\+]
[{,](?:\"((?:[^\"\\\\]|\\\\.)*)\"|(NULL)|([^,}]+))
[{}\\\\]
[|!%$?~+:\\-.=</>\\\\]+
[|!%$?~+:\\-.=<\\/>\\\\]+
[|!@#$%&*\\/=?,;.:\\-_+~^\\\\]
[|()\\[{.+*?$\\\\]
['|\"](
['|\\/|\\\\]
[|\\\\]
[~!@#\\$%\\^&\\*\\(\\)\\+`\\-={}\\[\\]:;<>\\?,\\.\\/\\|\\\\]
[+ $self->{on_submit_function} +];if (s) { v
[+\\-]?\\d+(?:\\.\\d*)?|\\p{IsAlpha}+
[+-\\d.]+[pw]x
[+-]?(?:[0-9]+\\.[0-9]*
[-+]?\\b[0-9]+(((\\.[0-9])?+([eE][-+]?[0-9]+)?)|((\\.[0-9]+)?[eE][-+]?[0-9]+))[M]?\\b
[+-]?\\d+(_
[+-]?\\d++
[+-]?\\d++(?!\\.)
[+-]?\\d++(?:e\\d+)?\\z
[<+>,;&#\\\\xXuU\\n    ]
[<+>,;&#\\\\xXuU\\n\t]
[<>&\"'=\\\\]
[<>()\\\\]
[<>\"'%;()&\\\\]|\\.\\./
[<>\\\"\\&\\\\]
[<>\\\\] 
[<>{}\"`^| \\\\]
[<>|*?/\\\\]
[<>|*?\\\\]
[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]
[-=]>|<[-=]| -- |\\p{Word}--\\p{Word}|\\*\\*|\\.\\.\\.|&\\S+;|\\{\\p{Word}[\\p{Word}-]*\\}|(?:https?|ftp):\\/\\/\\p{Word}|\\((?:C|R|TM)\\)
[-=]>|<[-=]|\\.\\.\\.|\\{\\p{Word}[\\p{Word}-]*\\}
[0-9??????????]+(????|??[?????])
[0-9\\-\\.\\_a-z]+@[0-9\\-\\.a-z]+\\.[a-z]+
[0-9\\-\\\\]
[0-9\u00ef\u00bc\u0090-\u00ef\u00bc\u0099]*[\\p{Han}\u00e3\u0082\u00b1\u00e3\u0083\u00b6]
[0-9]?[0-9]{3}(?=?)
[0-9][9][0-9]+)
[0-9]{2}(?=?)
[0-9a-f]{2}+(:[0-9a-f]{2}+){15}+
[0-9a-fhttp:\\\\]*
[0-9a-z\\._\\/\\\\]+
[0-9a-z_$\\\\]
[1-\\s35]+
[123]?\\\\d-(
[A]([.]|\\w)([.]|\\w)([.]|\\w)([.]|\\w)([.]|\\w)\\s(?P<format>\\S{3,20})\\s
[A]([.]|\\w)([.]|\\w)([.]|\\w)([.]|\\w)([.]|\\w)\\s(?P<format>\\w{3,20})\\s
[abfnrtv\"'&\\\\]
[AD ]: ?(?P<avgdatum>\\d{2,4}\\-[01]\\d\\-\\d{2})
[AD][:-] ?(?P<malnr>\\d+\\-\\d+)
[a-f0-9]{8}[a-f0-9]{4}(?P<version>[1-5])[a-f0-9]{3}(?P<variant>[89ab])[a-f0-9]{3}[a-f0-9]{12}
[a-f0-9]{8}-[a-f0-9]{4}-(?P<version>[1-5])[a-f0-9]{3}-(?P<variant>[89ab])[a-f0-9]{3}-[a-f0-9]{12}
[ai]\\Kble
[a-z
[A-Z \\_]
[a-z&&
[A-Z\\_\\.\\-]+\\s*:
[a-z\\_][a-z0-9\\_]*
[a-z\\_]+
[a-z\\d\\_\\-]{1,}
[a-z\\d\\+\\-\\.\\_]+
[a-z\\d][-\\w.+!
[a-z\\p{Lowercase}]
[A-Z]([a-z0-9]*+)
[a-z]:[\\\\].*
[A-Z]:\\\\
[A-Z]?[a-z]+|[A-Z]+|[-+\\d]+|[!\"
[a-z][A-Z]|\\s*\\-\\s*|\\s*\\/\\s*|\\s*\\:+\\s*|\\s*\\_\\s*|\\s+
[a-z][a-z0-9\\-\\_]+
[a-z][a-zA-Z\\d@_]*+
[A-Z]\\:\\\\
[a-z]\\K([A-Z])
[A-Z]{1}\\:\\\\
[a-z]{2,3}\\_[A-Z]{2,3}$
[a-z]{2}_?+[a-zA-Z]{2}
[a-z]{6,8}+
[a-z]+(\\d+\\_*\\d*)
[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+
[a-z]+:(\\/|\\\\)
[a-z]++\\K(?=[A-Z])|[A-Z]++\\K(?=[A-Z][a-z])
[a-z_\\u0080-\\uFFFF\\\\]
[a-z_\\u00A0-\\uFFFF\\\\]
[a-z0-9!
[a-z0-9\\$\\_]
[a-z0-9\\-\\_\\/\\!]
[a-z0-9\\-\\_\\/]{3,}
[a-z0-9\\_\\-\\.]+
[a-z0-9\\_]
[a-z0-9\\_]+
[a-z0-9]{1,12}\\-(19|20)\\d\\d\\-[a-z0-9]{1,12}|[\\.\\-\\(\\[_ ]\\d{2,3}k[\\.\\-\\)\\]_ ]|\\((192|256|320)\\)|(320|cd|eac|vbr).+mp3|(cd|eac|mp3|vbr).+320|FIH\\_INT|\\s\\dCDs|[-._ ]MP3[-._ ]|MP3\\-\\d{3}kbps|\\.(m3u|mp3)\"|NMR\\s\\d{2,3}\\skbps|\\(320\\)\\.|\\-\\((Bootleg|Promo)\\)|\\.mp3$|\\-\\sMP3\\s(19|20)\\d\\d|\\(vbr\\)|rip(192|256|320)|[-._ ](CDR|SBD|WEB).+(19|20)\\d\\d
[a-z0-9_.\\/\\\\]plugins[a-z0-9_.\\/\\\\]*$
[a-zA0-9\\-_\\s()\\\\]*
[a-zA-Z\\-\\\\]
[a-zA-Z\\-\\_\\/]
[a-zA-Z\\\\]
[a-zA-Z\\_\\:][a-zA-Z0-9\\_\\-\\.\\:]*
[A-Za-z\\_\\@\\[]
[a-zA-Z\\_]+=None,
[a-zA-Z\\_+]\\.(bmp|png)
[a-zA-Z\\_+]_*(\\d+)x(\\d+)_*([a-zA-Z]*)\\.(bmp|png)
[A-Za-z]:(?:\\\\
[A-Za-z]:\\\\\\\\
[a-zA-Z]:\\\\
[A-Za-z]:\\\\
[a-zA-Z]:\\\\([^\\\\]+\\\\?)*
[a-zA-Z]:\\\\|\\\\\\\\
[a-zA-Z][a-zA-Z0-9\\.\\_]*
[A-Za-z]\\w+\\\\
[a-zA-Z]{1,32}*
[a-zA-Z]+(\\_*[a-zA-Z0-9]+)*$
[a-zA-Z]+\\s[0-9A-Za-z\\.]+[-][0-9]+[\\p{Han}a-zA-Z0-9 \\(\\)\\/~]
[a-zA-Z_][0-9a-zA-Z_+-]*|[0-9+-][0-9a-zA-Z_.+-]*|\"([^\"\n\\\\]|\\\\.)*(\"|\\\\?$)|'([^'\n\\\\]|\\\\.)*('|\\\\?$)
[a-zA-Z_0-9\\$\\_.#]
[a-zA-Z_0-9\\$\\_\\ \\(\\)\\[\\]\\/@]
[a-zA-Z_0-9\\$\\_]
[a-zA-Z0-9 \\.,\\_-]{1,20}
[a-zA-Z0-9 \\.,\\_-]{1,255}
[a-zA-Z0-9 \\.,\\_-]{1,256}
[a-zA-Z0-9!@
[a-zA-Z0-9:\\-_\\.\\\\]+
[A-Za-z0-9\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~]+
[A-Za-z0-9\\&\\_]+?(?:\\:|\\?\\:)
[a-zA-Z0-9\\.\\/\\_\\-]
[a-zA-Z0-9\\.\\_\\-\\(\\)]{1,90}
[a-zA-Z0-9\\-\\\\]
[a-zA-Z0-9\\-\\_\\%]+
[a-zA-Z0-9\\-\\_\\.]+
[A-Za-z0-9\\-\\_\\:\\.]+
[a-zA-Z0-9\\-]+:\\p{Print}+
[a-zA-Z0-9\\_\\.\\/]+
[a-zA-Z0-9\\-_\\.]*+=+[^\\r\\n]*
[A-Za-z0-9\\_\\-\\!\\#\\$\\%\\&'\\*\\+\\/\\=\\?\\^\\`\\{\\|\\}\\~]
[A-Za-z0-9\\_\\\\]
[a-zA-Z0-9\\_]
[a-zA-Z0-9\\\\_]+
[A-Za-z0-9]_[A-Za-z0-9]+\\:\\:[A-Za-z0-9\\_\\-\\.]+
[a-zA-Z0-9_]+\\_\\_[a-z0-9_]+
[Bb]asic (?P<encoded>\\S+)
[Bb]earer (?P<token>\\S+)
[btnfr\\\"\\\\]
[Cc]larke\\_18
[Cc]ontent-length:\\s?(?P<len>\\d+)
[Error].*FEED\\[<=>[^\\]*\\].*engine
[Error].*FEED\\[<=>[^\\]*\\].*feed.*stale
[Fatal].*FEED\\[<=>[^\\]*\\].*feed.*stale
[Ff]ile: (?P<filename>.+\\.patch)
[IFDV]?(?P<size>\\d+)[SU]?
[Incorrect arguments for 
[Invalid Regex
[LuU8]?('([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'|\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")
[MLHVZCSQTA](([\\s,]*([\\d\\.\\_]+)+)*)
[Pers|Ta].*+
[rR]?'([^\\n'\\\\]|\\\\.)*'|[rR]?\"([^\\n\"\\\\]|\\\\.)*\"
[rtspRTSP:/]+(?P<ip>(\\d{1,3}\\.){3}\\d{1,3})(:(?P<port>\\d+))?(?P<target>.*)
[Ss](?P<season>\\d+)\\.?[Ee](?P<episode>\\d+)
[uU]?(?P<q>['\"]).*?(?<!\\\\)(?P=q)
[uU][rR][lL]\\(\\s*((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\\\"\\'\\r\\n\\)\\s])+)
[uU][rR][lL]\\(\\s*\\\"((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\\\"\\r\\n])+)\\\"
[uU][rR][lL]\\(\\s*\\'((\\\\([^0-9a-fA-F]+|[0-9a-fA-F]+\\s*)|[^\\'\\r\\n])+)\\'
[V]([.]|\\w)([.]|\\w)([.]|\\w)([.]|\\w)([.]|\\w)\\s(?P<format>\\S{3,20})\\s
[V]([.]|\\w)([.]|\\w)([.]|\\w)([.]|\\w)([.]|\\w)\\s(?P<format>\\w{3,20})\\s
[v=\\s]*(
[Warn].*FEED\\[<=>[^\\]*\\].*feed.*stale
[x\\*\\.\\_]
[x\\P{ASCII}]+
[xtcs]i\\K[ao]([ln])
[z-a]
\\
\\\\
\\\\\\\\
\\\\\\\\\\\\
'\\\\
#NÁZEV?
\\\\ [^\\\\]+ \\\\ \\.\\.(?=\\\\) 
\\!(?<_1>\\[)(?<_2>(?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(?<_3>\\])[ ]?(?<_4>\\[)(?<_5>.*?)(?<_6>\\])
\\!(\\[)((?<square>[^\\[\\]\\\\]|\\\\.|\\[\\g<square>*+\\])*+)(\\])[ ]?(\\[)(.*?)(\\])
\" ((?:[^\\x0-\\x1f\"\\\\] |\n                                   # escaped special characters:\n                                  \\\\[\"\\\\\\/bfnrt] |\n                                  \\\\u[0-9a-fA-F]{4} |\n                                   # match all but escaped special characters:\n                                  \\\\[\\x20-\\x21\\x23-\\x2e\\x30-\\x5b\\x5d-\\x61\\x63-\\x65\\x67-\\x6d\\x6f-\\x71\\x73\\x75-\\xff])*)\n                              \"
\" ((?:[^\\x0-\\x1f\"\\\\] |\n                                  \\\\[\"\\\\\\/bfnrt] |\n                                  \\\\u[0-9a-fA-F]{4} |\n                                  \\\\[\\x20-\\xff])*)\n                              \"
\"%~dp0\\\\([^\"]+?)\"\\s+%[*]
\"%~dp0\\\\node\\.exe\"\\s+\"%~dp0\\\\(.*)\"\\s+%\\*
\\\"(
\"(
\"((?:[^\"\\\\]|\\\\.)*)\"
\\\"((?:[^\\\"\\\\]|\\\\.)*)\\\"
\"((?:[^\"\\\\]|\\\\.)*)\"|'((?:[^'\\\\]|\\\\.)*)'
\"((?:[^\"\\\\]|\\\\.)+)\"\\s*=\\s*\"((?:[^\"\\\\]|\\\\.)*)\"
\"((?:[^\"\\\\]+|\\\\.)*)\"
\"((?:[^\\\"\\\\\\n\\r]|
\\\"((?:[^\\n\\r\\f\\\\\"#]|#(?!\\{)|
\\\"((?:[^\\n\\r\\f\\\\\"]|\\\\
\"((?:[^\\n\\r\\f\\\"]|\\\\(?:\\$|\\n|[0-9a-fA-F]{1,6}\\s?))*)(:?\"|$)
\"((?:\\\\.|[^\"\\\\])*)\"
\"((?:\\\\.|[^\"\\\\])*)\",?
\"((?:\\\\.|[^\\\\])*)\"
\"((?:\\\\[\"nrbt\\\\\\\\\\\\$]|[^\"\\\\])*)\"(.*)
\"((?:\\\\[\"nrbt\\\\\\\\\\\\@]|[^\"\\\\])*)\"(.*)
\"(([^\"\\\\]|\\\\.)*?)\"
\"(.+)(?<!\\\\)\"=>(NULL|\"\"|\".+(?<!\\\\)\"),?
\"(:?[^\\\\\"]|\\\\(:?[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"
\"(?!\\\\)
\"(?:
\"(?:(?:
\"(?:(?:\"\")++|[^\"\\x5c]++|\\x5c.])*+\"|'(?:(?:'')++|[^'\\x5c]++|\\x5c.)*+'
\"(?:.(?!(?<!\\\\)\"))*.?\"
\"(?:[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|'(?:[^'\\\\]*(?:\\\\.[^'\\\\]*)*)'
\"(?:[^\"\\\\]*|\\\\.)*\"
\"(?:[^\"\\\\]|\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4}))*\"
\"(?:[^\"\\\\]|\\\\.)*?\"
\"(?:[^\"\\\\]|\\\\.)*\"
\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'
\"(?:[^\"\\\\]|\\\\.)*\"|'[^']*'|[^'\"\\s]\\S*[^'\"\\s]?
\"(?:[^\"\\\\]|\\\\[\"\\\\\\/bfnrt]|\\\\u[0-9a-fA-F]{4})*\"
\"(?:[^\"\\\\]++|\\\\.)*+\"|'(?:[^'\\\\]++|\\\\.)*+'|(?<=^|[\\s,])(?:NULL|TRUE|FALSE|DEFAULT|DIV|AND|OR|XOR|NOT|IN|IS|BETWEEN|R?LIKE|REGEXP|SOUNDS\\s+LIKE|MATCH|AS|CASE|WHEN|THEN|END|ASC|DESC|BINARY)(?=$|[\\s,])|(?<=^|[\\s,])COLLATE\\s+\\w++|(?<=^|[\\s,])USING\\s+\\w++|`[^`]*+`|([^\\s,\\.`'\"()]*[a-z_][^\\s,\\.`'\"()]*)
\"(?:[^\"\\\\]++|\\\\.)*+\"|'(?:[^'\\\\]++|\\\\.)*+'|\\b(?:NULL|TRUE|FALSE|DEFAULT|DIV|AND|OR|XOR|NOT|IN|IS|BETWEEN|R?LIKE|REGEXP|SOUNDS\\s+LIKE|MATCH|AS|CASE|WHEN|THEN|END|ASC|DESC|BINARY)\\b|\\bCOLLATE\\s+\\w++|\\bUSING\\s+\\w++|TRIM\\s*\\((?:BOTH|LEADING|TRAILING)|`[^`]*+`|(\\d*[a-z_]\\w*\\b)(?!\\s*\\()
\"(?:[^\"\\n\\\\\\r\\u2028\\u2029]|\\\\(?:['\"\\\\bfnrtv\\n\\r\\u2028\\u2029]|\\r\\n)|\\\\x[0-9a-fA-F]{2}|\\\\u[0-9a-fA-F]{4}|\\\\[^0-9ux'\"\\\\bfnrtv\\n\\\\\\r\\u2028\\u2029])*\"|'(?:[^'\\n\\\\\\r\\u2028\\u2029]|\\\\(?:['\"\\\\bfnrtv\\n\\r\\u2028\\u2029]|\\r\\n)|\\\\x[0-9a-fA-F]{2}|\\\\u[0-9a-fA-F]{4}|\\\\[^0-9ux'\"\\\\bfnrtv\\n\\\\\\r\\u2028\\u2029])*'
\"(?:[^\\\"\\\\\\n\\r]|
\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"
\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"
\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"
\"(?:[^\\\\\"]|\\\\(?:[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"
\"(?:[^\\\\]|\\\\.)*?\"
\"(?:[^\\n\\\\\"]+|\\\\\\n|
\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)
\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"
\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"
\"(?:\\\\.|[^\"\\\\])*\"
\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)
\\\"(?:\\\\.|[^\\\"\\\\])*\\\"|\\'(?:\\\\.|[^\\'\\\\])*\\'
\"(?:\\\\?[^\\\\])*?\"
\"(?:\\\\[\"\\\\]|[^\\n\"\\\\])*\"
\"(?:\\\\[\"\\\\rn]|[^\"\\\\])*?\"
\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"
\"(?<!\\\\)
\"(?<table>[\\w\\\\]+)\"\\.\"(?<field>\\w+)\"
\"(?=.*\\p{IsWord})
\"(?=[
\"(?>[^\"\\\\]+|\\\\{2}|\\\\.)*\"
\\\"(?P<desc>.*)\\\" *(?P<scope>EXACT|BROAD|NARROW|RELATED)? *(?P<syn_type>[^ ]+)? \\[(?P<xref>.*)\\]
\"(?P<key>.*?)\" = \"(?P<value>.*?)\";
\\\"(?P<l_name>.+)\\\"\\ \\-\\-\\ \\\"(?P<r_name>.+)\\\"\\ \\[taillabel\\=\\<\\<FONT\\>(?P<l_card>.+)\\<\\/FONT\\>\\>\\,headlabel\\=\\<\\<FONT\\>(?P<r_card>.+)\\<\\/FONT\\>\\>\\]\\;
\"(?P<Major>\\d*?)\\.(?P<Minor>\\d*?)\\.(?P<Patch>\\d*?)\"
\"(?P<name>[^\"]*?)\"\\s*:\\s*{
\\\"(?P<redirect_url>.*)\\\"
\"(?P<start_node>[^\\s\"]+)\"(:\"(?P<start_port>[^\\s\"]+)\")?\\s*->\\s*\"(?P<end_node>[^\\s\"]+)\"(:\"(?P<end_port>[^\\s\"]+)\")?.*
\"(?P<title>[^\"]+)\"
\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"
\\\"([^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*)\\\"
\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'
\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"|'([^'\\\\]*(\\\\.[^'\\\\]*)*)'
\"([^\"\\\\]|\\\\.)*$
\"([^\"\\\\]|\\\\.)*\"
\"([^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)*'|\\|\\||[|:]|[^\\s|:\"'][^|:\"']*[^\\s|:\"']|[^\\s|:\"']
\"([^\"\\\\]|\\\\[\"\\/\\\\bfnrt]|\\\\u[0-9a-fA-F]{4})*\"
\"([^\"\\\\]+|\\\\{2}|\\\\.)*\"
\"([^\\\"\\\\\\n\\r]|
\"([^\\\\\\\"\\n]|\\\\[\\\\\"\\'nrbtfav\\?]|\\\\[0-7]{1,3}|\\\\x[0-9a-fA-F]+|\\\\[uU]([0-9a-fA-F]{4})([0-9a-fA-F]{4})?)*\"
\"([^\\\\\"]*(?:(?:\\\\\"|\\\\)[^\\\\\"]*)*)\"
\"([^\\n\\r\\f\"]|\\n|\\r\\n|\\r|\\f|[^\\0-\\177]|\\\\[0-9A-Fa-f]{1,6}(\\r\\n|[\\s])?|\\\\[^\\n\\r\\f0-9A-Fa-f])*(?<!\\\\)(?:\\\\{2})*\"|'([^\\n\\r\\f']|\\n|\\r\\n|\\r|\\f|[^\\0-\\177]|\\\\[0-9A-Fa-f]{1,6}(\\r\\n|[\\s])?|\\\\[^\\n\\r\\f0-9A-Fa-f])*(?<!\\\\)(?:\\\\{2})*'
\\\"([a-zA-Z\\_ ]*)\\\"
\"(\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"
\"(\\\\.|[^\"\\\\])*\"
\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'|[\\[\\]]
\"(\\\\.|[^\\\\])*?\"
\"(\\\\\\\\|\\\\.|[^\"\\\\])*\"
\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|(null))\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?
\"(\\w+)\":\\Q$substr
\"(C:)?(\\/|\\\\)[^\"]+(\\/|\\\\)([^\"\\/\\\\]+)\"
\"(C:\\\\\\\\projects\\\\\\\\(?:(?!\":\\[).)+)
\"(https:\\/\\/github.com\\/
\".*?(?<!\\\\)\"
\".*?[^\\\\]\"|'.*?[^\\\\]'
\".*?\"(,\\s)??\"(?P<module>.*?)\"\\)$
\".*?_(?P<type_>.+)\":\\s+(?P<class_>resource|data)
\".+?(\\\\[^\"bfnrt/\\\\u])
\"?(?:files|sources)\"?:\\s*(?P<videos>\\[.+?\\])
\"[:space:]*\\\\.(?P<cc>.*)\\\\.[:space:]*\"
\\\"[^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*\\\"
\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"
\"[^\"\\\\]*(?:\\?)[^\"\\\\]*\"|'[^'\\\\]*(?:\\?)[^'\\\\]*'|(\\?)
\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'
\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|`[^`\\\\]*(?:\\\\[\\S\\s][^`\\\\]*)*`
\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\"
\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\"|'[^'\\\\]*(\\\\.[^'\\\\]*)*'
\"[^\"\\\\]*+(\\\\.[^\"\\\\]*+)*+\"|'[^'\\\\]*+(\\\\.[^'\\\\]*+)*+'
\"[^\"\\\\{]*{.*[^\\\\]\"
\"[^\"\\n\\\\]*(?:\\\\[\\S\\s][^\"\\n\\\\]*)*\"|'[^'\\n\\\\]*(?:\\\\[\\S\\s][^'\\n\\\\]*)*'
\\\"[^\\\"]+\\\"\\s*<\\Q$1\\E>
\"[^\"]++\"|'[^']++'|\\([^)]++\\)|[^,]++
\"[^\\t\\n\\f\\r\\\\]*\"
\"\\\\
\\\"\\\\
\"\"\"((?:\"|\"\")?(?:[^\"\\\\]|
\"\"\"(?:(?:\"|\"\")?(?:[^\"\\\\]|
\"\"\"(?:(?:\"|\"\")?(?:[^\"\\\\]|#))*\"\"\"
\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"
\"\"\"[^]*?\"\"\"
\"\"\"|'''|\\/\\/\\/|###|[\"'`#[({\\\\]
\"\"|(\".*?[^\\\\])?\"
\"\\$\\(INST_BIN\\)\" \"\\$\\(DESTINSTALLBIN\\)\" \\\\
\"\\$\\(INST_BIN\\)\" \"\\$\\(DESTINSTALLSITEBIN\\)\" \\\\
\"\\$\\(INST_BIN\\)\" \"\\$\\(DESTINSTALLVENDORBIN\\)\" \\\\
\"\\$\\w++\"
\"\\$n\\$\" is \"name\" which doesn't match \\/\\(not\\)_\\(\\\\1\\)\\/
\\\\\"\\{\\\\i\\}
\"\\\\\\\\Important\"\\s*
\"\\\\\\\\Inbox\"
\\\"\\\\u\\{(.+)\\}\\\"
\"_index\":\"(
\"|.*?[^\\\\]\"
\"|\\\\
\\\\\"|\"(?:\\\\\"|[^\"])*\"|((^|[^\\\\])\\;.*)
\\\"|\\'|\\\\
\"|'|\\\\
\"|'|{{|\\\\
\"><img src=\"(?P<link>[^\"]*)\"
\"C:\\\\\\\\projects\\\\\\\\.*?\"
\"errors\":\\[\"(?P<error>.+)\"\\]
\\\"file\\\".+\\R\\s*
\"Magento\\\\\\\\SalesRule\\\\\\\\Model\\\\\\\\Rule\\\\\\\\Condition\\\\\\\\Product\",\"attribute\":\"(.*?)\"
\"mediaURL\":\"(?P<mediaURL>http.*?)\",(.*?)\"key\":\"(?P<key>.*?)\"
\"people\".\"name\" ILIKE '%\\\\%\\\\.\\\\_\\\\\\\\%'
\"people\".\"name\" NOT ILIKE '%\\\\%\\\\.\\\\_\\\\\\\\%'
\\\"proxy\\_ip\\\"\\:\\\"(.*?)\\\".*\\\"proxy\\_port\\\"\\:\\\"(\\d+)\\\"
\"qtk=(?P<qtk>\\S+)\";
\"qtv=(?P<qtv>\\S+)\";
\"roomId\":(?P<room_id>\\d+),
\\\"set\\_dbtype\\(this\\.form\\,\\'(prot|nucl)\\'\\)\\\"
\\\"sources\\\":\\[\\\"css\\\\\\\\ui\\.jqgrid\\.css\\\"\\],
\\\"sources\\\":\\[\\\"plugins\\\\\\\\css\\\\\\\\ui\\.multiselect\\.css\\\"\\],
\"team\":{\"id\":(?P<id>\\d+)
\"traceBack\": \"Traceback[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"
\"value\":\"foobar\\h+\"
\\# Projected DOS for atomic kind (?P<element>\\w+) at iteration step i = \\d+, E\\(Fermi\\) = [ \\t]* (?P<Efermi>[^\\t ]+) a\\.u\\.
\\\\# slash\n                   ($re)# the diacritic\n                   (\\s*)# optional space\n                   (# capture paren\n                     (?(?{$1 !~ m:[A-Za-z]$:})# code block condition (is not a letter?)\n                       \\pL # yes pattern\n                     | # no pattern\n                       (?(?{$2}) # code block condition (space matched earlier after diacritic?)\n                         \\pL # yes pattern\n                       | # no pattern\n                         [^A-Za-z]\n                       ) # close conditional\n                     ) # close conditional\n                     \\pM* # optional marks\n                   ) # capture paren\n                   
\\# Time: (
\\# User\\@Host\\: ([\\w-]+)\\[[\\w-]+\\] \\@ (
\\#(?:\\h{3}|\\h{6})
\\#([\\w\\-\\d\\_]+)\\b
\\#?\\\\(?:newline|space|.?)
\\#[a-zA-Z0-9\\-\\_]*
\\#\\#ALT=<\n            ID=(?P<id>[^,]+),\n            Description=\"(?P<desc>[^\"]*)\"\n            >
\\#\\#ALT=<\n            ID=(?P<id>[^,]+),\\s*\n            Description=\"(?P<desc>[^\"]*)\"\n            >
\\#\\#contig=<\n            ID=(?P<id>[^,]+),\n            .*\n            length=(?P<length>-?\\d+)\n            .*\n            >
\\#\\#contig=<\n            ID=(?P<id>[^,]+)\n            .*\n            >
\\#\\#contig=<\n            ID=(?P<id>[^>,]+)\n            (,.*length=(?P<length>-?\\d+))?\n            .*\n            >
\\#\\#FILTER=<\n            ID=(?P<id>[^,]+),\n            Description=\"(?P<desc>[^\"]*)\"\n            >
\\#\\#FILTER=<\n            ID=(?P<id>[^,]+),\\s*\n            Description=\"(?P<desc>[^\"]*)\"\n            >
\\#\\#FORMAT=<\n            ID=(?P<id>.+),\n            Number=(?P<number>-?\\d+|\\.|[AGR]),\n            Type=(?P<type>.+),\n            Description=\"(?P<desc>.*)\"\n            >
\\#\\#FORMAT=<\n            ID=(?P<id>.+),\\s*\n            Number=(?P<number>-?\\d+|\\.|[AGR]),\\s*\n            Type=(?P<type>.+),\\s*\n            Description=\"(?P<desc>.*)\"\n            >
\\#\\#FORMAT=<\n  ID=(?P<id>.+),\n  Number=(?P<number>-?\\d+|\\.|[AG]),\n  Type=(?P<type>.+),\n  Description=\"(?P<desc>.*)\".*\n  >
\\#\\#INFO=<\n            ID=(?P<id>[^,]+),\n            Number=(?P<number>-?\\d+|\\.|[AGR]),\n            Type=(?P<type>Integer|Float|Flag|Character|String),\n            Description=\"(?P<desc>[^\"]*)\"\n            >
\\#\\#INFO=<\n            ID=(?P<id>[^,]+),\\s*\n            Number=(?P<number>-?\\d+|\\.|[AGR])?,\\s*\n            Type=(?P<type>Integer|Float|Flag|Character|String),\\s*\n            Description=\"(?P<desc>[^\"]*)\"\n            (?:,\\s*Source=\"(?P<source>[^\"]*)\")?\n            (?:,\\s*Version=\"?(?P<version>[^\"]*)\"?)?\n            >
\\#\\#INFO=<\n  ID=(?P<id>[^,]+),\n  Number=(?P<number>-?\\d+|\\.|[AG]),\n  Type=(?P<type>Integer|Float|Flag|Character|String),\n  Description=\"(?P<desc>[^\"]*)\".*\n  >
\\#\\_(\\d+)$
\\#\\<Thread\\:0x\\h+(@[\\w\\/\\.\\-_]+\\:\\d+)?\\srun\\>
\\#\\<Thread\\:0x\\h+@bar(@[\\w\\/\\.\\-_]+\\:\\d+)?\\srun\\>
\\#\\<Thread\\:0x\\h+@foo(@[\\w\\/\\.\\-_]+\\:\\d+)?\\srun\\>
\\#\\F
\\\\#|[{}\\\\]
\\#nukeviet\\_rewrite\\_start(.*)\\#nukeviet\\_rewrite\\_end
\\#REDIRECT (?P<target>.*)
\\$(
\\$(?!\\\\)
\\$(?:
\\\\\\$(?:\n\t\t\t\t\t\t\\\\([\\$&`'])\n\t\t\t\t\t\t  |\n\t\t\t\t\t\t([1-9][0-9]?|0[0-9])\n\t\t\t\t\t)
\\$(?<cmd>
\\$(?P<bracket>{?)(?P<job>[[:word:]]+)(\\.(?P<variable>[[:word:]]+))?}?
\\$(?P<item>(?:\\$\\$|[^$])*)\\$(?:;|$)
\\$(?P<var_name>\\w+)
\\$(?P<var>\\w+)(\\.(?P<attr>\\w+))?
\\$([\\$&\\d])|\\\\([\\\\ULulEntr\\d])
\\$([\\w\\d\\_]+)
\\$([\\w]+)+\\Q.getDataValue()).get\\E([\\w]+)\\(\\)
\\$([^\\$]++)$
\\$([^\\/\\\\]*)(\\/)?
\\$([A-Z0-9\\_]+)
\\$([a-zA-Z\\_]+)
\\$([a-zA-Z0-9\\_]+)\\-\\>assign[\\s]*\\([\\s]*('|\")([a-zA-Z0-9\\_]+)('|\")[\\s]*\\,[\\s]*\\$(lang_module|lang_block|lang_global)[\\s]*\\)[\\s]*\\;
\\$:\\Q$i\\E
\\$[a-z_]\\w*+->[a-z_]
\\$[a-zA-Z\\-\\_0-9]+
\\$\\\\
\\$\\$(?!\\\\)
\\$\\$kameleon\\_data\\_dir\\/(.*)
\\$\\((
\\$\\(([a-zA-Z\\_]+)\\)
\\$\\_
\\$\\_\\-\\>\\{$tblname[0]\\.(\\w+)\\}
\\$\\_\\-\\>\\{$tblname[1]\\.(\\w+)\\}
\\$\\_\\W
\\$\\{$template_key<\\Q$loop_name\\E\\.\\Q$key_match\\E>\\}
\\$\\{(
\\$\\{(?P<expr>[^\\}]*)\\}
\\$\\{(?P<name>[^:-]+)(?:(?P<separator>:?-)(?P<default>.+))?\\}
\\$\\{([\\w\\d\\-\\_\\.]+)\\}
\\$\\{([^]*?)\\}
\\$\\{([a-zA-Z0-9\\-\\_\\.]*)\\}
\\$\\{([a-zA-Z0-9\\_]+)\\}
\\$\\{([a-zA-Z0-9\\_]+?)\\}
\\$\\{?(?i:ENV):RS_ATTACH_DIR\\}?[/\\\\]+([^\\t\\n\\f\\r \"]+)
\\$\\{?RS_ATTACH_DIR(?::=[^}]*)?\\}?[/\\\\]+([^\\t\\n\\f\\r \"]+)
\\$\\{[^\\}]++\\}
\\$\\{\\Q$ev\\E\\}
\\$\\{\\Q$keyValuePath\\E\\}
\\$\\{env.(?P<key>.+)\\}
\\$\\{terraform.(?P<key>[A-Za-z0-9_]+)\\}
\\$\\\\lbrace\\$
\\$\\Q$k\\E
\\$\\s*(
\\$\\s*\\^{(\\d+)}\\$(.*?)(\\$.*\\$)?\\s\\\\\\\\
\\\\$\\s*+\\*\\s*+([^\\\\$]++)
\\${\\Q$k\\E}
\\${TIME=(?P<fmt>[^}]*?)}
\\$|?|?|#|&#163;|&pound;|\\u00A3|\\u00A5|\\u20A9|(?:US|HK|A|C|NT|S|NZ)\\$
\\$|\\\\
\\\\$|\\\\(?=[\\\\'])
\\$|\\\\\\(|\\\\(eq)?ref\\s*\\{
\\\\\\$|\\\\`|\\\\\\\\
\\$|}|\\\\
\\$APPLICATION->SetTitle\\s*\\(\\s*'(.*?)(?<!\\\\)'\\s*\\);
\\$APPLICATION->SetTitle\\s*\\(\\s*\"(.*?)(?<!\\\\)\"\\s*\\);
\\$caption(\\((?P<cap_type>.*?)\\))*(\\[(?P<cap_options>.*?)\\])*(\\{(?P<cap>.*?)\\})*
\\$content(\\((?P<ctn_type>.*?)\\))*(\\[(?P<ctn_options>.*?)\\])*\\{(?P<ctn>.*)\\}
\\$content(\\((?P<ctn_type>.*?)\\))*(\\[(?P<ctn_options>.*?)\\])*\\{(?P<ctn>.*?)\\}
\\$ENV\\{[\"']?RS_ATTACH_DIR[\"']?\\}[/\\\\]+([^\\t\\n\\f\\r \"]+)
\\$include\\((?P<include>.*?)\\)
\\$lang\\_block[\\s]*\\[[\\s]*('|\")([a-zA-Z0-9\\_\\-]+)('|\")[\\s]*\\]
\\$lang\\_global[\\s]*\\[[\\s]*('|\")([a-zA-Z0-9\\_\\-]+)('|\")[\\s]*\\]
\\$lang\\_module[\\s]*\\[[\\s]*('|\")([a-zA-Z0-9\\_\\-]+)('|\")[\\s]*\\]
\\$nv\\_Lang\\-\\>get([Global|Module|Block]*)\\(([^\\)]+)\\)[\\s]+\\=
\\$REDIRECT\\_OPTIONS\\ {0,}\\{(\\'|\\\")?file(\\'|\\\")?\\}\\ {0,}\\=\\ {0,}(\\'|\\\")?([^\\'\\\"\\;\\n]{1,})(\\'|\\\")?\\;{0,}\\n
\\$REDIRECT\\_OPTIONS\\ {0,}\\{(\\'|\\\")?home(\\'|\\\")?\\}\\ {0,}\\=\\ {0,}(\\'|\\\")?([^\\'\\\"\\;\\n]{1,})(\\'|\\\")?\\;{0,}\\n
\\$Revision:\\s+(?P<revision>\\d+)\\s*\\$
\\$style\\[(?P<style>.*?)\\]
\\$t\\(\\s*(['\"])(.*?[^\\\\])\\1.*?[),]
\\$table(?P<env>.*?)\\$endtable
\\$this\\-\\>add\\(new Command\\\\CompileCommand\\(\\)\\)\\;\\s*
\\$this->(?:getEnv\\('(?:\\w++:)*+\\w++'\\)|targetDirs\\[\\d++\\])
\\$toc(\\((?P<deep>[1-3])\\))*
\\$VAR1 = \\\\
\\$YOPLAYER\\('liveStitching', {.+?file: '(?P<video_url>[^\\\"]+?)'.+?}\\);
\\\\%|\\\\_
\\&([a-z\\_0-9\\-]+)\\=([a-z\\_0-9\\-/]+)
\\&([a-z\\_0-9\\-]+)\\=([a-z\\_0-9\\-]+)
\\&([a-z\\_0-9]+)\\=([a-z\\_0-9]+)
\\&?\\_method\\=put
\\( (\\pL[\\pL']*) 
\\\\( |\\{|\\})
\\\\($ACCENTS_RE)(\\p{L}\\p{M}*)
\\\\($ACCENTS_RE)\\{(\\p{L}\\p{M}*)\\}
\\\\($cmd_re)(\\{.*)
\\\\($DIAC_RE)\\s*\\{(\\p{L}\\p{M}*)\\}
\\\\($DIAC_RE)\\s+(\\p{L}\\p{M}*)
\\\\($re)(?: \\{\\}|\\s+|\\b)
\\\\($re)(?:\\{\\}|\\s+|\\b)
\\\\($re)\\s*\\{(\\pL\\pM*)\\}
\\\\($u|System|\u00d1\u00c8\u00d1\u00d2\u00c5\u00cc\u00c0|Administrator|\u00c0\u00e4\u00ec\u00e8\u00ed\u00e8\u00f1\u00f2\u00f0\u00e0\u00f2\u00ee\u00f0)
\\\\($unescape)
\\\\(%[mMdDfFxX])
\\((
\\((.+?)\\)[ \\t]+\\Q$domain\\E\\x0d?\\x0a
\\((?:(?P<type>[^:)]+):)?(?P<name>[\\w_]+)\\)
\\((?:[^()\\\\]|\\\\.)*\\)
\\((?:[^()]+|(?R))*+\\)
\\'((?:[^\\n\\r\\f\\\\'#]|#(?!\\{)|
\\'((?:[^\\n\\r\\f\\\\']|\\\\
\\((?:\\.\\.\\.|?)\\)
\\\\((?:\\r\\n)|\\n)
\\((?>[^()]|(?R))*\\)
\\((?>[^()]+|(?R))*\\)
\\((?>[^\\(\\)\\\\]+|\\\\{2}|\\\\.)*\\)
\\((?P<anomer>[abo?])\n                             (?P<child_linkage>[0-9?/]+)->?\n                             (?P<parent_linkage>[0-9?/]+)?\\)?
\\\\((?P<class>[\\\\w-_\\\\. ]+)?(?:#(?P<id>[\\\\w-_]+))?\\\\)
\\((?P<flags>.*?)\\) \"(?P<delimiter>.*)\" (?:\\{.*\\})?(?P<name>.*)
\\((?P<flags>.*?)\\) \"(?P<delimiter>.*)\" (?P<name>.*)
\\((?P<host>[0-9,]+),(?P<port1>[0-9]+),(?P<port2>[0-9]+)\\)
\\((?P<child_linkage>[0-9?/]+)->?(?P<parent_linkage>[0-9?/]+)?\\)?
\\((?P<id>\\d{4,})\\)
\\((?P<name>[EW]\\d\\d\\d)\\)
\\((?P<statusOther>[a-zA-Z ,]*)\\)
\\((?P<text>[^\\)]*)\\)
\\((?P<votes>[\\d,]+) votes\\)
\\(([]a-zA-Z\\-\\_\\.]+)\\,
\\(([^()]|(?R))*\\)
\\(([^\\(\\)\\\\]+|\\\\{2}|\\\\.)*\\)
\\\\(([0-6]{1,3})|u([a-f0-9]{4})|x([a-f0-9]{2})|\\n|.)
\\(([a-z\\_\\-]{2,})\\)
\\\\(([bfnrtv])|(u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{2})|([0-7]{1,3})|.)
\\\\((\\d\\d\\d)|[abtnvfr\"\\\\])
\\((\\d+)(?:,(\\d+))?+\\)
\\((\\s*SELECT\\s+((?:[^()]+|\\((?2)\\))*))\\)
\\((C:)?(\\/|\\\\)[^(]+(\\/|\\\\)([^(\\/\\\\]+)\\)
\\\\(')
\\\\(.)
\\\\\\\\(.)
\\\\(.){1}
\\\\(.)|(.)
\\\\(.)|([^\\\\\"]+)|(.)
\\\\(.)|(^!|[*?{}()[\\]]|\\(\\?)
\\\\(.)|(^!|\\*|[\\].+)]\\?|\\[[^\\\\\\]]+\\]|\\{[^\\\\}]+\\}|\\(\\?[:!=][^\\\\)]+\\)|\\([^|]+\\|[^\\\\)]+\\))
\\\\(.)|\"
\\\\(.)|\"(\")
\\\\\\\\(.)}
\\\\(.)}
\\\\(.*?)\\\\
\\\\(.?)
\\\\(.{1})
\\\\(.|[a-z]+)
\\\\(.|\\z)
\\\\(.+?)\\\\
\\\\(:?$)|{{
\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])
\\\\(:|;)
\\\\(?! )
\\\\(?!&amp;#|\\?#)
\\\\(?!(?<_1>x[a-fA-F0-9][a-fA-F0-9]|[0-2]\\d\\d|[bnrt'\"\\\\]|[\\|\\(\\)1-9$^.*+?\\[\\]]|$[ \\t]*))(?:.)
\\\\(?!(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\\d\\d|[bnrt'\"\\\\]|[\\|\\(\\)1-9$^.*+?\\[\\]]|$[ \\t]*))(?:.)
\\\\(?![:!#\\$\\%&*+.\\\\/<=>?@^\\|~-]+)
\\\\(?![{}])
\\\\(?![abfnrtv\\'\\?\"]|u[0-9a-fA-F]{4}|[0-7]{3}|x[0-9a-fA-F]{2})
\\\\(?!\")
\\\\(?!\\\\*\\\")
\\\\(?!\\[\\w+\\])
\\\\(?!\\|)
\\\\(?!\\d)\\w+
\\\\(?!=[ \\\\])
\\\\(?!g\\<[^>]*\\>)
\\\\(?!n)
\\\\(?!u[\\da-fA-F]{4}|x[\\da-fA-F]{2})(.)
\\(?(?P<code>[A-Z]{2})\\)?
\\\\(?:([
\\\\(?:([^0-9a-fA-F])|([0-9a-fA-F]{1,6})\\s?)
\\\\(?:([^u])|u(.{4}))
\\\\(?:([0-9a-f]{1,5})\\s?|([0-9a-f]{6})|([g-z]))
\\\\(?:([0-9a-fA-F]{1,6})\\s?|(.))
\\\\(?:([0-9a-fA-F]{6})|([0-9a-fA-F]{1,5})(?: |(?![0-9a-fA-F])))
\\\\(?:([abefnrstv])|([0-7]{3})|x([0-9a-fA-F]{2})|(.))
\\\\(?:([a-fA-F0-9]{1,6})|(.))
\\\\(?:([a-zA-Z]+(?:-?\\d+)?)[\\n\\r]|(.))
\\\\(?:([nevfbart\\\\])|0?x([0-9a-fA-F]{2})|u([0-9a-fA-F]{4}))
\\\\(?:(\\\\|'|\"|r|n|t|b|`)|u(.{4})|x(.{2}))
\\\\(?:(\\r\\n|\\n|\\r|\\f)|([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?)|(.)|$)
\\\\(?:(\\S[^\\s,;)}\\]]*)|(?:\\s+(?:#.*)?)*)
\\\\(?:(\\S[^\\s,;)}\\]]*)|\\s*)
\\\\(?:(0[0-7]{2})|(?:U([0-9a-fA-F]{4})))
\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\)(.)|([^\\]\\\\]))-(?:\\\\)?([^\\]]))|(\\])|(?:\\\\)?(.)
\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\)(.)|([^\\]\\\\]))-(?:\\\\)?([^\\]]))|(\\])|(?:\\\\)?([^])
\\\\(?:.|\\n)
\\\\(?:@control)
\\\\(?:[
\\\\(?:[$`\"\\\\]|$)
\\\\(?:[$abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})
\\\\(?:['\"?\\\\abfnrtv]|[0-7]{1,3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}U[a-fA-F\\d]{8}|.)
\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})
\\\\(?:[\"\\\\/bfnrt]|u[0-9a-fA-F]{4})
\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})
\\\\(?:[\"{}\\[\\]$\\\\])
\\\\(?:['\"abfnrtv\\\\]|z\\s*|x\\h\\h|\\d{1,3}|\\n)
\\\\(?:[\\\\abnrt\"]|[0-7]{1,3})
\\\\(?:['\\\\trn]|x[0-9a-fA-F]{2})
\\\\(?:[^&]|&[a-z]+;)|[\\@\\%\\&]?\\$*\\$(?:&[a-z]+;|[^A-Za-z:]|(?:::)?[A-Za-z](?:\\w|::)*)
\\\\(?:[^0-9A-Fa-f\\r\\n]|[0-9A-Fa-f]{1,6}[\\r\\n\\t ]?)
\\\\(?:[^a-z()[\\]]|[a-z*]+)
\\\\(?:[^a-zA-Z]|[a-zA-Z]+)
\\\\(?:[0\\\\tnr\"']|u{[a-fA-F1-9]{0,8}})
\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|[\\s\\S]
\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S])|[\\s\\S]
\\\\(?:[0-7]{1,3}|x[\\da-fA-F]{1,2}|.)
\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})
\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})
\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})
\\\\(?:[AzZbBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})?
\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})
\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})
\\\\(?:[nrt0'\"\\\\]|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{6}\\})
\\\\(?:[nrt0'\"]|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{6}\\})
\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})
\\\\(?:[ntvfa\\\\\"]|[0-7]{1,3}|\\x[a-fA-F\\d]{1,2}|)
\\\\(?:\\\"|')
\\\\(?:\\\\|')
\\\\(?:\\\\|[abefnprtv'\"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2})
\\\\(?:\\\\|\")
\\\\(?:\\\\|\"|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{2}|[0-7]{3}|\\r\\n|\\n|[\\s\\S])|\"
\\\\(?:\\\\|'|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{2}|[0-7]{3}|\\r\\n|\\n|[\\s\\S])|'
\\\\(?:\n                            [abefnrstv\\n]     |   # simple escapes (above)\n                            \\d{1,3}           |   # octal byte escape\n                            x[0-9a-fA-F]{1,2} |   # hex byte escape\n                            u[0-9a-fA-F]{4}   |   # unicode char escape\n                            u\\{[^}]*\\}        |   # extended unicode escape\n                            .                     # any other escaped char\n                          )
\\\\(?:\n              ((?:[0-3]?[0-7])?[0-7]) # $1 \\377 octal latin-1\n            |x([0-9a-fA-F]
\\\\(?:\n      \"                     (?
\\\\(?:\n\t\t([a-fA-F0-9]{1,6})(?:\\r\\n|[ \\n\\r\\t\\f])?\n\t\t  |\n\t\t([^\\n\\r\\f0-9a-f])\n\t\t  |\n\t\t(\\r\\n?|[\\n\\f])\n\t)
\\\\(?:\n\t\tu([0-9a-fA-F]{4})\n\t\t |\n\t\tx([0-9a-fA-F]{2})\n\t\t |\n                (\\r\\n?|[\\n\\x{2028}\\x{2029}])\n\t\t |\n\t\t([bfnrt])\n\t\t |\n\t\t(v)\n\t\t |\n\t\t([0-3][0-7]{0,2}|[4-7][0-7]?) # actually slightly looser\n\t\t |                    # than what ECMAScript v3 has in its\n\t\t(.)           # addendum (it forbids \\0 when followed by 8)\n\t)
\\\\(?:\\n|\\r\\n|\\r|\\f)
\\\\(?:\\r\\n?|\\n)
\\\\(?:\\r\\n|\\n|\\r)
\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?(?:[:=!]|<[=!])|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]
\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u(?:[\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]
\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??|[\\s\\S]
\\\\(?:backspace|formfeed|newline|return|space|tab|x[0-9A-Fa-f]{4}|u[0-9A-Fa-f]{4}|o[0-7]{3}|@symbolCharacter|[\\\\\"()\\[\\]{}])
\\\\(?:C\\-(@escape|.)|c(@escape|.)|@escape)
\\\\(?:i|j)\\b
\\\\(?:include|input)\\{([^}]*)\\}
\\\\(?:ruby|RUBY|Ruby)(\\{(?:
\\\\(?:ruby|RUBY|Ruby)\\{(?:
\\\\(?:u(.{4})|([^u]))
\\\\(?:u[0-9a-f]{4}|x[0-9a-f]{2}|.)
\\\\(?:u[0-9A-Fa-f]{4}|.|$)
\\\\(?:u\\{([0-9A-Fa-f]+)\\}|\\\\(*SKIP)(*FAIL))
\\\\(?:ud[89ab][0-9a-f]{2}\\\\ud[c-f][0-9a-f]{2}|u[0-9a-f]{4}|x[0-9a-f]{2}|.)
\\\\(?:x[0-9A-Fa-f]{1,2}|[0-7]{1,3})
\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})
\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])
\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|['\"\\\\\\/bfnrt])
\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)
\\\\(?:x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})
\\(?\\\\1\\)?
\\\\(?<_1>[0-7]{3}|\\\\x(?<_2>\\h\\h|\\{\\h{,8}\\}))
\\\\(?<_1>[ntrf\\\\'\"]|(?<_2>[0-7]{3}))
\\\\(?<_1>[uU](?<_2>\\h{4}|\\h{2})|\\d{1,3}|.)
\\\\(?<_1>\\\\|[abefnprtv'\"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2})
\\\\(?<_1>\\\\|[abefnprtv'\"?]|[0-3]\\d{,2}|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|&\\w+;)
\\\\(?<_1>\\\\|[abefnrtv'\"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-zA-Z0-9]+)
\\\\(?<_1>\\\\|[abfnrutv'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|[0-7]{3})
\\\\(?<_1>\\\\|[nrtbf\\(\\)]|[0-7]{1,3}|\\r?\\n)
\\\\(?<_1>\\\\|'|\\\"|a|b|c[A-Z]+|e|f|n|r|u0+[0-9,A-Z]+|v)
\\\\(?<_1>\\d{1,3}|x[a-fA-F0-9]+|u[a-fA-F0-9]{1,4}|.|\\n)
\\\\(?<_1>_form|_query|_request|globals|session)(?<_2>{(?<_3>\".+?\"|\\d+|\\$[\\w_]+)})+(?<_4>\\[\\[\\d+\\]\\])*
\\\\(?<_1>a|b|e|f|n|r|t|v|\\\\|')
\\\\(?<_1>NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\"'\\&])
\\\\(?<_1>u\\h{4}|.)
\\\\(?<_1>x[a-fA-F0-9][a-fA-F0-9]|[0-2]\\d\\d|[bnrt'\"\\\\])
\\\\(?<_1>x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)
\\\\(?<_1>x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)
\\\\(?<char>[^a-zA-Z0-9\\p{javaWhitespace}\\xa0\\u2007\\u202E\\u202F])
\\\\(?<name>\\w+)\\{(?<arg>[^\\}]+)\\}
\\\\(?=(($lexerPatterns{namedVarKernel})|($lexerPatterns{symVarKernel})))
\\\\(?=,)
\\\\(?=.)
\\'(?=[
\\\\(?=[*+?!.])
\\\\(?=[\\[\\]])
\\\\(?=[\\\\\\w]|$)
\\\\(?=[^\\\\])
\\\\(?=\\\\*\\\")
\\\\(?=\\S)
\\\\(?=u[a-fA-F\\d]{4})
\\\\(?>[^xcCM0-7]|(?>c|[CM].)(?>[^\\\\]|(?=\\\\))|(?>x.[0-9a-fA-F]?)|(?>[0-7]{1,3}))
\\\\(?i:[0-9]{1,3}|x[0-9a-f]{1,2}|.)
\\\\(?P<header_name>chapter|section|subsection) # Header\n                                    {(?P<header_contents>.*?)}
\\\\(?P<id>\\d+)
\\\\(@ESCHAR|[xX]@xdigit+|@digit+)
\\\\\\\\([
\\\\([
\\\\([ #,+\"\\\\<>;])
\\\\([ :=])
\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])
\\\\([ \"'\\\\$`(){}!#&*|])
\\\\([ \\t\\n])
\\\\([ \\t]*)(%.*)*\\n
\\\\([ \tn\\\\]|[0-7]{3,3})
\\\\([ '])
\\\\([ -~])
\\\\([!\\\"#$%&'()*+,-./:;<=>?@\\[\\\\\\]^_`{|}~])
\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])
\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])
\\\\([#$%&~_^{}])
\\\\([#;])
\\\\([#\"';\\\\])
\\\\([#=]\\{\\s*(.+?)\\s*\\})
\\\\([$\\\\\"#])
\\\\([$`\"\\\\\\n])
\\\\([$q\\\\])
\\\\([$quote\\\\])
\\\\([&?!])
\\\\([(),'\"\\s])
\\\\([()])
\\\\([*_~=`\\[])
\\\\\\\\([*~\\\\[!`\\\\\\\\])
\\\\([*~_^])
\\\\([,.])
\\\\([,;])
\\\\([,\\[\\]\\{\\}])
\\\\([.*+?^${}()|\\[\\]\\/\\\\])
\\\\([.[\\]])
\\\\([.\\[\\]])
\\\\([._-])
\\\\([:*])(\\w+)
\\\\([:,])
\\\\([:\",=*?])
\\\\([:\\\\])
\\\\([:=\\s])
\\\\([;,\\\\])
\\\\([[\\]])
\\\\([\\\\ $%&\\(\\)\\[\\]\\{\\}\\*|<>@?!])
\\\\([\\\\ \",=+<>#;]|[0-9a-fA-F]{2})\n           
\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])
\\\\([\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])
\\\\([\" ])
\\\\([\"' ])
\\\\(['\"() ])
\\\\([\\\\\",=+<>#;]|[0-9a-fA-F]{2})\n               
\\\\([\"'/])
\\\\(['\\\"?\\\\abfnrtv]|x[0-9a-fA-F]{2}|[0-7]{1,3}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|&\\w+;)
\\\\([\"'\\\\$`(){}!#&*|])
\\\\([\"'\\/])
\\\\([\"\\\\/bfnrt])
\\\\([\\\"\\\\])
\\\\([\"\\\\])
\\\\([\\\"'\\\\])
\\\\(['\"\\\\])
\\\\([\"\\'])
\\\\(['\"\\\\bfnrtv]|0(?![0-9])|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|(?=.)[^ux0-9])
\\\\([\\\\\\\"])
\\\\([\\\\\"])
\\\\([\"'])
\\\\([\\\\\"'])
\\\\([\\\"'])
\\\\(['\\\"])
\\\\(['\"])
\\\\(['\"])?
\\\\([\"`\\$\\\\])
\\\\(['\"`^~]){([aeiuon]) }
\\\\([\"'{}])
\\\\([\\\\\\\"abtnfrev])
\\\\([\\\\\"nrt])
\\\\([\\\\#\"abefnrstvx]|u\\d{4}|u\\{[^\\}]+\\}|\\d{1,3}|x\\d{1,2}|cx|C-[a-zA-Z]|M-[a-zA-Z]| |=|:)
\\\\([\\\\#\\*\\.\\[\\]\\(\\)\\+\\?\\^])
\\\\([\\\\#])
\\\\([\\\\\\$#])
\\\\([\\$\\\\\\\"#])
\\\\([\\$efnrtv\\\\\"])
\\\\([\\\\$end])
\\\\([\\\\$nrtfve]|[xX][0-9a-fA-F]{1,2}|[0-7]{1,3})
\\\\([\\\\$nrtfve]|[xX][0-9a-fA-F]{1,2}|[0-7]{1,3}|u\\{([0-9a-fA-F]+)\\})
\\\\([\\\\$quote])
\\\\([\\*\\?\\|\\[\\]\\(\\)\\{\\}])
\\\\([\\\\,;])
\\\\([\\\\.*_+`<>()\\[\\]{}#!:\\|\"'\\$=\\-~])
\\\\([\\\\.*_+`<>()\\[\\]{}#!:|\"'\\$=-])
\\\\([\\.\\?\\|\\(\\)\\[\\]\\{\\}\\^\\$\\*\\+\\-])
\\\\([\\.\\\\])
\\\\([\\/\"%;\\t\\\\])
\\\\([\\/\\{\\}\\$\\\\*])
\\\\([\\\\\\/])
\\\\([\\\\\\/]|u[[:xdigit:]]{4})
\\\\([\\\\\\/bfnrt]|(u[0-9a-fA-F]{4}))
\\\\(['\\?])
\\\\([\\\\\\@#])
\\\\([\\[\\(\\{\\}\\]\\)#\"])
\\\\([\\[\\(\\{\\}\\]\\)#<>\\-\\.\\=])
\\\\([\\[\\]\\$])
\\\\([\\[\\]\\.:])
\\\\([\\[\\]])
\\\\([\\[\\]{}%:])
\\\\([\\'\\\";:])
\\\\([\\'\\\"\\^])
\\\\([\\\\\\'\\\"])
\\\\([\\\\'\"])
\\\\([\\\\\\'\\\"nrt]|u\\h{4}|U00\\h[6])
\\\\([\\'\\$])
\\\\([\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])
\\\\([\\'\\\\])
\\\\([\\-\\+\\(\\)\\{\\}])
\\\\(['\\\\])
\\\\([\\\\'])
\\\\([\\\\\\]\\[\\|\\/=])
\\\\([\\\\\\]])
\\\\([\\\\`*_{}[\\]()#+\\-.!])
\\\\([\\\\`*_{}[\\]()<>#+\\-!|])
\\\\([\\{\\}\\\\])
\\\\([\\\\{}%])
\\\\([\\\\{}])
\\-([\\|\\/\\\\])
\\\\([\\\\\\>])
\\\\([\\015\"\\\\])
\\\\([\\\\abcefnrtvl\"\\']|\\n|x[a-fA-F0-9]{2}|[0-9]{1,3})
\\\\([\\\\abcefnrtvl\"\\']|x[a-fA-F0-9]{2}|[0-9]{1,3})
\\\\([\\\\abefnrstv#\"']|x[a-fA-F0-9]{1,2}|[0-7]{1,3})
\\\\([\\\\abfnrtv\"\\']|\\n|N\\{.*?\\}|u[a-fA-F0-9]{4}|U[a-fA-F0-9]{8}|x[a-fA-F0-9]{2}|[0-7]{1,3})
\\\\([\\\\abfnrtv\"']|x[a-fA-F0-9]{2,4}|[0-7]{1,3})
\\\\([\\d]+)
\\\\([\\da-f]{1,6}[\\x20\\t\\r\\n\\f]?|([\\x20\\t\\r\\n\\f])|.)
\\\\([\\da-f]{1,6}\\s?|(\\s)|.)
\\\\([\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|.)
\\\\([\\da-fA-F]{2}|[()\\\\*])
\\\\([\\da-fA-F]{3})
\\\\([\\da-fA-F]{4})\\s?
\\\\([\\n,])
\\\\([\\\\\\n\\r\\t\\b\\f\\{\\}\\\"\\'])
\\\\([\\\\nr]|[01][0-7]{2})
\\\\([\\Q$left$right\\\\\\E])
\\\\([\\Q$sel_meta_char\\E])
\\\\([\\\\s:])
\\\\([\\s\\S])
\\\\([\\s\\S])|(')
\\\\([\\s\\S])|(['\"])
\\\\([\\s\\S])|(\")
\\\\([\\sA-Za-z\\\\]|[0-7]{1,3})
\\\\([\\t !-~])
\\\\([\\\\trn\"])
\\\\([\\u0000-\\u007f])
\\\\([\\u000b\\u0020-\\u00ff])
\\\\([\\w@]+)
\\\\([\\w]+)
\\\\([\\w]+)$
\\\\([\\w]+)Command$
\\\\([\\w]+Bundle)$
\\\\([\\x00-\\x7f])
\\\\([\\x09\\x20-\\x7e\\x80-\\xff])
\\\\([^$])
\\([^()]++\\)
\\\\([^.]+)
\\\\([^/\"])
\\\\([^\"0-9])
\\\\([^\\[])
\\'([^\\\\\\'\\n]|\\\\[\\\\\"\\'nrbtfav\\?]|\\\\[0-7]{1,3}|\\\\x[0-9a-fA-F]+|\\\\[uU]([0-9a-fA-F]{4})([0-9a-fA-F]{4})?)*\\'
\\\\([^\\\\])
\\\\([^\\\\]*)$
\\\\\\\\([^\\\\]*)\\\\([^\\\\]*)\\\\?
\\\\([^\\\\]{1})
\\\\([^\\\\]+$)
\\\\([^\\\\]+)$
\\\\([^\\\\]+)\\\\(.+)
\\\\([^\\\\]+)\\.js$
\\\\([^\\\\]+)\\s*$
\\\\([^\\\\]+)Vertex$
\\\\([^\\\\]+?)$
\\\\([^\\{\\[]+)
\\\\([^\\\\a])
\\\\([^\\r\\n\\f0-9a-fA-F])
\\\\([^\\r\\n]|(?:\\r?\\n))
\\\\([^\\s])
\\\\([^\\x80-\\xff(){ \\x00-\\x1f\\x7f%\"\\\\]+)
\\\\([^=\\s]+)\\s*(?:\\=\\s*)?\n        (?:\\\"((?:\\\\.|[^\"])*)\\\"\n            |\n           \\'((?:\\\\.|[^'])*)\\'\n            |\n           (\\S+))
\\\\([^0-7]|[0-7]{1,3})
\\\\([^0-9a-f])
\\\\([^0-9a-fA-F]{1})
\\\\([^0-9a-fA-F]|(.[^0-9a-fA-F]))
\\\\([^0-9A-Z\\s])
\\\\([^0-9A-Za-z\\s])
\\\\([^a-fA-F\\d])
\\\\([^a-z()[\\]]|[a-z\\*]+)
\\\\([^A-Z0-9_])
\\\\([^a-zA-Z]|[a-zA-Z]+)
\\\\([^A-Za-z_0-9])+
\\\\([^A-Za-z_0-9]{1})
\\\\([^A-Za-z0-9_\\-.,:\\/@\\n])
\\\\([^uU])
\\\\([^x0-9])
\\\\([^xubfnOrtv'\"\\\\])|(\\\\.)
\\\\([^xubfnvrt0\\\\])
\\\\([`*_{}\\[\\]()>#+-.!])
\\\\([`*_{}\\[\\]()>#+.!~=|:-])
\\\\([`*_{}\\[\\]()>#+.!~=|-])
\\\\([`'^\"~])( ?)([\\w])
\\\\([`'^\"~vc]){([\\w])}
\\\\([-`'^~\",v].)
\\\\([{}$&_])
\\\\([{}%])
\\\\([{}])
\\\\([{}|])
\\\\([+\\-&|!(){}[\\]^\"~*?:\\\\])
\\\\([0]|[1-9]\\d?)(\\.([0]|[1-9]\\d?)){2}(-x(86|64))?\\\\$
\\\\([0-3])([0-7])([0-7])
\\\\([0-3]?[0-7]{1,2})
\\\\([0-3][0-7][0-7])
\\\\([0-3][0-7]{2})
\\\\([0-6]{1,3})
\\\\([0-7][0-7]?[0-7]?)
\\\\([0-7][0-7][0-7])
\\\\([0-7]{1,3})
\\\\([0-7]{1,3}|[$c]|x[0-9a-fA-F]{2}|c.)
\\\\([0-7]{1,3}|x[0-9a-fA-F]{1,2})
\\\\([0-7]{1,3}|x[0-9a-fA-F]{1,2}|M-.|(C-|c)\\?|(C-|c).|[^0-7xMCc])
\\\\([0-7]{3})
\\\\([0-7]{3}|u[A-Fa-f0-9]{4})
\\\\([0-7]{3}|x(\\h\\h|\\{\\h{,8}\\}))
\\\\([0-7]{3}|x\\h\\h|u\\h\\h\\h\\h)
\\\\([0-9])
\\\\([0-9][0-9][0-9])
\\\\([0-9]{1,3})
\\\\([0-9]{1,3}|x[0-9A-F]{1,2}|u[0-9A-F]{4}|.)
\\\\([0-9]{1,3}|x[0-9A-Fa-f]{1,2})
\\\\([0-9]{3})
\\\\\\\\([0-9]+)
\\\\([0-9]+)
\\\\([0-9+])
\\\\([0-9ABCDEF]{1,2})
\\\\([0-9a-f]{1,4})
\\\\([0-9a-f]{1,6})
\\\\([0-9a-f]{1,6})(?:\\s|$)
\\\\([0-9a-f]{1,6})\\s
\\\\([0-9a-f]{1,6})\\s*
\\\\([0-9a-f]{2,2})
\\\\([0-9a-f]{4})
\\\\([0-9a-fA-F]{0,6}(\\r\\n|[ \\n\\r\\t\\f])?|[^0-9a-fA-F\\n\\r])
\\\\([0-9a-fA-F]{0,6})
\\\\([0-9a-fA-F]{0,6})(\\s)?(?(2)|(?=[^0-9a-fA-F]))
\\\\([0-9A-Fa-f]{1,6})(\\r\\n|[ \\t\\n\\f\\r])?|\\\\.
\\\\([0-9A-Fa-f]{1,6})[ \\t\\n\\f\\r]?
\\\\([0-9A-Fa-f]{1,6})[ \\t\\n\\f\\r]?|\\\\.
\\\\([0-9A-Fa-f]{1,6})[\\s]?
\\\\([0-9a-fA-F]{1,6})\\s?
\\\\([0-9a-fA-F]{1,6})\\s{0,1}
\\\\([0-9a-fA-F]{1,6}[\\x20\\t\\n\\r\\f]?|.)|([\\x22\\x27])
\\\\([0-9a-fA-F]{2,4})
\\\\([0-9a-fA-F]{2})
\\\\([0-9A-Fa-f]{2})
\\\\([0-9a-fA-F]{4})
\\\\([0-9a-fA-F]{4}|.)
\\\\([0-9a-fA-F]{6})
\\([0-9A-Za-z\\|]++\\)
\\\\([0abfnrtve]|x([0-9A-Fa-f][0-9A-Fa-f]))
\\\\([0bfnrt\"'\\\\]|x([0-9a-fA-F]{2})|u([0-9a-fA-F]{4}))
\\\\([0nrt])
\\\\([0ntrb'\"\\\\])
\\\\([0x]..|c?.)
\\\\([1-9])
\\\\([1-9]|k(<\\w+\\b[+-]?\\d>|'\\w+\\b[+-]?\\d'))
\\\\([23][02367acef])
\\\\([2-3][0-7][0-7])
\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4})|x(?![\\dA-Fa-f]{2}))
\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4}|{[\\dA-Fa-f]+})|x(?![\\dA-Fa-f]{2}))
\\\\([abfnrtv?\"\\\\\\']|\\d+|x[0-9a-fA-F]+)
\\\\([abfnrtv'\"\\\\0]|NUL|ESC)
\\\\([abfnrtv\\\\\"']|\\d{1,3})
\\\\([abtnvfr'\"\\\\?]|([0-7]{3})|x([0-9a-fA-F]{2}))
\\\\([a-f0-9][a-f0-9])
\\\\([a-fA-F\\d]{0,5}[ a-fA-F\\d]?)
\\\\([a-fA-F\\d]{1,6}|[^a-fA-F\\d])
\\\\([a-fA-F\\d]{2})
\\\\([a-z\\\\])
\\\\([a-z]*?)bou\\{\\}
\\\\([a-z]+)(\\d+)
\\\\([a-z]+|\\s+|.)
\\\\([a-z0-9]{1})
\\\\([a-zA-Z]):(.*)$
\\\\([a-zA-Z])+\\s+
\\\\([a-zA-Z]:[^*,\\\\]*[,]?)+\\*[0-9A-Fa-f]{2}(\\\\.*)?$
\\\\([a-zA-Z]+)
\\\\([a-zA-Z0-9_])
\\\\([btnfr\\\\\"'])|([^\\w\\*\\?])
\\\\([dlLwWxX])
\\\\([MC]-|c)(.)
\\\\([MC]-|c)(?=\\\\)
\\\\([never\\\\fart0]|x([0-9a-fA-F]{2}))
\\\\([never\\\\fartz]|x([0-9a-fA-F]{2}))
\\\\([Nnever\\\\fartz0b]|x([0-9a-fA-F]
\\\\([nrbt\"\\\\])
\\\\([nrbt'\\\\])
\\\\([nrt\\\"$\\\\]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})
\\\\([nrt\\\\]|([0-7][0-7][0-7])|x([0-9a-fA-F][0-9a-fA-F]))}\n                       
\\\\([nrt\\\\]|x[\\da-fA-F]{2}|u\\{([\\da-fA-F]+)\\})
\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})
\\\\([nrtbf()\\\\\\n]|\\d{1,3})?|\\r\\n?|\\n\\r
\\\\([nrtbf\\\\()])
\\\\([nrtbf\\\\()]|[0-7]{1,3})
\\\\([nrtbf\\\\()]|[0-7]+)
\\\\([nrtvf\\\\$\"]|[0-7]{1,3}|\\x[0-9A-Fa-f]{1,2})
\\\\([nt\\\\])
\\\\([ntrf\\\\'\"]|([0-7]{3}))
\\\\([pP])(?:{(\\^?)([^}]*)}|([A-Za-z]))
\\\\([pP])\\{L([lu])\\}
\\\\([pP]){([a-zA-Z\\-0-9]+)}
\\\\([pP]){(\\^?)([^}]*)}
\\\\([tnfr\"'\\\\]|u\\h{4}|)
\\\\([tnr\"\\\\]|x\\h\\h)
\\\\([tnrfbae])
\\\\([tvnrbfae]|[0-8]{1,3}|x[\\dA-Fa-f]{2}|x7[\\dA-Fa-f]{7})
\\\\([tvnrbfae]|[0-8]{3}|x\\H\\H\\{7\\H{7}\\}|x\\H\\H|c\\d+|C-\\d+|M-\\d+|M-\\\\C-\\d+)
\\\\([UL])[\\$\\\\](\\d)
\\\\([uU](\\h{4}|\\h{2})|\\d{1,3}|.)
\\\\([uU][\\da-fA-F]{4})
\\\\([x0-7][0-7]?[0-7]?)
\\\\(\\\\\\\"([A-Za-z]:)?[[:alnum:]_\\\\-\\\\./\\\\\\\\]+\\\\\\\"\\\\)
\\\\(\\\")
\\\\(\"|\")
\\\\(\"|\\')
\\\\(\"|\\\\|')
\\\\(\\$)
\\\\(\\$[0-9])
\\\\(\\$\\{[^}]*\\})
\\\\(\\$\\d+)
\\\\(\\${|\\r\\n?|\\n|.)|[\"'`]|\\${|(\\r\\n?|\\n)
\\(\\((!?[-/\\.\\w\\pL]+)\\)\\)
\\(\\(((?:(?R)|(?!\\)\\)).)*)\\)\\)
\\(\\\\([dcsa]?\\d+)\\)
\\(\\(<(INSTALL.win32.
\\\\(\\\\*)(?:(n)|(\"))
\\\\(\\*|\\?|\\+)
\\\\(\\*|`|'|\")
\\'(\\\\.|[^\\'\\\\])*\\'
\\\\(\\\\?)
\\(\\?\\)|(?=[^\\\\])\\?|(?:(?!\\(\\?\\))(?:\\\\\\?|[^\\?]))+
\\(\\?P<\\K_
\\\\(\\@|\\\\|\\%|#)
\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)
\\\\(\\[|\\]|\\|)
\\\\(\\])
\\\\(\\_1broker|\\_1btcxe)
\\\\(\\{|\\})
\\\\(\\|)
\\\\(\\\\|')
\\\\(\\\\|[0-7]{1,3}|x.[0-9a-f]?|['\"abfnrt0]|.|$)
\\\\(\\\\|[abefnprtv'\"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2})
\\\\(\\\\|[abefnprtv'\"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|U[a-fA-F0-9]{,8})
\\\\(\\\\|[abefnprtv'\"?]|[0-3]\\d{,2}|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|&\\w+;)
\\\\(\\\\|[abefnrtv'\"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-zA-Z0-9]+)
\\\\(\\\\|[abfnrutv'\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|[0-7]{3})
\\\\(\\\\|[nrtbf\\(\\)]|[0-7]{1,3}|\\r?\\n)
\\\\(\\\\|\")
\\\\(\\'|\\\")
\\\\(\\'|\\\"|\\\\|[abfnrtv]|x.{0,2}|[0-7]{1,3})
\\\\(\\'|\\\"|\\\\|[abfnrtv]|x.{0,2}|[0-7]{1,3}|u[0-9a-fA-F]{0,4}|U[0-9a-fA-F]{0,8}|N\\{.+?\\})
\\\\(\\\\|\\.)
\\\\(\\\\|\\d+)
\\\\(\\\\|\\s)
\\\\(\\\\|'|[0-3][0-7][0-7])
\\\\(\\\\|'|\\\"|a|b|c[A-Z]+|e|f|n|r|u0+[0-9,A-Z]+|v)
\\\\(\\\\|'|r|n|t|u2028|u2029)
\\\\(\\\\|'|r|N|t|u2028|u2029)
\\\\(\\\\|n|\\||[0-7]{1,3})
\\\\(\\C)
\\\\\\\\(\\d)
\\\\(\\d)
\\\\(\\d\\d\\d)
\\\\(\\d{1,3}|x[a-fA-F0-9]+|u[a-fA-F0-9]{1,4}|.|\\n)
\\\\(\\d{1,6})
\\\\(\\d{3})
\\\\(\\d{3}|.)
\\\\(\\d+)
\\\\\\\\(\\d+)
\\\\(\\d+)$
\\\\(\\d+)\\s*
\\\\(\\d+)|\\\\([&`'])}\n\t
\\\\(\\d+|['\"\\\\&trnbvf])
\\(\\d++\\)\\z
\\(\n                (?P<comment>(\n                    \\\\.|\n                    [^\\\\)]\n                )+)\n            \\)
\\\\(\n        '   | # single quote\n        \\\\    # backslash\n      )
\\\\(\n        '   | # single quote\n        \\\\  | # backslash\n        [ ] | # space\n        \\n    # newline\n      )
\\\\(\n        [0-7]{1,3}        | # octal character\n        x[0-9a-fA-F]{1,2} | # hex byte\n        u[0-9a-fA-F]{4}   | # unicode character\n        u{[0-9a-fA-F]{4}} | # unicode character\n        M-\\\\C-.           | # meta-ctrl\n        C-\\\\M-.           | # ctrl-meta\n        M-\\\\c.            | # meta-ctrl (shorthand)\n        c\\\\M-.            | # ctrl-meta (shorthand)\n        C-.               | # control (regular)\n        c.                | # control (shorthand)\n        M-.               | # meta\n        \\n                | # line continuation\n        .                   # single-character\n      )
\\\\(\\n\\d+|\\k\\w+|(?<!\\|)\\g\\w+)
\\\\(\\n|\\f|\\r)
\\\\(\\n|\\r\\n|\\r)
\\(\\p{ASCII}*\\)
\\(\\Q$arguments_string\\E\\)
\\(\\Q$subcond\\E\\)
\\\\(\\r?\\n|\\r)[ \\t\\f]*
\\\\(\\r\\n|[\\u000A\\u000D\\u2028\\u2029])
\\\\(\\r\\n|[^\\r0-9a-f]|[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)
\\\\(\\r\\n|\\n)
\\\\(\\r\\n|\\n\\r|\\n|\\r)
\\\\(\\r\\n|\\r|\\n|\\f)
\\\\(\\S)
\\\\(\\s)
\\\\(\\s)$
\\\\(\\s*#.*)?\n
\\(\\s*([^]*?)\\s*\\)
\\(\\s*('|\")(?P<name>.*?)('|\")(,(?P<default>.*))?\\)
\\\\(\\s|$)
\\\\(\\s+)
\\\\(\\S+)\\s*([^\\\\]*)
\\(\\S+[\\/|\\\\]ts-loader[\\/|\\\\]dist[\\/|\\\\]index.js:\\d*:\\d*\\)
\\\\(\t\t\t# Backslashed stuff:\n\t  [\"\\$\\\\]\t\t    # Things to escape\n\t| [tnrfbae]\t\t    # Simple escape codes\n\t| x[[:xdigit:]]{2}\t    # Hex-code\n\t| x\\{[[:xdigit:]]{1,8}\\}    # Wide hex-code\n\t| [0-7]{1,3}\t\t    # Octal-code\n\t| c[@-_]\t\t    # Control-char\n\t| N\\{\\w*\\}\t\t    # Named char\n      ) |\n      \\$ (\\w+) |\t\t# Undelimited substitution\n      \\$ \\{ (\\w+) \\}\t\t# Delimited substitution\n      
\\\\(\\w)
\\\\(\\W)
\\\\\\\\(\\w)
\\\\(\\w*)(?:\\\\)?$
\\\\(\\w+)
\\\\(\\w+)Controller
\\\\(\\w+)Test$
\\\\(\\w+.*)$
\\\\(\\w+\\s*)\\z
\\(_(?P<symbol>Z.*)\\)
\\\\(_\\d+(\\.|$))
\\\\(_form|_query|_request|globals|session)({(\".+?\"|\\d+|\\$[\\w_]+)})+(\\[\\[\\d+\\]\\])*
\\\\(`|\"){1}
\\\\({)|{
\\\\({|})
\\\\('|\")
\\\\('|\"){1}
\\\\('|\"|`){1}
\\(|\\)|(;(\\s*[A-Z]+(\\s*((\\[\\])|(\\[(.|\\s)*?([^\\\\]\\]))))+)*)
\\(|\\\\left\\(
\\\\(<[0-9a-fA-F]*>|.)
\\\\(<|>|\\x0d\\x0a)
\\\\(0[0-7]+)
\\(0x(?P<hash>[0-9a-f]{32})\\)
\\\\(200|201|202)
\\\\(a|b|e|f|n|r|t|v|\\\\|')
\\\\(ALT|CTRL|SHIFT)\\\\
\\\\(ansi|mac|pc|pca)[^a-zA-Z]
\\\\(b|c[A-Z]|x[0-9A-F]{2}|u[a-fA-F0-9]{4}|[0-7]{1,3})$
\\\\(begin|end)
\\\\(begin|end)\\{.*?\\}
\\\\(brief|determine) 
\\(clone of: <a href='/game/.*?'>(?P<cloneof>.*?)</a>\\)&nbsp;<br/>
\\\\(cygwin|msys)-\\w+-pty\\d?-(to|from)-master
\\\\(end|bye)(\\s|$)
\\\\(n|\\\\|\\\")
\\\\(n|r)
\\\\(n|r|l|c)
\\\\(n|r|t|v|e|f|\\$|\"|\\\\|x[0-9A-Fa-f]{1,2}|u{[0-9a-f]{1,6}}|[0-7]{1,3})
\\\\(n|r|u2028|u2029)
\\\\(n|t|r|s)
\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\"'\\&])
\\\\(o|O|l|L|aa|AA|ae|AE)\\b
\\(PostgreSQL\\) (?P<major>\\d)\\.(?P<minor>\\d)\\.(?P<bugfix>\\d)
\\-(s?[0-9]+\\_[0-9]+)\\-([0-9]+)$
\\\\(sphinx)?includegraphics\\{+plantuml-
\\-(src|trg)\\_
\\(task ([\\h-]+)\\)\\.\\z
\\\\(there4|sup[123]|frac[13][24]|[a-zA-Z]+)($|\\{\\}|[^a-zA-Z])
\\\\(u(
\\\\(u)
\\\\(u)([0-9A-F]{4})
\\\\(U)([0-9A-F]{8})
\\\\(u[\\da-fA-F]{4}|U[\\da-fA-F]{8}|.)
\\\\(u[0-9a-f]{4}|x[0-9a-f]{2}|.)|([^\\\\])
\\\\(u[0-9a-fA-F]{4})
\\\\(u[0-9a-fA-F]{4}|[^u])
\\\\(u[0-9a-fA-F]{4}|b|t|n|f|r|\"|'|\\\\|[0-3]?[0-7]{1,2}|(.))
\\\\(u[0-9a-fA-F]{4}|newline|tab|space|backspace|formfeed|return|[^\\s])
\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])
\\\\(u[a-fA-F0-9]{4}|x[a-fA-F0-9]{2})
\\\\(u[dD][89aAbB][0-9a-fA-F]{2}\\\\u[0-9a-fA-F]{4}|u[0-9a-fA-F]{4}|.|$)
\\\\(u\\h{4}|.)
\\\\(u|v|V|a|!|\\$|\\\\|\\[)
\\\\(x[\\dA-Fa-f]{1,2}|0\\d{1,3}|\\d{1,3}|.)
\\\\(x[0-9a-fA-F][0-9a-fA-F]|.)
\\\\(x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})?
\\\\(x[a-fA-F0-9][a-fA-F0-9]|[0-2]\\d\\d|[bnrt'\"\\\\])
\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)
\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)
\\\\(z|x00)
\\)\\\\
\\\\\\)|\\\\\\\\
\\* (?P<data>\\d+) (?P<type>[A-Z-]+)( (?P<data2>.*))?
\\* (?P<type>[A-Z-]+)( (?P<data>.*))?
\\* @param (?P<type>\\S+) \\$(?P<name>\\w+)
\\* @public([^]+?)\\*\\/
\\* \\d+: examples(?:\\/|\\\\)three-lines\\.js
\\* \\s+ (\\d+) \\s+ FETCH \\s+    # * nnn FETCH\n             \\(\n               (?:\\s* UID \\s+ (\\d+) \\s* )? # optional: UID nnn <space>\n               FLAGS \\s* \\( (.*?) \\) \\s*   # FLAGS (\\Flag1 \\Flag2) <space>\n               (?:\\s* UID \\s+ (\\d+) \\s* )? # optional: UID nnn\n             \\)\n            
\\*(?:/(?P<step>\\d+))?$
\\*(?P<checksum>[0-9A-Fa-f]{2})$
\\*([\\s\n\t\r]+)\\* \\@param mixed \\$module([\\s\n\t\r]+)\\* \\@param mixed \\$data\\_block([\\s\n\t\r]+)\\* \\@param mixed \\$lang\\_block
\\*([\\s\n\t\r]+)\\* \\@param mixed \\$module([\\s\n\t\r]+)\\* \\@param mixed \\$lang\\_block
\\*(\\p{Any})$
\\*[ \\t]*+@deprecated[ \\t]*+(.*?)\\r?+\\n[ \\t]*+\\*(?:[ \\t]*+@|/$)
\\*\\\\
\\*\\*(
\\*\\*(?!\\\\)((\\*\\*\\\\|[^\\*\\*])*)\\*\\*(?=$|[^\\\\])
\\*\\*(?P<max_depth>\\d*)
\\*\\*(\\\\\\/|\\\\\\\\)?
\\*\\*\\s*(
\\*\\h+@method\\h+([^\\h]+)\\h+([^(\\s]+)(?:\\h*\\(\\h*([^)]*)\\h*\\))?\\s
\\*\\h+@property(?:-read|-write|)\\h+([^\\h]+)\\h+\\$([^\\s]+)\\s
\\*\\h+@return\\h+([^\\h]+)
\\*\\h+@var\\h+([^\\h]+)
\\*\\s*(?P<envName>.*)
\\*{2,2}(?P<exp>\\d+)
\\*|?|?|?|?|?|\\{|?|\\+|\\||?|\\^|#|?|?|?|?|?|?|?|?
\\*main::\\_\\<
\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]
\\.(
\\.((?(?!\\()[^.]+|(?<exp>\\((?:[^()]+|(?&exp)?)+?\\))))
\\\\.(*SKIP)(*FAIL)|,
\\\\.(*SKIP)(*FAIL)|:
\\.(?:
\\.(?P<e>\\w{1,5})$
\\.(?P<format>tar.gz|tar|tgz|zip|zpk)$
\\.(?P<region>[a-z]{2}-[a-z]+-\\d{1})\\.amazonaws\\.com
\\.(?P<source>BD|BluRay|BDrip|WEB-DL|HDrip|HDTVrip|HDTV|HD|DVDrip)\\.
\\.([\\w-]+)(?:\\@[^/\\\\]+)?\\.g?mo$
\\.([\\w-]+)(?:\\@[^/\\\\]+)?\\.po$
\\.([^\\/\\\\]+)$
\\\\.([a-z0-9\\\\.\\\\-\\\\_]+)
\\.([a-z0-9]+{2,})\\z
\\.([a-zA-Z0-9\\-\\_]+)
\\.(js|css|txt)(?:\\.[^/\\\\]+)?$
\\.(so|bundle|o|
\\\\.*\\\\
\\..*+$
\\.?\\Q$_\\E$
\\.[/|\\\\](core|modules|tools|extensions)[/|\\\\]
\\.[/|\\\\](core|modules|tools|tests|extensions|examples|migration)[/|\\\\]
\\.[\\/\\\\]
\\.[\\/\\\\]([^\\/\\\\]+)([\\/\\\\].+)?
\\.[\\-\\_]+
\\.[^.\\/\\\\]*$
\\.[^.\\/\\\\]+$
\\.[^\\.\\/\\\\]+$
\\.[^\\.\\d\\s\\-\\_][^\\.]*$
\\.[^\\/\\\\]*$
\\.[a-zA-Z0-9\\-\\_]*
\\\\\\.\\\\
\\.\\\\
\\\\\\\\.\\\\
\\.\"\"|(?<!\\\\)\"\"\\.
\\.\\*\\+\\?\\^=!:\\$\\{}\\(\\)\\|\\[]\\/\\\\
\\.\\.(\\/|\\\\)
\\.\\.[\\/\\\\]
\\.\\.[\\/\\\\]?
\\.\\.[^A-Za-z0-9\\.\\_\\- ]
\\.\\.\\\\
\\.\\.\\s+(?:(?P<extra>\\S+)\\s+)?(?P<block>[^\n:]+)::\\s+(?P<args>[^\n]+)(?:\n\n?(?P<content>.*?)\n\n(?=\\S))?
\\.\\.+[\\/\\\\]+
\\.\\/|\\/|\\.\\\\|\\\\
\\.\\L$old_format$
\\.\\Q$_\\E$
\\.\\Q${extension}\\E$
\\.\\Q$acceptable_sdid\\E\\z
\\.\\Q$Config::Config{dlext}\\E\\z
\\.\\Q$Config{dlext}\\E
\\.\\Q$Config{dlext}\\E\\.\\d+$
\\.\\Q$copy\\E
\\.\\Q$d\\E\\z
\\.\\Q$def_tmpl_ext\\E$
\\.\\Q$domain\\E$
\\.\\Q$doms\\E\\z
\\.\\Q$opts->{suffix}\\E\\z
\\.\\Q$profile\\E(?:-\\d+)?\\z
\\.\\Q$ru_host\\E$
\\.\\Q$self->{name}\\E\\.(?=\\s)
\\.\\Q$suffix\\E\\z
\\\\.|/|#|\\\\$|!|\\\\^|\\\\*|'| |\\\"|%|&|\\\\(|\\\\)|\\\\+|\\\\,|/|:|;|<|>|=|\\\\?|@|\\\\||\\\\\\\\
\\\\.|[:*][a-z0-9_]+|[^:*\\\\]+
'\\\\.'|'[^\\\\]'
'\\\\.'|'[^\\\\]'|'\\\\u[0-9a-f]{4}'
'\\\\.'|'[^\\\\]'|'\\\\u[0-9a-fA-F]{4}'
\\.|\\\\
\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]
\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]
\\.|\\[(?:[^[\\]]+|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?)\\1\\]
\\.|\\\\|/|\\||:|\\?|\\*|\\\"|<|>|\\p{Cntrl}
\\.+[^./\\\\]*$
\\.+\\s+\\Q$include
\\.B (?P<src>[A-Z]{3}) (?P<date>[0-9]{6,8}) Z DH(?P<hh>[0-9]{2})/DC(?P<valid>[0-9]{10,12}) /DUE/PPHCF/PPTCF/PPQCF
\\.class\\s+(?P<class>.*);
\\.controller\\(\\'Testing2Controller',\\ function\\(\\$scope\\)\\ {
\\.controller\\(\\'TestingNewController',\\ function\\(\\$scope\\)\\ {
\\.controller\\(\\'TestingScaffController',\\ function\\(\\$scope\\)\\ {
\\.directive\\(\\'TestingNewDirective',\\ function\\(\\)\\ {
\\.directive\\(\\'TestingScaffDirective',\\ function\\(\\)\\ {
\\.DS\\_Store
\\.factory\\(\\'TestingNewFactory',\\ function\\(\\)\\ {
\\.factory\\(\\'TestingScaffFactory',\\ function\\(\\)\\ {
\\.fc(?P<version>\\d+)\\.
\\.field\\s+(?P<property>.*);
\\.fui-([^:]+):before[^\"]+\"\\\\([0-9a-f]+)\"
\\.gemini.\\jsx?$
\\.Get\\([\\s|\\\\]*Nan::New\\(([^)]+)\\)\\)
\\.Get\\([\\s|\\\\]*Nan::New<(v8::)*String>\\(([^)]+)\\)\\)
\\.get_(?P<field>[a-zA-Z0-9_]+)_display$
\\.get_next_by_(?P<field>[a-zA-Z0-9_]+)$
\\.get_previous_by_(?P<field>[a-zA-Z0-9_]+)$
\\.glyphicon-([^\\{\\s]+)[^\"]+\"\\\\([0-9a-f]+)\";
\\.Has\\([\\s|\\\\]*Nan::New\\(([^)]+)\\)\\)
\\.Has\\([\\s|\\\\]*Nan::New<(v8::)*String>\\(([^)]+)\\)\\)
\\.icon-([\\w-]+):before{content:'\\\\([0-9A-Fa-f]+)'}
\\.icon-([^:]+):before\\s*[^\"]+\"\\\\([0-9a-f]+)\"
\\.js|\\/|\\\\
\\.method\\s+(?P<method>.*)$
\\.mif-([^:]+):before[^\"]+\"\\\\([0-9a-f]+)\"
\\.pf-([^:]+):before\\s*[^\"]+\"\\\\([0-9a-f]+)\"
\\.propTypes = ({[^]+?\\n\\})
\\.pw-([^:]+):before\\s*[^\"]+\"\\\\([0-9a-f]+)\"
\\.s(?P<ports>\\d+)+p
\\.service\\(\\'TestingNewService',\\ function\\(\\TestingNewModel\\)\\ {
\\.service\\(\\'TestingScaffService',\\ function\\(\\TestingScaffModel\\)\\ {
\\.service\\('Testing2Service',\\ function\\(\\Testing2Model\\)\\ {
\\.Set\\([\\s|\\\\]*Nan::New\\(([^)]+)\\)\\s*,
\\.Set\\([\\s|\\\\]*Nan::New<(v8::)*String>\\(([^)]+)\\)\\s*,
\\.spamipfilter\\_[0-9]+\\-[0-9]+\\-2[0-9][0-9][0-9]$
\\.super\\s+(?P<parent>.*);
\\.tfevents\\.(?P<timestamp>\\d+).(?P<hostname>[-.0-9A-Za-z]+)$
\\.wi-([^:]+):before\\s*[^\"]+\"\\\\([0-9a-f]+)\"
\\.zocial\\.([^:]+):[^\"]+\"\\\\([0-9a-f]+)\";
\\/(
\\/((?)(?:[^\\r\\n\\[\\/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+)\\/((?:g(?:im?|m)?|i(?:gm?|m)?|m(?:gi?|i)?)?)
\\/((?:[^\\/\\\\]|\\\\.)*)|$
\\/(?![*\\/])(\\\\.|(?=.)[^\\[\\/\\\\]|\\[(\\\\.|(?=.)[^\\]\\\\])*\\])+\\/
\\/(?![\\*\\/])((?:[^\\\\\\/]|(?:\\\\\\\\)*?\\\\[^\\\\])*?)\\/
\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*
\\/(?=[^*\\/])[^[\\/\\\\]*(?:(?:\\[(?:\\\\.|[^\\]\\\\]*)*\\]|\\\\.)[^[\\/\\\\]*)*?([^<]\\/)[gim]*
\\/(?P<bundle>.*Bundle)\\/
\\/([\\w\\.\\-\\_]+)$
\\/([^/\\\\]+\\/[^/\\\\]+):\\d+:\\d+
\\/([^\\/\\\\]|\\\\.)*\\/
\\\\/([^_\\\\]+)\\\\/
\\/(\\\\[\\/\\\\]|[^*\\/])(\\\\.|[^\\/\\n\\\\])*\\/[gim]*
\\/(\\d+)\\_[^\\.]+\\.rb$
\\/(\\\\\\n)?\\/(\\n|(.|\\n)*?[^\\\\]\\n)
\\/..\\/|\\/..\\\\
\\/:([\\w\\.\\-\\_]+)(\\*?)
\\/:([A-Za-z0-9_]+)(\\([^\\\\]+?\\))?
\\/?([^\\/]*?)\\.(
\\/[a-zA-z0-9\\_\\$]*$
\\/\\\\
\\\\/\\\\([1-9])\\\\/
\\/\\\\(\\w)
\\/\\*#\\*\\/\\s*function\\s*\\(\\s*\\)\\s*\\{\\s*\\/\\*\\!?([^]*?)\\*\\/[\\s;]*\\}
\\/\\*(?:!)?rtl:[^]*?\\*\\/
\\/\\*([^]*)\\*\\/
\\/\\*[\\s\\S]*?\\*\\/|(?:[^\\\\])\\/\\/.*?[\\n\\r]
\\/\\*[^]*?\\*\\/
\\/\\*\\* ignored by jsdoc \\*\\*\\/\\s*[^]*
\\/\\*\\*([^](?!\\*\\/))*@module([^](?!\\*\\/))*@private[^]*?\\*\\/
\\/\\*\\*([^]*?)\\*\\/
\\/\\*\\*::ui-jar_source_module::([a-zA-Z0-9_-\\s]+)\\*\\/
\\/\\*\\*[^]*?\\*\\/
\\/\\*\\s*(?P<section_title>.+)\\s*\\*\\/(?P<real_summary>.*)
\\/\\*\\s*yaspeller\\s+ignore:start\\s*\\*\\/[^]*?\\/\\*\\s*yaspeller\\s+ignore:end\\s*\\*\\/
\\/\\/ \\(BUILD\\) - REMOVE IN MINIFY - START[^]*?\\/\\/ \\(BUILD\\) - REMOVE IN MINIFY - END
\\/\\/ \\[bundle remove start\\][^]*?\\/\\/ \\[bundle remove end\\]\\r?\\n?
\\/\\/%%[ \\t]*(
\\/\\/(
\\/\\/(?:(?!
\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|.)*
\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*
\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)
\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)
\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}
\\/\\/\\s*(
\\/\\/\\s*[A|a]uthor\\s*[\\:]?\\s*([\\w|\\s|\\@|\\(|\\)|\\-|\\_]*)
\\/\\/\\s*[T|t]itle\\s*:\\s*([\\w|\\s|\\@|\\(|\\)|\\-|\\_]*)
\\/\\/\\s*yaspeller\\s+ignore:start[^]*?\\/\\/\\s*yaspeller\\s+ignore:end.*?(\\r?\\n|$)
\\/\\/>>includeStart\\('debug', pragmas\\.debug\\);?[^]*?\\/\\/>>includeEnd\\('debug'\\);?
\\/\\_features
\\/\\d+\\_\\/\\d+\\^
\\/\\Q${keyword}\\E\\/
\\/\\Q$source\\E
\\/\\s*\\s*(
'\\/^\\s*$|^c:\\\\con\\\\con$|[%,\\*\\\"\\s\\t\\<\\>\\&'\\\\]
\\/|\\\\
\\\\\\/|\\\\\\\\
\\/|\\_|\\?|\\<|\\>|\\\\|\\:|\\*|\\||\\\"
\\/a\\\\_twisty\\\\_path
\\/bin\\/busybox (?P<applet>[A-Z]+)
\\/Creator\\s?\\(([^\\)\\\\]+)
\\/dataclips\\/([\\w\\-]{36}+)(\\.[\\w]{1,6})?$
\\/lmd\\/bin\\/lmd$|\\\\lmd\\\\bin\\\\lmd$
\\/memorial\\/\\d+\\/\\Q$firstname\\E.+\\Q$lastname\\E
\\/package\\/([\\w\\-\\_\\.]+)\\/?$
\\/Producer\\s?\\(([^\\)\\\\]+)
\\\\\\/rx\\/\\\\
\\/Title\\s?\\(([^\\)\\\\]+)
\\/users\\/([a-zA-Z0-9\\_\\.-]+)\\/view\\/([0-9]+)
\\/v\\/([a-z0-9\\-\\_]+)
\\:(?P<name>[a-z0-9]+)
\\:[a-z0-9\\.\\_\\-]+|\\?
\\:\\:\\_\\:\\:Proxy
\\:\\:\\_\\:\\:Proxy$
\\:\\?\\((?P<function>.+)\\)\\[
\\:\\Q$elem\\E$
\\:access\\_token
\\:raw_stream_content=\\>\"(?:(?!\"}).)*+\"\\}\\}
\\;\\_ylt\\=.+$
\\\\?(
\\?(([\\w%\\-\\+]|(%\\p{XDigit}{2}))+(=([\\w%\\-\\+]|(%\\p{XDigit}{2}))+)?(&|;))*(([\\w%\\-\\+]|(%\\p{XDigit}{2}))+(=([\\w%\\-\\+]|(%\\p{XDigit}{2}))+)?)?
\\\\?(.*)\\\\(.*)\\\\(Service|Api)\\\\\\2?(.*)
\\\\?(?:&lt;&lt;([
\\\\?(?:(indexterm2?):\\[(
\\?(?:.*
\\\\?(?:\\[([^\\]]+)\\])?##(
\\\\?(?:\\[([^\\]]+)\\])?\\*\\*(
\\\\?(?:\\[([^\\]]+)\\])?\\+\\+(
\\\\?(?:\\[([^\\]]+)\\])?__(
\\\\?(?:\\[([^\\]]+)\\])?``(
\\\\?(?:\\[\\[([a-zA-Z:_][\\w:.-]*)(?:,[\\t ]*(\\S.*?))?\\]\\]|anchor:(\\S+)\\[(.*?[^\\\\])?\\])
\\\\?(?:\\\\u)([\\da-f]{4})
\\\\?(?:link|(mailto)):(|[^:\\s\\[][^\\s\\[]*)\\[(|
\\?(?P<width>\\d+)(?:x(?P<height>\\d+))?$
\\\\\\\\?([^\\\\]+)\\\\
\\?([a-z\\_0-9\\-]+)\\=([a-z\\_0-9\\-/]+)
\\\\?(\\P{ASCII})
\\\\?(footnote(?:ref)?):\\[(.*?[^\\\\])\\]
\\\\?(stem|(?:latex|ascii)math):([a-z]+(?:,[a-z]+)*)?\\[(
\\?){\n        my $value = shift;\n        if
\\?.*+
\\\\\\\\?.+\\\\pipe\\\\?.+
\\?[!#$&-;=?-[\\]_a-z~]*$
\\\\?[${}\\\\]|\\\\\\(|\\\\(eq)?ref\\s*\\{
\\?[a-zA-Z0-9\\=\\&\\%\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,]+
\\\\?\"([
\\\\?\\$(?:\\{)?\\:*([a-z0-9\\_]+)(?:\\})?
\\\\?\\$|\\\\\\(|\\\\(eq)?ref\\s*\\{
\\\\\\\\\\?\\\\(\\w):[/\\\\](.*)
\\\\\\\\\\?\\\\UNC\\\\([^\\\\]+)\\\\([^\\\\]+)(?:\\\\(.*))?
\\?|\\*|\\\\
\\\\?<!?(|--)(\\d+|\\.)\\1>(?=(?: ?\\\\?<!?\\1(?:\\d+|\\.)\\1>)*
\\\\?footnote(?:(ref):|:([\\w-]+)?)\\[(?:|(
\\\\?HH\\\\(mixed|void)?
\\\\?i(?:mage|con):([^:\\s\\[](?:[^\\n\\[]*[^\\s\\[])?)\\[(|
\\\\?menu:(
\\?P<([^>]++)>
\\\\?Psy\\\\
\\@(?P<varname>[A-Za-z0-9_]+)\\@
\\@([A-Za-z0-9\\_\\.\\-]+)
\\@.*\\Q$from\\E>
\\@?([a-zA-Z0-9\\-_\\.\\\\]+)
\\@[^@]*[/\\\\][^@]+[/\\\\][^@]+[/\\\\]0$
\\@\\{([a-z\\_\\-]+)(\\|.*?)?\\}
\\@\\Q$_\\E$
\\@\\Q$config->{server}\\E$
\\@\\Q$realm\\E$
\\@\\Q$self_nick \\E
\\@\\Q$self_nick\\E ?|\\[[^\\[\\]]+\\]\\x01|\\[[^\\[\\]]+\\]
\\@ALINK\\s*=\\s*(.*?[^\\\\]);
\\@ALLOWBGCOLOR\\s*?=\\s*?(.*?[^\\\\]);
\\@ALLOWBGPICTURE\\s*?=\\s*?(.*?[^\\\\]);
\\@ALLOWBODYMOD\\s*?=\\s*?(.*?[^\\\\]);
\\@ALLOWNOSIDEBAR\\s*=\\s*(.*?[^\\\\]);
\\@ALLOWSIDEBARMOD\\s*?=\\s*?(.*?[^\\\\]);
\\@ALLOWSIDEBARTOGGLE\\s*=\\s*(.*?[^\\\\]);
\\@BGCOLOR\\s*?=\\s*?(.*?[^\\\\]);
\\@BGCOLOR\\s*=\\s*(.*?[^\\\\]);
\\@BGPICTURE\\s*?=\\s*?(.*?[^\\\\]);
\\@BGPICTURE\\s*=\\s*(.*?[^\\\\]);
\\@BLANKGIF\\s*=\\s*(.*?[^\\\\]);
\\@BOTTOMBAR\\s*=\\s*(.*?[^\\\\]);
\\@import [\"']([a-zA-Z0-9\\+\\.\\-\\/\\:\\_]+\\.(?:css))[\"'];
\\@INFO\\s*?=\\s*?(.*?[^\\\\]);
\\@LASTLINK\\s*?=\\s*?(.*?[^\\\\]);
\\@LINK\\s*=\\s*(.*?[^\\\\]);
\\@LOCALCONFIGFILE\\s*=\\s*(.*?[^\\\\]);
\\@MORELINKSTITLE\\s*?=\\s*?(.*?[^\\\\]);
\\@MORELINKSTITLE\\s*=\\s*(.*?[^\\\\]);
\\@NAVBAR\\s*=\\s*(.*?[^\\\\]);
\\@NEXTLINK\\s*?=\\s*?(.*?[^\\\\]);
\\@NEXTLINK\\s*=\\s*(.*?[^\\\\]);
\\@NOSIDEBAR\\s*?=\\s*?(.*?[^\\\\]);
\\@NOSIDEBAREXTRAS\\s*?=\\s*?(.*?[^\\\\]);
\\@NOSIDEBAREXTRAS\\s*=\\s*(.*?[^\\\\]);
\\@prefix\\s([a-zA-Z\\\\_]+)
\\@SEARCHTEMPLATE\\s*?=\\s*?(.*?[^\\\\]);
\\@SEARCHTEMPLATE\\s*=\\s*(.*?[^\\\\]);
\\@SIDEBARCOLOR\\s*?=\\s*?(.*?[^\\\\]);
\\@SIDEBARCOLOR\\s*=\\s*(.*?[^\\\\]);
\\@SIDEBARMENULINKS\\s*?=\\s*?(.*?[^\\\\]);
\\@SIDEBARMENULINKS\\s*=\\s*(.*?[^\\\\]);
\\@SIDEBARMENUTITLE\\s*?=\\s*?(.*?[^\\\\]);
\\@SIDEBARMENUTITLE\\s*=\\s*(.*?[^\\\\]);
\\@SIDEBARSEARCHBOX\\s*?=\\s*?(.*?[^\\\\]);
\\@SIDEBARSEARCHBOX\\s*=\\s*(.*?[^\\\\]);
\\@SIDEBARTOP\\s*?=\\s*?(.*?[^\\\\]);
\\@SIDEBARTOP\\s*=\\s*(.*?[^\\\\]);
\\@SIDEBARWIDTH\\s*?=\\s*?(.*?[^\\\\]);
\\@SIDEBARWIDTH\\s*=\\s*(.*?[^\\\\]);
\\@strategy\\s([a-zA-Z\\\\_]+)
\\@SWG\\\\Parameter\\(\\n(.*?)\\)\\n
\\@TEXT\\s*=\\s*(.*?[^\\\\]);
\\@TOPBAR\\s*=\\s*(.*?[^\\\\]);
\\@TOPBOTTOMLINKS\\s*?=\\s*?(.*?[^\\\\]);
\\@TOPBOTTOMLINKS\\s*=\\s*(.*?[^\\\\]);
\\@UPLINK\\s*?=\\s*?(.*?[^\\\\]);
\\@var[\\s]+([A-Za-z0-9\\\\]+)
\\@VLINK\\s*=\\s*(.*?[^\\\\]);
\\[ \\\"#bundle\\\", 1, \\n    \\[ \\\"/n_mapn\\\
\\[ \"/b_alloc\
\\[ \"/b_allocRead\
\\[ \"/b_allocReadChannel\
\\[ \"/b_close\
\\[ \"/b_free\
\\[ \"/b_read\
\\[ \"/b_write\
\\[ \"/b_zero\
\\[ \"/c_fill\
\\[ \"/c_set\
\\[ \"/g_deepFree\
\\[ \"/g_dumpTree\
\\[ \"/g_freeAll\
\\[ \"/n_free\
\\[ \"/n_run\
\\[ \"/n_set\
\\[!\\[(?P<alt>.*?)\\]\\((?P<url>.*?)\\).*?\\]\\((?P<target>.*?)\\)
\\[(
\\[((?:[^\\[\\]\\\\]|\\\\\\[|\\\\\\]|\\\\.)*?)\\]
\\[((?:[^\\]\\\\]|\\\\]|\\\\)*)\\]|d{1,4}|M{1,4}|m{1,2}|w{1,2}|Qo|Do|D{1,4}|YY(?:YY)?|H{1,2}|h{1,2}|s{1,2}|S{1,3}|Z{1,2}|a{1,2}|[AQExX]
\\[((?:[^][]|(?R))*)\\]
\\[((?:[^][]++|(?R))*+)\\]
\\[((?>[^\\]\\[]+|(?R))*)\\]
\\\\[(*]
\\[(.*?(?<!\\\\)(?:\\\\\\\\)*+)\\]((?:[+*][+?]?|\\?)?)
\\[(.*?)#([a-zA-Z()\\[\\]0-9_]*)(.*?)(?<!\\\\)\\|(.*?)(?<!\\\\)\\]
\\[(.*?)$prefix([A-Z()\\[\\]0-9\\._]*)(.*?)(?<!\\\\)\\|(.*?)(?<!\\\\)\\]
\\[(.*?)\\$cookies{(.*?)}(.*?)(?<!\\\\)\\|(.*?)\\]
\\[(?:
\\[(?:.*,)?id-(?P<id>.+?)(?:,.+)?\\]
\\[(?:[^\\\\\\]]|\\\\[\\S\\s])*]|\\\\u[\\dA-Fa-f]{4}|\\\\x[\\dA-Fa-f]{2}|\\\\\\d+|\\\\[^\\dux]|\\(\\?[!:=]|[()^]|[^()[\\\\^]+
\\[(?|Color)([0-9]+)\\]
\\[(?<types>
\\[(?>[^\\]\\\\]+|\\\\{2}|\\\\.)*\\]
\\[(?P<col>.*?)\\]
\\[(?P<curve>[PKB]-[0-9]{3}),SHA-(?P<sha>1|224|256|384|512)\\]
\\[(?P<elements>[\\s\\S]*)\\]
\\[(?P<error>E.{4})\\]
\\[(?P<group>\\w+)\\]\\s*(?P<id>(\\d+|-))?(?P<tag>.*?):(?P<value>.*$)
\\[(?P<header>[^]]+)\\]
\\[(?P<host>.+)\\] out: (?P<line>.+)
\\[(?P<index>-\\d+):]
\\[(?P<ip>[0-9a-f:]+)\\](:(?P<port>\\d+))?$
\\[(?P<key>[A-Z-]+)( \\((?P<data>.*)\\))?\\]
\\[(?P<key>\\w+)=(?P<value>[^\\]]+)\\]
\\[(?P<min>\\d+)-(?P<max>\\d+)\\]
\\[(?P<name>[\\w\\.\\-]+)\\]
\\[(?P<name>[^]]+)\\]
\\[(?P<param>[a-zA-Z0-9_.\\-]+)\\]$
\\[(?P<percent>\\d+\\.\\d*)%\\]\\s+(?P<frame>\\d+)/(?P<frame_total>\\d+)\\s+frames,\\s+(?P<frame_rate>\\d+\\.\\d*)\\s+fps,\\s+(?P<bit_rate>[^,]+),\\s+eta\\s+(?P<eta>[\\d:]+)
\\\\[(?P<Priority>[a-z]+)\\\\] 
\\[(?P<severity>\\w+)\\]\\s+\\d+\\/\\d+\\s+\\(\\d+\\)\\s+:\\s+(?P<message>.+)\\s+at\\s\\[.+:(?P<line>\\d+)\\]\\s+.+
\\[(?P<severity>\\w+)\\]\\s+\\d+\\/\\d+\\s+\\(\\d+\\)\\s+:\\s+parsing\\s\\[.+:(?P<line>\\d+)\\]\\s+:\\s+(?P<message>.+)
\\[(?P<ship>.+),.*
\\[(?P<tag>USER)=\\d+\\].+?\\[/(?P=tag)\\],?
\\[(?P<text>.*?)\\]\\((?P<url>.*?)\\)
\\[(?P<text>.*?)\\]\\[(?P<ref>.*?)\\]
\\[(?P<text>[^\\]]*)\\]\\((?P<url>[^\\)]*)\\)
\\[(?P<type>[A-Z-]+)( (?P<data>[^\\]]*))?\\]
\\[(?P<volume>\\d+)%\\]
\\[([\\w \\-\\`\\<\\>\\*\\:\\\\]+?)\\]\\([\\s\\S]+?\\)
\\[([\\w\\s-]+)\\]{([^]*?)}
\\[([^\\]\\\\]+|\\\\{2}|\\\\.)*\\]
\\[([^\\]]*?)\\$params{(.*?)}(.*?)(?<!\\\\)\\|(.*?)\\]
\\[([^\\]]*?)decode\\(\\$params{(.*?)}\\)(.*?)(?<!\\\\)\\|(.*?)\\]
\\[([^\\]]*?)encode\\(\\$params{(.*?)}\\)(.*?)(?<!\\\\)\\|(.*?)\\]
\\[([^\\]]+)\\]\\(\\[(
\\[([^\\]]+?)(?:\\\\([^\\]]+))?\\]
\\[([^]*?)\\]
\\[([^<>&/\\[\\]\\x00-\\x20=]++)
\\[([a-zA-Z]{2}(?:[\\-\\_][a-zA-Z]{2})?)\\]
\\[([a-zA-Z0-9\\-\\\\]+)\\](\\{([0-9]+)\\})
\\[([a-zA-Z0-9\\_\\-]+)\\$=([^\\]]+)\\]
\\[(\\d+)\\]: Processing ((?:\\w+::)*\\w+)#(\\w+)(?: to (\\w+))? \\(for (
\\[(\\p{Digit})*\\]
\\[(\\p{InKana}+)\\]
\\\\[(]
\\[(cite|citenp):(([\\w\\-\\;\\!\\? ]+):)?(
\\[(X|\\s|\\_|\\-)?\\]\\s(.*)
\\[/?([^<>&/\\[\\]\\x00-\\x20=]++)
\\\\[?*]
\\[???\\]
\\\\\\\\[?]\\\\Volume[{][a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}[}]\\\\
\\\\[[\\\\\\\\u0-9a-zA-Z]+\\\\]
\\[[\\w_,.+%$
\\[[^\\]]*[^\\\\]\\(
\\[\"CurrentUserInitialData\",\\[\\],{\"USER_ID\":\"(?P<profile_id>[0-9]+)\"
\\[\\#([a-zA-Z0-9\\.\\-\\_]+)\\]
\\[\\#?[a-zA-Z0-9\\.\\-\\_]+\\]
\\[\\%([a-zA-Z0-9\\.\\_\\-]+)\\%\\]
\\[\\((?P<counter_id>(\\\\.|[^)\\\\])*)\\)\\((?P<counter_name>(\\\\.|[^)\\\\])*)\\)\\((?P<amount>\\d+)\\)\\]
\\\\\\\\\\\\\\\\[\\\\\\\\.\\\\\\\\?]\\\\\\\\([{}a-zA-Z0-9]+).*?\\\\\\\\
\\[\\@[\\w\\d\\-\\_]+\\]\\(http[s]?:\\/\\/github\\.com\\/.*[\\w\\d\\-\\_]+[\\/]?\\)
\\[\\[(?P<constant>.+)\\]\\]
\\[\\[(?P<link>[^|\\]]+)(?:\\|(?P<title>[^\\]]+))?\\]\\]
\\[\\[(?P<m>[^\\]]+)\\]\\]
\\[\\[(?P<name>[^\\]\\|]+)(?:\\|[\\W]*(?P<trigger>[^\\]\\#\\|]+)(?:\\#[^\\]\\|]+)?)*\\]\\]
\\[\\[(?P<target>.*?\\|)?(?P<anchor>.*?)\\]\\]
\\[\\[(?P<target>[^\\]\\|]+)\\|[\\W]*(?P<anchor>[^\\]\\#\\|]+)(?:\\#[^\\]\\|]+)?\\]\\]
\\[\\[([\\w\\_/]+)\\]\\]
\\[\\[([^\\[\\]]++|(?R))*?\\]\\]
\\[\\[[^]*?\\]\\]
\\[\\](?P<type>.*)
\\[\\]\\\\
\\[\\^(
\\[\\^?]?(?:[^\\\\\\]]+|\\\\[\\S\\s]?)*]?|\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\\S\\s]?)|\\((?:\\?[:=!]?)?|(?:[?*+]|\\{[0-9]+(?:,[0-9]*)?\\})\\??|[^.?*+^${[()|\\\\]+|.
\\[\\_
\\\\[\\|\\(\\)1-9$^.*+?\\[\\]]
\\[\\+[A-Z0-9\\.\\_\\-]+\\+\\]
\\[\\\\c-\\[:\\]\\]
\\[\\\\i-\\[:\\]\\]
\\[\\Q$name\\E\\]\\s*
\\[\\Q$RT::rtname\\E(?::\\S+)?\\s+#\\Q$id\\E\\s*\\]
\\[\\Q$RT::rtname\\E(?::\\S+)?\\s+\\#(\\d+)\\s*\\]
\\[\\Q$tag\\E\\s+\\#\\d+\\s*\\]
\\[\\Q\u00b3]\u00a9w\\E\\]
\\[\\s*(.*?)(?:\\s*([~|^$*]?=)\\s*((\"|').*\\4|.*?[^\\\\]))?\\s*(i)?\\]
\\[\\s*(.*?)(?:\\s*([~|^$*]?=)\\s*((\"|').*\\4|.*?[^\\\\]))?\\s*\\]
\\[\\s*([\\w_-]+)(?:\\s+((\")(?:[^\"\\\\]|\\\\[\"\\\\])*(\"))|\\.([\\w_-]+))?\\s*\\]
\\[\\s*([_-\\w][_-\\w\\d]*)\\s*(?:(=|\\^=|\\$=|\\*=|\\~=|\\|=)\\s*(?:([_-\\w][_-\\w\\d]*)|\"((?:[^\\\\\"]|\\\\(?:\"|n|r|f|\\\\|0-9a-f))*)\"|'((?:[^\\\\']|\\\\(?:'|n|r|f|\\\\|0-9a-f))*)')\\s*)?\\]
\\[\\s\\<\\w+?>\\s([\\w,\\\\]+)
\\[\\s\\<\\w+?>\\s([\\w\\\\]+)
\\[\\s\\<\\w+?>\\s([a-zA-Z0-9_\\\\]+)
\\\\[\\\\\\\\u|]
\\[\\W*http[^\\] ]+\b*(?P<anchor>[^\\]]+)\\]
\\[^(?:
\\'[^\\'\\\\]*(?:\\\\.[^\\'\\\\]*)*\\'
\\\\\\\\[^\\\\]+\\\\([^\\\\]+(?:\\\\.*)?)
\\\\[^\\s,;\\])}]+
\\\\[^\\S\\n]*(\\n|\\\\)\\s*
\\[{2}(?:[^\\[\\]]+|(?R))*\\]{2}
\\[|\\]|\\*|\\?|\\^|\\{|\\}|\\\\c
\\[|\t\t\t\t\t\t\t\t\t # Array begin\n\t\t\t\t\t\t \\]|\t\t\t\t\t\t\t\t\t # Array end\n\t\t\t\t\t\t {|\t\t\t\t\t\t\t\t\t\t # Object begin\n\t\t\t\t\t\t }|\t\t\t\t\t\t\t\t\t\t # Object end\n\t\t\t\t\t\t -?(?:0|[1-9]\\d*)                        # Float\n\t\t\t\t\t\t\t (?:\\.\\d*(?:[eE][+\\-]?\\d+)?|\n\t\t\t\t\t\t\t (?:[eE][+\\-]?\\d+))|\n\t\t\t\t\t\t -?(?:0|[1-9]\\d*)|\t\t\t\t\t\t # Integer\n\t\t\t\t\t\t true|\t\t\t\t\t\t\t\t\t # True\n\t\t\t\t\t\t false|\t\t\t\t\t\t\t\t     # False\n\t\t\t\t\t\t null|\t\t\t\t\t\t\t\t\t # Null\n\t\t\t\t\t\t ,|\t\t\t\t\t\t\t\t\t\t # Member separator for arrays and objects\n\t\t\t\t\t\t :|\t\t\t\t\t\t\t\t\t\t # Value separator for objects\n\t\t\t\t\t\t \"(?:(?:(?!\\\\u)[^\\\\\"\\n\\b\\f\\r\\t]+)|   # String\n\t\t\t\t\t\t\t \\\\\\\\|\n\t\t\t\t\t\t\t \\\\/|\n\t\t\t\t\t\t\t \\\\\"|\n\t\t\t\t\t\t\t \\\\b|\n\t\t\t\t\t\t\t \\\\f|\n\t\t\t\t\t\t\t \\\\n|\n\t\t\t\t\t\t\t \\\\r|\n\t\t\t\t\t\t\t \\\\t|\n\t\t\t\t\t\t\t \\\\u[0-9a-fA-F]{4})*\"|\n\t\t\t\t\t\t \\s+\t\t\t\t\t\t\t\t\t # Whitespace\n\t\t\t\t\t\t 
\\\\[0abt\\tn\\nvfre \"\\\\N_LP]
\\'[A-z0-9\\:\\!\\%\\^\\&\\*\\_\\-\\+\\=\\|\\?\\\\\\/\\>\\<\\~\\.]+
\\\\[a-zA-Z]:\\\\
\\\\[a-zA-Z0-9_\\\\]{4,}\\\\
\\[code(.*?)\\](((?R)|.)*?)\\[\\/code\\]
\\[code\\s*=?(?P<language>\\w*)\\](?P<snippet>[\\W\\D\\w\\s]*?)\\[\\/code\\]
\\[egg:background] task:.*?app[\\/\\\\]controller[\\/\\\\]app\\.js:\\d+:\\d+ success \\(\\d+ms\\)
\\[egg:background] task:.*?app[\\/\\\\]controller[\\/\\\\]home\\.js:\\d+:\\d+ success \\(\\d+ms\\)
\\[example:([\\w\\_]+) ([\\w\\:\\/\\.\\-\\_ \\s]+)\\]
\\[example:([\\w\\_]+)\\]
\\[F00000000\\]\\[T([0-9A-Z]+)\\].*\\*[\\\\]?(.*)
\\[img(:.+)?\\]([^\\[\\]].*?)\\.(
\\[img=([^\\[\\]].*?)\\.(
\\[link:([\\w|\\:|\\/|\\.|\\-|\\_]+)\\]
\\[link:([\\w|\\:|\\/|\\.|\\-|\\_|\\(|\\)|\\#|\\=]+) ([\\w|\\:|\\/|\\.|\\-|\\_|\\s]+)\\]
\\[list(?P<type>=1)?\\](?P<items>[\\W\\D\\w\\s]*?)\\[/list\\]
\\[mod = L=...., N=..., SHA-(?P<sha>1|224|256|384|512)\\]
\\[number:([A-Za-z\\.\\_]*)\\]
\\[question\\((
\\[quote:([0-9]*)[;]{0,1}([A-Za-z0-9\\-\\_\\.\\#\\ ]*)\\]
\\[quote\\b[^]]*\\]((?>[^[]++|\\[(?!/?quote))*)\\[/quote\\]
\\[ro.build.version.sdk\\]:\\s+\\[(?P<sdkVersion>\\d+)\\]
\\[ro.product.model\\]:\\s+\\[(?P<modelName>.*)\\]
\\[Session\\\\(.*)\\]
\\[whois\\s???]
\\[youtube:([A-Za-z0-9\\_\\-]{11})\\]
\\[youtube-audio:([A-Za-z0-9\\_\\-]{11})\\]
\\'\\\\
\\-\\\\
\\'\\!\\s\\.\\?\\,\\-\\&\\;\\:\\\\
\\\\'\\{\\\\i\\}
\\\\\\]|\\\\\\\\
\\]|\\\\
\\^(?P<due>[^\\s]+)
\\^(?P<exponent>-?\\d+)
\\\\\\^\\{\\\\i\\}
\\\\\\^\\{\\\\j\\}
\\^\\{\\\\prime\\\\prime\\}
\\^\\+(?P<due>\\d+)
\\^{?([\\w,()\\\\]+)}?
\\^{?([\\w\\\\]+)}?
\\^|\\\\z|\\$|\\\\
\\^m/(.*?[^\\\\])/
\\^s/(.*?[^\\\\])/(.*?[^\\\\])/
\\\\\\_
\\_
\\\\_
\\_$
\\_$$\\.del
\\_$$\\.tmp
\\_$+
\\_((?:message))$
\\_(.)
\\_(.*?)\\_(.*)
\\_(.+)
\\_(?:(?:name)|(?:type))$
\\_(?P<id>\\d+)$
\\_(?P<type>\\w+)\\_\\d+$
\\_([^\\_]+)\\_
\\_([a-z])
\\_([a-z]+)
\\_(\\d+)
\\_(\\d+)\\.
\\_(\\w)
\\_(\\w{1})
\\_(path|url)\\z
\\_.
\\_.*
\\_.+
\\_.+?\\_
\\_?[Aa]nd
\\_?[Ff]inal
\\_?[Nn][tT]first\\_?
\\_?[Nn][tT]only\\_?
\\_?[tT]only\\_?
\\_[^_]*$
\\_[0-9]*
\\_[0-9]*\\.php
\\_[0-9]+$
\\_[a-z0-9\\-]{36}
\\_[a-z0-9]+(\\.[^\\.]+)$
\\\\_[a-zA-Z\u00e4\u00f6\u00fc\u00c4\u00d6\u00dc\u00e9\u00e8\u00e1\u00e0\u00f3\u00f2\u00e7]*\\\\_
\\_[A-Za-z0-9]$
\\_\\#\\_
\\_\\$\\d+\\_
\\_\\_([^\\s*].*?)\\_\\_|\\b__([^\\s_].*?)__\\b
\\_\\_[^\\_]*\\_\\_
\\_\\_[a-zA-Z0-9]+
\\_\\_c$
\\_\\_version\\_\\_ \\= \\'[^\\']+\\'
\\_\\<
\\_\\=['\"]['\"].*\\_\\=['\"]['\"]
\\_\\d\\d\\d\\d
\\_\\d{1,10}$
\\_\\d+\\_
\\_\\s*\\(\\s*(u?r?)\\'(.*?)\\'\\s*\\)
\\_\\w*
\\_\\w+$
\\___(.+?)\\___
\\__END__(\\n|$)
\\__END__(\\n|\\Z)
\\__END__(\\r?\\n|\\Z)
\\\\__RecexpRefPrefix__
\\__root__\\.__block__
\\__root__\\.a\\.b\\.2
\\__root__\\.a\\.b\\.2\\.d
\\__root__\\.a\\.b\\.x
\\__root__\\.box\\.1\\.trololol
\\__root__\\.lol
\\_{1,}
\\_{2,}
\\_|\\-
\\\\_|\\\\%|_|%
\\_|\\s+
\\_+
\\_+$
\\_+(\\w)
\\_+|\\s{2,}
\\_before\\_type\\_cast$
\\_by$
\\_collection$
\\_connection$
\\_const$
\\_controller$
\\_ctl
\\_forms.css
\\_id$
\\_ID\\]$
\\_ip$
\\_js$
\\_mac$
\\_paq\\.push\\(\\[\\'disableCookies\\'\\]\\)\\;
\\_PLAN
\\_PM$
\\_reply$
\\_sharedData \\= (.*?)\\;\\<\\/script\\>
\\_styles\\.[\\_\\.a-zA-Z0-9]+
\\_time$
\\_ws_
\\`(.*)\\<#.*\\>\\`\\_
\\`([^\\`]+)\\s\\<\\#[^\\`]+\\>\\`\\_\\_
\\`(http:\\/\\/[A-Za-z0-9\\/\\%\\&\\=\\-\\_\\\\\\.]+)\\`
\\`[-A-Za-z0-9+=*^<>?,;/\\\\]+:?
\\`[-A-Za-z0-9+=*^<>?,;\\/\\\\]+:?
\\\\`\\{\\\\i\\}
\\`\\Q$path\\E' saved \\[(\\d+)/\\d+\\]
\\\\`|\\\\\\\\
\\{(
\\{(((?>[^\\{\\}]+)|(?R))*)\\}
\\{(([^\\}].*)?(,|\\|)(.*[^\\\\])?)\\}
\\{(?:
\\{(?:[^{}]|(?:\\g<0>))*\\}
\\{(?:[^{}]|(?R))*\\}
\\{(?:def\\:)(.*?)(?:})(.*?)\\{.def\\:(\\g1)
\\{(?<part>[a-zA-Z0-9\\_\\-]+)\\}
\\{(?P<cmd>\\w+)(?::?\\s*(?P<arg>.*))?\\}
\\{(?P<directive>[^}]+)\\}|(?P<terms>[^{}\\s]+)|(?P<space>\\s+)
\\{(?P<key>[^}\\r\\n ]+)\\}
\\{(?P<namespace>[^\\}]+)\\}.+
\\{(?P<param>[a-z_]+)(?:\\[(?P<start>\\d+)?:(?P<end>\\d+)?\\])?(?P<formatter>[:!][^\\}]+)?\\}
\\{(?P<parameter>\\w+)(?:\\/(?P<condition>(?:(?>\\\\)\\/|[^\\/])+)\\/)?(?P<optional_sign>\\??)\\}
\\{(?P<parameter>\\w+)\\}
\\{(?P<resource>[^}]+)_\\}
\\{(?P<var>[_a-zA-Z][_a-zA-Z0-9]*):(?P<re>.+)\\}
\\{(?P<var>[_a-zA-Z][_a-zA-Z0-9]*)\\}
\\{(?P<variable>\\w+).?(?P<function>([\\w\\.])*):?(?P<parameters>(\\w|,| )*)\\}
\\{([
\\{([a-z0-9\\-\\_]+)\\}
\\{([a-z0-9\\_\\.\\#]+)\\}
\\{([a-zA-Z\\-\\_]+)\\}
\\{([a-zA-Z\\_\\-]+)\\}
\\{(\\$[A-Za-z0-9\\_'\\\"\\[\\]]+)\\}
\\{(\\\\*)\\\\(0*[1-9][0-9]*)}
\\{(\\pL\\pM*)\\}($re)
\\{(\\w++)(<.*?>)?(\\?[^\\}]*+)?\\}
\\{:(
\\{:(?!:|\\/)(
\\{@([^\\p{javaWhitespace}]+)((?:.|\\n)*)\\}
\\{[\\n\\r]*(\\\\\\*[\\n\\r]*)?\\\\([a-zA-Z]+)([^a-zA-Z])
\\{[^,}]*[^,}0-9][^,}]*,(([^}\\\\]|\\\\.)*)\\}
\\{[^\\}]*\\\\p(\\d+)(\\\\[^\\}]+\\}|\\})
\\{[^\\}]*\\\\p\\d+(\\\\[^\\}]+\\}|\\}).*?($|\\{\\\\p0\\})
\\{[^]*\\n
\\{[0-9a-zA-Z\\+\\-\\*\\/\\#\\:\\,\\.\\_\\ ]+\\}
\\{[A-Za-z\\d-\\_]+\\}
\\{[a-zA-Z0-9\\.\\_]+\\:([^\\}]*)\\}
\\{[a-zA-Z0-9\\.\\_]+\\}
\\{\\%-?[\\s\\n]*include[\\s\\n]+(?P<tmpl>[^\\s\\n]+)[\\s\\n]+with[\\s\\n]+(?P<context>.*?)[\\s\n]*-?\\%\\}
\\{\\%\\s*use\\s+atoms\\s*\\'?(?P<tmpl>[^\\s]+)\\'?\\s*as\\s*\\'?(?P<context>\\w+)\\'?\\s*\\%\\}
\\{\\\\([ibu])\\}
\\{\\\\([ibu])1\\}
\\{\\\\\\*\\\\htmltag\\d+[^\\}<]+(<.+>)\\}
\\{\\\\\\*\\\\htmltag\\d+[^\\}<]+\\}
\\{\\@include ([a-zA-Z0-9\\/\\-\\_]+)\\}
\\{\\{ (?P<key>\\w+) \\}\\}
\\{\\{(?P<m>[a-zA-Z_]+)\\}\\}
\\{\\{(?P<target>.*?)\\}\\}
\\{\\{?\\s*(begin)(?:\\s+(.*?))?\\}\\}?((?:(?R)|.)*?)\\{\\{?\\s*(?:end(?:\\s+\\2)?)?\\s*\\}\\}?|\\{\\{(\\??(?:[^\\}'\"]*(['\"]).*?(?<!\\\\)\\5)*.*?)\\}\\}|\\{\\s*(if|foreach|section|for|while|switch|literal|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup|capture|php|strip|textformat|dynamic|select|joincalculator|function|helper|form|_if|_foreach|_for|shortcut|block|optgroup)(\\s(?:[^\\}'\"]*(['\"]).*?(?<!\\\\)\\8)*.*?)?\\}((?:(?R)|.)*?)\\{/\\s*\\6?\\s*\\}|\\{(\\??(?:[^\\}'\"]*(['\"]).*?(?<!\\\\)\\11)*.*?)\\}|\\r?\\n
\\{\\{\\?((?:(?!
\\{\\{\\{\\{(?P<var>.*?)\\}\\}\\}\\}
\\{\\{\\p{Alnum}+}}
\\{\\\\it 
\\{\\\\it ([^{}]*)\\}
\\{\n                    # \"{@}\" is not a valid inline tag. This ensures that\n                    # we do not treat it as one, but treat it literally.\n                    (?!@\\})\n                    # We want to capture the whole tag line, but without the\n                    # inline tag delimiters.\n                    (\\@\n                        # Match everything up to the next delimiter.\n                        [^{}]*\n                        # Nested inline tag content should not be captured, or\n                        # it will appear in the result separately.\n                        (?:\n                            # Match nested inline tags.\n                            (?:\n                                # Because we did not catch the tag delimiters\n                                # earlier, we must be explicit with them here.\n                                # Notice that this also matches \"{}\", as a way\n                                # to later introduce it as an escape sequence.\n                                \\{(?1)?\\}\n                                |\n                                # Make sure we match hanging \"{\".\n                                \\{\n                            )\n                            # Match content after the nested inline tag.\n                            [^{}]*\n                        )* # If there are more inline tags, match them as well.\n                           # We use \"*\" since there may not be any nested inline\n                           # tags.\n                    )\n                \\}
\\{\n                # \"{@}\" is not a valid inline tag. This ensures that we do not treat it as one, but treat it literally.\n                (?!@\\})\n                # We want to capture the whole tag line, but without the inline tag delimiters.\n                (\\@\n                    # Match everything up to the next delimiter.\n                    [^{}]*\n                    # Nested inline tag content should not be captured, or it will appear in the result separately.\n                    (?:\n                        # Match nested inline tags.\n                        (?:\n                            # Because we did not catch the tag delimiters earlier, we must be explicit with them here.\n                            # Notice that this also matches \"{}\", as a way to later introduce it as an escape sequence.\n                            \\{(?1)?\\}\n                            |\n                            # Make sure we match hanging \"{\".\n                            \\{\n                        )\n                        # Match content after the nested inline tag.\n                        [^{}]*\n                    )* # If there are more inline tags, match them as well. We use \"*\" since there may not be any\n                       # nested inline tags.\n                )\n            \\}
\\{\\p{ASCII}*?\\}
\\{\\\\pict[\\s\\S]+?\\\\bliptag\\-?\\d+(\\\\blipupi\\-?\\d+)?(\\{\\\\\\*\\\\blipuid\\s?[\\da-fA-F]+)?[\\s\\}]*?
\\{\\\\pntext[^\\}]*\\}
\\{\\s*((
\\{\\s*(?P<pos>\\d+)\\s*,\\s*(?P<len>\\d+)\\s*\\}
\\{\\s*\\p{Graph}+\\s*\\}
\\{\\s+\\\"Fn::GetAtt\\\"\\: \\[\\s+(?<key>
\\{\\s+\\\"Ref\\\"\\:\\s+(?<ref>
\\{{1,2}[a-z0-9_.-\\s]+\\}{1,2}
\\{code(:([a-z]+))?\\}([^]*?)\\{code\\}
\\{gfm-extraction-(\\h{32})\\}
\\{node\\:[a-zA-z0-9\\_\\-\\/]*\\}
\\{quote\\}([^]*)\\{quote\\}
\\{slug\\:[a-zA-z0-9\\_\\-\\/]*\\}
\\\\\\\\|(?<!\\\\)([\\\\\\s&|><*?\\[\\]{}()\\$\\%\\@'\"`])
\\\\\\\\|(\\\\)?'|([\\\\])(?=[$\"\\\\])
\\|(\\_[^\\|]+)\\|([\\ ]+)\\|
\\\\|/|\\||:|\\?|\\*|\\\"|<|>|\\p{Cntrl}
\\\\\\\\|\\\\
\\\\'|\\\\\\\\
\\'|\\\\
\\'|\\\"|\\\\
\\\\\\\\|\\\\(.)
\\|\\\\(\\_[^\\s]+)\\|
\\|\\\\(\\_[^\\s]+)\\|\\s+image
\\\\\\\\|\\\\(\\d+)
\\-|\\_
\\\\\\\\|\\\\_|\\\\%|_|%
\\-|\\_|\\[|\\]|\\(|\\)|\\{|\\}|\\r?\\n|\\r|\\t
\\|\\Q$action\\E\\|
\\|\\s*(?P<filters>[a-zA-Z][_.a-zA-Z0-9]*(?:,\\s*[a-zA-Z][_.a-zA-Z0-9]*)*)\\s*$
\\|\\s+bench\\_.*(Str[a-z]*)\\s+\\|\\s+([\\d\\.\\,]+)([\\S]+)\\s+\\|
\\\\\\\\|\\\\u\\w{4}|\\\\U\\w{8}|\\\\N\\{([^}\\\\]|\\\\.)+\\}
\\\\|_(?!.*\\\\)
\\||\\\\vert|\\\\Vert|\\\\mvert|\\\\mid
\\\\\\}|\\\\\\\\
\\\\~\\{\\\\i\\}
\\+ .{3,}(
\\+ \\d+ #<Thread:0x\\h+ run> 
\\+( (?P<data>.*))?
\\+([$chanmodes->[0]])
\\+([^$chanmodes->[3]])
\\-+){\n\t\tmy $stlin = length $`;\n\t\tmy $numdel = length $&;\n\n\t\tmy @confl = map {exists $ins1{$_} ? 
\\-+){\n\t\tmy $stlin = length $`;\n\t\tmy $numdel = length $&;\n\n\t\tmy @confl = map {exists $ins2{$_} ? 
\\\\+[^\\\\]+\\\\+\\.\\.$
\\\\+[^\\\\]+\\\\+\\.\\.\\\\
\\+\\\\\\\\
\\+\\+ | -- | ~ | && | \\|\\| | \\\\(?=\\n) | << | >>>? | == | != 
\\+\\+ | -- | ~ | && | \\|\\| | \\\\(?=\\n) | << | >>>? | ===\n               | !== 
\\+\\+subject:(?P<subject>.*?)\\+\\+
\\+|%\\h\\h
\\+|\\!|\\-|&(gt|lt|amp);|\\/\\=|\\||\\@|\\:|\\.|\\+{2}|\\:|\\*|\\=|#|\\.{2}|(\\\\)[a-zA-Z_]
\\-+BEGIN CERTIFICATE.+\\-+(?P<public>[^-]+)\\-+END CERTIFICATE.+\\-+
\\+OK (?P<hostname>\\S+) .*
\\<!--(?P<content>.*?)-->
\\<(?P<link>.*)\\>\\; rel\\=\\\"(?P<rel>.*)\\\"
\\<([A-Za-z0-9\\_\\-\\.]+)\\@([A-Za-z0-9\\_\\-\\.]+)\\.([A-Za-z0-9\\_\\-\\.]+)?(\\>|\\;|\\:|\\ )
\\<(\\d+)\\>(1) (\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.\\d\\d\\d\\d\\d\\d)?\\+00:00) ([a-z0-9\\-\\_\\.]+) ([a-z0-9\\.-]+) ([a-z0-9\\-\\_\\.]+) (\\-) (.*)$
\\<[^\\s\\>]*ins[^\\S\\>]*class=\"adsbygoogle\"[^\\S\\>]*style=\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"[^\\>]*data-ad-client=\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"[^\\>]*data-ad-slot=\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"[^\\<]*\\<\\/ins\\>
\\<\\=\\_$start\\_\\=\\>
\\<\\s*([^\\s\\>]+)((?:[^\\>]*\\bid[ \\t]*=\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|[^\\>]*)[^\\>]*)style=\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"((?:[^\\>]*\\bid[ \\t]*=\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|[^\\>]*)[^\\>]*\\>)
\\<AccountNum\\>(?P<num>.*)\\<\\/AccountNum\\>
\\<adj>
\\<amount>
\\<b>(((?!\\</b>).)*)\\</b>
\\<b>(.+?)\\</b>
\\<BR>(\\<i>(.*))&nbsp;
\\<BR>.*?</SMALL>(.*)$
\\<CardSecVal\\>(?P<num>.*)\\<\\/CardSecVal\\>
\\<code>(((?!\\</code>).)*)\\</code>
\\<color>
\\<comment>(((?!\\</comment>).)*)\\</comment>
\\<conjunction>
\\<dl>\\<dt>\\<b>(\\d+)\\.
\\<em>(((?!\\</em>).)*)\\</em>
\\<error>(((?!\\</error>).)*)\\</error>
\\<error>(((?!\\</strike>).)*)\\</error>
\\<exclamation>
\\<facialexpression>
\\<firstname>
\\<i>(((?!\\</i>).)*)\\</i>
\\<img .* src=\"https?:(?P<src>.+\\.(?:png|jpg))\" .* />(?P<content>.+)
\\<img [^\\<\\>]*src=\\\"[^\\\"]*(
\\<info>(((?!\\</info>).)*)\\</info>
\\<input\\stype\\=\"?hidden\"?\\sname\\=\"?([\\w\\_]+)\"?\\svalue\\=\"?([\\w\\d\\/\\_]+)\"?\\>
\\<lastname>
\\<message\\>(?P<message>.+)\\</message\\>
\\<module[\\s\\S]*from '(?P<it>[\\s\\S]*)'\\>
\\<no>
\\<noun>
\\<option\\svalue\\=\\\"([0-9]+)\\\">([\\w\\s\\-\\_\\.\\,]+)\\<\\/option\\>
\\<p\\>(?P<msg>\\<strong\\s.*?)\\</p\\>
\\<p\\>\\[view:\\&quot\\;([a-z\\:\\.\\_\\-]*)\\&quot\\;\\]\\<\\/p\\>
\\<p>
\\<p>(.+?)</p>
\\<prototype.*\\snamespace=\"(?:(?<namespace>(?:[^\\\\]+(?<separator>\\\\(?:\\\\)?){1})))\"
\\<relationship>
\\<script>.+?<\\/script>
\\<SHOP\\_ITEM\\:(\\d{1,10})\\:(.*?)\\:\\>
\\<span class=\\\"MathJax\\_Preview\\\"\\>.+?\\<\\/span\\>\\<script type=\"math\\/tex\"\\>
\\<strike>(((?!\\</strike>).)*)\\</strike>
\\<strong>(.+?)\\</strong>
\\<success>(((?!\\</strike>).)*)\\</success>
\\<success>(((?!\\</success>).)*)\\</success>
\\<TD ALIGN=left>\\<FONT SIZE=2>\\<b>\\<A HREF=\"([^\"]+)\">(.*)\\</FONT>\\</A>\\<BR>
\\<TD>&nbsp;\\</TD>
\\<title>
\\<title>(.*?)<\\/title\\>
\\<u>(((?!\\</u>).)*)\\</u>
\\<verb>
\\<warning>(((?!\\</warning>).)*)\\</warning>
\\<yes>
\\\\=\\{\\\\i\\}
\\=\\s([A-Z0-9\\_]+)
\\=|\\@|\\#|\\||\\+|\\-|\\,|\\.|\\!|\\?|\\\"|\\'|\\:|\\;|\\(|\\)|\\[|\\]|\\{|\\}|\\/|\\\\
'\\\\>(.*?)\\\\
\\\\\\>|\\\\\\\\
\\0\\0\\_($i)\\_\\0\\0
\\0|\\\"|\\+|\\,|;|<|>|=|\\\\
\\0|\\(|\\)|\\*|\\\\
\\011\\Q1sometext\\E\\011\\Q2sometext\\E
\\015|\\Q$end\\E{1,2}\\s*\\r?$
\\033\\[38;5;(?P<color>\\d+);*\\d*m
\\\\1
\\\\\\1
\\1
\\1(\\P{P\u0000[}()/
\\1[a]
\\2
\\\\2
\\2147483648
\\\\2a
\\\\2C
\\\\2f 
\\\\2f
\\2LITERAL\\\\1LITERAL\\2
\\\\3A
\\3a
\\\\3a
\\\\3B
\\\\3C
\\\\3c
\\\\3D
\\\\3E
\\\\3e
\\\\3F
\\\\5B
\\\\5c
\\\\5D
\\\\5E
\\\\7B
\\\\7C
\\\\7D
\\\\7E
\\8
\\\\9
\\\\9$
\\99
\\A (?&PerlDocument) \\Z $grammar
\\A (?:\\P{IsLower}+ \\s)+ ([A-Z]+) \\s -
\\A (?i: \\Q$username\\E ) / \\Q$rest\\E \\z
\\A (\\s*) \\\\include\\{ ([^ \\} ]+) \\} 
\\A *([a-zA-Z]([\\-\\_]?[a-zA-Z0-9]+)* *[\\:\\=] *)
\\A *[a-zA-Z\\_][a-zA-Z0-9\\_]*[\\!\\?]?
\\A [\\t \\P{Cntrl}]* \\z
\\A \\$ \\Q$name\\E \\z
\\A \\p{Any}* \\z
\\A \\Q$class: \\E
\\A \\Q$exactly_perl_version\\E
\\A \\Q$tag_end\\E 
\\A \\Qstat() on unopened filehandle\\E
\\A \\s*\n        (?P<release>.*?)\n        (?:\n           -(?P<post>\\d+)\n           -g(?:[\\da-f]+)               # SHA\n        )?\n        (?P<dirty>-dirty)?\n        \\s* \\Z
\\A \\x00 \\x01 \\xff+ \\x00 \\Q$hdr\\E 
\\A--- END \\Q$this->{id}\\E\\Z
\\A# starting GPS (?P<epoch>\\d+) duration (?P<duration>\\d+)\\Z
\\A#![^\\n]*\\R?
\\A#(
\\A#?(?<hex_color>[[:xdigit:]]{3}{1,2})\\z
\\A#?+[0-9a-f]{3}(?:[0-9a-f]{3})?\\z
\\A#\\{((?>[^{}]|(\\{(?>[^{}]|\\g<1>)*\\}))*)\\}
\\A#\\h{6}\\Z
\\A#\\s*frozen[_-]string[_-]literal:\\s*(
\\A#<Azure::Armrest::BaseModel:0x\\h+\\n
\\A#<Object:0x\\h+ (?:@foo=\"value\", @bar=42|@bar=42, @foo=\"value\")>\\z
\\A#<Object:0x\\h+ @ivar=:value>\\z
\\A#<Object:0x\\h+ @recur=#<Object:0x\\h+ \\.\\.\\.>>\\z
\\A#<Object:0x\\h+>\\z
\\A#x\\h+
\\A$template_dir[/\\\\](.*)\\z
\\A%(?P<magic>.+?)(?P<code>\\s+.*)?\\Z
\\A%(?P<magic>\\S*)\\Z
\\A%set (?P<setting>\\S*)\\Z
\\\\A(
\\A(
\\A--(
\\A((
\\A((.*/)*(?P<obs>[^/]+)-(?P<ifo>[A-Z][0-9])_LOSC_((?P<tag>[^/]+)_)?(?P<samp>\\d+)_(?P<version>V\\d+)-(?P<strt>[^/]+)-(?P<dur>[^/\\.]+)\\.(?P<ext>[^/]+))\\Z
\\A((?![ \\t]*(\\{|\\n)|.*?\\S.*?
\\A((?:
\\A((?:.|\\n)*?
\\A((?:[^\"\\\\]|\\\\.)*)\"
\\A((?:[^\\\\\\Q$Separator\\E]+|\\\\.)*)(?:\\Q$Separator\\E|\\Z)
\\A((?>.+?
\\A(([\\w-]+/)?\\w+/)?(?P<flavor>[\\w-]+)-stemcell-(?P<version>[\\.\\d]+)-(?P<name>(?P<inf_name>\\w+)-(?P<hv_name>\\w+(-\\w+)?)-(?P<os_name>centos|ubuntu|windows)(?P<os_version>-trusty|-xenial|-lucid|1803|2016|2012R2|-\\d+)?(?P<agent_type>-go_agent)?(?P<disk_fmt>-raw)?)\\.tgz\\z
\\A(([^\\*\\=\\:\\.,]+)|(
\\A'(([^'\\\\]|\\\\.)*)'
\\A((\"((?:[^\"\\\\]|\\\\.)*?)\")|('(?:[^'\\\\]|\\\\.)*?'))
\\A((\"((?:[^\"\\\\]|\\\\.)*?)\")|('(?:[^'\\\\]|\\\\.)*?'))\\Z
\\A((\"((?:[^\"\\\\]|\\\\.)*?)\")|('(?:[^'\\\\]|\\\\.)*?')|true|false|nil)\\Z
\\A(-)?P((?P<years>[\\d\\.]+)Y)?((?P<months>[\\d\\.]+)M)?((?P<weeks>[\\d\\.]+)W)?((?P<days>[\\d\\.]+)D)?(T((?P<hours>[\\d\\.]+)H)?((?P<minutes>[\\d\\.]+)M)?((?P<seconds>[\\d\\.]+?)S)?)?\\z
\\A(.*(?<!\\\\)\")
\\A(.*)(
\\A(.*)(?<!\\\\)\\\\
\\A(.*):(
\\A'(.*)'::(?:
\\A(.*)\\s+(
\\A(.*?)((?:\\s+
\\A(.*?)(?<!\\\\)
\\A(.*?)([$]+|\\|?\\s*-?
\\A(.*?\\S.*?
\\A(.*\\n)*search\\s{1,}(.*\\s{1,})*(?P<goal>[a-zA-Z0-9-]{1,63}.svc.([a-zA-Z0-9-]{1,63}\\.)*[a-zA-Z0-9]{2,63})
\\A(.*\\n)*search\\s{1,}(.*\\s{1,})*(?P<goal>svc.([a-zA-Z0-9-]{1,63}\\.)*[a-zA-Z0-9]{2,63})
\\A(.{
\\A(.{0,
\\\\A(.{0,
\\A(?
\\A(?!
\\A(?!.*[<>?%&\\^*
\\A(?!\\/|.*([\\/.]\\.|\\/\\/|@\\{|\\\\\\\\))(?!.*\\\\)[^\\040\\177 ~^:?*\\[;]+(?<!\\.lock|[\\/.])\\z
\\A(?:
\\\\A(?:
\\A--(?:
\\A(?: ([^\\\"\\s\\\\]+) | \\\\(.) )
\\A(?:!|
\\A(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~\\/?])*\\z
\\A(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])*\\z
\\A(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])+(?:\\/(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])*)*\\z
\\A(?:%\\h\\h|[!$&-.0-;=A-Z_a-z~])*\\z
\\A(?:%\\h\\h|[^%]+)*\\z
\\A(?:(
\\A(?:(.*?)_)?(
\\A(?:(?:[A-Z](?:[A-Z0-9_]|[\\x{00C0}-\\x{00D6}]|[\\x{00D8}-\\x{00F6}]|[\\x{00F8}-\\x{02FF}]|[\\x{0370}-\\x{037D}]|[\\x{037F}-\\x{1FFF}]|[\\x{200C}-\\x{200D}]|[\\x{2070}-\\x{218F}]|[\\x{2C00}-\\x{2FEF}]|[\\x{3001}-\\x{D7FF}]|[\\x{F900}-\\x{FDCF}]|[\\x{FDF0}-\\x{FFFD}]|[\\x{10000}-\\x{EFFFF}])*)?:)
\\A(?:(?:[A-Z0-9_]|[\\x{00C0}-\\x{00D6}]|[\\x{00D8}-\\x{00F6}]|[\\x{00F8}-\\x{02FF}]|[\\x{0370}-\\x{037D}]|[\\x{037F}-\\x{1FFF}]|[\\x{200C}-\\x{200D}]|[\\x{2070}-\\x{218F}]|[\\x{2C00}-\\x{2FEF}]|[\\x{3001}-\\x{D7FF}]|[\\x{F900}-\\x{FDCF}]|[\\x{FDF0}-\\x{FFFD}]|[\\x{10000}-\\x{EFFFF}])*)
\\A(?:(?:Set-Registration: (.+)|[A-Za-z\\-]+: .+)\\R)*\\R
\\A(?:(?<IP-literal>\\[(?:(?<IPv6address>(?:\\h{1,4}:){6}(?<ls32>\\h{1,4}:\\h{1,4}|(?<IPv4address>(?<dec-octet>[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5]|\\d)\\.\\g<dec-octet>\\.\\g<dec-octet>\\.\\g<dec-octet>))|::(?:\\h{1,4}:){5}\\g<ls32>|\\h{,4}::(?:\\h{1,4}:){4}\\g<ls32>|(?:(?:\\h{1,4}:)?\\h{1,4})?::(?:\\h{1,4}:){3}\\g<ls32>|(?:(?:\\h{1,4}:){,2}\\h{1,4})?::(?:\\h{1,4}:){2}\\g<ls32>|(?:(?:\\h{1,4}:){,3}\\h{1,4})?::\\h{1,4}:\\g<ls32>|(?:(?:\\h{1,4}:){,4}\\h{1,4})?::\\g<ls32>|(?:(?:\\h{1,4}:){,5}\\h{1,4})?::\\h{1,4}|(?:(?:\\h{1,4}:){,6}\\h{1,4})?::)|(?<IPvFuture>v\\h+\\.[!$&-.0-;=A-Z_a-z~]+))\\])|\\g<IPv4address>|(?<reg-name>(?:%\\h\\h|[!$&-.0-9;=A-Z_a-z~])*))\\z
\\A(?:(?<step>(?:\\*|(?:(?<atom>\\d+|sun|mon|tue|wed|thu|fri|sat)(?:-\\g<atom>)?))(?:/\\d+)?)(?:,\\g<step>)*)\\z
\\\\A(?:(?m:\\\\s*)(?:
\\A(?:(['\"])(.*?)(?<!\\\\)\\1)
\\A(?:([\\w\\#\\_][\\w\\-\\.]*))
\\A(?:.*?(?=\\=\\Q$item[2]\\E))
\\A(?:.*?(?=\\Q$item[2]\\E))
\\A(?:[ \\t\\f\\v]*(?:
\\A(?:[%@\\$][\\w\\#\\_][\\w\\-\\.]*)
\\A(?:[\\/-\\w.]+)
\\A(?:[\\x09\\x0b\\x0c\\x20\\xa0\\p{IsZs}]|\\/\\/.+?(?=[$nl])|\\/\\*[^$nl]*?\\*\\/)+
\\A(?:[^\"]*[^\"\\\\])
\\A(?:[^\\\\]|
\\A(?:[^']*[^'\\\\])
\\A(?:[0-9a-zA-Z\\.\\_\\-]+\\/?)+\\z
\\A(?:[0-9a-zA-Z\\.\\_\\-]+\\\\?)+\\z
\\A(?:\\\\)
\\A(?:\\\\C-\\\\M|\\\\c\\\\M)
\\A(?:\\C-h|\\x7F)\\z
\\A(?:\n                (\n                    [A-Z][A-Z]+ |\n                    [A-Z][a-z]+ |\n                    [a-z]+ |\n                    [0-9]+ |\n                    [^A-Za-z0-9]+\n                )\n                (?{ push @res, $1 })\n            )+\\z
\\A(?:\n         =[^>=~] | (,) | (;) | (\\)) | \n         (in(?!
\\A(?:\\p{Hiragana}|\\p{Katakana}|[\u30fc\uff0d]|[\u4e00-\u9fa0\u3005])+
\\A(?:^\\h*$)*^(\\h*)\\S
\\A(?:^\\s*\\S*?(?=\\Q$item[1]\\E|\\s|$))
\\A(?:_col|[a-zA-Z0-9]|%\\h\\h)([a-zA-Z0-9\\._]|%\\h\\h)*\\z
\\A(?:0x)?\\h+\\Z
\\A(?:1[0-9][0-9]{2}|20[0-$prevDecade][0-9]|20$decade[0-$year])\\Z
\\A(?:nil||\\-|\\\\N)\\z
\\A(?:null||\\-|\\\\N)\\z
\\A(?:U\\+)?(\\h+)\\z
\\A(?<hfield>(?:%\\h\\h|[!$'-.0-;@-Z_a-z~])*=(?:%\\h\\h|[!$'-.0-;@-Z_a-z~])*)(?:&\\g<hfield>)*\\z
\\A(?<name>^[-!
\\A(?<paren>a\\g<paren>*b)+\\z
\\A(?<relative-ref>(?<relative-part>\\/\\/(?<authority>(?:(?<userinfo>(?:%\\h\\h|[!$&-.0-;=A-Z_a-z~])*)@)?(?<host>(?<IP-literal>\\[(?<IPv6address>(?:\\h{1,4}:){6}(?<ls32>\\h{1,4}:\\h{1,4}|(?<IPv4address>(?<dec-octet>[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5]|\\d)\\.\\g<dec-octet>\\.\\g<dec-octet>\\.\\g<dec-octet>))|::(?:\\h{1,4}:){5}\\g<ls32>|\\h{1,4}?::(?:\\h{1,4}:){4}\\g<ls32>|(?:(?:\\h{1,4}:){,1}\\h{1,4})?::(?:\\h{1,4}:){3}\\g<ls32>|(?:(?:\\h{1,4}:){,2}\\h{1,4})?::(?:\\h{1,4}:){2}\\g<ls32>|(?:(?:\\h{1,4}:){,3}\\h{1,4})?::\\h{1,4}:\\g<ls32>|(?:(?:\\h{1,4}:){,4}\\h{1,4})?::\\g<ls32>|(?:(?:\\h{1,4}:){,5}\\h{1,4})?::\\h{1,4}|(?:(?:\\h{1,4}:){,6}\\h{1,4})?::)|(?<IPvFuture>v\\h+\\.[!$&-.0-;=A-Z_a-z~]+)\\])|\\g<IPv4address>|(?<reg-name>(?:%\\h\\h|[!$&-.0-9;=A-Z_a-z~])+))?(?::(?<port>\\d*))?)(?<path-abempty>(?:\\/(?<segment>(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])*))*)|(?<path-absolute>\\/(?:(?<segment-nz>(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])+)(?:\\/\\g<segment>)*)?)|(?<path-noscheme>(?<segment-nz-nc>(?:%\\h\\h|[!$&-.0-9;=@-Z_a-z~])+)(?:\\/\\g<segment>)*)|(?<path-empty>))(?:\\?(?<query>[^#]*))?(?:\\#(?<fragment>(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~\\/?])*))?)\\z
\\A(?<sign>[-+]?)0[xX](?<frac>\\.\\h+|\\h+(?:\\.\\h*)?)[pP](?<exp>[-+]?\\d+)
\\A(?<sign>[-+]?)0[xX](?<frac>\\.\\h+|\\h+(?:\\.\\h*)?)[pP](?<exp>[-+]\\d+)
\\A(?<step>(?:\\*|(?:(?<atom>\\d+||jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)(?:-\\g<atom>)?))(?:/\\d+)?)(?:,\\g<step>)*\\z
\\A(?<symbol>[
\\A(?<URI>(?<scheme>[A-Za-z][+\\-.0-9A-Za-z]*):(?<hier-part>\\/\\/(?<authority>(?:(?<userinfo>(?:%\\h\\h|[!$&-.0-;=A-Z_a-z~])*)@)?(?<host>(?<IP-literal>\\[(?:(?<IPv6address>(?:\\h{1,4}:){6}(?<ls32>\\h{1,4}:\\h{1,4}|(?<IPv4address>(?<dec-octet>[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5]|\\d)\\.\\g<dec-octet>\\.\\g<dec-octet>\\.\\g<dec-octet>))|::(?:\\h{1,4}:){5}\\g<ls32>|\\h{1,4}?::(?:\\h{1,4}:){4}\\g<ls32>|(?:(?:\\h{1,4}:)?\\h{1,4})?::(?:\\h{1,4}:){3}\\g<ls32>|(?:(?:\\h{1,4}:){,2}\\h{1,4})?::(?:\\h{1,4}:){2}\\g<ls32>|(?:(?:\\h{1,4}:){,3}\\h{1,4})?::\\h{1,4}:\\g<ls32>|(?:(?:\\h{1,4}:){,4}\\h{1,4})?::\\g<ls32>|(?:(?:\\h{1,4}:){,5}\\h{1,4})?::\\h{1,4}|(?:(?:\\h{1,4}:){,6}\\h{1,4})?::)|(?<IPvFuture>v\\h+\\.[!$&-.0-;=A-Z_a-z~]+))\\])|\\g<IPv4address>|(?<reg-name>(?:%\\h\\h|[!$&-.0-9;=A-Z_a-z~])+))?(?::(?<port>\\d*))?)(?<path-abempty>(?:\\/(?<segment>(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])*))*)|(?<path-absolute>\\/(?:(?<segment-nz>(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])+)(?:\\/\\g<segment>)*)?)|(?<path-rootless>\\g<segment-nz>(?:\\/\\g<segment>)*)|(?<path-empty>))(?:\\?(?<query>[^#]*))?(?:\\#(?<fragment>(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~\\/?])*))?)\\z
\\A(?=.*
\\A(?=[A-Z])(.*?)(
\\A(?a)[a-zA-Z]\\w*\\Z
\\A(?-mix:\\p{^Word})
\\A(?-mix:\\p{Word})
\\A(?P<client_ip>(\\d+\\.){3}\\d+):(?P<client_port>\\d+)\\s+\\[(?P<accept_date>.*)\\..*\\]\\s+(?P<frontend_name>.*)\\s+(?P<backend_name>.*)/(?P<server_name>.*)\\s+(?P<tq>-?\\d+)/(?P<tw>-?\\d+)/(?P<tc>-?\\d+)/(?P<tr>-?\\d+)/(?P<tt>\\+?\\d+)\\s+(?P<status_code>-?\\d+)\\s+(?P<bytes_read>\\+?\\d+)\\s+.*\\s+(?P<act>\\d+)/(?P<fe>\\d+)/(?P<be>\\d+)/(?P<srv>\\d+)/(?P<retries>\\+?\\d+)\\s+(?P<queue_server>\\d+)/(?P<queue_backend>\\d+)\\s+((?P<request_headers>{.*})\\s+(?P<response_headers>{.*})\\s+|(?P<headers>{.*})\\s+|)\"(?P<http_request>.*)\"\\Z
\\A(?P<fileroot>.*)(?P<number>[0-9]{3,6})\\.(?P<ext>.*)\\Z
\\A(?P<fileroot>.*)\\.(?P<number>[0-9]{3,5})\\Z
\\A(?P<fileroot>.*)\\.(?P<number>[0-9]{3,6})\\.(?P<ext>.*)\\Z
\\A(?P<fileroot>.*)_(?P<number>[0-9]{3,6})\\.(?P<ext>.*)\\Z
\\A(?P<fileroot>.*)_(?P<number1>[0-9]{1,3})_(?P<number2>[0-9]{1,3})\\.(?P<ext>.*)\\Z
\\A(?P<fileroot>.*)_(?P<otherstuff>.*)\\.(?P<ext>.*)\\Z
\\A(?P<header>[A-Za-z0-9-]+):\\s+(?P<value>.*)$
\\A(?P<ifo>[A-Z]\\d):(?P<tag>[^/]+):(?P<version>\\d+)\\Z
\\A(?P<ifo>[A-Z]\\d):(?P<tag>[^/]+)\\Z
\\A(?P<infrasp>[\\w]*)\\s?\n                (?P<infrasp_author>.*)
\\A(?P<iso_date>\\D{3}\\s+\\d{1,2}\\s+\\d{2}:\\d{2}:\\d{2})\\s+(?P<source>.+?)\\s+(?P<facility>.+?)\\[(?P<pid>\\d+?)\\]:\\s(?P<message>.*)\\Z
\\A(?P<message_id>\\w+?): (?:(?P<removed>removed)|(?:from=\\<(?P<from_address>.*?)\\>, size=(?P<size>[0-9]+), nrcpt=(?P<nrcpt>[0-9]+) \\(queue (?P<queue>[a-z]+)\\)))?\\Z
\\A(?P<message_id>\\w+?): client=(?P<client_hostname>[.\\w-]+)\\[(?P<client_ip>[A-Fa-f0-9.:]{3,39})\\](?:, sasl_method=[\\w-]+)?(?:, sasl_username=[-_.@\\w]+)?(?:, sasl_sender=\\S)?(?:, orig_queue_id=\\w+)?(?:, orig_client=(?P<orig_client_hostname>[.\\w-]+)\\[(?P<orig_client_ip>[A-Fa-f0-9.:]{3,39})\\])?\\Z
\\A(?P<message_id>\\w+?): message-id=\\<(?P<ext_message_id>.+?)\\>\\Z
\\A(?P<message_id>\\w+?): sender non-delivery notification: (?P<bounce_message_id>\\w+?)\\Z
\\A(?P<message_id>\\w+?): to=\\<(?P<to_email>.*?)\\>, orig_to=\\<(?P<orig_to_email>.*?)\\>, relay=(?P<relay>.+?), delay=(?P<delay>[0-9\\.]+), delays=(?P<delays>[0-9\\.\\/]+), dsn=(?P<dsn>[0-9\\.]+), status=(?P<status>\\w+) \\((?P<response>.+?)\\)\\Z
\\A(?P<message_id>\\w+?): to=\\<(?P<to_email>.+?)\\>, relay=(?P<relay>.+?), (?:conn_use=(?P<conn_use>\\d), )?delay=(?P<delay>[0-9\\.]+), delays=(?P<delays>[0-9\\.\\/]+), dsn=(?P<dsn>[0-9\\.]+), status=(?P<status>\\w+) \\((?P<response>.+?)\\)\\Z
\\A(?P<tag>[^/]+):(?P<version>\\d+)\\Z
\\A(?P<value>\\d+)(?P<time_unit>[smhd])\\Z
\\A(?P<word>\\S+)\\s*(?P<stem>\\S+).*\\z
\\A(?s:\"([^#\"\\\\]*(?:\\\\.[^#\"\\\\]*)*)\"|'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')
\\A(@(
\\A([#\\\\]?[^#\\\\]*([#\\\\][^\\\\#\\{][^#\\\\]*)*)
\\A([\\\\#]?[^#\\\\]*([#\\\\][^\\\\#\\{][^#\\\\]*)*)
\\A([\\w\\!\\#\\z\\%\\&\\'\\*\\+\\-\\/\\=\\?\\\\A\\`{\\|\\}\\~]+\\.)*[\\w\\+-]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)\\z
\\A([-]\\d{
\\A([^:/]++:/)?/
\\A([^\"\\\\]*(?:\"\"[^\"\\\\]*|\\\\.[^\"\\\\]*)*)\"
\\A([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'
\\A([^\\0]*[/\\\\])?perl\\0([^\\0]*[/\\\\])?td\\0
\\A([^\\n&|;]*[^\\\\&|;](\\\\\\\\)*\\\\\\n)+[^\\n&|;]*[^\\n\\\\&|;](\\\\\\\\)*$
\\A([_\\$\\p{IsLl}\\p{IsLu}\\p{IsLt}\\p{IsLm}\\p{IsLo}\\p{IsNl}][\\$\\w]*)
\\A([-+]?\\d+
\\A([+]\\d{
\\A([-+]\\d{
\\A([0-7]{4}|
\\A([a-z\\d\\-\\_]+)\\.[a-z]{1,12}\\z
\\A([a-z0-9\\_\\-])+\\z
\\A([a-z0-9\\_])+\\z
\\A([a-z0-9]+[a-z0-9\\-\\_\\.]*)+(\\/[a-z0-9]+[a-z0-9\\-\\_\\.]*)*\\z
\\A([a-zA-Z\\_][a-zA-Z0-9\\_]*[\\!\\?]?)
\\A([a-zA-Z\\_][a-zA-Z0-9\\_]*\\:(?!\\:))
\\A([a-zA-Z]+[a-zA-Z0-9\\-\\_\\.]*)=(\\S*)\\z
\\A([a-zA-Z0-9\\-\\_\\~\\+\\\\]+\\.[a-zA-Z0-9\\-\\_\\~\\+\\\\]+\\.[a-zA-Z0-9\\-\\_\\~\\+\\\\]*)\\z
\\A(\".*?(?<!\\\\)(?:\\\\\\\\)*\")
\\A(\\\".*?[^\\\\]\\\")\\@(.+)\\Z
\\A(\"?)((?:\"\"|.)*?)\\1(\\Q$d\\E|\\z)
\\A(\\\\)
\\A(\\\\)?\\Z
\\\\A(\\\\*|\\\\?+){0,1}[a-zA-Z0-9\\\\-_!\\\"#$%&'()+,./:;<=>@\\\\[\\\\]^`{}\\\\|~\\\\\\\\]+(\\\\*|\\\\?+){0,1}$
\\A(\\.[a-zA-Z\\_][a-zA-Z0-9\\_]*[\\!\\?]?)
\\A'(\\\\.|[^'\\\\])*'
\\A(\\/((?:[^\\/\\\\]|\\\\.)*?)\\/)
\\A(\\:
\\A(\\[([\\h:]+)\\]|[^:]+)(?::(\\d+))?(?::(\\d+))?\\z
\\A(\\[|\\])|[^\\\\](\\[|\\])
\\A(\\d{
\\A(\\d{6}) blob ([a-f\\d]{40})\\t\\Q$gpath\\E\\0
\\\\A(\\\\d|\\\\s\\\\d
\\A(\\d+
\\A(\\d+|\\d+[.]\\d+)([
\\A(\\d+|\\d+[.]\\d+)?([
\\A(\\h*)#!\\Q$name\\E(?:[\\x20\\t]+([^\\n]+)?)?\\n+
\\A(\\h{3}){,2}\\z
\\A(\\h{32}|\\h{8}-\\h{4}-\\h{4}-\\h{4}-\\h{12})\\z
\\A(\\h{40}) (\\S+)\\Z
\\A(\\h{40})\\Z
\\A(\\h+)
\\A(\n        
\\A(\\n|;|end(?!
\\\\A(\\\\p{HandakuonHiragana}{5})\\\\p{^HandakuonHiragana}\\\\z
\\A(\\w+), \\[([^#]*)#(\\d+)\\]\\s+(\\w+) -- (\\w*): ([\\x0-\\xff]*)
\\A(\\w+)_\\Q$currency\\E\\z
\\A(|[0-9a-zA-Z\\+=/]{4}+)\\Z
\\\\A(<%
\\A(<@
\\\\A(<-\\\\s*
\\A(f[0-7])(
\\A(https?:\\/\\/[-0-9a-z\\.]+(?::\\d+))\\/(
\\A(P[41])(
\\A(P[52])(
\\A(P[63])(
\\A(RBENV\\_)
\\A(squared|cubed|to the \\d+(
\\A(true|false|yes|no|on|null|off|
\\A(typedef|enum|class|
\\A.*#\\s*\\[?(?i:FIXME)\\]?[ :]*(?P<text>.*?)\\s*\\Z
\\A.*#\\s*\\[?(?i:TODO)\\]?[ :]*(?P<text>.*?)\\s*\\Z
\\A.*?%mata%(?P<mata>.*?)%varlist%(?P<varlist>.*?)%globals%(?P<globals>.*?)%scalars%(?P<scalars>.*?)%matrices%(?P<matrices>.*?)(\\Z|---+\\s*end)
\\\\A.+?(?=
\\A/(
\\A/((?:\\\\.|[^\\\\])*)/([[:alpha:]]+)?\\z|.*
\\A/.*(?<!\\\\\\\\)/
\\A/[^/\\\\]?|mailto://|http://|https://
\\A/\\*{2}/[^(]++\\((.+)\\);\\z
\\A/categories/(?P<category_id>[^/#?]+)/posts/(?P<id>[^/#?]+)\\z
\\A/hierarchy/jobs/(\\h{24})/subtree\\z
\\A/hierarchy/jobs/(\\h{24})\\z
\\A/hierarchy/workflows/(\\h{24})\\z
\\A/page/(
\\A/page/([^./\\\\]+)
\\A;(?<pan>[\\d]{1,19}+)=(?<expiration>[\\d]{0,4}|=)(?<service_code>[\\d]{0,3}|=)(?<discretionary_data>.*)\\?\\Z
\\A@(
\\A@charset \"(?P<encoding>[\\w-]+)\";
\\A[
\\A[ \\d]\\d (?:
\\A[ \\t]*(?:(?<field>\\S+)[ \\t]+){4}\\g<field>[ \\t]*\\z
\\A[ -_a-~
\\A[,\\\\]\\Z
\\A[/#][^/\\\\]?|mailto:|http://|https://
\\A[/\\\\]
\\A[\\.
\\A[\\.\\#\\&][a-zA-Z\\-\\_\\(\\\"]
\\A[-\\+]{0,1}((\\d*)|(\\d{0,3}(
\\A[\\+|\\-]?(?<symbol>
\\A[\\p{Alpha}]+
\\A[\\p{hiragana}\\s]+\\z
\\A[\\p{hiragana}]+\\z
\\A[\\p{IsASCII}]+\\z
\\A[\\p{IsWord}\\- ]{3,16}\\Z
\\A[\\p{katakana}\\s]+\\z
\\A[\\p{katakana}]+\\z
\\A[\\s
\\A[\\w.\\/\\-:]+:?+[\\w+.]+\\z
\\A[\\w\\.\\-\\_]{2,}\\Z
\\A[\\w\\+\\-\\@\\ \\$\\!\\%\\&\\(\\)\\*\\.\\/\\#\\=\\:\\;\\?\\,\\'\\[\\]\\_\\^]*\\Z
\\A[\\x0\\x4\\x1a]\\Z
\\A[\\x20-\\x21\\x23-
\\A[^
\\A[^%]*(?:%\\h\\h[^%]*)*\\z
\\A[^.]*\\.[a-zA-Z]*\\.\\d{4}\\_?\\d*\\.txt
\\A[^\\[{(]*(\\s*
\\A[^\\\\\\n\\t\\r\"\\x{10000}-\\x{10ffff}\\x{7f}-\\x{ffff}\\x{00}-\\x{08}\\x{0b}-\\x{0c}\\x{0e}-\\x{1f}]*\\z
\\A[^\\t\\u{0A}\\u{0C}\\u{0D}\\u{20}\\>]*
\\A[^_]++_[^_]++_
\\A[_\\pL]
\\A[-+]?(?:
\\A[-+]?(?:[0-7]+(?:_[0-7]+)*|0(?:
\\A[+-]?(?:\\d{1,
\\A[+-]?(?:0(?:\\.\\d{1,
\\A[0-9a-zA-Z\\-\\_\\%]+\\z
\\A[0-9A-Za-z\\-\\_]+\\z
\\A[A-Z]:(?![^/\\\\])
\\A[A-Z]:\\\\
\\A[a-z][aeioux][a-z]{2}\\d{2}[0-1]\\d[0-3]\\d[hm](?:
\\A[A-Z][A-Z0-9]*\\_[A-Z0-9\\_]+\\z
\\A[A-Z][A-Za-z0-9\\_]*[0-9]+[A-Za-z0-9\\_]+\\z
\\A[a-z0-9
\\A[a-z0-9!
\\A[a-z0-9\\_\\.\\-]+\\z
\\A[a-zA-Z\\_][a-zA-Z0-9\\_]*[\\!\\?]?
\\A[a-zA-Z]:(
\\A[a-zA-Z]+[a-zA-Z0-9\\-\\_/]+\\z
\\A[A-Za-z0-9\\.\\-\\_]+\\z
\\A[a-zA-Z0-9\\.\\-\\_]+\\z
\\A[a-zA-Z0-9\\-\\_\\:\\.]+\\z
\\A[a-zA-Z0-9\\-\\_]*\\z
\\A[A-Za-z0-9\\-\\_]+\\z
\\A[a-zA-Z0-9\\_\\.\\-]+\\/[a-zA-Z0-9\\_\\.\\-]+(?::.*)?\\z
\\A[a-zA-Z0-9\\_\\-]+\\z
\\A[a-zA-Z0-9][a-zA-Z0-9\\-\\_\\.]{2,34}[a-zA-Z0-9]\\z
\\A[yn
\\A\\\\
\\A\\\\\\\\
\\A\\!\\![A-Z]+\\_MULTIPLE\\_ALIGNMENT.*
\\A\"((?:[^\\\"\\\\]|\\\\.)*)\"
\\A\\\"((?>(?:[^\\\"\\\\]|\\\\.)*))\\\"
\\A\\\"((?>(?:[^\"\\\\]|\\\\.)*))\\\"
\\A\"(([^\"\\\\]|\\\\.)*)\"
\\A\"(.*)(?<!\\\\)\"\\z
\\A\"(.*?)(?<!\\\\\\\\)\"
\\A\\\"(.*?)(?<!\\\\)\\\"
\\A\"(?<!\\\\).*?(?<!\\\\)\"\\Z
\\A\".*?(?<!\\\\)\"\\Z
\\A\"\\\\u(?:0130|\\{130\\})\"\\n?\\z
\\A\"\\\\u(?:6B63|\\{6b63\\})\"\\n?\\z
\\A\"\\\\u\\{1f496\\}\"\\n?\\z
\\A\"executable\" from a conflicts with (?:
\\A\\#(
\\A\\$(
\\A\\'((?>(?:[^\\'\\\\]|\\\\.)*))\\'
\\A\\'((?>(?:[^'\\\\]|\\\\.)*))\\'
\\A\\\\(.)?
\\A\\\\(.?)
\\A\\\\(.+?)\\\\(i)?\\z
\\A\\\\(\\d+)\\z
\\A\\.(
\\A\\.[/\\\\]
\\A\\.\\/lib\\/([\\w\\_\\-\\/]+\\.rb)\\Z
\\A\\/(
\\A\\/(?:
\\A\\/(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])*(?:\\/(?:%\\h\\h|[!$&-.0-;=@-Z_a-z~])*)*\\z
\\A\\:[a-zA-Z]([\\-\\_]?[a-zA-Z0-9]+)*
\\A\\[(?:(
\\A\\[(?P<encoded>.+)\\]\\s*\\[(?P<utfexpected>.+)\\].*\\z
\\A\\_(.*)\\z
\\A\\_(\\w+)
\\A\\{\\n\\h+([^\\n;]*);\\n\\}\\z
\\A\\+62(
\\A\\\\A(?:
\\A\\\\\\C-\\M-X
\\A\\d*x\\d*[
\\A\\d\\d (?:
\\A\\d{4}-(
\\A\\d+ (?:
\\A\\e(?:\\C-h|\\x7F)\\z
\\A\\h*\\z
\\A\\h{16}\\z
\\A\\h{24}\\z
\\A\\h{3}[1,3,5,7,9,B,D,F],\\h{4}\\z
\\A\\h{4},\\h{4}\\z
\\A\\h{4}\\z
\\A\\h{40}\\z
\\A\\h{48}\\z
\\A\\h{6}\\z
\\A\\h{64}\\z
\\A\\h{66}\\z
\\A\\h{8}-(?:\\h{4}-){3}\\h{12}\\z
\\A\\h{8}-\\h{4}-\\h{4}-\\h{4}-\\h{12}\\Z
\\A\\h{8}-\\h{4}-\\h{4}-\\h{4}-\\h{12}\\z
\\A\\h{8}-\\h{4}-4\\h{3}-[89aAbB]\\h{3}-\\h{12}\\Z
\\A\\h+\\z
\\A\\\\HasChildren\\Z
\\A\\\\HasNoChildren\\Z
\\A\\\\M-\\\\[Cc]
\\A\\\\\\M-\\cX
\\A\\\\\\M-\\C-X
\\A\n                 \"( (?:\n                         \\\\\\\\ | # backslash\n                         \\\\.  | # escaped something\n                         [^\"\\\\]+ # non-doublequote or non-backslash\n                     )* )\"\n                 (\\s*)\n                 (?: ([;#])(.*) )?\n                 \\z
\\A\n        (?:\n          # Matches 'compile ((execjs):6692:19)'\n          (?<function>.+)\\s\\((?<file>.+):(?<line>\\d+):\\d+\\)\n        |\n          # Matches 'bootstrap_node.js:467:3'\n          (?<file>.+):(?<line>\\d+):\\d+(?<function>)\n        |\n          # Matches the Ruby part of the backtrace\n          
\\A\n        (?:\n          ORA-\\d{5}\n          :\\sat\\s\n          (?:\"(?<function>.+)\",\\s)?\n          line\\s(?<line>\\d+)\n        |\n          
\\A\n        (?:\\s*\\(?\\s*)                                  # optional opening paren surrounded by spaces\n        (?:.*?
\\A\n        (?<id>\\#\\w++(?:\\-\\w++)*)?\n        (?<klass>\\.\\w++(?:\\-\\w++)*)?\n        (?<method>:\\w+)?\n      \\z
\\A\n      ((?<operator>(
\\A\n    \\-? \n    (?: \\d | \\Q$ThousandsSeparator\\E \\d{3} )*\n    (?: \\Q$DecimalSeparator\\E \\d+ )? \n    (?: [eE] \\-? \\d+ )?\n  \\Z
\\A\\n(?:
\\A\n(?:\n   (?P<fill>.)?\n   (?P<align>[<>=^])\n)?\n(?P<sign>[-+ ])?\n(?P<alternate>\\#)?\n(?P<zeropad>0)?\n(?P<minimumwidth>[0-9]*)\n(?P<precision>\\.[0-9]+)?\n(?P<rounding>[UDYZN])?\n(?P<type>[aAbeEfFgG%])?\n\\Z
\\A\n\t\tCan't\\ locate\\ .+\\ at\n\t\t\\ \\Q@{[__FILE__]}\\E\\ line\\ \\Q@{[__LINE__-1]}\\E\n\t
\\A\\\\NoInferiors\\Z
\\A\\\\o\\/\\z
\\A\\\\o\\\\\\z
\\A\\p{Alpha}\\z
\\A\\p{Alpha}{3}
\\A\\p{ASCII}*\\z
\\A\\p{ASCII}+\\z
\\A\\p{Default_Ignorable_Code_Point}\\z
\\A\\p{hiragana}+\\z
\\A\\p{katakana}+\\z
\\A\\p{PerlSpace}+
\\A\\p{Space}*
\\A\\p{White_Space}\\z
\\A\\Q
\\A\\Q$$captured_ref\\E\\0
\\A\\Q$_\\E[\\-_]
\\A\\Q${cd}\\E[ \\t]*(.*)\\s+
\\A\\Q$cap\\E(?:\\0|\\z)
\\A\\Q$cl\\E(?:\\.|\\z)
\\A\\Q$cl\\E\\.
\\A\\Q$clause.human\\E(\\.|\\z)
\\A\\Q$clause\\E\\.human(\\..+)?\\z
\\A\\Q$currency\\E_(\\w+)\\z
\\A\\Q$dist\\E[_-]\\w+\\z
\\A\\Q$e\\E-
\\A\\Q$fdir\\E[\\\\\\/](.+)\\z
\\A\\Q$first\\E
\\A\\Q$first\\E(?:($RE_WS+)|\\z)
\\A\\Q$head\\E\\x0d\\x0a
\\A\\Q$in\\E
\\A\\Q$item\\E
\\A\\Q$key.
\\A\\Q$key\\E-(\\d(?:[.]\\d*)?)
\\A\\Q$locale\\E[\\-_]
\\A\\Q$magic\\E\\s*\\z
\\A\\Q$match
\\A\\Q$midpr->{riap_uri_prefix}
\\A\\Q$options{prefix}\\E[^:]*\\z
\\A\\Q$prefix\\::
\\A\\Q$prompt
\\A\\Q$realbase\\E(.*)\\z
\\A\\Q$request\\E
\\A\\Q$root\\E(\\/|(?<=\\/))(?!\\.\\.)
\\A\\Q$root_path\\E
\\A\\Q$self->{prefix}\\E\n                           (?:\\. (?<period>\\d{4}(?:-\\d\\d(?:-\\d\\d)?)?) )?\n                           \\Q$self->{suffix}\\E\n                           (?:\\. (?<rotate_suffix>\\d+) )?\n                           \\z\n                          
\\A\\Q$self->{riap_uri_prefix}\\E
\\A\\Q$self->{server_path}
\\A\\Q$uri\\E
\\A\\Q$word\\E-*\\w+\\z
\\A\\Q$word\\E:*\\w+\\z
\\A\\Q$word\\E\\w*(::\\w+)?\\z
\\A\\Q$word\\E\\w*(-\\w+)?\\z
\\A\\Qbless(sub { ... }, \\E(\".+\")\\)\\z
\\A\\r?\\n*[ \\t\\f]*\\\\
\\A\\s*#\\s*frozen[_-]string[_-]literal:\\s*(
\\A\\s*(
\\A\\s*((
\\A\\s*((SELECT|DELETE).*(FROM|JOIN)|(INSERT\\s+INTO|UPDATE))\\s+`?(
\\A\\s*(.*?[^\\s\\\\]):\\s*(.+)
\\A\\s*(?:
\\A\\s*(?:(?:
\\A\\s*([
\\A\\s*([\\d\\w\\.\\-\\_]+)\\s+(\\d+)\\s*\\Z
\\A\\s*(\".*(?<!\\\\)\")
\\A\\s*\\#.*\\b(?:en)?coding: (
\\A\\s*\\\\(\n                           part|\n                           chapter|\n                           section|\n                           subsection|\n                           subsubsection)\n                       (\\[\\{(.+)\\}\\])?\n                       ({(.+)}\\s*\\z)\n                      
\\A\\s*\\\\(documentclass|input|documentstyle|relax|ProvidesPackage|ProvidesClass)
\\A\\s*\\{\\s*\\p{Word}+:
\\A\\s*>>>\\s*\\Q$varprefix\\E
\\A\\s*require\\s+['\"](
\\A\\w*#\\w++(?:\\-\\w++)*\\z
\\A\\w+://\\Q$r->{host}\\E[:/]
\\A\\w+[_-]\\Q$dist\\E\\z
\\A\\w+_\\Q$args{currency}\\E\\z|\\A\\Q$args{currency}\\E_\\w+\\z
\\A\\\\x
\\A{\\g<s>*}\\z|\\A(?<s>\\s|/[*][^*]*[*]+([^*/][^*]*[*]+)*/)*\\z
\\A-{3}(.+[^\\A])-{3}\\n(.+)
\\A-{3}.+[^\\A]-{3}\\n(.+)
\\A<(
\\A<\\/(
\\A<\\Q$element\\E
\\A=([0-9]+)\\p{PerlSpace}*(.+)\\z
\\A040000 tree ([a-f\\d]{40})\\t\\Q$gpath\\E\\0
\\A--bundler(?:[= ](
\\Ac\\.\\Q$cname\\E\\.
\\ACan't locate \\Q$fn\\E .+ at \\Q@{[__FILE__]}\\E line
\\ACan't locate object method \"\\Q$name\"
\\Acomments\\/query-(\\h+)-(\\d+)-(\\d+)\\z
\\Acomments\\/query-(\\h+)-0\\Z
\\Acomments\\/query-(\\h+)-0\\z
\\Acopyright(?:
\\\\acute\\{\\\\ddot\\{\\\\iota\\}\\}
\\\\acute\\{\\\\ddot\\{\\\\upsilon\\}\\}
\\\\acute\\{\\\\iota\\}
\\\\acute\\{\\\\omega\\}
\\\\acute\\{\\\\upsilon\\}
\\Adevelopers\\/query-(\\h+)-(\\d+)-(\\d+)\\Z
\\Adevelopers\\/query-(\\h+)-(\\d+)-(\\d+)\\z
\\Adevelopers\\/query-(\\h+)-0\\z
\\Adevelopers\\/query-(\\h+)-0\\Z
\\AERROR\\_
\\Af(?=[[:xdigit:]]{2}+\\z)
\\Afe\\h+\\Z
\\AFrom\\s+([^:\\s]
\\AFunction for field ([\\w\\_]+)\\:\\z
\\Ahttp:\\/\\/(?:.*?)\\izlesene\\.com\\/video\\/([\\w\\-\\.]+[^#?\\s]+)\\/(.*)?$
\\Ahttps?\\:\\/\\/[a-z0-9\\-\\.\\_\\?\\=\\&\\/\\+:]+\\z
\\AIs (?<subject1>.+?) (?<comparison_adjective>(
\\Ais\\_(.*)
\\AParameters\\_
\\Aproducts\\/([\\w\\-\\_]+)\\.(\\w{2,4})
\\Ar\\\"(.*?)(?<!\\\\)\\\"([gim]*)
\\AREADME\\.(
\\ARequest for frame (?P<frnum>\\d+) exceeds the range of 0 through (?P<nframes>\\d+)\\Z
\\AREV_(\\d+)(?:-(\\d+)-g\\h+)?\\Z
\\ASELECT (
\\Au(\\h{4}|\\{\\h{1,4}\\})
\\AW(\\d+
\\Ax(\\h{1,2})
\\b ( \\p{IsUpper} )
\\b \\Q$near\\E \\b
\\b \\Q$Waft::jQuery::Name\\E \\. 
\\b \\Q$Waft::JS::Name\\E \\. 
\\b${ \\( $exp->element('name')->get() )}\\b
\\b$args[$_-1]\\b
\\b$end\\K($roman)$
\\b$l=(.*(?:(?<=\\\\)\\n.*)*)
\\b$prefix\\K($roman)\\b
\\b(
\\\\b(
\\b((
\\b((((ht|f)tp[s]?:\\/\\/)|([a-z0-9]+\\.))+(?<!@)([a-z0-9\\_\\-]+)(\\.[a-z]+)+([\\?\\/\\:][a-z0-9_=%&@\\?\\.\\/\\-\\:\\#\\(\\)]+)?\\/?)
\\b(([0-9]+(\\.|\\_)?[0-9]*(b|bu|d|f|L|LU|m|u|ub|UL)?)|(0(b|o|x)[0-9]+))\\b
\\b((\\h{8}-(\\h{4}-){3}\\h{12})|\\d+\\.?\\d*)\\b
\\b(?!<\\\\)!
\\b(?:
\\b(?:(
\\b(?:[\\w-]++://?+|www[.])[^\\s()<>]+(?:\\([\\w\\d]++\\)|(?:[^[:punct:]\\s]|/))
\\b(?:[AL]?GPL)-\\d\\K\\.0(?![.\\d])
\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))
\\b(?:Apache|BSL|MPL)-\\d(?!\\.)\\K
\\b(?:en)?coding: (
\\b(?:GFDL)\\K(?!-)
\\b(?:GPL)\\K(?!-)
\\b(?:LGPL)\\K(?!-)
\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:[^\\\\]|\\\\.)*?\\1[msixpodualngc]*
\\b(?:MPL)\\K(?!-)
\\b(?<!.)(
\\b(?<!://|\">)www(?:\\.[a-z0-9][-a-z0-9]*+)+\\.[a-z]{2,6}[^<\\s]*\\b
\\b(?<!href=\"mailto:|\">|58;)(?!\\.)[-+_a-z0-9.]++(?<!\\.)@(?![-.])[-a-z0-9.]+(?<!\\.)\\.[a-z]{2,6}\\b
\\b(?<!href=\"mailto:|58;)(?!\\.)[-+_a-z0-9.]++(?<!\\.)@(?![-.])[-a-z0-9.]+(?<!\\.)\\.[a-z]{2,6}\\b(?!</a>)
\\b(?<_1>(?<_2>[0-9]+(?<_3>\\.|\\_)?[0-9]*(?<_4>b|bu|d|f|L|LU|m|u|ub|UL)?)|(?<_5>0(?<_6>b|o|x)[0-9]+))\\b
\\b(?<_1>\\_|as|assert|base|checked|do|fun|get|ignore|implements|in|is|lock|namespace|out|params|ref|set|syntax|throw|typeof|unchecked|using|with)\\b
\\b(?<_1>\\w+\\b\\s*)(?<_2>:)\\s*+(?!function)
\\b(?<_1>0[xX]\\h(?>_?\\h)*|\\d(?>_?\\d)*(?<_2>\\.(?![^[:space:][:digit:]])(?>_?\\d)*)?(?<_3>[eE][-+]?\\d(?>_?\\d)*)?|0[bB][01]+)\\b
\\b(?<_1>0b[0-1]+|0o[0-7]+|0x\\h+)\\b
\\b(?<_1>class|struct)\\b\\s*(?<_2>[_A-Za-z][_A-Za-z0-9]*\\b)?+
\\b(?<_1>debugger|\\\\)\\b
\\b(?<_1>for)\\s+(?<_2>(?:[^\\s\\\\]|\\\\.)+)\\b
\\b(?<_1>fun)\\s*+(?<_2>(?<_3>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_4>:)\\s*+)?(?<_5>[a-z][a-zA-Z\\d@_]*+)\\s*(?<_6>\\/)
\\b(?<_1>function)\\s+(?<_2>[^\\s\\\\]+)(?:\\s*(?<_3>\\(\\)))?
\\b(?<_1>include)\\s++(?<_2>\\S++)
\\b(?<_1>m)\\s*(?<!\\\\)(?<_2>[^\\[\\{\\(A-Za-z0-9\\s])(?<_3>.*?)(?<!\\\\)(?<_4>\\\\{2})*(?<_5>\\k<_2>)
\\b(?<_1>m)\\s*(?<!\\\\)\\(
\\b(?<_1>m)\\s*(?<!\\\\)\\[
\\b(?<_1>m)\\s*(?<!\\\\)\\{
\\b(?<_1>m)\\s*(?<!\\\\)\\<
\\b(?<_1>namespace)\\b\\s*(?<_2>[_A-Za-z][_A-Za-z0-9]*\\b)?+
\\b(?<_1>rule)\\s++(?<_2>[a-zA-Z_][a-zA-Z_\\.\\d]*+)(?<_3>\\s++(?<_4>(?<_5>(?<_6>\\d++)?(?<_7>\\.))?\\d++))?
\\b(?<_1>s|tr|y)\\s*(?<_2>[^A-Za-z0-9\\s])(?<_3>.*?)(?<!\\\\)(?<_4>\\\\{2})*(?<_5>\\k<_2>)(?<_6>.*?)(?<!\\\\)(?<_7>\\\\{2})*(?<_8>\\k<_2>)
\\b(?<_1>select)\\s+(?<_2>(?:[^\\s\\\\]|\\\\.)+)\\b
\\b(?<_1>startshape)\\s++(?<_2>[a-zA-Z_][a-zA-Z_\\.\\d]*+)
\\b(?=(?<!\\\\)s\\s*(?<_1>[^\\s\\w\\[(?<_2>{<]))
\\b(?=(?<!\\\\)s\\s*([^\\s\\w\\[({<]))
\\b(?=(?<!\\\\)s\\s*([^\\s\\w\\[({<>]))
\\B(?=\\p{javaUpperCase})
\\b(?i:(?<_1>0x\\h*))
\\b(?i:(?<_1>0x\\h*)L)
\\b(?i:(0x\\h*))
\\b(?i:(0x\\h*)L)
\\b(?P<email>(mailto:)?[\\w-]+(\\.[\\w-]+)*(\\+[\\w-]+)?@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.(([0-9]{1,3})|([a-zA-Z]+)))\\b
\\b(?P<first>\\w)(?P<rest>\\w*)\\b
\\b(?P<ip>(?:[0-9]{1,3}\\.){3}[0-9]{1,3})\\b
\\b(?P<long_key_id>[0-9a-fA-F]{40})\\b.*# (?P<comment>.+)
\\b(?P<url>(?P<scheme>http|https|ftp|telnet|mailto|gopher):(?P<interfix>//)(?:(?P<login>(?P<username>[a-zA-Z0-9]+)(?::(?P<password>[A-Za-z0-9]+))?)@)?(?P<hostname>[A-Za-z0-9.-]+(?::(?P<port>[0-9]+))?)(?P<path>[A-Za-z0-9)(@~_=?/.&;%#+-]*[A-Za-z0-9)(@~_=?/&;%#+-]))
\\b([\\w\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[\\w\\-\\.]+\\.[\\w\\-\\.]++)\\b
\\b([\\w\\d\\_]+)\\.([\\w\\d\\_]+)\\b
\\b([\\w\\d\\_]+\\.[\\w\\d\\_]+)\\b
\\b([a-zA-Z0-9_]+)\\s+extends\\s+([a-zA-Z0-9_\\\\]*Facade)\\b
\\b(\\_|as|assert|base|checked|do|fun|get|ignore|implements|in|is|lock|namespace|out|params|ref|set|syntax|throw|typeof|unchecked|using|with)\\b
\\b(\\d
\\b(\\d+|
\\b(\\d++)[Xx](\\d++)\\b
\\b(\n               (((ht|f)tp[s]?://)|([a-z0-9]+\\.))+\n               (?<!@)\n               ([a-z0-9\\_\\-]+)\n               (\\.[a-z]+)+\n               ([\\?/\\:][a-z0-9_=%&@\\?\\./\\-\\:\\#\\(\\)]+)?\n               /?\n             )
\\b(\\p{Cased_Letter}{3,})\\b
\\b(\\Q@{[ $ua->_agent ]}\\E)\\b
\\b(\\w+[._\\-\\w]*)\\h*(HAVING.+|$)
\\b(\\w+\\b\\s*)(:)\\s*+(?!function)
\\b(0[xX]\\h(?>_?\\h)*|\\d(?>_?\\d)*(\\.(?![^[:space:][:digit:]])(?>_?\\d)*)?([eE][-+]?\\d(?>_?\\d)*)?|0[bB][01]+)\\b
\\b(0b[0-1]+|0o[0-7]+|0x\\h+)\\b
\\b(abstract|final)?\\s?(class|interface|trait)\\s(\\w+)(\\sextends\\s)?([\\w\\\\]*)?(\\simplements\\s)?([\\w\\\\]*)?\\s?\\{?(\\n|\\})
\\b(abstract|sealed)?\\s?(class)\\s(\\w+)(\\sextends\\s)?([\\w\\\\]*)?\\s?\\{?(\\n|\\})
\\b(as )(
\\b(catch)\\b\\s*\\(\\s*([A-Za-z_][A-Za-z_0-9]*)\\s*((\\$+)
\\b(class)\\s(\\w+)(\\sextends\\s)?([\\w\\\\]*)?\\b
\\b(class|struct)\\b\\s*([_A-Za-z][_A-Za-z0-9]*\\b)?+(\\s*:\\s*(public|protected|private)\\s*([_A-Za-z][_A-Za-z0-9]*\\b)((\\s*,\\s*(public|protected|private)\\s*[_A-Za-z][_A-Za-z0-9]*\\b)*))?
\\b(debugger|\\\\)\\b
\\b(div|span|table|body)\\b [^\n\r\\{]*+ [\r\n]*+ \\{
\\b(for)\\s+((?:[^\\s\\\\]|\\\\.)+)\\b
\\b(fun)\\s*+(([a-z][a-zA-Z\\d@_]*+)\\s*+(:)\\s*+)?([a-z][a-zA-Z\\d@_]*+)\\s*(/)
\\b(function)\\s+([^\\s\\\\]+)(?:\\s*(\\(\\)))?
\\b(include)\\s++(\\S++)
\\b(m)\\s*(?<!\\\\)([^\\[\\{\\(A-Za-z0-9\\s])(.*?)(?<!\\\\)(\\\\{2})*(\\2)
\\b(m)\\s*(?<!\\\\)\\(
\\b(m)\\s*(?<!\\\\)\\[
\\b(m)\\s*(?<!\\\\)\\{
\\b(m)\\s*(?<!\\\\)\\<
\\b(namespace)\\b\\s*([_A-Za-z][_A-Za-z0-9]*\\b)?+
\\b(namespace)\\s+([A-Za-z_][_A-Za-z0-9:]*\\b)?+(?!\\s*?(;|=|,))
\\b(new)\\s([^\\$][a-z0-9_\\\\]*?)(?=\\)|\\(|;)
\\b(Object|
\\b(package\\s+)\\Q$mod\\E\\b
\\b(rule)\\s++([a-zA-Z_][a-zA-Z_\\.\\d]*+)(\\s++(((\\d++)?(\\.))?\\d++))?
\\b(s|tr|y)\\s*([^A-Za-z0-9\\s])(.*?)(?<!\\\\)(\\\\{2})*(\\2)(.*?)(?<!\\\\)(\\\\{2})*(\\2)
\\b(select)\\s+((?:[^\\s\\\\]|\\\\.)+)\\b
\\b(startshape)\\s++([a-zA-Z_][a-zA-Z_\\.\\d]*+)
\\B@(@?\\w+(?:::\\w+)?)([ \\t]*)(\\( ( (?>[^()]+) | (?3) )* \\))?
\\B@(@?\\w+)([ \\t]*)(\\( ( (?>[^()]+) | (?3) )* \\))?
\\B@([\\w\\x{4e00}-\\x{9aff}]+)(\\s*)(\\( ( (?>[^()]+) | (?3) )* \\) )? 
\\B@([a-zA-Z0-9\\p{Han}]{1,32})\\s?
\\B@(\\w+)([ \\t]*)(\\( ( (?>[^()]+) | (?3) )* \\))?
\\B[$](\\?)?[:]([.\\w\\x{4e00}-\\x{9aff}]+)(\\s*)(\\( ( (?>[^()]+) | (?4) )* \\) )?
\\b[\\w\\-\\_]+(?=#|\\.)
\\b[\\w\\\\]+::
\\b[a-z\\_\\$][a-z0-9\\_\\$]*\\b
\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])
\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`
\\B\\?(\\\\\\d{1,3}|\\\\x[A-Fa-f0-9]{1,2}|\\\\u[A-Fa-f0-9]{4}|\\\\?\\S)\\b
\\b\n                      (\\S+\\.(
\\b\\Q$_\\E\\b
\\b\\Q${end_tag}\\E\\b
\\b\\Q${name}\\E\\b
\\b\\Q$a\\E\\b
\\b\\Q$conjunctions_word\\E\\b
\\b\\Q$curSenseGloss[$sWord]\\E\\b?
\\b\\Q$dom\\E.\\Q$user\\E@
\\b\\Q$domain\\E
\\b\\Q$domain\\E\\b
\\b\\Q$driver\\E\\b
\\b\\Q$extendedGloss[$extWord]\\E\\b?
\\b\\Q$file\\E$
\\b\\Q$full_to\\E\\b
\\b\\Q$function_name\\E\\b
\\b\\Q$libs\\E\\b
\\b\\Q$link->{to}
\\b\\Q$linktext\\E\\b
\\b\\Q$name\\E
\\b\\Q$name\\E\\r?$
\\b\\Q$nn\\E\\b}\n                
\\b\\Q$opt_activeout\\E$
\\b\\Q$opt_sandboxout\\E$
\\b\\Q$orig\\E\\b
\\b\\Q$self->{invalid_class}\\E\\b
\\b\\Q$senseHypeGloss[$hypeWord]\\E\\b?
\\b\\Q$senseHypoGloss[$hypoWord]\\E\\b?
\\b\\Q$senseSynsGloss[$synsWord]\\E\\b?
\\b\\Q$sql_marker\\E($top_parse_re\\s*\\{)
\\b\\Q$storage\\E$
\\b\\Q$strategy\\E$
\\b\\Q$table\\E\\b
\\b\\Q$term\\E\\b
\\b\\Q$term\\E\\b?
\\b\\Q$to\\E\\b
\\b\\Q$trigger\\E$
\\b\\Q$VERSION\\E\\b
\\b\\Q$word\\E\\b
\\b\\w++\\b
\\b__([^\\\\_]|@escapes|_(?!_))+__\\b
\\b0+|[^\\pL\\pN]
\\b200\\s++OK\\s*+$
\\bconcat\\s*\\(((?>[^()]+)|(?R))*\\)
\\bconcat\\s*\\(([^()]|(?R))*\\)
\\bconfiguration\\s+(?P<lib>[a-zA-Z]\\w*)\\.(?P<cfg>[a-zA-Z]\\w*)
\\bdef \\s++ __init__\\b
\\bdo\\s*+\\|[^\\|\r\n]++\\|
\\\\begin\\{figure\\}(\\[.*?\\])?(.{0,60}?)\\\\includegraphics[^{]*?\\{([^.]{1,50}?\\.pdf)\\}(.*?)\\\\end\\{figure\\}
\\\\begin\\{figure\\}.{0,60}?\\\\includegraphics[^{]*?\\{([^.]{1,50}?\\.(png|jpg|gif))\\}.*?(<a.*?a>).*?\\\\end\\{figure\\}
\\\\begin{(?P<block_name>enumerate|itemize)} # list name\n                                    (\\[.*?\\])? # Optional enumerate settings i.e. (a)\n                                    (?P<block_contents>.*?) # Non-greedy list contents\n                                    \\\\end{(?P=block_name)}
\\\\begin{(?P<block_name>exer|proof|thm|lem|prop)} # block name\n                                    (\\[(?P<block_title>.*?)\\])? # Optional block title\n                                    (?P<block_contents>.*?) # Non-greedy block contents\n                                    \\\\end{(?P=block_name)}
\\\\begin{(?P<block_name>lstlisting)} # block name\n                                    (?P<block_contents>.*?) # Non-greedy block contents\n                                    \\\\end{(?P=block_name)}
\\\\begin{center}\\\\rule{3in}{0.4pt}\\\\end{center}[\\s]*?\\\\href{toc.ipynb}{Index}[\\S\\s ]*?.ipynb}{Next}
\\\\begin{document}\n                                    (?P<main>.*)\n                                    \\\\end{document}
\\bentity\\s+(?P<lib>[a-zA-Z]\\w*)\\.(?P<ent>[a-zA-Z]\\w*)\\s*(\\((?P<arch>[a-zA-Z]\\w*)\\))?
\\bgcc\\b(
\\bh(?:eight)?+\\s*+=\\s*+['\"]?+(\\d++)\\b
\\bhttps?+:[\\/]{2}[^\\s<]+\\b\\/*+
\\bI18n\\.screw\\(?\\s*(?<!\\\\)'(.*?)(?<!\\\\)'
\\bI18n\\.screw\\(?\\s*(?<!\\\\)\"(.*?)(?<!\\\\)\"
\\bI18n\\.screw\\(?\\s*(?<!\\\\)`(.*?)(?<!\\\\)`
\\\\bin[\\\\]*$
\\\\bin\\\\(((?!bin).)*)$|\\/bin\\/(.*)
\\\\bin\\\\merge.cgi
\\\\BIN\\\\OCI\\.DLL$
\\B-l:?\\Q${thislib}\\E\\b
\\bmb_strpos\\s*\\(((?>[^()]+)|(?R))*\\)
\\bmb_substr\\s*\\(((?>[^()]+)|(?R))*\\)
\\bnamespace ([a-z\\\\]+)\\\\Model;
\\bPacket: (?P<packet_num>\\d+).*
\\bpassword=\"(?:[^\"\\\\]|\\\\.)*\"
\\bpassword=\\'(?:[^\\'\\\\]|\\\\.)*\\'
\\bPRIMARY\\s+KEY\\s*\\((([^)\"]+|\"[^\"]*\"|`[^`]*`)++)
\\bprint (?P<expr>.*)$
\\brequire ([\\\"\\'])[a-zA-Z0-9\\.\\-\\_]+\\1\\;[\\r\\n]
\\bRUBY_TOKEN\\((
\\bstrftime\\s*\\(((?>[^()]+)|(?R))*\\)
\\burl\\(\\s*(?:'((?:[^']|\\\\')*)'|\"((?:[^\"]|\\\\\")*)\"|(([^'\"\\\\]|\\\\.)*?)\\s*)\\)
\\buser=\"(?:[^\"\\\\]|\\\\.)*\"
\\buser=\\'(?:[^\\'\\\\]|\\\\.)*\\'
\\bw(?:idth)?+\\s*+=\\s*+['\"]?+(\\d++)\\b
\\bwith id: (.*);.*?\\bdocument\\\\(.*)\".*?\\bidentifier \"(.*)\"
\\bze\\\\phi\\:\\:_zPhiSAK_\\(\\(?\\$context([\\[\\]'\"\\w-]+)( \\?\\? null|)\\)?, (.*?), \\\\?ze\\\\phi\\:\\:_zPhiSAKEnd_\\(\\)\\)\\;
\\bze\\\\phi\\:\\:_zPhiSNAK_\\(\\(?\\$context([\\[\\]'\"\\w-]+)( \\?\\? null|)\\)?, (.*?), \\\\?ze\\\\phi\\:\\:_zPhiSAKEnd_\\(\\)\\)\\;
\\\\c
\\c
\\C
\\\\C
\\c#\\cc\\cC
\\c#{str}
\\\\c$
\\\\c(.)
\\c(\\cH\\ch
\\c)\\cI\\ci
\\c*\\cJ\\cj
\\c,\\cL\\cl
\\\\c.
\\c'\\cG\\cg
\\c-\\cM\\cm
\\\\c{C}
\\\\c{c}
\\\\c{S}
\\\\c{s}
\\c+\\cK\\ck
\\c0
\\\\Cap 
\\CAST\\s*$
\\\\classmethod (?P<id>\\\\?[a-z0-9_]+)(?P<args>\\(.*\\))$
\\\\Colon 
\\Controller$
\\\\Controller\\\\([^\\\\]+)Controller::(.+)Action$
\\\\Cup 
\\\\cyrchar\\{\\\\'\\\\CYRG\\}
\\\\cyrchar\\{\\\\'\\\\CYRK\\}
\\\\cyrchar\\\\C
\\\\cyrchar\\\\CYRA 
\\\\cyrchar\\\\CYRABHDZE 
\\\\cyrchar\\\\CYRABHHA 
\\\\cyrchar\\\\CYRABHCH 
\\\\cyrchar\\\\CYRABHCHDSC 
\\\\cyrchar\\\\CYRAE 
\\\\cyrchar\\\\CYRB 
\\\\cyrchar\\\\CYRBYUS 
\\\\cyrchar\\\\CYRC 
\\\\cyrchar\\\\CYRD 
\\\\cyrchar\\\\CYRDJE 
\\\\cyrchar\\\\CYRDZE 
\\\\cyrchar\\\\CYRDZHE 
\\\\cyrchar\\\\CYRE 
\\\\cyrchar\\\\CYREREV 
\\\\cyrchar\\\\CYRERY 
\\\\cyrchar\\\\CYRF 
\\\\cyrchar\\\\CYRFITA 
\\\\cyrchar\\\\CYRG 
\\\\cyrchar\\\\CYRGHCRS 
\\\\cyrchar\\\\CYRGHK 
\\\\cyrchar\\\\CYRGUP 
\\\\cyrchar\\\\CYRH 
\\\\cyrchar\\\\CYRHDSC 
\\\\cyrchar\\\\CYRHRDSN 
\\\\cyrchar\\\\CYRCH 
\\\\cyrchar\\\\CYRCHLDSC 
\\\\cyrchar\\\\CYRCHRDSC 
\\\\cyrchar\\\\CYRCHVCRS 
\\\\cyrchar\\\\CYRI 
\\\\cyrchar\\\\CYRIE 
\\\\cyrchar\\\\CYRII 
\\\\cyrchar\\\\CYRIOTBYUS 
\\\\cyrchar\\\\CYRIOTE 
\\\\cyrchar\\\\CYRIOTLYUS 
\\\\cyrchar\\\\CYRISHRT 
\\\\cyrchar\\\\CYRIZH 
\\\\cyrchar\\\\CYRJE 
\\\\cyrchar\\\\CYRK 
\\\\cyrchar\\\\CYRKBEAK 
\\\\cyrchar\\\\CYRKDSC 
\\\\cyrchar\\\\CYRKHCRS 
\\\\cyrchar\\\\CYRKHK 
\\\\cyrchar\\\\CYRKOPPA 
\\\\cyrchar\\\\CYRKSI 
\\\\cyrchar\\\\CYRKVCRS 
\\\\cyrchar\\\\CYRL 
\\\\cyrchar\\\\CYRLJE 
\\\\cyrchar\\\\CYRLYUS 
\\\\cyrchar\\\\CYRM 
\\\\cyrchar\\\\CYRN 
\\\\cyrchar\\\\CYRNDSC 
\\\\cyrchar\\\\CYRNG 
\\\\cyrchar\\\\CYRNHK 
\\\\cyrchar\\\\CYRNJE 
\\\\cyrchar\\\\CYRO 
\\\\cyrchar\\\\CYROMEGA 
\\\\cyrchar\\\\CYROMEGARND 
\\\\cyrchar\\\\CYROMEGATITLO 
\\\\cyrchar\\\\CYROT 
\\\\cyrchar\\\\CYROTLD 
\\\\cyrchar\\\\CYRP 
\\\\cyrchar\\\\CYRpalochka 
\\\\cyrchar\\\\CYRPHK 
\\\\cyrchar\\\\CYRPSI 
\\\\cyrchar\\\\CYRR 
\\\\cyrchar\\\\CYRRTICK 
\\\\cyrchar\\\\CYRS 
\\\\cyrchar\\\\CYRSDSC 
\\\\cyrchar\\\\CYRSEMISFTSN 
\\\\cyrchar\\\\CYRSFTSN 
\\\\cyrchar\\\\CYRSH 
\\\\cyrchar\\\\CYRSHHA 
\\\\cyrchar\\\\CYRSHCH 
\\\\cyrchar\\\\CYRSCHWA 
\\\\cyrchar\\\\CYRT 
\\\\cyrchar\\\\CYRTDSC 
\\\\cyrchar\\\\CYRTETSE 
\\\\cyrchar\\\\CYRTSHE 
\\\\cyrchar\\\\CYRU 
\\\\cyrchar\\\\CYRUK 
\\\\cyrchar\\\\CYRUSHRT 
\\\\cyrchar\\\\CYRV 
\\\\cyrchar\\\\CYRY 
\\\\cyrchar\\\\CYRYA 
\\\\cyrchar\\\\CYRYAT 
\\\\cyrchar\\\\CYRYHCRS 
\\\\cyrchar\\\\CYRYI 
\\\\cyrchar\\\\CYRYO 
\\\\cyrchar\\\\CYRYU 
\\\\cyrchar\\\\CYRZ 
\\\\cyrchar\\\\CYRZDSC 
\\\\cyrchar\\\\CYRZH 
\\\\cyrchar\\\\CYRZHDSC 
\\d\\\\\\C-C\\w
\\d\\n\\d\\n\\\\N
\\d{1,2}:\\d{1,2}(?:\\.\\d+)?(?P<tz>\\s*[A-Z]+)$
\\d{1,2}|\\*|?|?|?|?|?|\\(..?\\)|\\{|?|\\[..?\\]|\\+|\\||?|\\^|#|?|?|?|?|?|[a-f]|?|?|?
\\d{1,3}[\\.\\-\\_]{1}\\d{1,3}[\\.\\-\\_]{1}\\d{1,3}[\\.\\-\\_]{1}\\d{1,3}
\\d{2}/\\d{2}/\\d{4}: EXCEPTION - (?<exception>(?s)(.+(?:Exception|Error)[^\\n]+(?:\\s++at [^\\n]+)++)(?:\\s*\\.{3}[^\\n]++)?\\s*)\\n
\\d{2}-\\p{Alpha}{3}]-\\d{4}
\\d{2}-\\p{Alpha}{3}]-\\d{4} \\d{2}:\\d{2}
\\d{2}-\\p{Alpha}{3}]-\\d{4} \\d{2}:\\d{2}:\\d{2}
\\d+ (?:\"((?:[^\"\\\\]|\\\\.)*)\"|'((?:[^'\\\\]|\\\\.)*)'|(url\\(\\s*(?:'(?:[^']|\\\\')*'|\"(?:[^\"]|\\\\\")*\"|(?:[^'\"\\\\]|\\\\.)*?\\s*)\\)))
\\d+ \\<\\d+\\>1 \\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d\\+00:00 d\\.[a-z0-9-]+ ([a-z0-9\\-\\_\\.]+) ([a-z0-9\\-\\_\\.]+) \\- \\- (.*)
\\d+((?P<decimal>\\D+)\\d+)?
\\d+(.*?)(?:\\u263a|\\U0001f645)
\\d+(?{$cnt++})
\\d+(?{$counter++})
\\d+(?=(?)???[??]??)
\\d+(?=(?)??[??]??)
\\d+(?=??[??]??)
\\d+(?=?[??]??)
\\d+(?P<line>\\d+):\\s+(?P<type>\\w)\\s+\\w:\\s+(?P<description>.*)
\\d+(@(
\\d+: (?P<iface>\\w+):
\\d+:\\d+\\((?P<line>\\d+)\\):\\s+(?P<type>\\w):\\s+(?P<description>.*)
\\d+:\\s+(\\S+)\\s+inet6?\\s+(\\S+).*?(\\S+)?\\\\
\\d+?(?=\\d{3}*$)
\\d+-?(?P<description>.+)
\\d+?(\\.
\\d+\\.\\d+\\s+(\\d+) (?:.*?\\015?\\012)((?:.*?\\015?\\012)*?)\\015?\\012}) {\n    my ($code,$head) = ($0,$1);\n\n    # if (want.Boolean) {\n    #  return $code ~~ rx:perl5
\\d+\\_(.+)
\\d+\\_(.+)\\Z
\\d+\\s+(comments|users responded in
\\d+\\t[\\|]+\\t\\d+\\t[\\|]+\\t\\d+\\t[\\|]+\\t[\\w\\_\\-]+\\t[\\|]+\\t\\d+\\-\\d+\\-\\d+ \\d+:\\d+:\\d+\\.\\d+\\t[\\|]+\\t\\t[\\|]+\\t\\t[\\|]+\\t
\\d+{4}-\\d+{2}-\\d+{2}
\\d+{4}-\\d+{2}-\\d+{2} \\d+{2}:\\d+{2}:\\d+{2}
\\d+{4}-\\d+{2}-\\d+{2}T\\d+{2}:\\d+{2}:\\d+{2}
\\d+|\\p{IsAlpha}+
\\d++
\\d++#[\\da-zA-Z]++
\\d++(?<_1>\\.)\\d++(?<_2>(?<_3>[eE][\\+\\-])?\\d++)?
\\d++(\\.)\\d++(([eE][\\+\\-])?\\d++)?
\\d++(\\.)\\d++([eE][\\+\\-]?\\d++)?
\\Date: ([^)]+) \\UTC
\\\\ddot\\{\\\\iota\\}
\\\\ddot\\{\\\\upsilon\\}
\\\\E
\\E
\\E$inc
\\e_EscStatus\\e\\\\
\\e_EscStatus\\e\\\\([^\\n]*)\\n
\\\\E<([^>]+)>
\\\\Elolarr 
\\\\ElOr 
\\\\Elorarr 
\\\\Elroang 
\\\\ElsevierGlyph\\{2129\\}
\\\\ElsevierGlyph\\{21B3\\}
\\\\ElsevierGlyph\\{2232\\}
\\\\ElsevierGlyph\\{2233\\}
\\\\ElsevierGlyph\\{2238\\}
\\\\ElsevierGlyph\\{2242\\}
\\\\ElsevierGlyph\\{225A\\}
\\\\ElsevierGlyph\\{225F\\}
\\\\ElsevierGlyph\\{2274\\}
\\\\ElsevierGlyph\\{2275\\}
\\\\ElsevierGlyph\\{22C0\\}
\\\\ElsevierGlyph\\{22C1\\}
\\\\ElsevierGlyph\\{300A\\}
\\\\ElsevierGlyph\\{300B\\}
\\\\ElsevierGlyph\\{3018\\}
\\\\ElsevierGlyph\\{3019\\}
\\\\ElsevierGlyph\\{E20A\\}
\\\\ElsevierGlyph\\{E20B\\}
\\\\ElsevierGlyph\\{E20C\\}
\\\\ElsevierGlyph\\{E20D\\}
\\\\ElsevierGlyph\\{E20E\\}
\\\\ElsevierGlyph\\{E20F\\}
\\\\ElsevierGlyph\\{E210\\}
\\\\ElsevierGlyph\\{E211\\}
\\\\ElsevierGlyph\\{E212\\}
\\\\ElsevierGlyph\\{E214\\}
\\\\ElsevierGlyph\\{E215\\}
\\\\ElsevierGlyph\\{E219\\}
\\\\ElsevierGlyph\\{E21A\\}
\\\\ElsevierGlyph\\{E21C\\}
\\\\ElsevierGlyph\\{E21D\\}
\\\\ElsevierGlyph\\{E259\\}
\\\\ElsevierGlyph\\{E25A\\}
\\\\ElsevierGlyph\\{E25B\\}
\\\\ElsevierGlyph\\{E25C\\}
\\\\ElsevierGlyph\\{E25D\\}
\\\\ElsevierGlyph\\{E25E\\}
\\\\ElsevierGlyph\\{E260\\}
\\\\ElsevierGlyph\\{E291\\}
\\\\ElsevierGlyph\\{E30D\\}
\\\\ElsevierGlyph\\{E36E\\}
\\\\ElsevierGlyph\\{E372\\}
\\\\ElsevierGlyph\\{E381\\}
\\\\ElsevierGlyph\\{E395\\}
\\\\ElsevierGlyph\\{E61B\\}
\\\\ElsevierGlyph\\{E838\\}
\\\\Elxsqcup 
\\\\Elxuplus 
\\\\ElzAnd 
\\\\Elzbar 
\\\\Elzbtdl 
\\\\ElzCint 
\\\\Elzcirfb 
\\\\Elzcirfl 
\\\\Elzcirfr 
\\\\Elzclomeg 
\\\\Elzddfnc 
\\\\Elzdefas 
\\\\Elzdlcorn 
\\\\Elzdshfnc 
\\\\Elzdyogh 
\\\\Elzesh 
\\\\Elzfhr 
\\\\Elzglst 
\\\\Elzhlmrk 
\\\\ElzInf 
\\\\Elzinglst 
\\\\Elzinvv 
\\\\Elzinvw 
\\\\ElzLap 
\\\\Elzlmrk 
\\\\Elzlow 
\\\\Elzlpargt 
\\\\Elzltlmr 
\\\\Elzltln 
\\\\Elzminhat 
\\\\Elzopeno 
\\\\ElzOr 
\\\\Elzpalh 
\\\\Elzpbgam 
\\\\Elzpgamma 
\\\\Elzpscrv 
\\\\Elzpupsil 
\\\\Elzrais 
\\\\Elzrarrx 
\\\\Elzreapos 
\\\\Elzreglst 
\\\\Elzrh 
\\\\Elzrl 
\\\\ElzrLarr 
\\\\ElzRlarr 
\\\\Elzrtld 
\\\\Elzrtll 
\\\\Elzrtln 
\\\\Elzrtlr 
\\\\Elzrtls 
\\\\Elzrtlt 
\\\\Elzrtlz 
\\\\Elzrttrnr 
\\\\Elzrvbull 
\\\\Elzsbbrg 
\\\\Elzsblhr 
\\\\Elzsbrhr 
\\\\Elzschwa 
\\\\Elzsqfl 
\\\\Elzsqfnw 
\\\\Elzsqfr 
\\\\Elzsqfse 
\\\\Elzsqspne 
\\\\ElzSup 
\\\\Elztdcol 
\\\\Elztesh 
\\\\Elztfnc 
\\\\ElzThr 
\\\\ElzTimes 
\\\\Elztrna 
\\\\Elztrnh 
\\\\Elztrnm 
\\\\Elztrnmlr 
\\\\Elztrnr 
\\\\Elztrnrl 
\\\\Elztrnsa 
\\\\Elztrnt 
\\\\Elztrny 
\\\\Elzverti 
\\\\Elzverts 
\\\\Elzvrecto 
\\\\Elzxh 
\\\\Elzxl 
\\\\Elzxrat 
\\\\Elzyogh 
\\\\Em
\\\\emph(\\{(?:[^{}]|\\g<1>)*\\})
\\\\ensuremath\\{\\\\Elzpes\\}
\\\\Entity$
\\\\Entity\\\\
\\\\Epsilon 
\\\\Equal 
\\\\ESCAPED_AT\\\\
\\\\Eta 
\\FeatureContext$
\\\\Fn=\"(.*?)\"(.*?)\\\\Fn\n              
\\\\footnote\\{(?<gr>\\\\(?!footnote)[^\\{]+\\{[^\\}]+\\}(?:\\{[^\\}]+\\})?\\g<gr>|[^{])+\\}
\\\\frac\\s*(?<num>\\{(?:(?>[^{}])|\\g<num>)*\\})\\s*(?<denom>\\{(?:(?>[^{}])|\\g<denom>)*\\})
\\\\function (?P<id>[a-z0-9_]+)(?P<args>\\(.*\\))$
\\G  [^[]*   \\[  # find a \"[\"\n                            ( [^]]+ ) \\]  # capture up to \"]\"\n                          
\\G  [^[]*   \\[  # find a \"[\"\n\n                            ( [^]]+ ) \\]  # capture up to \"]\"\n\n                        
\\G ( (??{ $C_arg }) ) , 
\\G (?: '([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'\n\t\t          |\n\t\t        \"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"  )
\\G (?:[$sep]) ( [^\\\\$sep]* (?: \\\\(?:.|$) [^\\\\$sep]* )* ) 
\\G (?:[\\.]) ( [^\\\\\\.]* (?: \\\\(?:.|$) [^\\\\\\.]* )* ) 
\\G [^\\S\\n]* \\Q$pure_sep\\E ([^\\n]*) (?:\\n|\\z) 
\\G [^\\S\\n]* \\Q$sep\\E ([^\\n]*) (?:\\n|\\z) 
\\G \" ( (?: $ESC_CHAR | [^\"\\\\])*) \"
\\G \" ([^\"\\\\]* (?: \\\\. [^\"\\\\]*)*) \"
\\G \\n?+ (?:.+\\n)* (\\n+)
\\G \\Q$l_delim\\E (.*?) \\Q$r_delim\\E
\\G \\s*? (\\S.+?) \\s*? (?:(?=\\\\item)|\\z)
\\G \\s*? \\\\item (?:\\s*?\\[(.+?)\\]\\s+?|\\s+?) (\\S.+)?$
\\G( '                # opening apostrophe\n                         (?:[^'\\\\]|    # an ordinary character\n                              \\\\\\\\|    # escaped \\ i.e. \\\\\n                               \\\\'|    # escaped apostrophe i.e. \\'\n                                \\\\     # escape i.e. \\\n                        )*?            # non greedy repetitions\n                      '                # closing apostrophe\n                    )
\\G( [\\'\\\"\\\\] )
\\G( [\\w+.\\\\]+ (?: \\[ [^\\]]* \\] )+ )
\\G( [\\w+.\\\\]+ (?: \\[ [^\\]]* \\] )+ \\s*,\\s*[\\w.]+ \\s*,\\s*\\w+=[^\\]]+ )
\\G(#[^\\Q$rdel\\E]*?)\\n
\\G(((?:[^\\x00-\\x1F\\\\\"]|\\\\(?:[\"\\\\/bfnrt]|u[[:xdigit:]]{4})){0,32766})*)
\\G(('([^'\\\\]+|(?:\\\\\\\\)+)+')|(\"((\\\\n)|(\\\\t)|[^\"\\@\\$\\\\])*((\\\\n)|(\\\\t))+((\\\\n)|(\\\\t)|[^\"\\@\\$\\\\])*\")|(q\\{([^}\\\\]+|(?:\\\\\\\\)+)*\\}))
\\G((?: {
\\G((?:(?:[^\\x00-\\x1f\\\\\"]|\\\\(?:[\"\\\\/bfnrt]|u[0-9a-fA-F]{4})){0,32766})*)
\\G((?:(?=[^\\n])\\X)*?)($break|\\n+|\\z)
\\G((?:(?=[^\\n])\\X){$ll})
\\G((?:(?=[^\\n])\\X){0,$ll})($break|\\n+|\\z)
\\G((?:[^\\\\]|\\\\.)*?)(\\\\)?\\?
\\G('(?:[^'\\\\]|\\\\\\\\|\\\\'|\\\\)+?')
\\G((?:[^\\0].|\\0[^A-Za-z0-9\\'\\(\\)\\,\\-\\.\\/\\:\\?\\!\\\"\\#\\$\\%\\&\\*\\;\\<\\=\\>\\@\\[\\]\\^\\_\\`\\{\\|\\}\\s])+)
\\G((?:\\\\\\\\)+)(?=\\\\?(\")?)
\\G((?:\\\\.|(?![\"])[^\\\\])*)[\"]
\\G((?:\\\\.|(?!['])[^\\\\])*)[']
\\G((?:\\\\.|[^\\s\\\\\"'\\Q$tchrs\\E])+)
\\G((?:\\0[A-Za-z0-9\\'\\(\\)\\,\\-\\.\\/\\:\\?\\!\\\"\\#\\$\\%\\&\\*\\;\\<\\=\\>\\@\\[\\]\\^\\_\\`\\{\\|\\}\\s])+)
\\G(--(?:\\h(.*))?)
\\G((?<=\\{)|(?<=\\{\\h))(?=[a-z]+\\h*\\})
\\G((\\p{IsZero}+)   # $2\n                  |(\\p{IsDouble}+)   # $3\n                  |(\\t)               # $4\n                  |($RE{ANSIescape})  # $5\n                  |\\p{IsOther}+\n                  |.                  # plain Esc, either non-ANSI or malformed\n                  )
\\G((DELIMITER(?:\\h+(\\S+))?)([^\n]*?)(?=\n|\\z))
\\G(.*?)(\\\\(\\d{1,3}|.)?)?
\\G(.*?)\\\\(.)
\\G(.*?)\\Q$oldtext\\E
\\G(.*?)<\\s*/\\s*\\Q$start\\E\\s*>
\\G(?!(?>tr|[ysm]|q[rwxq]?)\\h*=>)
\\G(?!\\w+\\h*\\})
\\G(?:
\\G(?: ([^:{}()]+)             # $1 other text\n\t\t   |    (?<=/) \\:(\\w+(?:\\:\\w+)*) # $2 :var:type\n\t\t   | \\{(\\w+                      # $3 {var:...}\n\t\t       (?:\n\t\t\t : (?: (?:\\w+(?:\\:\\w+)*) #    :type\n\t\t\t | (?: [^{}]+            #    regexp(other than {})\n\t\t\t   | (\\{                 # $4 re-qualifier(nestable)\n\t\t\t       (?: (?> [^{}]+)\n\t\t\t       | (?-1)\n\t\t\t       )*\n\t\t\t       \\})\n\t\t\t   )+\n\t\t\t )\n\t\t       )?\n\t\t     )\n\t\t     \\}\n\t\t   | ([()])                      # $5 (optional)\n\t\t   )\n\t\t  
\\G(?:(\\*\\*|\\d+)\\\\(\\*\\*|\\d+)|(\\.))(?:\\s+|$)
\\G(?:(\\n+)|\\\\((?:[bfnrt\"\\\\]))|\\\\u([0-9a-fA-F]{4})|([^\\\\\"\\x{0}-\\x{8}\\x{A}-\\x{C}\\x{E}-\\x{1F}]+))
\\G(?:[\\s,]+|
\\G(?:\"((?>(?:(?>[^\"\\\\]+)|\\\\.)*))\"|([^()\\s]+))\\s*
\\G(?:\n    \\s*\n    ((?i)[A-Z][-A-Z0-9]*|(?:oid\\.)?\\d+(?:\\.\\d+)*)\t# attribute type\n    \\s*\n    =\n    [ ]*\n    (\t\t\t\t\t\t\t# attribute value\n      (?:(?:[^\\x00 \"\\#+,;<>\\\\\\x80-\\xBF]|$pair)\t\t# string\n         (?:(?:[^\\x00\"+,;<>\\\\]|$pair)*\n            (?:[^\\x00 \"+,;<>\\\\]|$pair))?)?\n      |\n      \\#(?:[0-9a-fA-F]{2})+\t\t\t\t# hex string\n      |\n      \"(?:[^\\\\\"]+|$pair)*\"\t\t\t\t# \"-quoted string, only for v2\n    )\n    [ ]*\n    (?:([;,+])\\s*(?=\\S)|$)\t\t\t\t# separator\n    )\\s*
\\G(?:\\\n(?# 1:  SPACE   )( )|\\\n(?# 2:  NIL     )(NIL)|\\\n(?# 3:  NUMBER  )(\\d+)|\\\n(?# 4:  QUOTED  )\"((?:[^\\x00\\r\\n\"\\\\]|\\\\[\"\\\\])*)\"|\\\n(?# 5:  LITERAL )\\{(\\d+)\\}\\r\\n|\\\n(?# 6:  LPAR    )(\\()|\\\n(?# 7:  RPAR    )(\\)))
\\G(?:\\\n(?# 1:  SPACE   )( +)|\\\n(?# 2:  NIL     )(NIL)(?=[\\x80-\\xff(){ \\x00-\\x1f\\x7f%*
\\G(?:\\\n(?# 1:  SPACE   )( +)|\\\n(?# 2:  NIL     )(NIL)(?=[\\x80-\\xff(){ \\x00-\\x1f\\x7f%*\"\\\\\\[\\]+])|\\\n(?# 3:  NUMBER  )(\\d+)(?=[\\x80-\\xff(){ \\x00-\\x1f\\x7f%*\"\\\\\\[\\]+])|\\\n(?# 4:  ATOM    )([^\\x80-\\xff(){ \\x00-\\x1f\\x7f%*\"\\\\\\[\\]+]+)|\\\n(?# 5:  QUOTED  )\"((?:[^\\x00\\r\\n\"\\\\]|\\\\[\"\\\\])*)\"|\\\n(?# 6:  LPAR    )(\\()|\\\n(?# 7:  RPAR    )(\\))|\\\n(?# 8:  BSLASH  )(\\\\)|\\\n(?# 9:  STAR    )(\\*)|\\\n(?# 10: LBRA    )(\\[)|\\\n(?# 11: RBRA    )(\\])|\\\n(?# 12: LITERAL )\\{(\\d+)\\}\\r\\n|\\\n(?# 13: PLUS    )(\\+)|\\\n(?# 14: PERCENT )(%)|\\\n(?# 15: CRLF    )(\\r\\n)|\\\n(?# 16: EOF     )(\\z))
\\G(?:\n(?<preprocessing_directive>\n  ^[ \\t\\f\\v]*(?:\\#|%:).*(?:\\\\\\n.*)*[^\\\\]\\n\n) |\n(?<comment>\n  (?<multiline_comment> \\/\\* (?> (?:.|\\n)*? \\*\\/ ) ) |\n  (?<singleline_comment> \\/\\/ .*(?:\\\\\\n.*)*(?<!\\\\)\\n )\n) |\n(?<partial_comment>\n  (?<partial_multiline_comment> \\/\\* (?:.|\\n)* ) |\n  (?<partial_singleline_comment> \\/\\/ .*? \\\\\\n (?:.|\\n)* )\n) |\n(?<keyword>\n  (?: 
\\G(?:\\Q$esc$esc\\E|\\Q$esc$hyp\\E|$re)
\\G(?:\\s*(['\"`]))(.*?)(?<!\\\\)\\1
\\G(?<!(?:\\+\\+|--)\\h)
\\G(?<!^)(?>(\\[quote\\b[^]]*](?>[^[]++|\\[(?!/?quote)|(?1))*\\[/quote])|(?<!\\[)(?>[^[]++|\\[(?!/?quote))+\\K)|\\[quote\\b[^]]*]\\K
\\G(?=[a-z]+\\h*\\})
\\G(?=\\h*=>)
\\G(?=\\R)
\\G(?P<literal>[^:{\\[\\]]*)(?P<token>[:\\[\\]]|$)
\\G(?P<literal>[^:{\\[\\]]*)(?P<token>[:{\\[\\]]|$)
\\G(?P<literal>[^}]+)\\}
\\G(?P<literal>[a-z0-9-.]*)(?P<token>[:{\\[\\]]|$)
\\G(?P<name>[^:.{\\[\\]]+)(?:{(?P<delimiters>[^}]+)})?:?
\\G(?P<name>[^:/{\\[\\]]+)(?:{(?P<delimiters>[^}]+)})?:?
\\G(?P<name>[A-Z][A-Z0-9\\_\\-]*?)(?: +|$)
\\G(?P<name>[a-zA-Z][a-zA-Z0-9\\_\\-\\:]*?)(?: +|$)
\\G-(?P<name>[a-zA-Z0-9])(?:=(?P<type>[ns]))?(?: +|$)
\\G--(?P<name>[a-zA-Z0-9][a-zA-Z0-9\\_\\-]+)(?P<hasValue>=\\S*?)?(?: +|$)
\\G([\\Q$tchrs\\E])
\\G([\\w+.\\\\]+)<
\\G([\\w+.\\\\]+`\\d+)
\\G([\\w+.\\\\]+`\\d+\\[)
\\G([^\"\\\\]+)
\\G([^\"]*)(?:\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\")*
\\G([^\\\\]*)\\\\(?:([^u])|u(.{4}))
\\G([^\\\\]{1,$len}|\\\\\\d{1,3}|\\\\.)
\\G([^\\\\]|\\\\([a-zA-Z]+)(-?\\d+)? ?|\\\\'.{2}|\\\\.){$skip}
\\G([^\\s\"\\\\]+|\"[^\"\\\\]*(?:\\\\[\\\\\"nrt][^\"\\\\]*)*\")(?:\\s+|\\z)
\\G(\"((?>(?:(?>[^\"\\\\]+)|\\\\.)*))\"\\s*|[()]|[^()\"]+)
\\G(\\\\)$
\\G(\\[*                   # [ starts an array\n                  (?:[BCDFIJSZ]|           # the native java types\n                     L\\w+(?:/\\w+)*;))
\\G(\\d+)(y|Y|mo|MO|mO|Mo|w|W|d|D|h|H|s|S|ms|MS|mS|Ms|us|US|uS|Us|?s|?S|ns|NS|nS|Ns|m|M)
\\G(\n           /             # opening slash\n             (?:[^/\\\\]|    # an ordinary character\n                  \\\\\\\\|    # escaped \\ i.e. \\\\\n                   \\\\/|    # escaped slash i.e. \\/\n                    \\\\     # escape i.e. \\\n             )*?           # non greedy repetitions\n           /               # closing slash\n          )\n        
\\G(\\Q(?)\\E|\\Q(s?)\\E|\\Q(s)\\E)
\\G(\\X)
\\G.*?([A-Za-z_]+)\\=(?:;|(.*?[^\\\\]{1});)
\\G.*?\\n(?=\\Q$label\\E\\n)
\\G.*?\\Q$context\\E 
\\G.*?\\R\\Q$token\\E(?=\\R|\\z)
\\G.*?\\R=cut\\h*(?=\\R|\\z)
\\G...(
\\G[\\x00-\\x1f\\\\]
\\G[\\x00-\\x1F\\\\]
\\G[^\\\\$1]*(?:\\\\.[^\\\\$1]*)*(\\Q$1\\E)
\\G[^\\\\]?\\{(.*?[^\\\\]?)\\}
\\\\g[<](.+?)[>]
\\G\\\\
\\G\\\\\\\\
\\G\\\"((?:\\\\.|[^\\\"\\\\])*)\\\"
\\G\\\"(.*?)(?<!\\\\)(?:\\\"|\\z)\\s*
\\G\\\"(|[^\\\\]|.*(?:\\\\[^\\\\]|\\\\\\\\|[^\\\\][^\\\\]))\\\"(?==)
\\G\\$VERSION\\ =\\ (\\d\\d?\\.\\d{3}\\_\\d{3});
\\G\\((.*?)(?<!\\\\)\\)\\s*
\\G\\\\(.)
\\G\\\\(.?)
\\G\\\\([0-8]{1,3})
\\G\\\\([abtnvfr\\\\\"'?])
\\G\\[ *?(?P<name>[a-zA-Z][a-zA-Z0-9\\_\\-\\:]*?) *?\\](?: +|$)
\\G\\[ *?-(?P<name>[a-zA-Z0-9])(?:=(?P<type>[ns]))? *?\\](?: +|$)
\\G\\[ *?--(?P<name>[a-zA-Z0-9][a-zA-Z0-9\\_\\-]+) *?\\](?: +|$)
\\G\\[ *?--(?P<name>[a-zA-Z0-9][a-zA-Z0-9\\_\\-]+)(?P<hasValue>=\\S*?)? *?\\](?: +|$)
\\G\\[ *?\\.\\.\\.(?P<name>[a-zA-Z][a-zA-Z0-9\\_\\-\\:]*?) *?\\](?: +|$)
\\G\\[ *\\<(?P<name>[a-zA-Z][a-zA-Z0-9\\_\\-]*?)\\> *\\](?: +|$)
\\G\\[(?P<name>[A-Z][A-Z0-9\\_\\-]*?)\\](?: +|$)
\\G\\< *(?P<name>[a-zA-Z][a-zA-Z0-9\\_\\-]*?) *\\>(?: +|$)
\\G\\<(.*?)(?<!\\\\)(?:[>,;]|\\z)\\s*
\\G\\h+
\\G\n         (\n            (?> [^\\012N_]+ | [N_][^\\012_] | [N_]_[^\\012\"(] )*\n            [N_]_\n               \\(?\" (\n                  (?> [^\"\\\\]+ | \\\\. )+\n               ) \"\\)?\n            (?> [^\\012N_]+ | [N_][^\\012_] | [N_]_[^\\012\"(] )*\n         )\n      
\\G\\\n(?# 1: NAME     )(?:NIL|\"((?:[^\\x80-\\xff\\x00\\r\\n\"\\\\]|\\\\[\"\\\\])*)\") \\\n(?# 2: ROUTE    )(?:NIL|\"((?:[^\\x80-\\xff\\x00\\r\\n\"\\\\]|\\\\[\"\\\\])*)\") \\\n(?# 3: MAILBOX  )(?:NIL|\"((?:[^\\x80-\\xff\\x00\\r\\n\"\\\\]|\\\\[\"\\\\])*)\") \\\n(?# 4: HOST     )(?:NIL|\"((?:[^\\x80-\\xff\\x00\\r\\n\"\\\\]|\\\\[\"\\\\])*)\")\\\n\\)
\\G\n\t\t(?:\n\t\t\t# #include\n\t\t\t(?> ^ (?&SP)* \\# include (?&SP)*\n\t\t\t\t(?:\t\\' ( [^\\'\\n]+ ) \\' \t(?{ [INCLUDE => $^N] }) \n\t\t\t\t|\t\\\" ( [^\\\"\\n]+ ) \\\" \t(?{ [INCLUDE => $^N] }) \n\t\t\t\t|\t < ( [^>\\n]+  )  > \t(?{ [INCLUDE => $^N] }) \n\t\t\t\t|\t   ( \\S+      )\t\t(?{ [INCLUDE => $^N] }) \n\t\t\t\t|\t\t\t\t\t\t(?{ [ERROR => \n\t\t\t\t\t\t\t\t\t\t\t \"#include expects a file name\"] })\n\t\t\t\t)\n\t\t\t\t.* \\n?\t\t\t\t\t# eat newline\n\t\t\t)\n\t\t\n\t\t\t# #line\n\t\t|\t(?> ^ (?&SP)* \\# line (?&SP)+ \n\t\t\t\t\t(\\d+) (?&SP)+ \t\t(?{ $LINE_NR = $^N })\n\t\t\t\t\t\\\"? ([^\\\"\\n]+) \\\"?\t(?{ [INPUT_POS => $^N, $LINE_NR, 1] })\n\t\t\t\t.* \\n?\t\t\t\t\t# eat newline\n\t\t\t)\n\t\t\t\n\t\t\t# other #-lines - ignore\n\t\t|\t(?> ^ (?&SP)* \\# .* \\n?\t\t(?{ undef }) \n\t\t\t)\n\t\t\n\t\t\t# white space\n\t\t|\t(?> \\s+\t\t\t\t\t\t(?{ undef }) \n\t\t\t)\n\t\t\t\n\t\t\t# string\n\t\t|\t(?>\t( \\\" (?: \\\\. | [^\\\\\\\"] )* \\\" )\n\t\t\t\t\t\t\t\t\t\t(?{ [STR => eval($^N)] })\n\t\t\t)\n\t\t|\t(?>\t( \\' (?: \\\\. | [^\\\\\\'] )* \\' )\n\t\t\t\t\t\t\t\t\t\t(?{ [STR => eval($^N)] })\n\t\t\t)\n\t\t\t\n\t\t\t# number\n\t\t|\t(?> 0x ( [0-9a-f]+ ) \\b \t(?{ [NUM => hex($^N)] }) \n\t\t\t)\n\t\t|\t(?> 0b ( [01]+ ) \\b\t\t\t(?{ [NUM => oct(\"0b\".$^N)] }) \n\t\t\t)\n\t\t|\t(?> 0 ( [0-7]+ ) \\b\t\t\t(?{ [NUM => oct(\"0\".$^N)] }) \n\t\t\t)\n\t\t|\t(?> ( \\d+ ) \\b \t\t\t\t(?{ [NUM => 0+$^N] }) \n\t\t\t)\n\t\t\n\t\t\t# name\n\t\t|\t(?> ( [a-z_]\\w* )\t\t\t(?{ [NAME => $^N] }) \n\t\t\t)\n\t\t\t\n\t\t\t# symbols\n\t\t|\t(?> ( << | >> | == | != | >= | <= | . )\n\t\t\t\t\t\t\t\t\t\t(?{ [$^N, $^N] }) \n\t\t\t)\n\t\t)\n\t\t\n\t\t(?(DEFINE)\n\t\t\t# horizontal blanks\n\t\t\t(?<SP>\t[\\t\\f\\r ] )\n\t\t)\n\t
\\G\n\t\t/\n\t\t( (?:[^/*\\\\[] | \\\\. | \\[ (?>(?:[^]\\\\] | \\\\.)*) \\] )\n\t\t  (?>(?:[^/\\\\[] | \\\\. | \\[ (?>(?:[^]\\\\] | \\\\.)*) \\] )*) )\n\t\t/\n\t  \t($id_cont*)\n\t      
\\G\\Q$from\\E
\\G\\Q$label\\E\\n
\\G\\s* # initial whitespace\n          (\n            [^\\s=;,]+ # name\n            \\s*=\\s*   # =\n            (?:\n              \\\"(?:[^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*)\\\" # quoted value\n                |\n              [^;,\\s]*  # unquoted value\n            )\n          )\n          \\s*;?\n         
\\G\\s*(
\\G\\s*(?:\n            ## If the character following an NCName (possibly after\n            ## intervening ExprWhitespace) is (, then the token must be\n            ## recognized as a EventType or a FunctionName.\n            ($NCName)\\s*(?=\\()\n\n            ## If the two characters following an NCName (possibly after\n            ## intervening ExprWhitespace) are ::, then the token must be\n            ## recognized as an AxisName\n            |($NCName)\\s*(?=::)\n\n            ## Otherwise, it's just a normal lexer.\n            |($NCName:\\*)                           #NAME_COLON_STAR\n            |((?:$NCName:)?$NCName)                 #QNAME\n            |('[^']*'|\"[^\"]*\")                      #LITERAL\n            |(-?\\d+(?:\\.\\d+)?|\\.\\d+)                #NUMBER\n            |\\$((?:$NCName:)?$NCName)               #DOLLAR_QNAME\n            |($simple_tokens)\n        )\\s*
\\G\\s*(?>([^\\s\\\\\\'\\\"]+)|'([^\\']*)'|\"((?:[^\\\"\\\\]|\\\\.)*)\"|(\\\\.?)|(\\S))(\\s|\\z)?
\\G\\s*([\\d\\w\\_]+)\\s*
\\G\\s*\"((?:[^\"\\\\]|\\\\.)*)\"\\s*
\\G\\s*\"((\\\\.|[^\"\\\\])*)\"
\\G\\s+(\\w+)\\=(?:(?![\\\"\\'])(\\S*)|([\\\"\\'])((?:(?!\\\\|\\g{-2}).|\\\\.)*)\\g{-2})
\\G\\\\u([Dd][C-Fc-f]..)
\\G\\\\x($Hex+)
\\G\\\\x([0-9a-fA-F]+)
\\G\\\\x[0-9A-Fa-f]
\\G\\\\x\\{([0-9a-fA-F]+)\\}
\\G\\x5f\\x5f\"((?:(?:[^\"\\\\]+|\\\\.)*))\"
\\G__(?>DATA|END)__\\b\\h*+(?!=>).*\\z
\\G__(?>SUB|FILE|PACKAGE|LINE)__\\b(?!\\h*+=>)
\\\\g<([0-9]+)>
\\G=(|.*?[^\\\\])\\n
\\G=\\\"(|[^\\\\]|.*?(?:\\\\[^\\\\]|\\\\\\\\|[^\\\\][^\\\\]))\\\"\\n
\\\\gamma 
\\\\gemini 
\\\\geq 
\\\\geq
\\\\geqq 
\\\\geqslant 
\\\\gg 
\\\\gimel 
\\\\git\\\\bin$
\\\\gnapprox 
\\\\gneq 
\\\\gneqq 
\\\\gnsim 
\\\\greaterequivlnt 
\\\\gtrapprox 
\\\\gtrdot 
\\\\gtreqless 
\\\\gtreqqless 
\\\\gtrless 
\\\\guillemotleft 
\\\\guillemotright 
\\\\guilsinglleft 
\\\\guilsinglright 
\\\\gvertneqq 
\\Gx(\\h\\h)
\\h
\\\\H
\\H
\\\\h
\\h*$
\\h*\\*\\h*@property(-read)?\\h+(\\S+)\\h+\\$(\\S+)([^\\v]*)
\\h*\\{\\{\\@placeholder\\h+(.*)\\h+\\@end\\}\\}\\h*\\r*\\n+
\\h-[a-zA-Z]*[wW]
\\h\\[.*
\\\\H\\{\\}
\\\\H\\{O\\}
\\\\H\\{o\\}
\\\\H\\{U\\}
\\\\H\\{u\\}
\\h\\h+
\\h\\n
\\h\\N{LEFTWARDS ARROW}.*
\\h\\N{RIGHTWARDS ARROW}.*
\\h{1,4}
\\h{16}
\\h{32}
\\h{64}
\\h{8}-?\\h{4}-?\\h{4}-?\\h{4}-?\\h{12}
\\h{8}-\\h{4}-\\h{4}-\\h{4}-\\h{12}
\\H+
\\h+
\\h+$
\\h+,\\h+
\\h+\\.\\w+$
\\h+\\-\\h+\\-\\h+\\-\\h+\\-\\h+
\\h+\\n
\\habc
\\\\hackscore\\s*{[^}]*}
\\\\ham\\{[aiwy]\\}
\\\\ham\\{I\\}
\\\\ham\\{i\\}([^\\\\])
\\\\ham{[aiwy]}
\\\\ham{I}
\\\\ham{i}([^\\\\])
\\\\hermitconjmatrix 
\\\\hline
\\\\homothetic 
\\\\hookleftarrow 
\\\\hookrightarrow 
\\\\hphantom\\{,\\}
\\\\hphantom\\{0\\}
\\\\href\\{(.*?)\\}\\{(.*?)\\}
\\\\hslash 
\\\\hspace\\{0.166em\\}
\\\\hspace\\{0.167em\\}
\\\\hspace\\{0.25em\\}
\\\\hspace\\{0.33em\\}
\\\\hspace\\{0.6em\\}
\\\\hspace\\{1em\\}
\\\\Http[a-z]+ActionInterface$
\\\\hyperref\\[(\\\\detokenize{)?contents:huygens(})?\\]
\\\\hyphenation\\[.*
\\\\hyphenation\\{
\\\\char\"(\\p{ASCII_Hex_Digit}+)
\\\\Chi 
\\\\i 
\\\\I
\\\\i
\\\\i\\b
\\\\if
\\\\iisnode\\\\
\\\\image 
\\\\IMAGE
\\\\implies
\\\\import\\s+([^}]+)
\\\\in 
\\\\in
\\\\include
\\\\include\\{([^}]*)(\\.tex)?\\}
\\\\includegraphics
\\\\includegraphics(.*?){(.*?)}
\\\\includegraphics([^{]*?)\\{([^.]{1,50}?\\.pdf)\\}
\\includegraphics\\[.+\\]\\{([^}]+)\\}
\\index.js?$
\\\\index\\{(\\S+)\\}
\\\\infty 
\\inFunc:\\s*(\\S+)
\\\\input
\\\\input *(harv|lanl)mac
\\\\input texinfo
\\\\input\\s+([\\.\\/\\w]+)
\\\\input\\s+amstex
\\\\input\\s+phyzzx
\\\\insrsid\\d* ?
\\\\inst
\\\\institute
\\\\int 
\\\\int\\\\!\\\\int 
\\\\int\\\\!\\\\int\\\\!\\\\int 
\\\\int\\\\left\\((.+?),(.+?),(.+?)\\\\right\\)
\\\\int\\\\left\\((.+?d[a-z])\\\\right\\)
\\\\Integer
\\\\intercal 
\\\\Interceptor$
\\\\iota 
\\\\Iota 
\\IPv4 Address(.+?)([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)$
\\\\it\\s*
\\\\item 
\\\\item
\\\\item \\d
\\\\item\\[(.*?)]{(.*?)}
\\\\item\\s((.|\\n)*?)(?=(\\\\item|\\\\end))
\\js$
\\\\jupiter 
\\\\k\\{\\}
\\\\k\\{A\\}
\\\\k\\{a\\}
\\\\k\\{E\\}
\\\\k\\{e\\}
\\\\k\\{i\\}
\\\\k\\{I\\}
\\\\k\\{U\\}
\\\\k\\{u\\}
\\\\k<(.*?)>
\\\\k<([\\w$]+)>
\\k<a
\\k<a>
\\k<ab\\u003B\\u{003B}c>
\\\\Kappa 
\\\\kappa 
\\\\Koppa 
\\\\l 
\\\\L 
\\\\L
\\\\l
\\\\l (.*?) (?:\\\\l|\\\\n)\n              
\\L$conr
\\L$ownr.$indr
\\L$ownr.$tabl
\\\\l(.)
\\\\L(.*?)(\\\\E|$)
\\\\L\\$([1-9])
\\\\l\\$([1-9])
\\l\\n
\\\\label\\{(.*?)\\}
\\\\label\\{(\\w+)\\}
\\\\label{(\\\\detokenize{)?contents:huygens(})?}}
\\\\Lambda 
\\\\lambda 
\\\\lang[a-z]*\\d* ?
\\\\langle 
\\\\Large
\\\\lastrow\\n\\\\row$
\\\\lazysinv 
\\\\lbrace 
\\\\lccode(`\\\\?\\^\\^|\")($X$X)=(`\\\\?\\^\\^|\")($X$X)
\\\\lceil 
\\\\ldots 
\\\\ldots
\\\\Leftarrow 
\\\\leftarrow 
\\\\leftarrowtail 
\\\\LeftDownTeeVector 
\\\\LeftDownVectorBar 
\\\\leftharpoondown 
\\\\leftharpoonup 
\\\\leftleftarrows 
\\\\Leftrightarrow 
\\\\leftrightarrow 
\\\\leftrightarrows 
\\\\leftrightharpoons 
\\\\leftrightsquigarrow 
\\\\LeftRightVector 
\\\\LeftTeeVector 
\\\\leftthreetimes 
\\\\LeftTriangleBar 
\\\\LeftUpDownVector 
\\\\LeftUpTeeVector 
\\\\LeftUpVectorBar 
\\\\LeftVectorBar 
\\\\lemref{(.*?)}
\\\\leo 
\\\\leq 
\\\\leq
\\\\leqq 
\\\\leqslant 
\\\\lessapprox 
\\\\lessdot 
\\\\lesseqgtr 
\\\\lesseqqgtr 
\\\\lessequivlnt 
\\\\lessgtr 
\\\\let\\\\(\\w+)=(\\^\\^|\")($X$X)
\\\\lfloor 
\\\\libra 
\\\\lim\\\\left\\((.+?),(.+?),(.+?)\\\\right\\)
\\\\List.Real
\\\\list\\s(.*)$
\\\\ll 
\\\\llcorner 
\\\\Lleftarrow 
\\\\lmoustache 
\\\\lnapprox 
\\\\lneq 
\\\\lneqq 
\\\\lnot 
\\\\lnsim 
\\log\\/pancake_
\\\\log\\\\left\\((.+?),(.+?)\\\\right\\)
\\\\Longleftarrow 
\\\\longleftarrow 
\\\\longleftrightarrow 
\\\\Longleftrightarrow 
\\\\longmapsto 
\\\\longrightarrow 
\\\\Longrightarrow 
\\\\looparrowleft 
\\\\looparrowright 
\\\\lozenge 
\\\\lrcorner 
\\\\Lsh 
\\\\lstinline\\[breaklines=true\\](\\S)
\\\\ltimes 
\\\\lvertneqq 
\\\\m
\\\\M
\\\\m=\"(.*?)\"\n              
\\Macintosh\\b
\\\\madda\\{\\}
\\\\madda{}
\\\\male 
\\\\mapsto 
\\\\maq\\{\\}
\\\\maq\\{\\}(\\\\vow\\{aN\\})
\\\\maq{}
\\\\maq{}(\\\\vow{aN})
\\\\mathbb\\{C\\}
\\\\mathbb\\{H\\}
\\\\mathbb\\{N\\}
\\\\mathbb\\{P\\}
\\\\mathbb\\{Q\\}
\\\\mathbb\\{R\\}
\\\\mathbb\\{Z\\}
\\\\mathbin\\{\\{:\\}\\\\!\\\\!\\{\\-\\}\\\\!\\\\!\\{:\\}\\}
\\\\mathfrak\\{C\\}
\\\\mathfrak\\{H\\}
\\\\mathfrak\\{I\\}
\\\\mathfrak\\{R\\}
\\\\mathfrak\\{Z\\}
\\\\mathchar\"2208
\\\\mathrm\\{\\\\ddot\\{I\\}\\}
\\\\mathrm\\{\\\\ddot\\{Y\\}\\}
\\\\mathrm\\{\\\\mu\\}
\\\\mathrm\\{'\\\\Omega\\}
\\\\mathrm\\{'Y\\}
\\\\mathscr\\{B\\}
\\\\mathscr\\{E\\}
\\\\mathscr\\{e\\}
\\\\mathscr\\{F\\}
\\\\mathscr\\{g\\}
\\\\mathscr\\{H\\}
\\\\mathscr\\{I\\}
\\\\mathscr\\{L\\}
\\\\mathscr\\{l\\}
\\\\mathscr\\{M\\}
\\\\mathscr\\{o\\}
\\\\mathscr\\{R\\}
\\\\mbox
\\\\mbox\\{\\\\texteuro\\} 
\\\\mbox{abs}\\\\left\\((.+?)\\\\right\\)
\\\\measuredangle 
\\Media and Data Integrity Errors\\: (.*)\\n
\\\\medskip
\\\\mercury 
\\\\method (?P<id>\\\\?[a-z0-9_]+)(?P<args>\\(.*\\))$
\\\\mho 
\\\\Microsoft SDKs\\\\Windows Phone\\\\v(\\d+\\.\\d+)\\s*InstallationFolder\\s+REG_SZ\\s+(.*)
\\\\Microsoft SDKs\\\\Windows\\\\v(\\d+\\.\\d+)\\s*InstallationFolder\\s+REG_SZ\\s+(.*)
\\\\mid 
\\\\midrule
\\\\mkern1mu 
\\\\mkern4mu 
\\\\mnt\\\\([A-Za-z])
\\Mobile(?:.+)Firefox\\b
\\\\Mock$
\\module.css$
\\\\moduleref (?P<id>[a-z]+)$
\\\\Modules\\\\$
\\\\mp 
\\\\mu 
\\\\multicolumn{(.*?)}{(.*?)}{(.*)}
\\\\multimap 
\\\\multirow{(.*)}\\[.*\\]{(.*)}{(.*)}
\\\\multirow{(.*)}{(.*)}{(.*)}
\n                                 (?<!$c)\n                                 (?:\n                                   (?:($cc([:-]) $cc (?:\\2$cc){4}){1}) |\n                                   (?:($cccc(\\.)$cccc\\.$cccc){1})\n                                 )\n                                 (??{ ($4 eq '.') ? '(?<!\\..{14})' : '(?<!'.$2.'.{17})' })\n                                 (?!(??{ ($4 eq '.') ? '\\.' : $2 })|$c) #collapse this to 1 eval\n                            
\n                                ^\n                                # Match a content type <application>/<type>\n                                (?P<content_type>[-a-zA-Z0-9.]+/[-a-zA-Z0-9.]+)\n                                # Match any character set and encoding\n                                (?:(?:;charset=(?:[-a-zA-Z0-9]+)(?:;(?:base64))?)\n                                  |(?:;(?:base64))?(?:;charset=(?:[-a-zA-Z0-9]+))?)\n                                # Assume the rest is data\n                                ,.*\n                                $\n                                
\n                                ^diff[ ]--git\n                                    [ ](?P<a_path_fallback>\"?a/.+?\"?)[ ](?P<b_path_fallback>\"?b/.+?\"?)\\n\n                                (?:^old[ ]mode[ ](?P<old_mode>\\d+)\\n\n                                   ^new[ ]mode[ ](?P<new_mode>\\d+)(?:\\n|$))?\n                                (?:^similarity[ ]index[ ]\\d+%\\n\n                                   ^rename[ ]from[ ](?P<rename_from>.*)\\n\n                                   ^rename[ ]to[ ](?P<rename_to>.*)(?:\\n|$))?\n                                (?:^new[ ]file[ ]mode[ ](?P<new_file_mode>.+)(?:\\n|$))?\n                                (?:^deleted[ ]file[ ]mode[ ](?P<deleted_file_mode>.+)(?:\\n|$))?\n                                (?:^index[ ](?P<a_blob_id>[0-9A-Fa-f]+)\n                                    \\.\\.(?P<b_blob_id>[0-9A-Fa-f]+)[ ]?(?P<b_mode>.+)?(?:\\n|$))?\n                                (?:^---[ ](?P<a_path>[^\\t\\n\\r\\f\\v]*)[\\t\\r\\f\\v]*(?:\\n|$))?\n                                (?:^\\+\\+\\+[ ](?P<b_path>[^\\t\\n\\r\\f\\v]*)[\\t\\r\\f\\v]*(?:\\n|$))?\n                            
\n                               ^\n                               # Match a content type <application>/<type>\n                               (?P<content_type>[-a-zA-Z0-9.]+/[-a-zA-Z0-9.]+)\n                               # Match any character set and encoding\n                               (?:(?:;charset=(?:[-a-zA-Z0-9]+)(?:;(?:base64))?)\n                                 |(?:;(?:base64))?(?:;charset=(?:[-a-zA-Z0-9]+))?)\n                               # Assume the rest is data\n                               ,.*\n                               $\n                               
\n                            # Processing instruction:\n                            <[?]xml\n                        |\n                            # Document type declaration:\n                            <!DOCTYPE\n                        |\n                            # Reasonable approximation of a tag:\n                            <[:_\\p{IsAlphabetic}][-:.\\w]\n                     
\n                            @\n                            (?P<name>(?:\\w|-)+\n                                     (?:\\[(?:\\w|-)+\\])?)\n                            (?P<rest>.*)\n                          
\n                            \\s*(?P<parameter>[^=]+?)\\s*=\\s*  # parameter (ws-stripped), before '='\n                            (?P<value>[^;]*)                # value (stop before comment=;)\n                            (?P<comment>\\s*;.*)?            # optional comment\n                            
\n                           \\\\begin\\{verbatim\\}\n                             .* \\Q$line\\E .*\n                           \\\\end\\{verbatim\\}\n                          
\n                         (%d(?:
\n                        (?<=[^!*+,/:;<=>@\\\\\\\\_|-])  # cannot be before\n                        --\n                        (?=[^!*+,/:;<=>@\\\\\\\\_|-])   # cannot be after\n                   
\n                        ^PokerStars\\s+                                # Poker Room\n                        Hand\\s+\\#(?P<ident>\\d+):\\s+                   # Hand history id\n                        (Tournament\\s+\\#(?P<tournament_ident>\\d+),\\s+ # Tournament Number\n                         ((?P<freeroll>Freeroll)|(                    # buyin is Freeroll\n                          \\$?(?P<buyin>\\d+(\\.\\d+)?)                   # or buyin\n                          (\\+\\$?(?P<rake>\\d+(\\.\\d+)?))?               # and rake\n                          (\\s+(?P<currency>[A-Z]+))?                  # and currency\n                         ))\\s+\n                        )?\n                        (?P<game>.+?)\\s+                              # game\n                        (?P<limit>(?:Pot\\s+|No\\s+|)Limit)\\s+          # limit\n                        (-\\s+Level\\s+(?P<tournament_level>\\S+)\\s+)?   # Level (optional)\n                        \\(\n                         (((?P<sb>\\d+)/(?P<bb>\\d+))|(                 # tournament blinds\n                          \\$(?P<cash_sb>\\d+(\\.\\d+)?)/                 # cash small blind\n                          \\$(?P<cash_bb>\\d+(\\.\\d+)?)                  # cash big blind\n                          (\\s+(?P<cash_currency>\\S+))?                # cash currency\n                         ))\n                        \\)\\s+\n                        -\\s+.+?\\s+                                    # localized date\n                        \\[(?P<date>.+?)\\]                             # ET date\n                        
\n                       \\G               # last pos matched\n                       (?:\n                        [ \\t]*\n                        ( [\\$\\@\\%] )    # variable type\n                        ( [^\\W\\d]\\w* )  # only allows valid Perl variable names\n                        [ \\t]*\n                        # if we have a default arg we'll suck up\n                        # any comment it has as part of the default\n                        # otherwise explcitly search for a comment\n                        (?:\n                         (?:              # this entire entire piece is optional\n                           =>\n                          ( [^\\n]+? )     # default value\n                         )\n                         |\n                         (?:              # an optional comment\n                          [ \\t]*\n                          \\#\n                          [^\\n]*\n                         )\n                        )?\n                        (?= $ending )\n                        |\n                        [ \\t]*          # a comment line\n                        \\#\n                        [^\\n]*\n                        (?= $ending )\n                        |\n                        [ \\t]*          # just space\n                       )\n                       (\\n |          # newline or\n                          (?= <\\/%\\Q$p->{block_type}\\E> ) )   # end of block (don't consume it)\n                      
\n                     (?:^|\\s)\n                     (\n                      (?:\n                       # A::B::C.meth\n                       
\n                     \\s*(?P<GROUPNUMBER>\\d+)      # group number\n                     \\s+(?P<GROUPNAME>[^\\s]+)\\s*: # group name, separator ':'\n                     \\s*(?P<NATOMS>\\d+)\\satoms    # number of atoms in group\n                     
\n                    # Alias of the form //alias ...\n                    //(?P<alias>[^/]+) (?P<alias_after>.*)\n                |\n                    # Absolute URL (e.g., https://...) not at start.\n                    .* [:/] (?P<url> \\w {2,} :// .*)\n                |\n                    # Keyword at path-component boundary.\n                    (?P<key_before> ^ | .*? /)\n\n                    # Avoid single-character drive letters like C:.\n                    (?P<key> \\w {2,}) :\n\n                    # After the colon, must not have two slashes.\n                    (?P<key_after> .? $ | [^/] .* | / [^/] .*)\n            
\n                    (?: \\A | [^\\\\] )\n                    (?: \\\\{2} )*\n                    [@\\$]\n                    [{]?\n                    ([\\w:]*)\n                    ::\n                
\n                    (?x)( # identify http or https links within href\n             (http|https) # make sure we find a resource type\n                      :// # ...needs to be followed by colon-slash-slash\n                       .* # followed by anyting\n                        ) # end of match group\n                           
\n                    (\\\"(?:\\\\\\\\|\\\\\"|[^\"])*\\\")\n                    |\n                    (\\{[^{}]*(?2)?\\})\n                    |\n                    ([^;=]+)\n                
\n                    (\n                        -- .*                               (?# matches \"--\" style comments to the end of line or string )\n                        |   -                                   (?# matches single \"-\" )\n                        |\n                        /[*] .*? [*]/                       (?# matches C-style comments )\n                        |   /                                   (?# matches single slash )    \n                        |\n                        ' ( [^'\\\\]  |  ''  |  \\\\. )* '  (?# match strings surrounded by apostophes )\n                        |\n                        \" ( [^\"\\\\]  |  \"\"  |  \\\\. )* \"      (?# match strings surrounded by \" )\n                        |\n                        \\?\\??                               (?# match one or two question marks )\n                        |\n                        [^-/'\"?]+                           (?# match all characters except ' \" ? - and / )\n\n                )
\n                    \"?\\Q$local_col\\E\"? \\s* (?:\\w+\\s*)* (?: \\( \\s* \\d\\+ (?:\\s*,\\s*\\d+)* \\s* \\) )? \\s*\n                    references \\s+ (?:\\S+|\".+?(?<!\")\") (?:\\s* \\( \\s* \"?\\Q$remote_col\\E\"? \\s* \\))? \\s*\n                    (?:(?:\n                      on \\s+ (?:delete|update) \\s+ (?:set \\s+ null|set \\s+ default|cascade|restrict|no \\s+ action)\n                    |\n                      match \\s* (?:\\S+|\".+?(?<!\")\")\n                    ) \\s*)*\n                    ((?:not)? \\s* deferrable)?\n                
\n                    \\[GNUPG:\\]\\ ATTRIBUTE\n                    \\ \\w+                   # fingerprint\n                    \\ (?P<octets>\\d+)\n                    \\ (?P<attrtype>\\d+)\n                    \\ (?P<index>\\d+)\n                    \\ (?P<count>\\d+)\n                    \\                       # ... don't care about the rest\n                
\n                    ^/               # comment started like /*/\n                    \\s*\n                    (\\S[\\s\\S]+?)  # has at least some non-ws content\n                    \\s*\n                    /\\*             # ends like /*/ or /**/\n                
\n                    ^\n                    (?P<key>[^\\ ]*)\\ *\n                    (base-fret\\ *(?P<basefret>\\d{1,2}))?\\ *\n                    frets\\ *(?P<frets>((\\d+|x|X)\\ *)+)\\ *\n                    (fingers\\ *(?P<fingers>(([0-4-])\\ *)*))?\n                    $\n                
\n                    <img \\s+[^>]*\n                        src\\s*=\\s*\n                            (?:\n                                (?# Match quoted attribute)\n                                (['\"])file://(?P<quoted>[^\"]+)\\1\n\n                                (?# Match unquoted attribute, which may not contain spaces)\n                            |   file://(?P<unquoted>[^>\\s]+)\n                        )\n                    [^>]* >
\n                    <img \\s+[^>]*\n                        src\\s*=\\s*\n                            (?:\n                                (?# Match quoted attribute)\n                                (['\"])file://(?P<quoted>[^>]+)\\1\n\n                                (?# Match unquoted attribute, which may not contain spaces)\n                            |   file://(?P<unquoted>[^>\\s]+)\n                        )\n                    [^>]* >
\n                  (?:  \\G | [^\\\\]  )  #not esc\n                  
\n                  (?:\n                   \\G |\n                   [^\\\\c-] |\n                   (?>\\G|[^\\\\])c |\n                   (?> [^CM] | (?>\\G|[^\\\\])[CM] )-\n                  )              #not esc\n                  
\n                  (\\PM)($re)($re)($re)\n              }
\n                  (\\PM)($re)($re)\n              }
\n                  (\\PM)($re)\n              }
\n                 ((?!
\n                 (?P<aa>([ACDEFGHIKLMNPQRSTVWY])   # 1-letter amino acid\n                        |                          #   or\n                        ([A-Z][A-Z][A-Z][A-Z]?)    # 3-letter or 4-letter residue name\n                 )\n                 (?P<resid>\\d+)                    # resid\n                 (:                                # separator ':'\n                   (?P<atom>\\w+)                   # atom name\n                 )?                                # possibly one\n            
\n                (.*?)                   # preamble\n                ^--\\Q$boundary\\E\\s*\n                (.+)                    # all parts\n                ^--\\Q$boundary\\E--\\s*\n                (.*)                    # epilogue\n                
\n                (?: \\$\\{ | \\{\\$ ) [^}]++ \\}\n                |\n                \\$\\$?[a-zA-Z_]\\w*\n            
\n                (?: \\A | [^\\\\] )\n                (?: \\\\{2} )*\n                \\\\ [tnrfbae01234567xcNluLUEQ]\n            
\n                (?:(?P<user>[^:@]+)(?::(?P<password>[^:@]+))?@)?\n                (?P<host>[^:]+)\n                (?::(?P<port>[0-9]+))?\n            
\n                (?:\n                    \\(\\?\\(\n                  | \\[ [^\\]\\\\]* (?: \\\\ . [^\\]\\\\]* )* \\]\n                  | \\\\ .\n                ) (*SKIP)(*FAIL) |\n                \\(\n                (?!\n                    \\? (?! <(?![!=]) | P< | ' )\n                  | \\*\n                )\n            
\n                (?:\n                    \\(\\?\\(\n                  | \\[ [^\\]\\\\]* (?: \\\\ . [^\\]\\\\]* )* \\]\n                  | \\\\ .\n                ) (*SKIP)(*FAIL) |\n                \\(\n                (?!\n                    \\?\n                    (?!\n                        <(?![!=])\n                      | P<\n                      | '\n                    )\n                  | \\*\n                )\n            
\n                (?:\\n(?<indent>(?:[ ]{4})*)\\n|\\A\\n?)\n                (?<code>                    # $1 = the code block -- one or more lines, starting with a space/tab\n                    (?:(?>\n                        ^\\g{indent}[ ]{4}   # Lines must start with a tab or a tab-width of spaces\n                        .*\\n\n                    ))*\n                    (?:(?>\n                        ^\\g{indent}[ ]{4}   # Lines must start with a tab or a tab-width of spaces\n                        .*\n                    ))\n                )\n            
\n                (?<!\\\\)\\$ (?: \\((\\w+)\\) | (\\w+) ) # $2 => $(var) | $3 => $var\n\n            } 
\n                (?<command> [^\\s\"']+ ){0}\n                (?<exceptDoubleQuotes> [^\"\\\\]*(?:\\\\.[^\"\\\\]*)* ){0}\n                (?<exceptSingleQuotes> [^'\\\\]*(?:\\\\.[^'\\\\]*)* ){0}\n                \\g<command>|\"\\g<exceptDoubleQuotes>\"|'\\g<exceptSingleQuotes>'\n            
\n                ([\\x
\n                (\n                    <!                  # Match the start of a comment\n                    (-{2})?             # IE can understand comments without dashes\n                    \\[                  # Match the start (\"[\" is a metachar => escape it)\n                        (?:(?!\\]>).)*   # Match everything except \"]>\"\n                    \\]>                 # Match end\n                )\n                (\n                    (?:\n                        (?!<!\\[endif\\]-{2}?>)\n                    .)*\n                )                     # Match everything except end of conditional comment\n                (\n                    <!\\[endif\\]\n                          (?:\\2|(?=>))  # Use a trick to ensure that when dashes are captured they are...\n                                        # matched at the end! Else make sure that the next char is a \">\"!\n                    >                   # Match the endif with the captured dashes\n                )\n            
\\\n                (^|[~\\\\\\\\])\n                @(full_content|\\\n                    first_line|\\\n                    id|\\\n                    node_path|\\\n                    storage_name|\\\n                    storage_path|\\\n                    (meta\\\\{([^\\\\}]+)\\\\}))
\n                \\?\n\n                ( if
\n                \\A\n                \\Qhttp://projecteuler.net/index.php?section=problems&id=\\E\n                \\d+\n                \\z\n            
\n                \\G\n                \\(\n                    (?P<options>\n                        (?:\n                            \\ *?\n                            (?P<name>[a-zA-Z][a-zA-Z0-9_\\-]+)\n                            \\ *?\n                            (?:\\||(?=\\)))\n                            \\ *?\n                        )+\n                    )\n                \\)\n                (?:\\:(?P<groupName>[a-zA-Z0-9]+))?\n                (?:\\ +|$)\n                
\n                \\G\n                \\(\n                    (?P<options>\n                        (?:\n                            \\ *?\n                            \\-+(?P<name>[a-zA-Z0-9][a-zA-Z0-9_\\-]*?)\n                            \\ *?\n                            (?:\\||(?=\\)))\n                            \\ *?\n                        )+\n                    )\n                \\)\n                (?:\\:(?P<groupName>[a-zA-Z0-9]+))?\n                (?:\\ +|$)\n                
\n                \\G\n                \\[\n                    (?P<options>\n                        (?:\n                            \\ *?\n                            (?P<name>[a-zA-Z][a-zA-Z0-9_\\-]*?)\n                            \\ *?\n                            (?:\\||(?=\\]))\n                            \\ *?\n                        )+\n                    )\n                \\]\n                (?:\\:(?P<groupName>[a-zA-Z0-9]+))?\n                (?:\\ +|$)\n                
\n                \\G\n                \\[\n                    (?P<options>\n                        (?:\n                            \\ *?\n                            \\-+(?P<name>[a-zA-Z0-9][a-zA-Z0-9_\\-]*?)\n                            \\ *?\n                            (?:\\||(?=\\]))\n                            \\ *?\n                        )+\n                    )\n                \\]\n                (?:\\:(?P<groupName>[a-zA-Z0-9]+))?\n                (?:\\ +|$)\n                
\n                ^\\s*\n                (?<hidden>-)?\n                (?<name>\n                    [\\p{XPosixAlpha}_]\n                    ([\\p{XPosixAlnum}_])*\n                )\n                \\s*$\n## Please see file perltidy.ERR\n            
\n                =           # start matching by a equal sign\n                \\s*         # its valid to use whitespaces after the equals sign\n                ([\"'])?    # match a single or double quote and make it a capturing group for backreferencing\n                    (\n                            (?:(?=\\1)|[^\\\\])*             # normal part of \"unrolling the loop\". Match no quote nor escaped char\n                            (?:\\\\\\1                       # match the escaped quote\n                                (?:(?=\\1)|[^\\\\])*         # normal part again\n                            )*                              # special part of \"unrolling the loop\"\n                    )       # use a the \"unrolling the loop\" technique to be able to skip escaped quotes like =\"\\\"\"\n                \\1?         # match the same quote symbol as matched before\n            
\n               ([][({})])       # $1 open or close\n             |([:;]-?\\)         # $2 smiley face optional close\n               |\\b[a-zA-Z1-9]\\) #    \"middle a) or 1) item\"\n               |(?<!\\$)\\$\\)     #    perlvar $), and not $$\n               )\n             |([\"'])[][(){}]+\\3 # $3 \"(\" quoted\n             |[:;]-?[(]         # smiley face not an open\n             |(?<!\\$)\\$\\$       # perlvar $$ consumed\n             |\\$\\(\\w*\\)         # makefile var $(abc)\n             |\\$\\[\\w*\\]         # perhaps template $[abc]\n             |(?<!\\$)\\$[][(]    # perlvars $[, $(, $], and not $$\n             |^\\s*(\\d+|[A-Za-z])\\.?\\)   # initial \"1.5) something\"\n             
\n              (\\\\)?         # is it escaped with a backslash?\n              (\\$)          # literal $\n              (?!\\()        # shouldnt be followed by paranthesis\n              (\\{)?         # allow brace wrapping\n              ([A-Z0-9_]+)? # optional alpha nums\n              (\\})?         # closing brace\n            
\n              ^(\n                (\\s*                                  # Possible, but unlikely, space before include statement\n                  \\#include\\s+                        # Include statement\n                  ['\"]                                # Open quote\n                  (.*\\/)?                             # Possible prefix to path\n                  
\n             --(
\n             [
\n            # name attributes\n            \\(?(?P<attributes>.*?)?(?<!\\\\)\\)\\s?\n            # separator\n            \\\"(?P<separator>.*?)\\\"\\s\n            # inbox name with/without separator\n            \\\"?(?P<name>.*?)\\\"?$\n            
\n            %5B       # URL encoded \"[\"\n            (?:       # start non-capturing group\n              (?!%5D) # make sure the next character does not start \"%5D\"\n              [^=&]   # consume the character if it is no \"=\" or \"&\"\n            )*        # end of group; repeat\n            %5D       # URL encoded \"]\"\n            (?=       # lookahead to ensure the match is inside a parameter name\n                      # and not a value\n              [^=&]*= # make sure there is a \"=\" before the next \"&\"\n            )         # end of lookahead\n            
\n            (                         # Outer capture group 1 start\n                json: (\\s*)           # Capture group 2 (space) start\n                (                     # Capture group 3 (braces) start\n                   \\{                 # Opening brace\n                       (?:\n                           [^\\{\\}]++  # Non-braces, no backtrace\n                           | \n                           (?3)       # Recursively capture group 2 (braces)\n                       )*\n                   \\}\n                )\n            )\n        
\n            (                         # Outer capture group 1 start\n                json: (\\s*)           # Capture group 2 (space) start\n                (                     # Capture group 3 (brackets) start\n                   \\[                 # Opening bracket\n                       (?:\n                           [^\\[\\]]++  # Non-brackets, no backtrace\n                           | \n                           (?3)       # Recursively capture group 2 (brackets)\n                       )*\n                   \\]\n                )\n            )\n        
\n            (                   # \\1\n              [ \\t]+\n              (['\"])            # quote char = \\2\n              (?P<title>.*?)\n              \\2\n            )?                  # title is optional\n          \\)$\n        
\n            (''(?!')|\"\"(?!\")|'{6}|\"{6}    # Empty strings (all 4 types)\n             |'(?:[^\\\\']|\\\\.)+?'          # Single quotes (')\n             |\"(?:[^\\\\\"]|\\\\.)+?\"          # Double quotes (\")\n             |'{3}(?:[^\\\\]|\\\\.|\\n)+?'{3}  # Triple-quoted strings (')\n             |\"{3}(?:[^\\\\]|\\\\.|\\n)+?\"{3}  # Triple-quoted strings (\")\n             |\\#.*                        # Comments\n            )
\n            (?: ^ | (?<= [\\{[(;] ) )\n              \\s*\n                (?<source> $expression )\n                  \\s*  ==+>(?<push> >?+ )(?<merge> [<>]?+ )  \\s*\n                (?<action> $expression )\n              \\s*\n            (?= ==+>+ | [\\}\\]);] | $ )\n        }
\n            (?:(?:^::+)|(?P<shebang>^[#]!))\t# Shebang or 2 or more colons.\n            (?P<path>(?:/\\w+)*[/ ])?        # Zero or 1 path\n            (?P<lang>[\\w+-]*)               # The language\n            
\n            (?:(?P<d>[0-9]{1,2})-)?\n            (?P<m>[0-9]{1,2}|\\w{3})\n            -(?P<y>[0-9]{2}(?:[0-9]{2})?)\n            (?:\\s*\\(?\n                (?P<H>[0-9]{2}):(?P<M>[0-9]{2})(?::(?P<S>[0-9]{2}))?\n            \\)?)?
\n            (?<!\\\\)\n            (`+)        # \\1 = Opening run of `\n            (?!`)       # See Note A test/tm-cases/escapes.text\n            (.+?)       # \\2 = The code block\n            (?<!`)\n            \\1          # Matching closer\n            (?!`)\n        
\n            (?<= \\]) # Look behind to find ]\n            (\n                \\(     # match (\n                [^\\)]* # match everything except )\n                \\)     # match )\n            )\n\n            
\n            (?<startString>=>\\s'.*?)?         # optionally assignment operator and starting a string\n            (?P<fullMatch>%                    # an expression is indicated by %\n            (?P<expression>\n            (?:(?:\\\\?[\\d\\w_\\\\]+\\:\\:)         # either a class name followed by ::\n            |                                  # or\n            (?:(?P<prefix>[a-z]+)\\:)           # a prefix followed by : (like \"env:\")\n            )?\n            (?P<name>[A-Z_0-9]+))              # the actual variable name in all upper\n            %)                                 # concluded by %\n            (?<endString>[^%]*?(?:',\\n)?)?    # optionally concluding a string\n        
\n            (?P<env_opening>\n              (?<!\\\\)(?P<dd>\\$\\$) |\n              (?<!\\\\)(?P<sd>\\$) |\n              (?<!\\\\)(?P<braces>\\\\\\() |\n              (?<!\\\\)(?P<braces_sq>\\\\\\[) |\n              \\\\begin\\ *?{\n                (?P<env_name>(?:\n                  equation|align|math|displaymath|eqnarray|gather|flalign|multiline|alignat\n                )\\*?)}\n            )\n\n            (?P<content>\n              (?:\\n|\\\\\\$|[^\\$])+?\n            )\n\n            (?P<env_closing>\n              (?(dd)\\$\\$|(?!)) |\n              (?(sd)\\$|(?!)) |\n              (?(braces)\\\\\\)|(?!)) |\n              (?(braces_sq)\\\\\\]|(?!)) |\n              (?(env_name)\\\\end\\ *?{(?P=env_name)}|(?!))\n            )\n            
\n            (?P<field>[^()<>@,;:\\\"/[\\]?={}\u0001- \u007f]+):[ \t]*\n            (?P<value>[^\u0001-\b\n-\u001f\u007f]*)\r?[ \t]*\r?\n\n        
\n            (?P<name>[\\w\\.\\+]+)://\n            (?:\n                (?P<username>[^:/]*)\n                (?::(?P<password>[^/]*))?\n            @)?\n            (?:\n                (?P<host>[^/:]*)\n                (?::(?P<port>[^/]*))?\n            )?\n            (?:/(?P<database>.*))?\n            
\n            (?P<name>[\\w\\+]+)://\n            (?:\n                (?P<username>[^:/]*)\n                (?::(?P<password>.*))?\n            @)?\n            (?:\n                (?:\n                    \\[(?P<ipv6host>[^/]+)\\] |\n                    (?P<ipv4host>[^/:]+)\n                )?\n                (?::(?P<port>[^/]*))?\n            )?\n            (?:/(?P<database>.*))?\n            
\n            (?P<prefix> [^%]* )\n            % ( \\[ (?P<child> -? \\d+ ) \\] )?\n                ((?P<kind> [^{] ) |\n                 ( [{] (?P<expr> [^}]* ) [}] ))\n        
\n            (?P<prefix> [^%]* )\n            % ( \\[ (?P<child> -? \\d+ ) \\] )?\n                ((?P<type> [^{] ) |\n                 ( [{] (?P<expr> [^}]* ) [}] ))\n        
\n            ([\\s\\[{(]|[
\n            ([\\x
\n            (<p>|.|^)            # start of line?\n            \\!                   # opening\n            (\\<|\\=|\\>)?          # optional alignment atts\n            (
\n            .*                      # any beginning\n            \\[?\\s*                  # possibly optional extra\n            <(?P<final_extra>.*?)>  # capture extra name as final_extra\n            \\s*\\]?\\s*               # with possible end optional indicator\n            $                       # at the very end of spec\n            
\n            [
\n            [^/\\.]+\n            \\.\n            (\n              
\n            \\\\([abfnrtv\\\\?'\"])\n            |\n            \\\\(\\d\\d\\d)\n            |\n            \\\\(x[[:xdigit:]]
\n            \\?fmt\n            \\s*\n            \\{ \\s* ( $path_re ) \\s* }\\s*    # $1\n\n            (                               # $2\n                \\s*\n\n                \\{\n                    (                       # $3\n                        (?: (?> 
\n            \\[ ([^\\[\\]]*?) \\]\n            \\( ((https?://.*?) | (mailto:.*?)) \\)\n            (?! [
\n            \\{(((?>[^\\{\\}]+)|(?R))*)\\}\n        
\n            \\A\n            # 1. Extract the template marker\n            (?:(\\#\\@\\+|\\#\\@\\-)\\n?)?\n\n            # 2. Extract the summary\n            (?:\n              (?! @\\pL ) # The summary may not start with an @\n              (\n                [^\\n.]+\n                (?:\n                  (?! \\. \\n | \\n{2} )     # End summary upon a dot followed by newline or two newlines\n                  [\\n.] (?! [ \\t]* @\\pL ) # End summary when an @ is found as first character on a new line\n                  [^\\n.]+                 # Include anything else\n                )*\n                \\.?\n              )?\n            )\n\n            # 3. Extract the description\n            (?:\n              \\s*        # Some form of whitespace _must_ precede a description because a summary must be there\n              (?! @\\pL ) # The description may not start with an @\n              (\n                [^\\n]+\n                (?: \\n+\n                  (?! [ \\t]* @\\pL ) # End description when an @ is found as first character on a new line\n                  [^\\n]+            # Include anything else\n                )*\n              )\n            )?\n\n            # 4. Extract the tags (anything that follows)\n            (\\s+ [\\s\\S]*)? # everything that follows\n            
\n            \\A\n            # 1. Extract the template marker\n            (?:(\\#\\@\\+|\\#\\@\\-)\\n?)?\n\n            # 2. Extract the summary\n            (?:\n              (?! @\\pL ) # The summary may not start with an @\n              (\n                [^\\n.]+\n                (?:\n                  (?! \\. \\n | \\n{2} )     # End summary upon a dot followed by newline or two newlines\n                  [\\n.]* (?! [ \\t]* @\\pL ) # End summary when an @ is found as first character on a new line\n                  [^\\n.]+                 # Include anything else\n                )*\n                \\.?\n              )?\n            )\n\n            # 3. Extract the description\n            (?:\n              \\s*        # Some form of whitespace _must_ precede a description because a summary must be there\n              (?! @\\pL ) # The description may not start with an @\n              (\n                [^\\n]+\n                (?: \\n+\n                  (?! [ \\t]* @\\pL ) # End description when an @ is found as first character on a new line\n                  [^\\n]+            # Include anything else\n                )*\n              )\n            )?\n\n            # 4. Extract the tags (anything that follows)\n            (\\s+ [\\s\\S]*)? # everything that follows\n            
\n            \\b                             # Word boundary\n            (?P<use_type>use|context)      # use or context keyword\n            \\s+                            # At least one whitespace\n            (?P<id>[a-zA-Z][\\w]*(\\.[a-zA-Z][\\w]*){1,2})\n            (?P<extra>(\\s*,\\s*[a-zA-Z][\\w]*(\\.[a-zA-Z][\\w]*){1,2})*)\n            \\s*                            # Potential whitespaces\n            ;                              # Semi-colon\n    
\n            \\b                    # Word boundary\n            entity                # entity keyword\n            \\s+                   # At least one whitespace\n            (?P<id>[a-zA-Z][\\w]*) # An identifier\n            \\s+                   # At least one whitespace\n            is                    # is keyword\n            
\n            \\b\n            ([:alpha:]+)\n            (
\n            \\n\\s*?\\n\n            (?P<codeblock> \\s*?\n                (?P<prompt> \\>\\>\\>)\n            )\n        
\n            \\QFileNotFoundError: {\"RemoteException\":{\"message\":\"File does not exist:\\E\n        
\n            \\s*                # Any whitespace.\n            (                  # Start capturing here.\n              [^,\"']+?         # Either a series of non-comma non-quote chars.\n              |                # OR\n              \"(?:             # A double-quote followed by a string of chars.\n                  [^\"\\\\]|\\\\.   # That are either non-quotes or escaped...\n               )*              # ...repeated any number of times.\n              \"                # Followed by a closing double-quote.\n              |                # OR\n              '(?:[^'\\\\]|\\\\.)*'# Same as above, for single quotes.\n            )                  # Done capturing.\n            \\s*                # Allow arbitrary space before the comma.\n            (?:,|$)            # Followed by a comma or the end of a string.\n            
\n            ^                             # Beginning of line\n            [\\s]*                         # Potential whitespaces\n            (?P<type_mark>[a-zA-Z][\\w]*)   # An type mark\n            [\\s]*                         # Potential whitespaces\n            (?P<constraint>\\(.*\\))?\n            
\n            ^\n            (\n                ${\\Mail::SPF::Mech->qualifier_pattern}?\n               (${\\Mail::SPF::Mech->name_pattern})\n                [^\\x20]*\n            )\n            (?: \\x20+ | $ )\n        
\n            ^\n            (\n               (${\\Mail::SPF::Mod->name_pattern}) =\n                [^\\x20]*\n            ) \n            (?: \\x20+ | $ )\n        
\n            ^\n            \\[volta\\]\n            \\s+\n            (?P<nanotime>\\S+)\n            \\s+\n            (?P<custom_metric_type>\\S+)\n            \\s+\n            (?P<tag>\\S+)\n            \\s+\n            (?P<message>.*)\n            $\n        
\n            ^\n            \\Q$tag\\E\n            $\n            
\n            ^\n            \\s*\n            (={1,5})\n            \\s*\n            (?P<name>(?:!=+|\n                        [^=!]+|\n                        !)+?\n            )\n            \\s*\n            \\1\n            (?:\\s|\\#|$)\n         
\n            ^\n            create\\s+(?P<name>\\w+)\\s+\n            hash:net\\s+family\\s+inet\\s+\n            hashsize\\s+(?P<hashsize>\\d+)\\s+\n            maxelem\\s+(?P<maxelem>\\d+)\\s*\n            $\n            
\n            ^=head1 \\s+ NAME\n            \\s+\n            \\Q$module\\E \\s+ - \\s+ ([^\\n]+)\n        
\n            <script>\\s*\n            var\\s+funkotron\\s*=\\s*\n            \\{\\s*\n                config\\s*:\\s*(?P<json>\\{.+?\\})\\s*\n            \\}\\s*;?\\s*\n            </script>\n        
\n            url\\(      # url(\n            \\s*\n            ([^\\)]+?)  # 1 = URI (assuming does not contain \")\")\n            \\s*\n            \\)         # )\n        
\n          ' (?: 
\n          # match a specifier, e.g. library or executable\n          ^(
\n          # Match tail of: [text](/url/) or [text](/url/ \"title\")\n          \\(            # literal paren\n            [ \\t]*\n            (?P<url>            # \\1\n                <.*?>\n                |\n                .*?\n            )\n            [ \\t]*\n            (                   # \\2\n              (['\"])            # quote char = \\3\n              (?P<title>.*?)\n              \\3                # matching quote\n            )?                  # title is optional\n          \\)\n        
\n          # Match tail of: [text][id]\n          [ ]?          # one optional space\n          (?:\\n[ ]*)?   # one optional newline followed by spaces\n          \\[\n            (?P<id>.*?)\n          \\]\n        
\n          &(?:\n            n(?:bsp|ot|tilde)|i(?:excl|quest|grave|acute|circ|uml)|c(?:e(?:nt|dil)|urren|opy|cedil)|p(?:ound|lusmn|ara)|y(?:en|acute|uml)|brvbar|s(?:ect|hy|up[123]|zlig)|u(?:ml|grave|acute|circ|uml)|o(?:rd[fm]|grave|acute|circ|tilde|uml|slash)|laquo|r(?:eg|aquo)|m(?:acr|i(?:cro|ddot))|d(?:eg|ivide)|a(?:c(?:ute|irc)|grave|acute|tilde|uml|ring|elig)|frac(?:1[24]|34)|A(?:grave|acute|circ|tilde|uml|ring|Elig)|Ccedil|E(?:grave|acute|circ|uml|TH)|I(?:grave|acute|circ|uml)|Ntilde|O(?:grave|acute|circ|tilde|uml|slash)|t(?:imes|horn)|U(?:grave|acute|circ|uml)|Yacute|THORN|e(?:grave|acute|circ|uml|th)\n            |\\#\\d{4}\n            |\\#x\\h{4}\n          );\n        
\n          (                                               #   $1 total match\n            (
\n          (
\n          ( 0b[10_]+\n          | 0x[0-9a-fA-F-]+\n          | [0-9]+\n          ) (u
\n          (.*)                  # prefix\n          \\b\\w.*                # \"word\" to clear\n          (.{
\n          (/(?:wave|X|Y))\n          (\\s*)(=)(\\s*)\n          (
\n          (/) (\\[
\n          (?![\"#])((?:
\n          (?:
\n          (?:\\ *\\n)*        # leading empty lines\n          (?<indent>\\ {2,})\n          .*?(?:\\n|\\z)      # first line content\n          (\n            \\g<indent>\\ *\n            .*?(?:\\n|\\z)    # rest line content\n            |\n            (?:\\ *\\n)*      # rest empty line\n          )*\n        
\n          (?:\n            (?<number>  -?(?=[1-9]|0(?!\\d))\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\n            (?<boolean> true | false | null )\n            (?<string>  \" (?:[^\"\\\\]++ | \\\\ [\"\\\\bfnrt\\/] | \\\\ u [0-9a-f]{4} )* \" )\n            (?<array>   \\[ (?> \\g<json> (?: , \\g<json> )* )? \\s* \\] )\n            (?<pair>    \\s* \\g<string> \\s* : \\g<json> )\n            (?<object>  \\{ (?> \\g<pair> (?: , \\g<pair> )* )? \\s* \\} )\n            (?<json>    \\s* (?> \\g<number> | \\g<boolean> | \\g<string> | \\g<array> | \\g<object> ) \\s*)\n          ){0}\n          \\g<object>\n        
\n          (?:^|\\W)                    # beginning of string or non-word char\n          @((?>
\n          (?<backslash>\\\\)?   # is it escaped with a backslash?\n          \\$                  # literal $\n          (?<cmd>             # collect command content for eval\n            \\(                # require opening paren\n            ([^()]|\\g<cmd>)+  # allow any number of non-parens, or balanced\n                              # parens (by nesting the <cmd> expression\n                              # recursively)\n            \\)                # require closing paren\n          )\n        
\n          (?<braces> \\{\n            ([^\\{]+ | \\g<braces>)*  # recursive rule\n          \\})\n        
\n          (?P<PARAGRAPH>\\n\\n)\n        | (?P<SPACE>\\n)\n    
\n          ([\\w*\\s]+?[\\s*]) # return arguments\n          (
\n          ([-+])(\\s*)\n          ([(].*?[)])?(\\s*)\n          (?=
\n          (\\\\)?         # is it escaped with a backslash?\n          (\\$)          # literal $\n          (?!\\()        # shouldnt be followed by paranthesis\n          \\{?           # allow brace wrapping\n          ([A-Z0-9_]+)? # optional alpha nums\n          \\}?           # closing brace\n        
\n          (\\b[snN]?
\n          (\n            (?!\n              url\\(\n            )\n            [^()\\[\\]{}\"'#/ \\t\\r\\n\\f
\n          (\n            \\\\.\n          |\n            (?!url\\()\n            [^\"'/\\#!;\\{\\}] # \"\n          |\n            # interp_uri will handle most url() calls, but not ones that take strings\n            url\\(
\n          (\n            \\/\\*\n            
\n          (\n            \\A [[:punct:]]*     # start of title\n            | [:.;?!][ ]+       # or of subsentence\n            | [ ]['\"
\n          (\n            \\b\n            [[:alpha:]]         # single first letter\n            [\\-
\n          (\n          ^
\n          (^(?:
\n          [
\n          [?](\\\\[MC]-)*     # modifiers\n          (\\\\([\\\\abefnrstv\\#\"']|x[a-fA-F0-9]{1,2}|[0-7]{1,3})|\\S)\n          (?!\\w)\n        
\n          [+-]? # sign\n          (\n            (\\d+[.]\\d*|[.]\\d+)(
\n          [+][+]|--|~|&&|\\band\\b|\\bor\\b|\\bis\\b|\\bisnt\\b|\\bnot\\b|[?]|:|=|\n          [|][|]|\\\\(?=\\n)|(<<|>>>?|==?|!=?|[-<>+*`%&|^/])=?\n        
\n          [0-9]+\n          (
\n          \\\\(?:text|label|mbox|textrm)\n          \\ *?\n          \\{(?:.|\\n)*?\\}\n        
\n          \\(\\s*\\$\\]\\s* \\Q>=\\E \\s* 5[\\d\\._]+ \\s* \\?\\s*\\( \\s*\n          ( [^()]+? ) ,? \\s*\n          \\)\\s*\\:\\s*\\(\\)\\s*\\),\n  
\n          \\[\\[          # start [[\n          ([^\\[\\]]+)    # $text : one or more characters that are not [ or ] ($1)\n          \\]\\]          # end ]]\n        
\n          \\<cds\\.                ## open tag: <cds.\n          ((?:JOURNAL(?P<ibid>ibid)?)  ## a JOURNAL tag\n          |VOL                   ## or a VOL tag\n          |YR                    ## or a YR tag\n          |PG                    ## or a PG tag\n          |REPORTNUMBER          ## or a REPORTNUMBER tag\n          |SER                   ## or a SER tag\n          |URL                   ## or a URL tag\n          |DOI                   ## or a DOI tag\n          |QUOTED                ## or a QUOTED tag\n          |ISBN                  ## or a ISBN tag\n          |PUBLISHER             ## or a PUBLISHER tag\n          |COLLABORATION         ## or a COLLABORATION tag\n          |AUTH(stnd|etal|incl)) ## or an AUTH tag\n          (\\s\\/)?                ## optional /\n          \\>                     ## closing of tag (>)\n          
\n          \\A(?:[^\\r\\n]*coding:[^\\r\\n]*\\r?\\n)?\n          (?<start>
\n          \\A(\n             (^\\s*\\*?\\s*\\n)+\n             (^
\n          \\A(\n             (^\\s*\\n)+\n             (^
\n          \\A\n          (\n            (?:.*[^\\\\]|)  # anything ending not with slash or nothing\n            (?:\\\\\\\\)*     # any number of self escaped slashes\n          )\n          \\{              # open brace\n          (\n            (?:|.*?[^\\\\]) # nothing or non greedy anything ending not with slash\n            (?:\\\\\\\\)*     # any number of self escaped slashes\n          )\n          \\}              # close brace\n          (\n            .*            # what is left\n          )\n          \\z\n        
\n          \\B[{]{2}(\n            ([snN]?
\n          \\b\n          ( 
\n          \\b\n          ([_\\*]*)\n          (?:\n            ( [-\\+\\w]+ [@.\\:\\/] [-\\w@.\\:\\/]+ 
\n          \\n?                 # Optional newline\n          (?<query>           # The media query parameters, this will be $1\n            @media            #   Start with @media\n            (?!\\ -sass-debug-info) # Ignore sass-debug-info\n            [^{]+             #   One to many characters that are not {, we are guaranteed to have a space\n          )\n          {\n          (?<body>            # The actual body, this will be $2\n            (?<braces>        #   Recursive capture group\n              (?:\n                [^{}]*        #     Anything that is not a brace\n                |             #     OR\n                {\\g<braces>}  #     Recursively capture things within braces, this allows for balanced braces\n              )*              # As many of these as we have\n            )\n          )\n          }\n          \\n?                 # Optional newline\n          
\n          \\s*\n          (\n            '(?:[^'\\\\]|\\\\.)*?'|\n            \"(?:[^\"\\\\]|\\\\.)*?\"|\n            `(?:[^`\\\\]|\\\\.)*?`|\n            [a-zA-Z0-9_\\.()]*?\n          )\n          \\s*\n        
\n          \\w+\n          \\s*\n          \\:\n          \\s*\n          (?:\n            \"(?:[^\"\\\\]|\\\\.)*\"\n            |\n            '(?:[^'\\\\]|\\\\.)*'\n            |\n            [^\\s]+\n          )\n        
\n          ^((\\s*;\\s*|\\s+and\\s+)(?P<series>(?:[A-H]|I{1,3}V?|VI{0,3}))?\\s*:?\\s   ## Leading ; : or \" and :\", and a possible series letter\n          \\<cds\\.VOL\\>(?P<vol>\\d+|(?:\\d+\\-\\d+))\\<\\/cds\\.VOL>\\s                  ## Volume\n          \\<cds\\.YR\\>\\((?P<yr>[12]\\d{3})\\)\\<\\/cds\\.YR\\>\\s                       ## year\n          \\<cds\\.PG\\>(?P<pg>[RL]?\\d+[c]?)\\<\\/cds\\.PG\\>)                         ## page\n          
\n          ^(\n             [ \\t]* \\Q${subtest_delim}\\E.*?\n             (?= ^[ \\t]* \\Q${block_delim}\\E | ^[ \\t]* \\Q${subtest_delim}\\E | \\z )\n           )\n        | ^(\n             [ \\t]* \\Q${block_delim}\\E .*?\n             (?= ^[ \\t]* \\Q${block_delim}\\E | ^[ \\t]* \\Q${subtest_delim}\\E | \\z )\n           )\n        | ^( [^\\n]* \\n )\n    
\n          ^(\\Q${cd}\\E.*?(?=^\\Q${cd}\\E|\\z))\n        | ^([^\\n]*\\n)\n    
\\\n         (?P<keyword>part|piece|play|section|voice)|\\\n         (?P<key>([a-zA-Z_][a-zA-Z0-9_#,'=\\\\-]*\\\\s*|:)?:)|\\\n         (?P<ident>[a-zA-Z_][a-zA-Z0-9_ ]*)|\\\n         (?P<string>\"((\\\\\\\\\")|[^\"])*\")|\\\n         (?P<number>[+\\\\-]?\\\\d+)|\\\n         (?P<delim>[{},])|\\\n         (?P<staveline>\\\\|([^;}\\n]*))|\\\n         (?P<comment>//[^\\n]*)|\\\n         (?P<blank>\\n\\\\s*\\n)|\\\n         (?P<newline>\\n)|\\\n         (?P<whitespace>([\\t ]|;)+)|\\\n         (?P<error>.)\\\n         
\\\n         (?P<note>[a-gA-G][=_\\\\#]*[,']*)|\\\n         (?P<part>\\\\*[a-zA-Z_][a-zA-Z0-9_]*)|\\\n         (?P<symbol>[\\\\.\\\\-x\"%])|\\\n         (?P<number>\\\\d+)|\\\n         (?P<barline>\\\\|)|\\\n         (?P<comment>//[^\\n]*)|\\\n         (?P<whitespace>([\\t ]|;)+)|\\\n         (?P<error>.)\\\n         
\n         (\\'.*?(?<=[^\\\\])\\')             |       # single-quoted strings\n         (\\\".*?(?<=[^\\\\])\\\")             |       # double-quoted strings\n         ((?<![\\*\\/])\\/(?![\\/\\*]).*?(?<![\\\\])\\/) # JS regexes, trying hard not to be tripped up by comments\n         
\n         (\n            \\b\n            (?:[bw])?\n            [, ]
\n         <\n         (\\/?)\n         (\n          ($All_Elems)\n          (\\s|$Tag_End|\\Z)   # \\Z) because $) would screw my indentation :)\n         )\n         
\n         <span \\s class=\"category\"[^>]*>\n           \\(\n           For \\s more \\s information \\s\n            .+?       ## non-greedy (smallest possible match\n           \\)\n         <\\/span>\n        
\n        !\n        (?P<device_category>\\d)\n        ECN\n        (?P<model_name>[^/]*)/\n        (?P<iscp_port>\\d{5})/\n        (?P<area_code>\\w{2})/\n        (?P<identifier>.{0,12})\n    
\n        # Captures a set of name/value pairs when used with re.finditer\n        (?P<name>(?:(?=\\w)[^\\d]\\w*))                   # name\n        \\s*=\\s*                                        # =\n        (?P<value>\"(?:\\\\.|\"\"|[^\"])*\"|(?:\\\\.|[^\\s\"])+)  # value\n        
\n        # Grab the traceback header.  Different versions of Python have\n        # said different things on the first traceback line.\n        ^(?P<hdr> Traceback\\ \\(\n            (?: most\\ recent\\ call\\ last\n            |   innermost\\ last\n            ) \\) :\n        )\n        \\s* $                # toss trailing whitespace on the header.\n        (?P<stack> .*?)      # don't blink: absorb stuff until...\n        ^ (?P<msg> \\w+ .*)   #     a line *starts* with alphanum.\n        
\n        # hstore key:\n        # a string of normal or escaped chars\n        \"((?: [^\"\\\\] | \\\\. )*)\"\n        \\s*=>\\s* # hstore value\n        (?:\n            NULL # the value can be null - not catched\n            # or a quoted string like the key\n            | \"((?: [^\"\\\\] | \\\\. )*)\"\n        )\n        (?:\\s*,\\s*|$) # pairs separated by comma or end of string.\n    
\n        # Mantissa\n        (\\#|
\n        # possible space, followed by...\n          (?:\\s*\n          # percent sign, followed by...\n            %\n            # another percent sign, or...\n              (?:%|\n                 # optional assignment suppression flag\n                 \\*?\n                 # optional maximum field width\n                 \\d*\n                   # named character class, ...\n                   (?:\\[\\[:\\w+:\\]\\]|\n                   # traditional character class, or...\n                      \\[[^\\]]*\\]|\n                   # specifier letter.\n                      [
\n        # possible space, followed by...\n          (?:\\s*\n          # percent sign, followed by...\n            %\n            # another percent sign, or...\n              (?:%|\n        \t # optional assignment suppression flag\n        \t \\*?\n        \t # optional maximum field width\n        \t \\d*\n        \t   # named character class, ...\n        \t   (?:\\[\\[:\\w+:\\]\\]|\n        \t   # traditional character class, or...\n        \t      \\[[^\\]]*\\]|\n        \t   # specifier letter.\n        \t      [
\n        # Set-up...\n        (?
\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<command>\n            (?:^(?P<indent> [ ]*) \\$    .*)    # PS1 line\n            (?:\\n           [ ]*  >     .*)*)  # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*\\$)   # Not a line starting with PS1\n                     .*$\\n?       # But any other line\n                  )*)\n        
\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^  (?P<indent> [ ]*))                   # PS0 line: indent\n            (?:   \\[(?P<label>.+)\\]\\n)?                # PS0 line: label\n            (?:   (?P<user>[\\w]*)@(?P<host>[\\w\\.-]*)\\n)? # PS0 line: user@host\n            (?:   [ ]* \\$ .*)                          # PS1 line\n            (?:\\n [ ]* \\. [ ].*)*)                        # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*\\$)   # Not a line starting with PS1\n                     .*$\\n?       # But any other line\n                  )*)\n        
\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) \\$    .*)     # PS1 line\n            (?:\\n           [ ]*  >     .*)*)   # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*\\$)   # Not a line starting with PS1\n                     .*$\\n?       # But any other line\n                  )*)\n        
\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n            (?:\\n           [ ]*  \\.\\.\\. .*)*)  # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)    # Not a blank line\n                     (?![ ]*>>>)  # Not a line starting with PS1\n                     .*$\\n?       # But any other line\n                  )*)\n        
\n        # Source consists of a PS1 line followed by zero or more PS2 lines.\n        (?P<source>\n            (?:^(?P<indent> [ ]*) julia>[ ] .+)    # PS1 line\n            (?:\\n    (?P=indent)? [ ]{7,13} .+)*)  # PS2 lines\n        \\n?\n        # Want consists of any non-blank lines that do not start with PS1.\n        (?P<want> (?:(?![ ]*$)              # Not a blank line\n                     (?![ ]*julia>)         # Not a line starting with PS1\n                     .+$\\n?                 # But any other line\n                  )*)\n        
\n        # start of string, optional whitespace, optional '$'\n        ^\\s*\\$?\n\n        # message (from '$' or start to checksum or end, non-inclusve)\n        (?P<nmea_str>\n            # sentence type identifier\n            (?P<sentence_type>\n\n                # proprietary sentence\n                (P\\w{3})|\n\n                # query sentence, ie: 'CCGPQ,GGA'\n                # NOTE: this should have no data\n                (\\w{2}\\w{2}Q,\\w{3})|\n\n                # taker sentence, ie: 'GPGGA'\n                (\\w{2}\\w{3},)\n            )\n\n            # rest of message\n            (?P<data>[^*]*)\n\n        )\n        # checksum: *HH\n        (?:[*](?P<checksum>[A-F0-9]{2}))?\n\n        # optional trailing whitespace\n        \\s*[\\r\\n]*$\n        
\n        (              # $1: collect all but safety guard at the end\n        \\{             # start of dynamic value\n        (!?)           # $2: use ! to call the method on an object even if :respond_to fails\n        
\n        (           # Start group 1, which is the actual link text\n            \\[          # Match a literal [\n            [^\\]]+      # Match anything except a literal ] - this will be the link text itself\n            \\]          # Match a literal ]\n            \\s*         # Any whitespace (including newlines)\n            \\[          # Match the opening bracket of the lazy link marker\n        )           # End group 1\n        \\*          # Literal * - this is the lazy link marker\n        (           # Start group 2, which is everything after the lazy link marker\n            \\]          # Literal ]\n            .*?^        # Non-greedy match of anything up to a new line\n            \\[          # Literal [\n        )           # End Group 2\n        \\*\\]:       # Match a literal *]: - the lazy link URL definition follows this\n        
\n        (
\n        ( \\d{1,2} )                         # day or month\n        ( \\s | \\- | \\/ | \\\\ | \\_ | \\. )     # separator\n        ( \\d{1,2} )                         # month or day\n        \\2                                  # same separator\n        ( 19\\d{2} | 200\\d | 201\\d | \\d{2} ) # year\n      
\n        ( \\\\U........      # 8-digit hex escapes\n        | \\\\u....          # 4-digit hex escapes\n        | \\\\x..            # 2-digit hex escapes\n        | \\\\[0-7]{1,3}     # Octal escapes\n        | \\\\N\\{[^}]+\\}     # Unicode characters by name\n        | \\\\[\\\\'\"abfnrtv]  # Single-character escapes\n        )
\n        ( \\\\U........      # 8-digit Unicode escapes\n        | \\\\u....          # 4-digit Unicode escapes\n        | \\\\x..            # 2-digit Unicode escapes\n        | \\\\[0-7]{1,3}     # Octal character escapes\n        | \\\\N\\{[^}]+\\}     # Unicode characters by name\n        | \\\\[\\\\'\"abfnrtv]  # Single-character escapes\n        )
\n        (?!
\n        (?:                    # non-capturing group\n          \\A                |  # start of string OR\n          \\r\\n                 # line break\n         )\n        (\n          --
\n        (?:
\n        (?: ^|\\s)\\K               # needs to be sperated by a space\n        $twigil                   # the twigil (ie, $!)\n        (?<varname> \\w+)          # the variable name\n    }
\n        (?: ^|\\s)\\K            # needs to be sperated by a space\n        \\$ __ $marker          # keyword was convert to package\n        _ (?<id> \\d+ ) \\b      # the method name and a word break\n    }
\n        (?:\\$|@{1,2})?            # optional global, instance or class variable indicator\n        (?:
\n        (?:\n            (?&start)\n            (?<names>            (?&word_list)      )\n            (?:\n                  (?: # Boolean\n                      (?<type>     (?&bang) (?&end) ) )\n                | (?: # Counter\n                      (?<argument> (?&optional)?    )\n                      (?<type>     (?&plus) (?&end) ) )\n                | (?: # Scalar types - number, integer, string\n                      (?<argument> (?&arg)          )\n                      (?<subtype>  (?&scalar_type)  )\n                      (?<type>     (?&non_scalar)?  ) )\n                | (?: # Int with default argument\n                      (?<argument> (?&optional)     )\n                      (?<default>  (?&integer)      ) )\n                | (?: # Flag\n                      (?&end)                       ) # Nothing to capture\n            )?\n            (?<garbage> (?&unmatched)? )\n\n            # This ensures that every token is defined, even if only\n            # to the empty string.\n            (?<default>  (?(<default>))  )\n            (?<type>     (?(<type>))     )\n            (?<subtype>  (?(<subtype>))  )\n            (?<argument> (?(<argument>)) )\n        )\n        (?(DEFINE)\n            (?<start>       ^        )\n            (?<word_list>   (?: (?&word) (?: (?&separator) (?&alias) )* ) )\n            (?<word>        \\w[-\\w]* )\n            (?<alias>       (?: [?] | (?&word) ) )\n            (?<separator>   [|]      )\n            (?<scalar_type> (?: [fions] ) )\n            (?<integer>     (?: -? \\d+ ) )\n            (?<arg>         [:=]     )\n            (?<optional>    [:]      )\n            (?<mandatory>   [=]      )\n            (?<non_scalar>  [@%]     )\n            (?<hash>        [%]      )\n            (?<array>       [@]      )\n            (?<bang>        [!]      )\n            (?<plus>        [+]      )\n            (?<end>         (?! . )  )\n            (?<unmatched>   (?: .* $ ) )    # This will be the last thing in an invalid spec\n        )\n    
\n        (?:\n          --\\sC\\slevel\\sbacktrace\\sinformation\\s-------------------------------------------\\n\n          (?:(?:.*\\s)?\\[0x\\h+\\]\\n)*\\n\n        )?\n      
\n        (?:^\\n?[ \\t]*|;[ ])\n        (?P<name>[!#$%&'*+-.0-9A-Z^_`a-z|~]+)\n        =\n        (?P<DQUOTE>\"?)\n            (?P<value>[\\x21\\x23-\\x2b\\x2d-\\x3a\\x3c-\\x5b\\x5d-\\x7e]*)\n        (?P=DQUOTE)\n        (?=\\n?[ \\t]*$|;[ ])\n    
\n        (?:--|\\#)[\\ \\t\\S]*      # single line comments\n        |\n        (?:<>|<=>|>=|<=|==|=|!=|!|<<|>>|<|>|\\|\\||\\||&&|&|-|\\+|\\*(?!/)|/(?!\\*)|\\%|~|\\^|\\?)\n                                # operators and tests\n        |\n        [\\[\\]\\(\\),;.]            # punctuation (parenthesis, comma)\n        |\n        \\'\\'(?!\\')              # empty single quoted string\n        |\n        \\\"\\\"(?!\\\"\")             # empty double quoted string\n        |\n        \".*?(?:(?:\"\"){1,}\"|(?<![\"\\\\])\"(?!\")|\\\\\"{2})\n                                # anything inside double quotes, ungreedy\n\t\t|\n        `.*?(?:(?:``){1,}`|(?<![`\\\\])`(?!`)|\\\\`{2})\n                                # anything inside backticks quotes, ungreedy\n        |\n        '.*?(?:(?:''){1,}'|(?<!['\\\\])'(?!')|\\\\'{2})\n                                # anything inside single quotes, ungreedy.\n        |\n        /\\*[\\ \\t\\n\\S]*?\\*/      # C style comments\n        |\n        (?:[\\w:@]+(?:\\.(?:\\w+|\\*)?)*)\n                                # words, standard named placeholders, db.table.*, db.*\n        |\n        (?:\\${1,2})             # dollars\n        |\n        [\\t\\ ]+                 # any kind of white spaces\n    
\n        (?:web\\+)?diaspora://\n        (
\n        (?<=[^[[:word:]]])r(?<re>\n          \\(\n            (?:\n              (?> [^()]+ )\n              |\n              \\g<re>\n            )*\n          \\)\n        )\n      
\n        (?<comment> /[*] [^*]* [*]+ (?: [^*/] [^*]* [*]+ )* / ){0}\n        (?<ws>      \\g<comment> | \\s                          ){0}\n        (?<ident>   [_a-zA-Z] [0-9_a-zA-Z]*                   ){0}\n        (?<type>    (?: \\g<ident> \\g<ws>+ )* \\g<ident>        ){0}\n        (?<var>     \\g<ident>                                 ){0}\n        \\G          \\g<ws>* \\g<type> \\g<ws>+ \\g<var>\n      
\n        (?<name>
\n        (?<token_string>\n          (?<minus>-)?\n          (?:(?<field_name>\\w+):)?\n          (?:\n            (?:\"(?<quoted_term>.*?)(?<!\\\\)\")\n            |\n            (?<term>\\S+)\n          )\n        )\n      
\n        (?P<domain>\n            (https?:\\/\\/(www\\.)?|www\\.)          # protocol http://, etc\n            [\\-\\w@:%\\.\\+~\\#=]{2,256}\\.[a-z]{2,6} # domain name\n            /?                                   # can have a trailing slash\n        )(?P<path>\n            [\\-\\w@:%\\+\\.~\\#?&/=]*                # rest of path, query, & hash\n        )\n    
\n        (?P<ele>\nH  | He |\nLi | Be | B  | C  | N  | O  | F  | Ne |\nNa | Mg | Al | Si | P  | S  | Cl | Ar |\nK  | Ca | Sc | Ti | V  | Cr | Mn | Fe | Co | Ni | Cu | Zn | Ga | Ge | As | Se | Br | Kr |\nRb | Sr | Y  | Zr | Nb | Mo | Tc | Ru | Rh | Pd | Ag | Cd | In | Sn | Sb | Te | I  | Xe |\nCs | Ba | Hf | Ta | W  | Re | Os | Ir | Pt | Au | Hg | Tl | Pb | Bi | Po | At | Rn |\nFr | Ra | Rf | Db | Sg | Bh | Hs | Mt |\n\nLa | Ce | Pr | Nd | Pm | Sm | Eu | Gd | Tb | Dy | Ho | Er | Tm | Yb | Lu | # Lanthanides\nAc | Th | Pa | U  | Np | Pu | Am | Cm | Bk | Cf | Es | Fm | Md | No | Lr | # Actinides\n        )\n        [^a-z]  # Any specification of an element is followed by some number\n                # or capital letter or special character.\n    
\n        (?P<fence>^(?:~{3,}|`{3,}))[ ]*         # Opening ``` or ~~~\n        (\\{?\\.?(plant)?uml)[ ]*                 # Optional {, and lang\n        # args\n        \\s*(format=(?P<quot>\"|')(?P<format>\\w+)(?P=quot))?\n        \\s*(classes=(?P<quot1>\"|')(?P<classes>[\\w\\s]+)(?P=quot1))?\n        \\s*(alt=(?P<quot2>\"|')(?P<alt>[\\w\\s\"']+)(?P=quot2))?\n        \\s*(title=(?P<quot3>\"|')(?P<title>[\\w\\s\"']+)(?P=quot3))?\n        [ ]*\n        }?[ ]*\\n                                # Optional closing }\n        (?P<code>.*?)(?<=\\n)\n        (?P=fence)[ ]*$\n        
\n        (?P<head> .*? /)\n        (?P<middle> trunk | (tags | branches) (/ guests / [^/@]+)? / [^/@]+)\n        (?P<tail> .*)\n        
\n        (?P<hostname>\\S*)               (?# Capture Hostname)\n        \\suptime\\sis\\s                  (?# Match \" uptime is \")\n        (?P<uptime>[^\\r\\n]*)            (?# Capture until end of line)\n        .*?^System\\simage\\sfile\\sis\\s   (?# Skip until system image line)\n        \"[^:]*(?::/|:)                  (?# Match from quote to ':' or ':/')\n        (?P<sw_image>[^\"]*)             (?# Capture from slash to end quote)\n        .*?^(?i)cisco\\s                 (?# Skip until case insensitive cisco)\n        (?P<model>\\S*)                  (?# Capture model number)\n        .*?^Processor\\sboard\\sID\\s      (?# Skip until 'Processor board')\n        (?P<serial_no>\\S*)\\s            (?# Capture serial number)\n        
\n        (?P<indent> [ ]*)\n        (?P<docprefix> /\\*\\*)\n        (?P<subject>\n            (?P<directive>\n                class|function|data|member|attribute|method|staticmethod\n            )?\n            :\\s*\n            (?P<signature>\n                (?P<name> .+?)\n                (?P<params> \\(.*?\\))?\n            )\n        )\n        \\s*\\n+\n        (?P<body> .+?)\n        \\s*\n        (?P<docsuffix> \\*/)\n    
\n        (?P<ltext>[^\\{\\}]*)\n        (?P<lbrace>\\{)?\n            (?P<lbraces>(?(lbrace)[\\s\\{]*))\n        (?P<mtext>[^\\{\\}]*)\n        (?P<rbrace>\\})?\n            (?P<rbraces>(?(rbrace)[\\s\\}]*))\n        (?P<rtext>[^\\{\\}]*)\n        
\n        (?P<major>\\d+)\n        \\.\n        (?P<minor>\\d+)\n        \\.\n        (?P<release>\\d+)\n        (?P<additional>[abc]\\d+)?
\n        (?P<min>\\d+|\\*)         # Initial value\n        (?:-(?P<max>\\d+))?      # Optional max upper bound\n        (?:/(?P<step>\\d+))?     # Optional step increment\n        
\n        (?P<name>[\\w\\+]+)://\n        (?:\n            (?P<username>[^:/]*)\n            (?::(?P<password>.*))?\n        @)?\n        (?:\n            (?:\n                \\[(?P<ipv6host>[^/]+)\\] |\n                (?P<ipv4host>[^/:]+)\n            )?\n            (?::(?P<port>[^/]*))?\n        )?\n        (?:/(?P<database>.*))?\n        
\n        (?P<name>[\\w\\+]+)://\n        (?:\n        (?P<username>[^:/]*)\n        (?::(?P<password>[^/]*))?\n        @)?\n        (?:\n        (?P<host>[^/:]*)\n        (?::(?P<port>[^/]*))?\n        )?\n        (?:/(?P<database>.*))?\n        
\n        (?P<y>[0-9]{4})\n        -(?P<m>[0-9]{1,2}|\\w{3})\n        (?:-(?P<d>[0-9]{1,2}))?\n        (?:\\s*\\(?\n        (?P<H>[0-9]{2}):(?P<M>[0-9]{2})(?::(?P<S>[0-9]{2}))?\n        \\)?)?
\n        (\\#<<<\\n\n         \\#\\#\\#\\Q :start $name:\\E\\n)\n        .*\n        (\\#\\#\\#\\Q :end $name:\\E\\n\n         \\#>>>\\n)\n    
\n        (\n          (?: ^ | [^\\\\] ) # New line or non-backslash\n          (\\\\{2})*        # Even number of backslashes\n        )\n\n        # All single quotes must have been escaped.  The important bit is to\n        # not lose escaped backslashes.\n        \\\\'\n      
\n        (\n          \\[\n            (
\n        (\n          \\{                           # beginning of comment\n          (\n            [[:print:]&&[^\\\\\\{\\}]] |   # printing characters except brace and backslash\n            \\n                     |\n            \\\\\\\\                   |   # escaped backslashes\n            \\\\\\{|\\\\\\}              |   # escaped braces\n            \\n                     |   # newlines\n            \\g<1>                      # recursive\n          )*                           # zero or more of the above\n          \\}                           # end of comment\n        )\n      
\n        (^\\s*|\\-)\n        (                                # group name\n            (?P<symbol>\\D?)              # one letter amino acid (optional)\n            0*(?P<number>[0-9]+)         # residue number\n            (?P<suffix>[abd-gi-mopr-z]*) # suffix (optional)\n        )?\n        (?P<nucleus>                     # nucleus name (e.g., CA, HG, ...)\n            (?P<atom>[hncq])             # nucleus type\n            [a-z0-9]*                    # nucleus name - nucleus type\n        )?\n    
\n        (href|src)        # Look for either an href=\"\" or src=\"\" attribute\n        =                 # ...followed by an =\n        (\"|'|)            # Then either a single, double or no quote at all\n        (                 # Capture the entire reference\n          [^'\"]+          # Anything but something that would close the attribute\n                          # And then the extension:\n          (\\.(?:
\n        (username|login|u:)\\s*:?\\s*    # username might have : and whitespace\n        (?P<username>[\\w\\-\\.@+]*)      # capture the username for replacement\n        \\s+                            # some whitespace between\n        (password|pw|p:)\\s*:?\\s*       # password might have : and whitespace\n        (?P<password>.*)               # password can be anything until EOL\n    
\n        .*?\n        (\n          
\n        ::uml:: \n        # args\n        \\s*(format=(?P<quot>\"|')(?P<format>\\w+)(?P=quot))?\n        \\s*(classes=(?P<quot1>\"|')(?P<classes>[\\w\\s]+)(?P=quot1))?\n        \\s*(alt=(?P<quot2>\"|')(?P<alt>[\\w\\s\"']+)(?P=quot2))?\n        \\s*(title=(?P<quot3>\"|')(?P<title>[\\w\\s\"']+)(?P=quot3))?\n        \\s*\\n\n        (?P<code>.*?)(?<=\\n)\n        ::end-uml::[ ]*$\n        
\n        [^};]*?\n        {\n            (\n                (\n                    ([^\\{\\}]+)|(?R)\n                )*\n            )\n        }\n        
\n        \\\\ ([nrt'\\\\] | x
\n        \\$(?:\n          (?P<escaped>\\$)              |   # Two $ signs\n          (?P<named>[_a-z][_a-z0-9]*)  |   # $name format\n          {(?P<braced>[^}]*)}              # ${name} format\n        )\n        
\n        \\(\n        (?:
\n        \\.(?!\\d)=? |      # dot that is not decimal point, string concatenation\n        && | \\|\\| |       # logic\n        :: | -> | => |    # scope, member, dictionary\n        \\\\(?!\\n) |        # namespace\n        \\+\\+ | -- |       # increment, decrement\n        [,;?:()\\[\\]{}] |  # simple delimiters\n        [-+*\\/%&|^]=? |   # ordinary math, binary logic, assignment shortcuts\n        [~$] |            # whatever\n        =& |              # reference assignment\n        [=!]=?=? | <> |   # comparison and assignment\n        <<=? | >>=? | [<>]=?  # comparison and shift\n      
\n        \\[                              # opening text\n          ([^\\[\\]]+)                    # annotated text\n        \\]                              # closing text\n        \\(                              # opening annotations\n          ((?:\n            (?:\n              
\n        \\[                    # [\n        ([^\\]]+)              # very permissive!\n        \\]                    # ]\n      
\n        \\[\\% \\s* IF \\s* ([A-Za-z_]+) \\s* \\%\\]\n        \\n?\n        ((?:.*?(?R)?.*?)+)\n        \\n?\n        \\[\\% \\s* END \\s* \\%\\]\n    
\n        \\{\n            (?=(\n                (?P<name>[^{}]+)\n            ))\\1\n        \\}\n        
\n        \\A\n        ( : )\n        ( 0x [\\hx]+ )\n        (?= \\s | \\z )\n      
\n        \\A\n        (?&PerlOWS)\n        (?<type>(?&PerlIdentifier))? (?&PerlOWS)\n        (?<var>(?:(?&PerlVariable)))\n        \\Z\n        $PPR::GRAMMAR\n    
\n        \\A\n        (?<statement>\n            (?&PerlOWS)\n            (?<assign_to>\n                (?<type_varlist>\n                    (?&PerlIdentifier)? (?&PerlOWS)\n                    (?&PerlVariable)\n                |   (?&PerlParenthesesList)\n                ) (?&PerlOWS)\n                (?<attributes>(?&PerlAttributes))? (?&PerlOWS)\n            )\n            (?<eq>=)? (?&PerlOWS)\n            (?<assign>(?&PerlConditionalExpression))?\n        ) $PPR::GRAMMAR 
\n        \\A\n        (\\w+\\.)? # optional prefix key\n        (https?.*?) # URI\n        (\\.
\n        \\A\n        https?://                                        # http:// or https://\n        ([^\\s:@]+:[^\\s:@]*@)?                            # optional username:pw@\n        ( (xn--)?[a-z0-9]+([-.][a-z0-9]+)*\\.[a-z]{2,6}\\.? |  # domain (including Punycode/IDN)...\n            
\n        \\A\\s* # optional leading spaces\n        (<p>\\s*)? # optional opening p tag\n        # any one of our special list types\n        (
\n        \\b                             # Word boundary\n        package                        # package keyword\n        \\s+                            # At least one whitespace\n        body                           # body keyword\n        \\s+                            # At least one whitespace\n        (?P<package>[a-zA-Z][\\w]*)     # A package\n        \\s+                            # At least one whitespace\n        is                             # is keyword\n        
\n        \\b                           # start at word boundary\n         (                           # begin $1  
\n        \\b                    # Word boundary\n        architecture          # architecture keyword\n        \\s+                   # At least one whitespace\n        (?P<id>[a-zA-Z][\\w]*) # An identifier\n        \\s+                   # At least one whitespace\n        of                    # of keyword\n        \\s+                   # At least one whitespace\n        (?P<entity_id>[a-zA-Z][\\w]*) # An identifier\n        \\s+                   # At least one whitespace\n        is                    # is keyword\n        
\n        \\b                    # Word boundary\n        configuration         # configuration keyword\n        \\s+                   # At least one whitespace\n        (?P<id>[a-zA-Z][\\w]*) # An identifier\n        \\s+                   # At least one whitespace\n        of                    # of keyword\n        \\s+                   # At least one whitespace\n        (?P<entity_id>[a-zA-Z][\\w]*) # An identifier\n        \\s+                   # At least one whitespace\n        is                    # is keyword\n        
\n        \\b                    # Word boundary\n        context               # context keyword\n        \\s+                   # At least one whitespace\n        (?P<id>[a-zA-Z][\\w]*) # An identifier\n        \\s+                   # At least one whitespace\n        is                    # is keyword\n        
\n        \\b                    # Word boundary\n        entity                # entity keyword\n        \\s+                   # At least one whitespace\n        (?P<id>[a-zA-Z][\\w]*) # An identifier\n        \\s+                   # At least one whitespace\n        is                    # is keyword\n        
\n        \\b                    # Word boundary\n        package               # package keyword\n        \\s+                   # At least one whitespace\n        (?P<id>[a-zA-Z][\\w]*) # An identifier\n        \\s+                   # At least one whitespace\n        is                    # is keyword\n        
\n        \\b                    # Word boundary\n        type\n        \\s+\n        (?P<id>[a-zA-Z][\\w]*)       # An identifier\n        \\s+\n        is\n        \\s*\\(\\s*\n        (?P<literals>[a-zA-Z][\\w]* # First enumeration literal\n        (\\s*,\\s*[a-zA-Z][\\w]*)*)   # More enumeration literals\n        \\s*\\)\\s*;
\n        \\b                    # Word boundary\n        type\n        \\s+\n        (?P<id>[a-zA-Z][\\w]*)       # An identifier\n        \\s+\n        is\n        \\s+\n        record\n        (?P<elements>.*?)end\\s+record
\n        \\b                    # Word boundary\n        type\n        \\s+\n        (?P<id>[a-zA-Z][\\w]*)\n        \\s+\n        is\n        \\s+\n        array\n        \\s*\\(\n        (?P<ranges>.*?)\n        \\)\\s+of\\s+\n        (?P<subtype_indication>.*?)\\s*;
\n        \\b\n        \\Q@
\n        \\s*(?P<range_attribute>[a-zA-Z][\\w]*'range)\\s*
\n        \\s*(?P<range_left>.+?)\n        \\s+(to|downto)\\s+\n        (?P<range_right>.+?)\\s*
\n        \\s*(?P<range_left1>.+?)\n        \\s+(to|downto)\\s+\n        (?P<range_right1>.+?)\\s*\n        (,\n        \\s*(?P<range_left2>.+?)\n        \\s+(to|downto)\\s+\n        (?P<range_right2>.+?)\\s*)?
\n        \\s*(?P<range_type>[a-zA-Z][\\w]*)\n        \\s+range\\s+<>\\s*
\n        \\s*(?P<range_type1>[a-zA-Z][\\w]*)\n        \\s+range\\s+<>\\s*\n        (,\n        \\s*(?P<range_type2>[a-zA-Z][\\w]*)\n        \\s+range\\s+<>\\s*)?
\n        \\s*\n        <\n            (?P<end>/{0,1})       # end tag e.g.: </end>\n            (?P<tag>[^ >]+)       # tag name\n            .*?\n            (?P<startend>/{0,1})  # closed tag e.g.: <closed />\n        >\n        \\s*\n    
\n        \\s*\n        Pseudopotential type:\\s*(?P<upf_type>.*)\n        
\n        \\s+ - \\s+\n        State \\s+ \"(?P<done> [^\"]+)\" \\s+\n        from  \\s+ \"(?P<todo> [^\"]+)\" \\s+\n        \\[ (?P<date> [^\\]]+) \\]
\n        ^                                       # Linestart\n        [ \\t]*                                  # Optional white space\n        (?P<name>[A-Za-z]+[A-Za-z0-9]{0,2})\\s+   # get the symbol, max 3 chars, starting with a char\n        (?P<x>                                  # Get x\n            [\\-|\\+]?(\\d*[\\.]\\d+ | \\d+[\\.]?\\d*)\n            ([E|e|d|D][+|-]?\\d+)?\n        )\n        [ \\t]+\n        (?P<y>                                  # Get y\n            [\\-|\\+]?(\\d*[\\.]\\d+ | \\d+[\\.]?\\d*)\n            ([E|e|d|D][+|-]?\\d+)?\n        )\n        [ \\t]+\n        (?P<z>                                  # Get z\n            [\\-|\\+]?(\\d*[\\.]\\d+ | \\d+[\\.]?\\d*)\n            ([E|e|d|D][+|-]?\\d+)?\n        )\n        [ \\t]*\n        (?P<fx>[01]?)                           # Get fx\n        [ \\t]*\n        (?P<fy>[01]?)                           # Get fx\n        [ \\t]*\n        (?P<fz>[01]?)                           # Get fx\n        
\n        ^                        # Linestart\n        [ \\t]*                   # Optional white space\n        (?P<x>                   # Get x\n            [\\-|\\+]? ( \\d*[\\.]\\d+ | \\d+[\\.]?\\d*)\n            ([E|e|d|D][+|-]?\\d+)?\n        )\n        [ \\t]+\n        (?P<y>                   # Get y\n            [\\-|\\+]? (\\d*[\\.]\\d+ | \\d+[\\.]?\\d*)\n            ([E|e|d|D][+|-]?\\d+)?\n        )\n        [ \\t]+\n        (?P<z>                   # Get z\n            [\\-|\\+]? (\\d*[\\.]\\d+ | \\d+[\\.]?\\d*)\n            ([E|e|d|D][+|-]?\\d+)?\n        )\n        
\n        ^                   # Beginning of line.\n        Python              # Literally \"Python\".\n        \\s                  # Space.\n        (?P<major>\\d+)      # Major = one or more digits.\n        \\.                  # Dot.\n        (?P<minor>\\d+)      # Minor = one or more digits.\n        (?:                 # Unnamed group for dot-micro.\n            \\.              # Dot.\n            (?P<micro>\\d+)  # Micro = one or more digit.\n        )?                  # Micro is optional because pypa/pipenv#1893.\n        .*                  # Trailing garbage.\n        $                   # End of line.\n    
\n        ^ #beginning of string\n        \\d{${\\NUM_OF_DIGITS_IN_POSTALCODE}} #digits in postalcode\n        $ #end of string\n        
\n        ^ (?P<null> (?i) null $| ~ $)\n        | (?P<bool> (?i) true $| false $| yes $| no $)\n        | (?P<int10> [-+]? [0-9]+ $)\n        | (?P<int8> 0o [0-7]+ $)\n        | (?P<int16> 0x [0-9a-fA-F]+ $)\n        | (?P<float>[-+]? (?:\n            (?: [0-9]* \\. [0-9]+ |  [0-9]+ \\. [0-9]* )\n                (?: [eE] [-+]? [0-9]+ )? $|\n            [0-9]* \\.? [0-9]* [eE] [-+]? [0-9]+ ) $\n          )\n        | (?P<infinity> [-+]? (?: \\.inf | \\.Inf | \\.INF) $)\n        | (?P<nan> [-+]? (?: \\.nan | \\.NaN | \\.NAN) $)\n        | (?P<str> .+ $)\n    
\n        ^ [ \\t]* (?P<name>\\S+) [ \\t]+ (?P<mass>\\S+) [ \\t]+ (?P<pseudo>\\S+)\n            [ \\t]* $\\n?\n        
\n        ^ [ \\t]* ATOMIC_POSITIONS [ \\t]*\n            [{(]? [ \\t]* (?P<units>\\S+?)? [ \\t]* [)}]? [ \\t]* $\\n\n        (?P<block>\n         (?:\n          ^ [ \\t]*\n          (?:\n           \\S+ [ \\t]+ \\S+ [ \\t]+ \\S+ [ \\t]+ \\S+\n           (?:[ \\t]+ [{(]? [ \\t]* [01] [ \\t]+ [01] [ \\t]+ [01] [ \\t]* [)}]?)?\n          )\n          [ \\t]* $\\n?\n         )+\n        )\n        
\n        ^ [ \\t]* ATOMIC_SPECIES [ \\t]* $\\n\n        (?P<block>\n         (?:\n          ^ [ \\t]* \\S+ [ \\t]+ \\S+ [ \\t]+ \\S+ [ \\t]* $\\n?\n         )+\n        )\n        
\n        ^ [ \\t]* K_POINTS [ \\t]*\n            [{(]? [ \\t]* (?P<type>\\S+?)? [ \\t]* [)}]? [ \\t]* $\\n\n        ^ [ \\t]* \\S+ [ \\t]* $\\n  # nks\n        (?P<block>\n         (?:\n          ^ [ \\t]* \\S+ [ \\t]+ \\S+ [ \\t]+ \\S+ [ \\t]+ \\S+ [ \\t]* $\\n?\n         )+\n        )\n        
\n        ^ [ \\t]*\n        CELL_PARAMETERS [ \\t]*\n        [{(]? \\s* (?P<units>[a-z]*) \\s* [)}]? \\s* [\\n]\n        (?P<block>\n        (\n            (\n                \\s*             # White space in front of the element spec is ok\n                (\n                    # First number\n                    (\n                        [-|+]?   # Plus or minus in front of the number (optional)\n                        (\\d*     # optional decimal in the beginning .0001 is ok, for example\n                        [\\.]     # There has to be a dot followed by\n                        \\d+)     # at least one decimal\n                        |        # OR\n                        (\\d+     # at least one decimal, followed by\n                        [\\.]?    # an optional dot\n                        \\d*)     # followed by optional decimals\n                        ([E|e|d|D][+|-]?\\d+)?  # optional exponents E+03, e-05, d0, D0\n                    \n                        (\n                            \\s+      # White space between numbers\n                            [-|+]?   # Plus or minus in front of the number (optional)\n                            (\\d*     # optional decimal in the beginning .0001 is ok, for example\n                            [\\.]     # There has to be a dot followed by\n                            \\d+)     # at least one decimal\n                            |        # OR\n                            (\\d+     # at least one decimal, followed by\n                            [\\.]?    # an optional dot\n                            \\d*)     # followed by optional decimals\n                            ([E|e|d|D][+|-]?\\d+)?  # optional exponents E+03, e-05, d0, D0\n                        ){2}         # I expect three float values\n                    )\n                    |\n                    \\#\n                    |\n                    !            # If a line is commented out, that is also ok\n                )\n                .*               # I do not care what is after the comment or the vector\n                |                # OR\n                \\s*              # A line only containing white space\n             )\n            [\\n]                 # line break at the end\n        ){3}                     # I need exactly 3 vectors\n    )\n    
\n        ^ \\s* ATOMIC_POSITIONS \\s*                      # Atomic positions start with that string\n        [{(]? \\s* (?P<units>\\S+?)? \\s* [)}]? \\s* $\\n    # The units are after the string in optional brackets\n        (?P<block>                                  # This is the block of positions\n            (\n                (\n                    \\s*                                 # White space in front of the element spec is ok\n                    (\n                        [A-Za-z]+[A-Za-z0-9]{0,2}       # Element spec\n                        (\n                            \\s+                         # White space in front of the number\n                            [-|+]?                      # Plus or minus in front of the number (optional)\n                            (\n                                (\n                                    \\d*                 # optional decimal in the beginning .0001 is ok, for example\n                                    [\\.]                # There has to be a dot followed by\n                                    \\d+                 # at least one decimal\n                                )\n                                |                       # OR\n                                (\n                                    \\d+                 # at least one decimal, followed by\n                                    [\\.]?               # an optional dot ( both 1 and 1. are fine)\n                                    \\d*                 # And optional number of decimals (1.00001)\n                                )                        # followed by optional decimals\n                            )\n                            ([E|e|d|D][+|-]?\\d+)?       # optional exponents E+03, e-05\n                        ){3}                            # I expect three float values\n                        ((\\s+[0-1]){3}\\s*)?             # Followed by optional ifpos\n                        \\s*                             # Followed by optional white space\n                        |\n                        \\#.*                            # If a line is commented out, that is also ok\n                        |\n                        \\!.*                            # Comments also with excl. mark in fortran\n                    )\n                    |                                   # OR\n                    \\s*                                 # A line only containing white space\n                 )\n                [\\n]                                    # line break at the end\n            )+                                          # A positions block should be one or more lines\n        )\n        
\n        ^(.*_dependency\n        \\s*(?:\\(\\s*)?\n        (?:['\"]|%q.)
\n        ^(?P<locus>\n            (?:(?P<prefix>\\w+[\\D\\d\\D])\\.?)(?P<chr>[\\d|C|M]+)(?P<sep>[A-z]+)(?P<rank>\\d+)\n        )\n        \\.?(?P<iso>\\d+)?\n        
\n        ^(\\#{1,6})  # \\1 = string of #'s\n        [ \\t]+\n        (.+?)       # \\2 = Header text\n        [ \\t]*\n        (?<!\\\\)     # ensure not an escaped trailing '#'\n        \\#*         # optional closing #'s (not counted)\n        \\n+\n        
\n        ^/(?P<namespace>[^/]+)\n         /(?P<protocol_version>[^/]+)\n         /(?P<transport_id>[^/]+)\n         /(?P<session_id>[^/]+)/?$\n         
\n        ^/(?P<resource>.+?)\n         /(?P<protocol_version>[^/]+)\n         //(?P<sessid>[^/]+)/?$\n         
\n        ^/(?P<resource>.+?)\n         /1\n         /(?P<transport_id>[^/]+)\n         /(?P<sessid>[^/]+)/?$\n         
\n        ^[uU]?[rR]?(?:\n            ( '''\n            | \\\"\\\"\\\"\n            )\n          | ( '[^\\n'\\\\]*(?:\\\\.[^\\n'\\\\]*)*(?:'|\\\\\\n)\n            | \"[^\\n\"\\\\]*(?:\\\\.[^\\n\"\\\\]*)*(?:\"|\\\\\\n)\n            )\n        )\n        
\n        ^\n        (?:\n            ([0-9A-Za-z]
\n        ^\n        (?P<docprefix> /\\*\\*)\n        \\s*\\n+\n        (?P<body> .+?)\n        \\s*\n        (?P<docsuffix> \\*/)\n    
\n        ^\n        (?P<major>(?:0|[1-9][0-9]*))\n        \\.\n        (?P<minor>(?:0|[1-9][0-9]*))\n        \\.\n        (?P<patch>(?:0|[1-9][0-9]*))\n        (\\-(?P<prerelease>\n            (?:0|[1-9A-Za-z-][0-9A-Za-z-]*)\n            (\\.(?:0|[1-9A-Za-z-][0-9A-Za-z-]*))*\n        ))?\n        (\\+(?P<build>\n            [0-9A-Za-z-]+\n            (\\.[0-9A-Za-z-]+)*\n        ))?\n        $\n        
\n        ^\n        (?P<Year>[0-9]{4})\n        (?P<Month>0[1-9]|1[0-2])\n        (?P<Day>0[1-9]|[12][0-9]|3[01])\n        (?P<Hour>[01][0-9]|2[0-3])\n        (?:\n          (?P<Minute>[0-5][0-9])\n          (?P<Second>[0-5][0-9]|60)?\n        )?\n        (?:\n          [.,]\n          (?P<Fraction>[0-9]+)\n        )?  \n        (?:\n          Z\n          |\n          (?:\n            (?P<Offset>[+-])\n            (?P<OffHour>[01][0-9]|2[0-3])\n            (?P<OffMinute>[0-5][0-9])?\n          )\n        )\n        $\n        
\n        ^\n        (\n          (
\n        ^\n        \\s*\n        (?P<operator>(~=|==|!=|<=|>=|<|>|===))\n        (?P<version>\n            (?:\n                # The identity operators allow for an escape hatch that will\n                # do an exact string match of the version you wish to install.\n                # This will not be parsed by PEP 440 and we cannot determine\n                # any semantic meaning from it. This operator is discouraged\n                # but included entirely as an escape hatch.\n                (?<====)  # Only match for the identity operator\n                \\s*\n                [^\\s]*    # We just match everything, except for whitespace\n                          # since we are only testing for strict identity.\n            )\n            |\n            (?:\n                # The (non)equality operators allow for wild card and local\n                # versions to be specified so we have to define these two\n                # operators separately to enable that.\n                (?<===|!=)            # Only match for equals and not equals\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n\n                # You cannot use a wild card and a dev or local version\n                # together so group them with a | and make them optional.\n                (?:\n                    (?:[-_\\.]?dev[-_\\.]?[0-9]*)?         # dev release\n                    (?:\\+[a-z0-9]+(?:[-_\\.][a-z0-9]+)*)? # local\n                    |\n                    \\.\\*  # Wild card syntax of .*\n                )?\n            )\n            |\n            (?:\n                # The compatible operator requires at least two digits in the\n                # release segment.\n                (?<=~=)               # Only match for the compatible operator\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)+   # release  (We have a + instead of a *)\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n            |\n            (?:\n                # All other operators only allow a sub set of what the\n                # (non)equality operators do. Specifically they do not allow\n                # local versions to be specified nor do they allow the prefix\n                # matching wild cards.\n                (?<!==|!=|~=)         # We have special cases for these\n                                      # operators so we want to make sure they\n                                      # don't match here.\n\n                \\s*\n                v?\n                (?:[0-9]+!)?          # epoch\n                [0-9]+(?:\\.[0-9]+)*   # release\n                (?:                   # pre release\n                    [-_\\.]?\n                    (a|b|c|rc|alpha|beta|pre|preview)\n                    [-_\\.]?\n                    [0-9]*\n                )?\n                (?:                                   # post release\n                    (?:-[0-9]+)|(?:[-_\\.]?(post|rev|r)[-_\\.]?[0-9]*)\n                )?\n                (?:[-_\\.]?dev[-_\\.]?[0-9]*)?          # dev release\n            )\n        )\n        \\s*\n        $\n        
\n        ^\n        \\s*\n        (?P<operator>(==|!=|<=|>=|<|>))\n        \\s*\n        (?P<version>\n            [^\\s]* # We just match everything, except for whitespace since this\n                   # is a \"legacy\" specifier and the version string can be just\n                   # about anything.\n        )\n        \\s*\n        $\n        
\n        ^\\s*\\K                   # preserve leading whitespace\n        package             \\s+  # method was converted to sub\n        (?<subname> \\w+)\\n  \\s*  # the method name and a newline\n        (?<brace> \\{ .*?)   [ ]* # opening brace on newline followed orig comments\n        \\#__$marker         \\s+  # our magic token\n        (?<id> \\d+)              # our sub identifier\n        [ ]*                     # trailing spaces (not all whitespace)\n    }
\n        ^\\s*\n        (?P<options>     # Match a leading set of name/value pairs\n            (?:\n                (?:(?=\\w)[^\\d]\\w*)                         # name\n                \\s*=\\s*                                    # =\n                (?:\"(?:\\\\.|\"\"|[^\"])*\"|(?:\\\\.|[^\\s\"])+)\\s*  # value\n            )*\n        )\\s*\n        (?P<fieldnames>  # Match a trailing set of field names\n            (?:\n                (?:\"(?:\\\\.|\"\"|[^\"])*\"|(?:\\\\.|[^\\s\"])+)\\s*\n            )*\n        )\\s*$\n        
\n        ^\\s*\n        define\\s+\n        (?P<name>\\S+\\b)\n        \\s+\n        =\n        
\n        ^1..(?P<expected>\\d+) # Match the plan details.\n        [^#]*                 # Consume any non-hash character to confirm only\n                              # directives appear with the plan details.\n        \\#?                   # Optional directive marker.\n        \\s*                   # Optional whitespace.\n        (?P<directive>.*)     # Optional directive text.\n    
\n        ^Bail\\ out!\n        \\s*            # Optional whitespace.\n        (?P<reason>.*) # Optional reason.\n    
\n        ^Bearer\\s{1}(       # starts with Bearer and a single space\n        [a-zA-Z0-9\\-\\_]+\\.  # 1 or more chars followed by a single period\n        [a-zA-Z0-9\\-\\_]+\\.  # 1 or more chars followed by a single period\n        [a-zA-Z0-9\\-\\_]*    # 0 or more chars, no trailing chars\n        )$\n      
\n        ^Full[ ]Tilt[ ]Poker[ ]                                 # Poker Room\n        Game[ ]\\#(?P<ident>\\d*):[ ]                             # Hand history id\n        (?P<tournament_name>                                    # Tournament name\n            \\$?(?P<buyin>\\d*)?                                  # buyin, not always there,\n                                                                # part of tournament_name\n        .*)[ ]                                                  # end of tournament_name\n        \\((?P<tournament_ident>\\d*)\\),[ ]                       # Tournament Number\n        Table[ ](?P<table_name>\\d*)[ ]-[ ]                      # Table name\n        (?P<limit>NL|PL|FL|No Limit|Pot Limit|Fix Limit)[ ]     # limit\n        (?P<game>.*?)[ ]-[ ]                                    # game\n        (?P<sb>\\d*)/(?P<bb>\\d*)[ ]-[ ].*                        # blinds\n        \\[(?P<date>.*)\\]$                                       # date in ET\n        
\n        { ( [^}]*  \\Q$Separator\\E  [^}]* ) }\n    
\n        <!DOCTYPE\n        \\s+(?P<name>[a-zA-Z_:][\\w:.-]*)\n        \\s+(?:\n            SYSTEM\\s+([\"'])(?P<system_id_a>.*?)\\2\n            |\n            PUBLIC\n            \\s+([\"'])(?P<public_id_b>.*?)\\4\n            # HTML 3.2 and 2.0 doctypes don't include a system-id.\n            (?:\\s+([\"'])(?P<system_id_b>.*?)\\6)?\n        )\n        (\\s*\\[.*?\\])?\n        \\s*>\n        
\n        Code:\\ (?P<code>\\d+),\n        \\ e\\.displayText\\(\\)\\ =\\ (?P<type1>[^ \\n]+):\\ (?P<msg>.+?),\n        \\ e.what\\(\\)\\ =\\ (?P<type2>[^ \\n]+)\n    
\n        http(s)?://(www\\.)?huajiao.com\n        /l/(?P<channel>[^/]+)\n
\n        http://www.dingit.tv/(\n            highlight/(?P<highlight_id>\\d+)|\n            channel/(?P<broadcaster>\\w+)/(?P<channel_id>\\d+)\n    )
\n        https?://(?:www\\.)?\n        (?:\n            tv4play.se/program/[^\\?/]+\n            |\n            fotbollskanalen.se/video\n        )\n        /(?P<video_id>\\d+)\n    
\n        https?://\n        (?P<base_url>\n            (?:(?:\n                iptv\\.glattvision|www\\.(?:myvisiontv|saktv|vtxtv)\n            )\\.ch\n            )|(?:(?:\n                mobiltv\\.quickline|www\\.quantum-tv|zattoo\n            )\\.com\n            )|(?:(?:\n                tvonline\\.ewe|nettv\\.netcologne|tvplus\\.m-net\n            )\\.de\n            )|(?:(?:\n                player\\.waly|www\\.netplus\n            )\\.tv)\n            |www\\.bbv-tv\\.net\n            |www\\.meinewelt\\.cc\n        )/\n        (?:\n            (?:ondemand/)?(?:watch/(?:[^/\\s]+)(?:/[^/]+/(?P<recording_id>\\d+)))\n            |\n            watch/(?P<channel>[^/\\s]+)\n            |\n            ondemand/watch/(?P<vod_id>[^-]+)-\n        )\n        
\n        https?://\n        (\n            www.mycanal.fr/(.*)/(.*)/p/(?P<video_id>[0-9]+)\n        )\n
\n        https?://www\\.bloomberg\\.com/(\n            news/videos/[^/]+/[^/]+ |\n            (?P<channel>live/(?:stream|emea|asia_stream|europe|us|asia)|audio)/?\n        )\n
\n        System\\simage\\sfile\\sis\\s       (?# Start from System image line)\n        \"[^:/]*(?::/|:)                 (?# Match from \" and * until :/)\n        (?P<sw_image>[^\"]*)             (?# Capture everything until end \")\n        .*?^(?P<hostname>\\S*)           (?# .* Until capture hostname)\n        \\sup\\s                          (?# Match up)\n        (?P<uptime>[^\\r\\n]*)            (?# Capture uptime)\n        .*?^Hardware:\\s+?               (?# Match until Hardware:   )\n        (?P<model>\\S*),                 (?# Capture hardwmare model)\n        .*?^Serial\\sNumber:\\s           (?# Match up to Serial Number)\n        (?P<serial_no>\\S*)\\s            (?# Capture the serial number)\n        
\n        url\\(          # Start with the literal url(\n        ('|\"|)         # Then either a single, double or no quote at all\n        (\n          ([^'\")]+)    # The file basename, and below the extension\n          \\.(
\n        v?\n        (?:\n            (?:(?P<epoch>[0-9]+)!)?                           # epoch\n            (?P<release>[0-9]+(?:\\.[0-9]+)*)                  # release segment\n            (?P<pre>                                          # pre-release\n                [-_\\.]?\n                (?P<pre_l>(a|b|c|rc|alpha|beta|pre|preview))\n                [-_\\.]?\n                (?P<pre_n>[0-9]+)?\n            )?\n            (?P<post>                                         # post release\n                (?:-(?P<post_n1>[0-9]+))\n                |\n                (?:\n                    [-_\\.]?\n                    (?P<post_l>post|rev|r)\n                    [-_\\.]?\n                    (?P<post_n2>[0-9]+)?\n                )\n            )?\n            (?P<dev>                                          # dev release\n                [-_\\.]?\n                (?P<dev_l>dev)\n                [-_\\.]?\n                (?P<dev_n>[0-9]+)?\n            )?\n        )\n        (?:\\+(?P<local>[a-z0-9]+(?:[-_\\.][a-z0-9]+)*))?       # local version\n    
\n      # \"haml-lint:\" with optional spacing\n      \\s*haml-lint\\s*:\\s*\n\n      # The mode - either disable or enable\n      (?<mode>(?:dis|en)able)\\b\\s*\n\n      # \"all\" or a comma-separated list (with optional spaces) of linters\n      (?<linters>all | (?:
\n      # optional number, gerund - adjective -participle\n      (?:
\n      #PID TTY          TIME CMD      \n      #1 ?        00:00:00 init\n      (?P<pid>\\d{1,6})\\s*(?P<tty>[\\d\\w\\?\\/]+)\\s*(?P<time>[\\d\\:]+)\\s*(?P<name>[\\d\\w\\/\\<\\>\\s]+)   \n
\n      &\n      (?:\n        \\w+\n      |\n        \\#\n        (?:\n          \\d+\n        |\n          x
\n      ( \n        # Match substrings that end in whitespace shorter than limit\n        
\n      (?:
\n      (?: '.+?(?<!\\\\)'\n        | \".+?(?<!\\\\)\"\n      )\n    
\n      (?: \\$\\{ | \\{\\$ ) [^}]++ \\}\n      |\n      \\$\\$?[a-zA-Z_]\\w*\n      
\n      (?: \\/\\* (?> (?:.|\\n)*? \\*\\/ ) ) |\n      (?: \\/\\/ .*(?:\\\\\\n.*)*(?:\\z|(?<!\\\\)\\n) )\n    
\n      (?: M-|C-|c )\n      (?: \\\\ (?: M-|C-|c ) )*\n      (?: [^\\\\] | \\\\ 
\n      (?:\\\\[\\\\bfnrt\"/])   # Escaped control characters, \" and /\n      |(?:\\\\U00\\h{6})     # 6 byte escaped Unicode\n      |(?:\\\\u\\h{4})       # 4 byte escaped Unicode\n    
\n      (?:\n        (?:\\band\\b\\s+)?\n        \\bend\n        (?: 
\n      (?:\n        \\\\(.)                  # grab escaped characters (including $)\n      |\n        (?:\n          \\$\\{([1-9]\\d*)\\}   # match \"${1}\" (not unrelated '${0}')\n        |\n          \\$  ([1-9]\\d*)     # match  \"$1\"  (not unrelated '$0')\n        )\n      )\n    
\n      (?:^|[\\s+\\-/*()]) # math or space separated, or beginning of string\n      ( # capture whole length\n        0 # unitless zero\n        |\n        [-+]? # optional sign\n        (?:\n          \\.\\d+ # with leading decimal, e.g. .5\n          |\n          \\d+(\\.\\d+)? # whole or maybe with trailing decimal\n        )\n        (?:
\n      (?<comment_indicator>^\\+\\s*[^a-z0-9\\+\\s]+)\n      (\\n\\+)?\\s+\n      (?<todo_indicator>
\n      (?<escape>\\\\?)\n      \\$\n      (\n        {(?<name>[a-zA-Z0-9_]+)}\n      |\n        \\g<name>\n      )\n    
\n      (?<family>
\n      (?<piece>          [BKNQR]      ){0}\n      (?<destination>    [a-h][1-8]   ){0}\n      (?<promotion>      =[BNQR]      ){0}\n      (?<check>          [#+]         ){0}\n      (?<capture>        x            ){0}\n      (?<disambiguation> [a-h]?[1-8]? ){0}\n\n      (?<castle>         O-O(-O)?     ){0}\n\n      (?<normal>\n        \\g<piece>?\n        \\g<disambiguation>\n        \\g<capture>?\n        \\g<destination>\n        \\g<promotion>?\n      ){0}\n\n      \\A (\\g<castle> | \\g<normal>) \\g<check>? \\z\n    
\n      (?<range>
\n      (?>[ \\t\\f\\v]+)\n      (?:\n        [%\\/][^\\s=]\n      | <<-?\\S\n      | [-+] \\d\n      | 
\n      (\n        (
\n      (\n        (-)?                  # Minus\n        (?:(\\w+):)?           # Field\n        (?:\n          (?:\"(.*?)(?<!\\\\)\")  # Quoted query\n          |\n          ([^\\s]+)            # Single query\n        )\n      )\n    
\n      '(\n        \\\\['\\\\\\/bfnrt] |\n        \\\\u[0-9a-fA-F]{4} |\n        [^'\\\\\\b\\f\\n\\r\\t]\n      )*'\n    
\n      /(\n        \\\\[\\/bfnrt] |\n        \\\\u[0-9a-fA-F]{4} |\n        [^/\\b\\f\\n\\r\\t]\n      )*/[imxouesn]*\n    
\n      :\n      (?:\n        
\n      \"(\n        \\\\[\"\\\\\\/bfnrt] |\n        \\\\u[0-9a-fA-F]{4} |\n        [^\"\\\\\\b\\f\\n\\r\\t]\n      )*\"\n    
\n      \\( \\s*      # coordinate 1\n         (\\d+\\.?\\d*) \\s* # x1 number\n         ,\\s*            # whitespace after comma is ok\n         (\\d+\\.?\\d*) \\s* # y1 number\n      \\)\n      \\s*        # space between coordinates is ok\n      \\( \\s*      # coordinate 2\n         (\\d+\\.?\\d*) \\s* # x2 number\n         ,\\s*            # whitespace after comma is ok\n         (\\d+\\.?\\d*) \\s* # y2 number\n      \\)\n      (
\n      \\( \\s*      # coordinate 1\n        (\\d+\\.?\\d*) \\s* # x1 number\n        ,\\s*            # whitespace after comma is ok\n        (\\d+\\.?\\d*) \\s* # y1 number\n        ,\\s*            # whitespace after comma is ok\n        (\\d+\\.?\\d*) \\s* # r1 number\n      \\)\n      \\s*         # space between coordinates is ok\n      \\( \\s*      # coordinate 2\n        (\\d+\\.?\\d*) \\s* # x2 number\n        ,\\s*            # whitespace after comma is ok\n        (\\d+\\.?\\d*) \\s* # y2 number\n        ,\\s*            # whitespace after comma is ok\n        (\\d+\\.?\\d*) \\s* # r2 number\n      \\)\n      (
\n      \\?\n      (?:\n        [^\\s\\\\]\n      | \\\\ 
\n      \\+\\+JvmOptions=\"\n        -Djruby.home=C:\\\\Program\\ Files\\\\jruby;\n        -Djruby.lib=C:\\\\Program\\ Files\\\\jruby\\\\lib;\n        -Djruby.script=jruby;\n        -Djruby.daemon.module.name=Trinidad;\n        -Djruby.compat.version=RUBY1_9\n      \"\n    
\n      \\A (\n        (?m:\\s*) (\n          (\\/\\* (?m:.*?) \\*\\/) |\n          (\\#\\#\\# (?m:.*?) \\#\\#\\#) |\n          (\\/\\/ .* \\n?)+ |\n          (\\# .* \\n?)+ |\n          (
\n      \\A\n      [\"'](.*)[\"']    # Extract text between quotes\n      \\s*\\)?\\s*;?\\s*  # Sometimes the Sass parser includes a trailing ) or ;\n      (//.*)?         # Exclude any trailing comments that might have snuck in\n      \\z\n    
\n      \\A\n      [^[:cntrl:][@\\[\\]\\^ \\!\"\\#$\\(\\)*,/:;<=>?`{|}~\\\\]]+                        # mailbox\n      @\n      (?:[^[:cntrl:][@\\[\\]\\^ \\!\\\"\\#$&\\(\\)*,/:;<=>\\?`{|}~\\\\_.%+']]+\\.)+         # subdomains\n      (?:[^[:cntrl:][@\\[\\]\\^ \\!\\\"\\#$&\\(\\)*,/:;<=>\\?`{|}~\\\\_.%+\\-'0-9]]{2,25})  # TLD\n      \\z\n    
\n      \\A\n      foo_bar /\n      \\h{8}    # 8 hex chars\n      (?: - \\h{4} ){3}  # 3 groups of 4 hex chars (hyphen sep)\n      - \\h{12}  # 12 hex chars (hyphen sep again)\n      \\Z\n    
\n      \\A\n      https?://                                                    # http:// or https://\n      ([^\\s:@]+:[^\\s:@]*@)?                                        # optional username:pw@\n      ( (([^\\W_]+\\.)*xn--)?[^\\W_]+([-.][^\\W_]+)*\\.[a-z]{2,6}\\.? |  # domain (including Punycode/IDN)...\n          
\n      \\b                    # start at word boundary\n      (                     # begin $1  
\n      \\b (?: 
\n      \\e \\[ ( 
\n      \\Q$fulltag\\E\n    
\n      ^ ( 
\n      ^(
\n      ^(\\s* \\$ \\s (CURL_BIN | 
\n      ^\n         (?:\n             # first skip all \"normal\" text (not <)\n             [^<]+\n           | # then skip CDATA sections\n             <\\[CDATA\\[ (?: [^\\]]+ | \\][^\\]] | \\]\\][^>] )* \\]\\]>\n           | # now process processing instructions\n             <\\? (\\w+) \\s+ ( (?: [^?] | \\?[^>] )+ )* \\?\\>\n                (?{\n                   push @pi, [$-[1] - 2, $+[2] + 2, $1, $2] if exists $_[1]{$1};\n                })\n           | # else must be a tag\n             <[^?]\n         )*\n      $\n   
\n      ^\n      (?:\\s*[-+*]|(?:\\d+\\.))? # optional list prefix\n      \\s*                     # optional whitespace prefix\n      (                       # checkbox\n        
\n      ^\n      (\n        
\n      ^--\\Q$boundary\\E             \\015?\\012\n      ((?:[^\\015\\012]+\\015\\012)* ) \\015?\\012\n      (.*?)                        \\015?\\012\n      (--\\Q$boundary\\E (--)?       \\015?\\012)\n      
\n      `[^`]*? # The opening backtick on a plugin path\n      ([[[:alnum:]]_+-]+?) # The plugin name\n      (- ([[:xdigit:]]+ | 
\n      <meta\n          \\s+\n          name=['\"]go-import['\"]\n          \\s+\n          content=['\"](?P<root>[^\\s]+)\\s+(?P<vcs>[^\\s]+)\\s+(?P<url>[^\\s]+)['\"]\n          \\s*\n      /?>
\n      every\n        |\n      each\n        |\n      (?: 
\n      start\n      (?: 
\n     (
\n     (?:
\n     (?:\\G|\n      [^\\\\c-]|\n      (?:\\G|[^\\\\])(?:c|[CM]-)|\n      (?:\\G|[^CM])-\n     )\n     (?:\\\\(?:c|[CM]-)?){2}*\n   
\n     ^ \\s*                                      # ignore initial whitespaces\n     (?:\n      (?: [$] (?P<bound> [_a-z] [0-9a-z_]*? ))  # match new bounded field name\n      \\s*\n      (?:\n       (?:   / (?P<re_bound> .* )     / )     | # but limit values by regular expression\n       (?: - / (?P<re_bound_neg> .* ) / )       # but limit values by negation of regular expression\n      )?                                      |\n      (?:   / (?P<re> .* )     / )            | # limit values by regex\n      (?: - / (?P<re_neg> .* ) / )            | # limit values by regex\n      (?: [!] (?P<type> [_a-z] [0-9a-z_]*? )) | # limit values to instance of a type\n      (?: \\' (?P<literal> .*? [^ \\'] ) \\' )   | # only equals to this string literal\n      (?P<normal> [^  \\' $ !] .* )            | # only equals to this string literal\n     )\n     \\s* $                                      # ignore ending whitespaces\n     
\n     ^(?:alias|
\n     for(?:each)?+ \\b\n     (?>(?&PerlOWS))\n     (?:\n         (?:\n             my\n             (?>(?&PerlOWS)) ((?&PerlVariableScalar))\n         )?+\n         (?>(?&PerlOWS))\n         (?> ((?&PerlParenthesesList)) )\n         (?>(?&PerlOWS))\n         {\n      )\n      $grammar\n    
\n    # Colons introduce pseudo-selectors, sometimes with parens\n    # TODO doesn't handle quoted )\n    [:]+ [-\\w]+ (?: [(] .+? [)] )?\n\n    # These guys are combinators -- note that a single space counts too\n    | \\s* [ +>~,] \\s*\n\n    # Square brackets are attribute tests\n    # TODO: this doesn't handle ] within a string\n    | [[] .+? []]\n\n    # Dot and pound start class/id selectors.  Percent starts a Sass\n    # extend-target faux selector.\n    | [.#%] [-\\w]+\n\n    # Percentages are used for @keyframes\n    | [-.\\d]+ [%]\n\n    # Plain identifiers, or single asterisks, are element names\n    | [-\\w]+\n    | [*]\n\n    # & is the sass replacement token\n    | [&]\n\n    # And as a last-ditch effort, just eat up to whitespace\n    | (\\S+)\n
\n    # Define recurring patterns\n    (?<part> [\\w\\d-]+ ){0}\n\n    (?<user>\\g<part>)/(?<repo>\\g<part>).git$\n  
\n    # Grab the traceback header.  Different versions of Python have\n    # said different things on the first traceback line.\n    ^(?P<hdr> Traceback\\ \\(\n        (?: most\\ recent\\ call\\ last\n        |   innermost\\ last\n        ) \\) :\n    )\n    \\s* $                # toss trailing whitespace on the header.\n    (?P<stack> .*?)      # don't blink: absorb stuff until...\n    ^ (?P<msg> \\w+ .*)   #     a line *starts* with alphanum.\n    
\n    # Required components.\n    (?P<year>\\d{4} ) \\D?\n    (?P<month>\\d{2}) \\D?\n    (?P<day>\\d{2}  ) \\D?\n    (?:\n        # Optional components.\n        (?P<hour>\\d{2}  ) \\D?\n        (?P<minute>\\d{2}) \\D?\n        (?P<second>\\d{2})?\n    )?\n
\n    # Source consists of a PS1 line followed by zero or more PS2 lines.\n    (?P<source>\n        (?:^(?P<indent> [ ]*) >>>    .*)    # PS1 line\n        (?:\\n           [ ]*  \\.\\.\\. .*)*)  # PS2 lines\n    \\n?\n    # Want consists of any non-blank lines that do not start with PS1.\n    (?P<want> (?:(?![ ]*$)    # Not a blank line\n                 (?![ ]*>>>)  # Not a line starting with PS1\n                 .+$\\n?       # But any other line\n              )*)\n    
\n    # Text needs to be stripped and all extra spaces replaced by single spaces\n    (?P<name>^[A-Z0-9][A-Z0-9._-]*)?\n    \\s?\n    (\\[(?P<extras>.*)\\])?\n    \\s?\n    (?P<constraints>\\(? \\s? ([\\w\\d<>=!~,\\s\\.\\*]*) \\s? \\)? )?\n    \\s?\n
\n    %\n    \\((?P<mapping_key>[^)]+)\\)\n    (?P<conversion_type>[diouxXeEfFgGcrs%])\n    
\n    (
\n    ( \\\\U........      # 8-digit hex escapes\n    | \\\\u....          # 4-digit hex escapes\n    | \\\\x..            # 2-digit hex escapes\n    | \\\\[0-7]{1,3}     # Octal escapes\n    | \\\\N\\{[^}]+\\}     # Unicode characters by name\n    | \\\\[\\\\'\"abfnrtv]  # Single-character escapes\n    )
\n    ( \\\\U........\n    | \\\\u....\n    | \\\\x..\n    | \\\\[0-7]{1,3}\n    | \\\\N\\{[^}]+\\}\n    | \\\\[\\\\'\"abfnrtv]\n    )
\n    ( \\\\x..            # 2-digit hex escapes\n    | \\\\[\\\\'\"abfnrtv]  # Single-character escapes\n    )
\n    ( \\\\x..            # 2-digit hex escapes\n    | \\\\[0-7]{1,3}     # Octal escapes\n    | \\\\[\\\\'\"abfnrtv]  # Single-character escapes\n    )
\n    ((?:$RE
\n    ((?:\n        [^\\s'\"]*\n        (?:\n            (?:\"(?:[^\"\\\\]|\\\\.)*\" | '(?:[^'\\\\]|\\\\.)*')\n            [^\\s'\"]*\n        )+\n    ) | \\S+)\n
\n    ((?P<name>\\w+)\\s*=\\s*)?\n    (?P<value>\n        True|False|\n        \\d+.\\d+|\n        \\d+.|\n        \\d+|\n        [\\w\\d_.]+|\n        [urUR]?(?P<stringval>\"[^\"]*?\"|'[^']*')\n    )\\s*,\n
\n    ((?P<name>\\w+)\\s*=\\s*)?\n    (?P<value>\n        True|False|\n        \\d+.\\d+|\n        \\d+.|\n        \\d+|\n        \\w+|\n        [urUR]?(?P<stringval>\"[^\"]*?\"|'[^']*')\n    )\\s*,\n
\n    ((\\(?[Dd][Oo][Ii](\\s)*\\)?:?(\\s)*)       # 'doi:' or 'doi' or '(doi)' (upper or lower case)\n    |(https?://(dx\\.)?doi\\.org\\/))?         # or 'http://(dx.)doi.org/'  (neither has to be present)\n    (?P<doi>10\\.                            # 10.                        (mandatory for DOI's)\n    \\d{4}                                   # [0-9] x4\n    (/|%2f)                                 # / (possibly urlencoded)\n    [\\w\\-_:;\\(\\)/\\.<>]+                     # any character\n    [\\w\\-_:;\\(\\)/<>])                       # any character excluding a full stop\n    
\n    (?:\\(|\\,) # either a ( to start the definition or a , for next\n    \\s*       # maybe some whitespace\n    (\\w+)     # the col name\n    [^,]*     # anything but the end or a ',' for next column\n    PRIMARY\\sKEY
\n    (?:\n        (?P<converter>[a-zA-Z_][a-zA-Z0-9_]*)   # converter name\n        (?:\\((?P<args>.*?)\\))?                  # converter parameters\n        \\:                                      # variable delimiter\n    )?\n    (?P<variable>[a-zA-Z_][a-zA-Z0-9_]*)        # variable name\n
\n    (?:\n        \\[ \\[\n            (?P<desc0> [^\\]]+)\n        \\] \\]\n    ) |\n    (?:\n        \\[ \\[\n            (?P<link1> [^\\]]+)\n        \\] \\[\n            (?P<desc1> [^\\]]+)\n        \\] \\]\n    )\n    
\n    (?:\n      (?:(?P<hours>\\d+):)?\n      (?P<minutes>\\d+):\n    )?\n    (?P<seconds>\\d+)\n    
\n    (?<!\\$)\\$([a-zA-Z]+) # identifier\n    (:                   # initial widget value\n\n        (?: # grouping to avoid : to be treated as part of\n            # the left or operand\n\n            \"( # quoted string\n                (?:\n                    [^\"]|    # any character except \" or ...\n                    (?<=\\\\)\" # ... \" preceded by a backslash\n                )*\n            )\"|\n\n            ([a-zA-Z]+) # identifiers can be used instead of strings\n        )\n    )?|\n    (\\$\\$) # escaped $\n
\n    (?<!\\?)     #if no preceding escape (?)\n    '           #apostrophe\n    (?![\n\r])  #if no following CR of LF\n    
\n    (?<algorithm_number>\\d+)\\s*\n    (?<fingerprint_type>\\d+)\\s*\n    (?<fingerprint>
\n    (?<algorithm>\\d+)\\s*\n    (?<flags>\\d+)\\s*\n    (?<iterations>\\d+)\\s*\n    (?<salt>\\S+)\\s*\n    (?<next_hashed_owner_name>\\S+)\\s*\n    (?<rrset_types>
\n    (?<brace>\n    {\n    (\n    [^{}]\n    | \\g<brace>\n    )*\n    }\n    )\n    
\n    (?<comment>  /[*] [^*]* [*]+ (?: [^*/] [^*]* [*]+ )* /         ){0}\n    (?<keyword>  typedef | extern | static | auto | register |\n                 struct  | union  | enum                           ){0}\n    (?<C>        (?: \\g<block> | [^{}]+ )*                         ){0}\n    (?<block>    \\{ \\g<ws>* ^ \\g<C> $ \\g<ws>* \\}                   ){0}\n    (?<ws>       \\g<comment> | \\s                                  ){0}\n    (?<ident>    [_a-zA-Z] [0-9_a-zA-Z]*                           ){0}\n    (?<type>     (?: \\g<keyword> \\g<ws>+ )* \\g<ident>              ){0}\n    (?<arg>      \\g<type> \\g<ws>+ \\g<ident> | \\.\\.\\.               ){0}\n    (?<argv>     (?# empty ) |\n                 void        |\n                 \\g<arg> (?: \\g<ws>* , \\g<ws>* \\g<arg> \\g<ws>* )*  ){0}\n    (?<pragma>   \\g<ws>* // \\s* attr \\g<ws>+\n                 (?<pragma:type> \\g<type>   )              \\g<ws>+\n                 (?<pragma:name> \\g<ident>  )              \\g<ws>*\n                 =                                         \\g<ws>*\n                 (?<pragma:expr> .+?;       )              \\g<ws>* ){0}\n    (?<insn>     DEFINE_INSN                               \\g<ws>+\n                 (?<insn:name>   \\g<ident>  )              \\g<ws>*\n     [(] \\g<ws>* (?<insn:opes>   \\g<argv>   ) \\g<ws>* [)]  \\g<ws>*\n     [(] \\g<ws>* (?<insn:pops>   \\g<argv>   ) \\g<ws>* [)]  \\g<ws>*\n     [(] \\g<ws>* (?<insn:rets>   \\g<argv>   ) \\g<ws>* [)]  \\g<ws>* ){0}\n
\n    (?<comment> \\# .+? \\n                      ){0}\n    (?<ws>      \\g<comment> | \\s               ){0}\n    (?<insn>    \\w+                            ){0}\n    (?<paren>   \\( (?: \\g<paren> | [^()]+)* \\) ){0}\n    (?<expr>    (?: \\g<paren> | [^(),\\ \\n] )+  ){0}\n    (?<remain>  \\g<expr>                       ){0}\n    (?<arg>     \\g<expr>                       ){0}\n    (?<extra>   , \\g<ws>* \\g<remain>           ){0}\n    (?<args>    \\g<arg> \\g<extra>*             ){0}\n    (?<decl>    \\g<insn> \\g<ws>+ \\g<args> \\n   ){0}\n
\n    (?<cpu>(?:
\n    (?<flags>\\d+)\\s*\n    (?<protocol>\\d+)\\s*\n    (?<algorithm>\\d+)\\s*\n    (?<key>
\n    (?<key_tag>\\d+)\\s*\n    (?<algorithm>\\d+)\\s*\n    (?<digest_type>\\d+)\\s*\n    (?<digest>
\n    (?<nameserver>
\n    (?<next_domain>
\n    (?<order>\\d+)\\s*\n    (?<pref>\\d+)\\s*\n    (?<flags>
\n    (?<priority>\\d+)\\s*\n    (?<exchange>
\n    (?<priority>\\d+)\\s*\n    (?<weight>\\d+)\\s*\n    (?<port>\\d+)\\s*\n    (?<target>
\n    (?<type_covered>\\S+)\\s*\n    (?<algorithm>\\d+)\\s*\n    (?<labels>\\d+)\\s*\n    (?<original_ttl>
\n    (?<type> (recipe|role)) {0}   # The runlist item type.\n    (?<name> (.*)) {0}            # The runlist item name.\n\n    \\g<type>\\[\\g<name>\\]\n  
\n    (?<ws>      \\u0020 ){0}\n    (?<key>     \\w+    ){0}\n    (?<value>   0|1    ){0}\n    (?<define>  \\G \\#define \\g<ws>+ OPT_\\g<key> \\g<ws>+ \\g<value> \\g<ws>*\\n )\n
\n    (?P<address>[a-fA-F0-9x]+)  # match the hexadecimal address\n    :\\s                         # skip ': '\n    (?P<function>.+?)           # match the function's name, non-greedy\n    (?:                         # don't capture fname/line group\n        \\s\n        \\(\n        (?:in\\s)?               # skip 'in ' if present\n        (?P<fname>[^:]+)        # match the file name\n        :?                      # skip ':', if present\n        (?P<line>\\d+)?          # match the line number, if present\n        \\)\n    )?                          # fname/line group is optional\n    $                           # should have reached the EOL\n
\n    (?P<anomer>[abxo])?\n    (?P<conf_stem>(?:-[dlx][a-z]+)+)?-?\n    (?P<superclass>[A-Z]+)-?\n    (?P<indices>[0-9x]+:[0-9x]+)\n    (?P<modifications>(\\|[0-9x,]+:[0-9a-z]+)+)?\n    
\n    (?P<attr>\n        [\\w_-]+\n    )\n    (?P<sign>\n        \\+?=\n    )\n    (?P<value>\n    ['\"]? # start quote\n        [^\"']*\n    ['\"]? # end quote\n    )\n
\n    (?P<before> {% \\s*\n        url \\s+ )\n        (?P<name> \\S+ )\n        (?P<attrs> \\s+ .*? )\n    (?P<after> \\s* %} )\n
\n    (?P<COMMENT>\\#.*$)            # comment (until end of line)\n    |(?P<WORD>(object|class|counts|origin|delta|type|counts|rank|items|data))\n    |\"(?P<QUOTEDSTRING>[^\\\"]*)\"   # string in double quotes  (quotes removed)\n    |(?P<WHITESPACE>\\s+)          # white space\n    |(?P<REAL>[-+]?               # true real number (decimal point or\n    (\\d+(\\.\\d*)?|\\.\\d+)           # scientific notation) and integers\n    ([eE][-+]?\\d+)?)\n    |(?P<BARESTRING>[a-zA-Z_][^\\s\\#\\\"]+) # unquoted strings, starting with non-numeric\n    
\n    (?P<created_at>\n        (?P<year>[1-9]\\d{3})\n        (?:\n            [-_](?P<month>\\d{2})\n            (?:\n                [-_](?P<day>\\d{2})\n            )?\n        )?\n    )[-_]\n    (?P<name>.*)
\n    (?P<fence>^(?:~{3,}|`{3,}))[ ]*  # Opening ``` or ~~~\n    (\\{?\\.?(?P<lang>[\\w#.+-]*))?[ ]*    # Optional {, and lang\n    # Optional highlight lines, single- or double-quote-delimited\n    (hl_lines=(?P<quot>\"|')(?P<hl_lines>.*?)(?P=quot))?[ ]*\n    # Optional tab label, single- or double-quote-delimited\n    (fct_label=(?P<fct_quot>\"|')(?P<fct_label>.*?)(?P=fct_quot))?[ ]*\n    }?[ ]*\\n                                # Optional closing }\n    (?P<code>.*?)(?<=\\n)\n    (?P=fence)[ ]*$
\n    (?P<group_id>\n        [a-z0-9]{8}-(?:[a-z0-9]{4}-){3}[a-z0-9]{12}\n        ~\n        (?P<files_qty>\\d+)\n    )\n
\n    (?P<hour>\\d{1,2})    # one or two hour digits\n    :                    # :\n    (?P<minute>\\d{1,2})  # one or two minute digits\n    :                    # :\n    (?P<second>          # second decimal consisting of:\n        \\d{1,2}          #   two digits\n        (?:              #   then optionally\n            \\.           #     a dot\n            \\d*          #     and any number of digits\n        )\n    )\n    \\Z                   # end\n
\n    (?P<chrom>.+):\n    (?P<start>\\d+)-\n    (?P<stop>\\d+)\n    (?:\\[(?P<strand>.)\\])?
\n    (?P<key>[^=;]+)\n    (?:\\s*=\\s*\n        (?P<val>\n            \"(?:[^\\\\\"]|\\\\.)*\" |\n             (?:.*?)\n        )\n    )?\n    \\s*;\n
\n    (?P<kwargs>(?:\\s\\b[a-z_]+=\\w+\\s?)+)?\\Z # kwargs match everything at the end in groups \" name=arg\"\n    
\n    (?P<link>https?://[^ \\(\\)]+) # URL itself\n    \\s*                  # optional space\n    (?:\\((?P<title>[^)]+)\\))?       # optional text (in)\n
\n    (?P<macro>%[xXtTmM])\n    \\[\n    \\s*(?P<offset>[-]?\\d+)\\s*\n    ,\n    \\s*(?P<column>[^\\],\\s]+)\\s*  # identifier: anything but closing bracket or comma\n    (?P<rest>[\\],])              # closing bracket or comma\n    
\n    (?P<name>.+?)-(?P<ver>.+?)\n    (-(?P<pyver>py\\d\\.\\d)\n     (-(?P<arch>.+?))?\n    )?.egg$
\n    (?P<name>[^-]+) (\n        -(?P<ver>[^-]+) (\n            -py(?P<pyver>[^-]+) (\n                -(?P<plat>.+)\n            )?\n        )?\n    )?\n    
\n    (?P<name>[a-z] [^_]{0,3})\n    (?: _ \\$ (?P<symmetry>\\d+) )?\n    (?: _ (?P<resnum>\\d+))?\n    (?: _ (?P<plusminus>[\\+\\-]))?\n    |\n    \\$ (?P<element>[a-z]{1,2})\n    |\n    (?P<range> > | <)\n    
\n    (?P<name>[A-z-]+) # A option name, valid characters are A to z and dash.\n    \\s*\n    (?P<op>=)? # Separating the option and the value with a equals sign is\n               # common, but optional.\n    \\s*\n    (?P<value>.*) # The value, anything goes.\n
\n    (?P<name>[a-z_]+)       # Must start with a lowercase + underscores name\n    (?::(?P<variant>\\w+))?  # Variant is optional, \":variant\"\n    (?:(?P<args>[^\\Z]+))? # args is everything up to the end\n    
\n    (?P<no_fraction>\n        \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}  # YYYY-MM-DDTHH:MM:SS\n    )\n    (                                        # Optional decimal part\n     \\.                                      # decimal point\n     (?P<nanos>\\d{1,9})                      # nanoseconds, maybe truncated\n    )?\n    Z                                        # Zulu\n
\n    (?P<outer_indentation>\\x20*)\n    \\.\\. \\x20 guide::\\n\n    (?:(?:(?P=outer_indentation) [^\\n]+\\n)|\\n)*
\n    (?P<parent_atom_replaced>[odhnx])\n    \\((?P<parent_attachment_position>-?[0-9\\-\\|]+)[\\+\\-]\n        (?P<child_attachment_position>-?[0-9\\-\\|]+)\\)\n    (?P<child_atom_replaced>[odhnx])\n    
\n    (?P<robot>.{4})         # robot name\n    [/ ][0-9][.][0-9].*     # trailing version\n    
\n    (?P<sequence> [^>^*]*? )\n    \\*?\\s*\\n(?:\\n|\\Z)\n    
\n    (?P<size>\\d+(\\.\\d+)?)\n    (?P<modifier>[Kk]|[Mm])?\n    (?:[Bb])?\n
\n    (?P<static>[^<]*)                           # static rule data\n    <\n    (?:\n        (?P<converter>[a-zA-Z_][a-zA-Z0-9_]*)   # converter name\n        (?:\\((?P<args>.*?)\\))?                  # converter arguments\n        \\:                                      # variable delimiter\n    )?\n    (?P<variable>[a-zA-Z_][a-zA-Z0-9_]*)        # variable name\n    >\n
\n    (?P<stream_url>(?:[\\w\\/\\.\\-:]+)\n    \\/[^_\\\"]+(?:_(?P<stream_quality_name>\\d+))\n    ?/playlist.m3u8)\n
\n    (?P<symop>[^\\s\\(\\)]+)\n     |\n    (?P<space>\\s+)\n     |\n    (?P<lpar>\\()\n     |\n    (?P<rpar>\\))\n    
\n    (?P<tag>%\\w+(\\:\\w+)?)?\n    (?P<id>\\#[\\w-]*)?\n    (?P<class>\\.[\\w\\.-]*)*\n    (?P<attributes>\\{.*\\})?\n    (?P<nuke_outer_whitespace>\\>)?\n    (?P<nuke_inner_whitespace>\\<)?\n    (?P<selfclose>/)?\n    (?P<django>=)?\n    (?P<inline>[^\\w\\.#\\{].*)?\n    
\n    (?P<text>[^\\s\\(\\)]+)\n     |\n    (?P<space>\\s+)\n     |\n    (?P<parens>[\\(\\)])\n    
\n    (?P<ymd>\n     \\d{4}-      # year\n     \\d{2}-      # month\n     \\d{2})      # day\n    T            # separator\n    (?P<hms>\n     \\d{2}:      # hour\n     \\d{2}:      # minute\n     \\d{2})      # second\n     
\n    ([^\\s].*)\n    (?:[\\s\\.]+(?:(?P<open_bracket>\\()\\s*[Ss][Ee][Rr]\\.)?\n            ([A-H]|(I{1,3}V?|VI{0,3}))\n    )?\n    (?(open_bracket)\\s*\\))$   ## Only match the ending bracket if the opening bracket was found
\n    (\\\\)?               # is it escaped with a backslash?\n    (\\$)                # literal $\n    (                   # collect braces with var for sub\n        \\{?             #   allow brace wrapping\n        ([A-Z0-9_]+)    #   match the variable\n        \\}?             #   closing brace\n    )                   # braces end\n
\n    (\n      \\d+                           # A few numbers\n      \\s+\n      (?:[A-Za-z'.-]+\\s?){1,5}      # Followed by a street name\n    )\n    \\s* ,?  \\s*                     # a comma, optionally\n    (\n      (?:\\d+\\s+)?                   # a secondary unit, optionally\n      (?:
\n    (\\s*Author:\\s+(?P<author>.*)\\s*)?                      # Author\n    (\\s*Maintainer:\\s+(?P<maintainer>.+)\\s*)?              # Maintainer\n    (\\s*Project-URL:\\sFunding,\\s+(?P<funding_url>.+)\\s*)?  # Funding URL\n
\n    (document\\.    # global javascript\n     | var\\s+      # local javascript\n     | <\\w+\\s+[^>]*?) # input, form, select, textarea tag\n      \\Q$key\\E   # the key\n      \\s*=\\s*    # an equals sign\n      ([\\\"\\'])   # open quote\n      (.+?[^\\\\]) # something in between\n      \\2        # close quote\n    
\n    (http(s)?://)?\n    (www\\.)?\n    huomao\n    (\\.tv|\\.com)\n    /(?P<room_id>\\d+)\n
\n    ;\\s*\n    (?P<key>\n        \"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"  # quoted string\n    |\n        [^\\s;,=*]+  # token\n    )\n    \\s*\n    (?:  # optionally followed by =value\n        (?:  # equals sign, possibly with encoding\n            \\*\\s*=\\s*  # * indicates extended notation\n            (?P<encoding>[^\\s]+?)\n            '(?P<language>[^\\s]*?)'\n        |\n            =\\s*  # basic notation\n        )\n        (?P<value>\n            \"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"  # quoted string\n        |\n            [^;,]+  # token\n        )?\n    )?\n    \\s*\n
\n    @(?P<status>[+-]?)(?P<field>\\w+|\\*)\\s+(?P<term>[^@()]+)\n    |\n    (?P<all>[^@()]+)
\n    @(param|return|throws)\n    \\h+\n    ((\\?<!\\$)[a-zA-Z0-9_\\]+)\n    \\h+\n    $[a-zA-Z0-9_]+\n    \\s*\\v
\n    [ \\t]*\n    [^\\s#\\\\]    # if we match, m.end()-1 is the interesting char\n
\n    [^[\\](){}#'\"\\\\]+\n
\n    \\\\ ( [\\n\\\\'\"abfnrtv]  |  # \\\\x single-character escapes\n         [0-7]{1,3}       |  # \\\\ooo octal escape\n         x[0-9A-Fa-f]{2}  |  # \\\\xXX hex escape\n         u[0-9A-Fa-f]{4}  |  # \\\\uXXXX hex escape\n         U[0-9A-Fa-f]{8}  |  # \\\\UXXXXXXXX hex escape\n         N\\{[- 0-9A-Z]+\\}    # \\\\N{name} Unicode name or alias\n       )\n    
\n    \"identity\" \\(\n      (?P<current>-?\\d+)\n      ,\\s\n      (?P<base>-?\\d+)\n      ,\\s\n      '(?P<seed>-?\\d+),(?P<step>-?\\d+)'\n      .*\n    \\)\n
\n    \\(\\*-?\\ *variables\\ *\\*\\)    # Match (* variables *) or (*- variables *)\n    (                            # Match and capture the following:\n    (?:                          # Start of non-capturing group, used to match a single character\n    (?!                          # only if it's impossible to match the following:\n    \\(\\*-?\\ *                    # - a literal (* or (*-\n    (?:                          # Inner non-capturing group, used for the following alternation:\n    variables                    # - Either match the word variables\n    |                            # or\n    endvariables                 # - the word endvariables\n    )                            # End of inner non-capturing group\n    \\ *-?\\*\\)                    # - a literal *) or -*)\n    )                            # End of negative lookahead assertion\n    .                            # Match any single character\n    )*                           # Repeat as often as possible\n    )                            # End of capturing group 1\n    \\(\\*\\ *endvariables\\ *-?\\*\\) # until (* endvariables *) or (* endvariables -*) is matched.\n    
\n    \\(\\?P<\n    (?P<name>\\w+)\n    >[^\\)]+\n    \\)
\n    \\[ ( [<\\|>\\^\\-\\_\\.\\,\\*\\d\\#\\$]* ) \\] ( [a-zA-Z]? )\n  
\n    \\A\n    (?<path> .+?)\n    (?:\n      [:]\n      (?<config> 
\n    \\\\A\n    ([
\n    \\A\n    (\n      
\n    \\A\n    https?://                                                    # http:// or https://\n    ([^\\s:@]+:[^\\s:@]*@)?                                        # optional username:pw@\n    ( (([^\\W_]+\\.)*xn--)?[^\\W_]+([-.][^\\W_]+)*\\..{2,}\\.? |       # domain (including Punycode/IDN)...\n        
\n    \\A\n    https?://                                                    # http:// or https://\n    ([^\\s:@]+:[^\\s:@]*@)?                                        # optional username:pw@\n    ( (([^\\W_]+\\.)*xn--)?[^\\W_]+([-.][^\\W_]+)*\\.[a-z]{2,6}\\.? |  # domain (including Punycode/IDN)...\n        
\n    \\A\\s*                      # optional whitespace at the start, then\n    (?P<sign>[-+]?)            # an optional sign, then\n    (?=\\d|\\.\\d)                # lookahead for digit or .digit\n    (?P<num>\\d*)               # numerator (possibly empty)\n    (?:                        # followed by an optional\n       /(?P<denom>\\d+)         # / and denominator\n    |                          # or\n       \\.(?P<decimal>\\d*)      # decimal point and fractional part\n    )?\n    \\s*\\Z                      # and optional whitespace to finish\n
\n    \\bc/o\\b\n    |\n    [(\"']*\\b[^\\s\\/,;#&()]+\\b[.,;:'\")]* # ['a-b. cd,ef- '] -> ['a-b.', 'cd,', 'ef']\n    |\n    [#&@/]\n    
\n    \\s*\\#\\s+                   # Lines that start with a '#'\n    (?P<hash_type>sha256):\\s+  # Hash type is hardcoded to be sha256 for now.\n    (?P<hash>[^\\s]+)           # Hashes can be anything except '#' or spaces.\n    \\s*                        # Suck up whitespace before the comment or\n                               #   just trailing whitespace if there is no\n                               #   comment. Also strip trailing newlines.\n    (?:\\#(?P<comment>.*))?     # Comments can be anything after a whitespace+#\n                               #   and are optional.\n    $
\n    \\s*\n    (\n        (?P<edifact>\n            (?P<UNA>\n                U[\n\r]*N[\n\r]*A\n                (?P<UNAstring>.+?)\n            )?\n            (?P<UNB>\n                U[\n\r]*N[\n\r]*B\n            )\n            [\n\r]*\n            (?P<field_sep>[^\n\r])\n        )\n        |\n        (?P<tradacoms>\n            (?P<STX>\n                S[\n\r]*T[\n\r]*X\n                [\n\r]*\n                =\n            )\n        )\n        |\n        (?P<x12>\n            I[\n\r]*S[\n\r]*A\n        )\n    )\n    
\n    \\s*\n    Previous\\ Balance\n    \\s+\n    \\$(?P<previous_balance>[\\d,]+\\.\\d\\d)\n    \\s+\n    New\\ Balance\n    \\s+\n    \\$(?P<new_balance>[\\d,]+\\.\\d\\d)$\n    
\n    \\s*n                    # skip zero or more spaces, then 'n'\n    (?P<num_children>\\d+)   # match number of children, 1 or more digits\n    :\\s                     # skip ':' and one space\n    (?P<num_bytes>\\d+)      # match the number of bytes, 1 or more digits\n    \\s                      # skip one space\n    (?P<details>.*)         # match the details\n
\n    \\s*v?\n    (?:\n        (?:(?P<epoch>[0-9]+)!)?                           # epoch\n        (?P<release>[0-9]+(?:\\.[0-9]+)*)                  # release segment\n        (?P<pre>                                          # pre-release\n            [-_\\.]?\n            (?P<pre_l>(a|b|c|rc|alpha|beta|pre|preview))\n            [-_\\.]?\n            (?P<pre_n>[0-9]+)?\n        )?\n        (?P<post>                                         # post release\n            (?:-(?P<post_n1>[0-9]+))\n            |\n            (?:\n                [-_\\.]?\n                (?P<post_l>post|rev|r)\n                [-_\\.]?\n                (?P<post_n2>[0-9]+)?\n            )\n        )?\n        (?P<dev>                                          # dev release\n            [-_\\.]?\n            (?P<dev_l>dev)\n            [-_\\.]?\n            (?P<dev_n>[0-9]+)?\n        )?\n    )\n    (?:\\+(?P<local>[a-z0-9]+(?:[-_\\.][a-z0-9]+)*))?       # local version\n\\s*$
\n    \\x{09C7}$is_Combining+[\\x{09BE}\\x{09D7}]\t\t| # BENGALI VOWEL SIGN E\n    \\x{0B47}$is_Combining+[\\x{0B3E}\\x{0B56}\\x{0B57}]\t| # ORIYA VOWEL SIGN E\n    \\x{0BC6}$is_Combining+[\\x{0BBE}\\x{0BD7}]\t\t| # TAMIL VOWEL SIGN E\n    \\x{0BC7}$is_Combining+\\x{0BBE}\t\t\t| # TAMIL VOWEL SIGN EE\n    \\x{0B92}$is_Combining+\\x{0BD7}\t\t\t| # TAMIL LETTER O\n    \\x{0CC6}$is_Combining+[\\x{0CC2}\\x{0CD5}\\x{0CD6}]\t| # KANNADA VOWEL SIGN E\n    [\\x{0CBF}\\x{0CCA}]$is_Combining\\x{0CD5}\t\t| # KANNADA VOWEL SIGN I or KANNADA VOWEL SIGN O\n    \\x{0D47}$is_Combining+\\x{0D3E}\t\t\t| # MALAYALAM VOWEL SIGN EE\n    \\x{0D46}$is_Combining+[\\x{0D3E}\\x{0D57}]\t\t| # MALAYALAM VOWEL SIGN E\n    \\x{1025}$is_Combining+\\x{102E}\t\t\t| # MYANMAR LETTER U\n    \\x{0DD9}$is_Combining+[\\x{0DCF}\\x{0DDF}]\t\t| # SINHALA VOWEL SIGN KOMBUVA\n    [\\x{1100}-\\x{1112}]$is_Combining[\\x{1161}-\\x{1175} ] | # HANGUL CHOSEONG KIYEOK..HIEUH\n    ($is_HangulLV|[\\x{1100}-\\x{1112}][\\x{1161}-\\x{1175}])($is_Combining)([\\x{11A8}-\\x{11C2}]) # HANGUL SyllableType=LV\n  
\n    ^   # Beginning of line.\n    (((?P<first_page>\\w+)\\,)?(?P<per_page>\\w+)\\s+)?  # First page, per page.\n    (?P<objects>[\\.\\w]+)  # Objects / queryset.\n    (\\s+starting\\s+from\\s+page\\s+(?P<number>[\\-]?\\d+|\\w+))?  # Page start.\n    (\\s+using\\s+(?P<key>[\\\"\\'\\-\\w]+))?  # Querystring key.\n    (\\s+with\\s+(?P<override_path>[\\\"\\'\\/\\w]+))?  # Override path.\n    (\\s+as\\s+(?P<var_name>\\w+))?  # Context variable name.\n    $   # End of line.\n
\n    ^   # Beginning of line.\n    (starting\\s+from\\s+page\\s+(?P<number>\\w+))?\\s*  # Page start.\n    (using\\s+(?P<key>[\\\"\\'\\-\\w]+))?\\s*  # Querystring key.\n    (as\\s+(?P<var_name>\\w+))?  # Context variable name.\n    $   # End of line.\n
\n    ^ ( (?P<username> [^@]+ ) @ )? # optional username\n    (?P<hostname> [^:]+ ) :        # mandatory host name\n    (?P<directory> .* )            # optional pathname\n
\n    ^ ( (?P<username> [^@]+ ) @ )? # optional username\n    (?P<hostname> [^:]+ ) ::       # mandatory host name\n    (?P<module> [^/]+ )            # mandatory module name\n    ( / (?P<directory> .* ) )? $   # optional pathname (without leading slash)\n
\n    ^ > [ \\t\\v\\f]*\n    (?P<name> [^\\n]* ) \\n\n    (?P<sequence> [^>^*]* )\n    \\*?\\s*\n    
\n    ^ > [ \\t]*\n    (?P<name> [^\\s^:]+ ) [ :]? [ \\t]*\n    (?P<description> [^\\n]* ) \\n\n    (?P<sequence> [^>]* )\n    \\s*\n    
\n    ^ > \\s* PDB \\s* :\n    (?P<name> [^_]+ ) _\n    (?P<chain> \\w* ) \\s* \\n\n    (?P<sequence> [^>]* )\n    \\s*\n    
\n    ^ > \\s*\n    (?P<names> [^\\n]* ) \\n\n    (?P<alignments> [^>^*]* )\n    \\*?\\s*\n    
\n    ^ >\n    (?P<name> [^\\n]* ) \\n\n    (?P<description> [^\\n]* ) \\n\n    (?P<sequence> [^>^\\*]* )\n    \\*? \\s*\n    
\n    ^ >\n    (?P<names> \\S+ ) \\s+\n    (?P<descriptions> [^\\n]* ) \\n\n    (?P<alignments> [^>]* )\n    \\s*\n    
\n    ^ >\n    (?P<type> [PFDRN][13LC] ) ;\n    (?P<name> \\S* ) \\n\n    (?P<description> [^\\n]* ) \\n\n    (?P<sequence> [^>^\\*]* )\n    \\* \\s*\n    
\n    ^ >\n    (?P<types> [PFDRN][13LC] ) ;\n    (?P<names> \\S+ ) \\n\n    (?P<descriptions> [^\\n]* ) \\n\n    (?P<alignments> [^>]* )\n    \\* \\s*\n    
\n    ^ rsync://                    # static prefix\n    ( (?P<username>[^@]+) @ )?    # optional username\n    (?P<hostname> [^:/]+ )        # mandatory host name\n    ( : (?P<port_number> \\d+ ) )? # optional port number\n    / (?P<module> [^/]+ )         # mandatory module name\n    ( / (?P<directory> .* ) )? $  # optional pathname (without leading slash)\n
\n    ^(?:\n        (?P<host>[^:]+)               # ipv4 address or host name\n        |\\[(?P<host6>[a-zA-Z0-9:]+)\\] # ipv6 address in square brackets\n    )                                 # end of host part\n    (?::(?P<port>\\d+))?$              # optional port part\n    
\n    ^(?P<date>\\S+)\n    \\s+\n    (?P<time>\\S+)\n    \\s+\n    \\S+\n    \\s+\n    \\S+\n    \\s+\n    (?P<message>.*)\n    $\n    
\n    ^(?P<package>.+)-\n    (?P<version>\\d[^-]*)[-\\.]\n    ((?P<platform>[^-]*)-)?\n    (?P<python_version>[^-]+)\n    .(?P<format>(exe|msi))\n    (\\#md5=.*)?\n    $\n
\n    ^(?P<package>.+)-\n    (?P<version>\\d[^-]*)\n    (-(?P<platform>[^\\.]+))?\n    .(?P<format>tar.(gz|bz2)|zip)\n    (\\#md5=.*)?\n    $\n
\n    ^(?P<package>.+)-\n    (?P<version>\\d[^-]*)-\n    (?P<python_version>[^-]+)\n    (-(?P<platform>[^\\.]+))?\n    .(?P<format>egg)\n    (\\#md5=.*)?\n    $\n
\n    ^(?P<package>.+)-\n    (?P<version>\\d[^-]*)-\n    (?P<python_version>[^-]+)-\n    (?P<abi>[^-]+)-\n    (?P<platform>.+)\n    .(?P<format>whl)\n    (\\#md5=.*)?\n    $\n
\n    ^(?P<repo>git.*|.*\\.git)?$\n    
\n    ^(bb:|bitbucket:|https?://(www\\.)?bitbucket.org/)\n    (?P<repo>[^@]*)(@(?P<revision>.*))?$\n    
\n    ^(gh:|github:|https?://(www\\.)?github.com/)\n    (?P<repo>[^@]*)(@(?P<revision>.*))?$\n    
\n    ^(gh:|github:|https?://(www\\.)?github.com/|git@github.com:)\n    (?P<repo>[^@]*)(@(?P<revision>.*))?$\n    
\n    ^(git:|https)?://git.launchpad.net/\n    (?P<repo>[^@]*)(@(?P<revision>.*))?$\n    
\n    ^(lp:|launchpad:|https?://((code|www)\\.)?launchpad.net/)\n    (?P<repo>[^@]*)(@(?P<revision>.*))?$\n    
\n    ^(lp:|launchpad:|https?://((code|www)\\.)?launchpad.net/|bzr\\+ssh://[^/]+/)\n    (?P<repo>[^@]*)(@(?P<revision>.*))?$\n    
\n    ^-?(?:(?P<hours>\\d+):)?(?P<minutes>\\d+):(?P<seconds>\\d+)$\n
\n    ^\n    (//)?                  # preceding double-slash($1)\n    (?:\\[([\\h:]+)\\]|([^\\s:/]+)) # IPv6 enclosed by square brackets($2) or hostname($3)\n    (?::(\\d+))?            # port($4)\n    (?:\n      /\n      ([^\\s:/]+)?          # service name($5)\n      (?::([^\\s:/]+))?     # server($6)\n      (?:/([^\\s:/]+))?     # instance name($7)\n    )?\n    $\n  
\n    ^\n    (:(?P<prefix>[^\\s]+)\\s+)?    # Optional prefix (src, nick!host, etc)\n                                 # Prefix matches all non-space characters\n                                 # Must start with a \":\" character\n\n    (?P<command>[^:\\s]+)         # Command is required (JOIN, 001, 403)\n                                 # Command matches all non-space characters\n\n    (?P<params>(\\s+[^:][^\\s]*)*) # Optional params after command\n                                 # Must have at least one leading space\n                                 # Params end at first \":\" which starts message\n\n    (?:\\s+:(?P<message>.*))?     # Optional message starts after first \":\"\n                                 # Must have at least one leading space\n    $\n    
\n    ^\n    (?:\n        (?P<module_path>\n            (?:    [^\\d\\W] \\w* )\n            (?: \\. [^\\d\\W] \\w* )*\n        )\n        :\n    )?\n    (?P<call>\n        (?P<function> [^\\d\\W] \\w* )\n        \\( .*? \\)\n    )\n    $\n
\n    ^\n    (?:\n        (?P<title>[^<]+)\n        \\s*\n        <\n        (?P<issue1>\\d+)\n        >\n    |\n        (?P<issue2>\\d+)\n    )\n    $\n    
\n    ^\n    (?P<major>(?:0|[1-9][0-9]*))\n    \\.\n    (?P<minor>(?:0|[1-9][0-9]*))\n    \\.\n    (?P<patch>(?:0|[1-9][0-9]*))\n    (\\-(?P<prerelease>\n        (?:0|[1-9A-Za-z-][0-9A-Za-z-]*)\n        (\\.(?:0|[1-9A-Za-z-][0-9A-Za-z-]*))*\n    ))?\n    (\\+(?P<build>\n        [0-9A-Za-z-]+\n        (\\.[0-9A-Za-z-]+)*\n    ))?\n    $\n    
\n    ^\n    (?P<modified>.*(AM|PM))\n    \\s*\n    (?P<size>(<DIR>|\\d*))\n    \\s*\n    (?P<name>.*)\n    $\n    
\n    ^\n    (?P<module>\n        [a-z_][a-z0-9_]*(?:\\.[a-z_][a-z0-9_]*)*\n    )\n    :\n    (?P<object>\n        [a-z_][a-z0-9_]*(?:\\.[a-z_][a-z0-9_]*)*\n    )\n    $\n    
\n    ^\n    (?P<version>\\d+\\.\\d+)          # minimum 'N.N'\n    (?P<extraversion>(?:\\.\\d+)*)   # any number of extra '.N' segments\n    (?:\n        (?P<prerel>[abc]|rc)       # 'a'=alpha, 'b'=beta, 'c'=release candidate\n                                   # 'rc'= alias for release candidate\n        (?P<prerelversion>\\d+(?:\\.\\d+)*)\n    )?\n    (?P<postdev>(\\.post(?P<post>\\d+))?(\\.dev(?P<dev>\\d+))?)?\n    $
\n    ^<pre> \\s* $\n    (?P<pre_block>\n        (\\n|.)*?\n    )\n    ^</pre> \\s* $\n    [\\s\\n]*\n
\n    ^0+(?P<order>[1-9]\\d*)\n    [-_]\n    (?P<name>.*)\n
\n    ^bundle:(?P<entity>.*)$\n    
\n    ^cs:(?P<entity>.*)$\n    
\n    <\n    (?:\n        (?P<type>int|str|float)   # the type of variable\n        \\:\n    )?\n    (?P<variable>[a-zA-Z][a-zA-Z0-9_]*)         # the name of variable\n    >\n
\n    <pre>\n    (?P<pre_inline>\n        (\\n|.)*?\n    )\n    </pre>\n
\n    ARXIV[\\s:-]*(?P<year>(1[3-9]|[2-8][0-9]))-?(?P<month>(0[1-9]|1[0-2]))\n    [\\s.-]*(?P<num>\\d{5})(?!\\d)(?:[\\s-]*V(?P<version>\\d))?\n    \\s*(?P<suffix>\\[[A-Z.-]+\\])? 
\n    ARXIV[\\s:-]*(?P<year>\\d{2})-?(?P<month>\\d{2})\n    [\\s.-]*(?P<num>\\d{3})\n    \\s*\\[(?P<suffix>[A-Z.-]+)\\]
\n    ARXIV[\\s:-]*(?P<year>\\d{2})-?(?P<month>\\d{2})\n    [\\s.-]*(?P<num>\\d{4})(?!\\d)(?:[\\s-]*V(?P<version>\\d))?\n    \\s*(?P<suffix>\\[[A-Z.-]+\\])? 
\n    http(s)?://(\\w+\\.)?\n    (?P<domain>vaughnlive|breakers|instagib|vapers|pearltime).tv\n    (/embed/video)?\n    /(?P<channel>[^/&?]+)\n
\n    http(s)?://(\\w+\\.)?\n    dailymotion.com\n    (?:\n        (/embed)?/(video|live)\n        /(?P<media_id>[^_?/]+)\n    |\n        /(?P<channel_name>[A-Za-z0-9-_]+)\n    )\n
\n    http(s)?://(\\w+\\.)?crunchyroll\\.\n    (?:\n        com|de|es|fr|co.jp\n    )\n    (?:/[^/&?]+)?\n    /[^/&?]+-(?P<media_id>\\d+)\n
\n    http(s)?://(\\w+\\.)?cybergame.tv\n    (?:\n        /videos/(?P<video_id>\\d+)\n    )?\n    (?:\n        /(?P<channel>[^/&?]+)\n    )?\n
\n    http(s)?://(www\\.)?(hitbox|smashcast).tv\n    /(?P<channel>[^/]+)\n    (?:\n        (?:/videos)?/(?P<media_id>[^/]+)\n    )?\n
\n    http(s)?://(www\\.)?dr.dk\n    (?:\n        /[TtVv]+/\n        (?:\n            live/(?P<channel>[^/]+)\n        )?\n        (?:\n            se/(.+/)?(?P<program>[^/&?]+)\n        )?\n    )\n
\n    http(s)?://(www\\.)?zhanqi.tv\n    /(?P<channel>[^/]+)\n
\n    http(s)?://\n    (?:\n        (?P<subdomain>.+)\n        \\.\n    )?\n    douyu.com/\n    (?:\n        show/(?P<vid>[^/&?]+)|\n        (?P<channel>[^/&?]+)\n    )\n
\n    http(s)?://\n    (?:\n        (?P<subdomain>[\\w\\-]+)\n        \\.\n    )?\n    twitch.tv/\n    (?:\n        videos/(?P<videos_id>\\d+)|\n        (?P<channel>[^/]+)\n    )\n    (?:\n        /\n        (?P<video_type>[bcv])(?:ideo)?\n        /\n        (?P<video_id>\\d+)\n    )?\n    (?:\n        /\n        (?P<clip_name>[\\w]+)\n    )?\n
\n    http(s)?://live.bilibili.com\n    /(?P<channel>[^/]+)\n
\n    https://www\\.kingkong\\.com\\.tw/\n    (?:\n        video/(?P<vid>[0-9]+G[0-9A-Za-z]+)|\n        (?P<channel>[0-9]+)\n    )\n
\n    https?://(?:\\w+\\.)?arte\\.tv/(?:guide/)?\n    (?P<language>[a-z]{2})/\n    (?:\n        (?:videos/)?(?P<video_id>(?!RC\\-|videos)[^/]+?)/.+ | # VOD\n        (?:direct|live)        # Live TV\n    )\n
\n    index=\n    (?P<table_name>`[^`]+`)\n    \\ # space\n    (?P<rule>USE|IGNORE|FORCE)\n    \\ # space\n    (\n        FOR\n        \\ # space\n        (?P<for_what>JOIN|ORDER\\ BY|GROUP\\ BY)\n        \\ # space\n    )?\n    (?P<index_names>(`[^`]+`(,`[^`]+`)*)|NONE)\n    
\n    No \\s ( \\d+) \\s* (?: \\n | \\r\\n | \\r )\n    > \\s* ( [^\\n]* ) (?: \\n | \\r\\n | \\r )\n    Probab = ( [+-]? \\d+ \\. \\d* ) \\s+\n    E-value = ( \\d+ \\.? \\d* )( e[+-]? \\d+ )? \\s+\n    Score = ( \\d+\\.\\d+ ) \\s+\n    (?: Aligned_cols | Aligned_columns ) = ( \\d+ ) \\s+\n    Identities = ( \\d+ ) %\n    [^\\n]*\n    (?: \\n | \\r\\n | \\r )\n    (?P<blocks> .*? )(?= (?:^No) | (?:\\Z) )\n    
\n    No \\s ( \\d+) \\s* (?: \\n | \\r\\n | \\r )\n    >( [\\w]{4} ) _  ( [\\w]? ) \\s ( [^\\n]* )(?: \\n | \\r\\n | \\r )\n    Probab = ( [+-]? \\d+ \\. \\d* ) \\s+\n    E-value = ( \\d+ \\.? \\d* )( e[+-]? \\d+ )? \\s+\n    Score = ( [+-]? \\d+\\.\\d+ ) \\s+\n    (?: Aligned_cols | Aligned_columns ) = ( \\d+ ) \\s+\n    Identities = ( \\d+ ) %\n    [^\\n]*\n    (?: \\n | \\r\\n | \\r )\n    (?P<blocks> .*? )(?= (?:^No) | (?:\\Z) )\n    
\\n    ts\\.sys =([^]*)\\n    \\}\\)\\(\\);
\n    type [
\n    typedef \\s+ enum \\s* \\{\n    (\n      (?:\n        \\s*\n        \\w+ \\s* = \\s* \\d+ \\s* ,\n      )+\n    )\n    \\s*\n    \\Q$count_tag\\E\n    \\s* \\} \\s* \\Q$name\\E \\s* ;\n  
\n    zrpc-conn:(?P<addr>\\d+.\\d+.\\d+.\\d+:\\d+)\\s+\n    calling\\s+\n    (?P<method>\n     \\w+)        # the method\n    \\(           # args open paren\n      \\'         # string quote start\n        (?P<tid>\n         \\S+)    # first argument -- usually the tid\n      \\'         # end of string\n    (?P<rest>\n     .*)         # rest of line\n    
\n  (?<!\\\\)(\n   (?:\\\\\\\\)*\n   (?:\n     [^\\w\\s\\\\$e]\n    |\n     \\\\\n     (?: [^\\W$e] | \\s | $ )\n   )\n  )\n 
\n  (?P<name>[a-zA-Z][\\w\\.]*)      # variable name: \"var\" or \"x\"\n  (\\[\\s*(?P<index>\\d+)\\s*\\])?  # (optional) index: \"1\" or None\n  \\s*=\\s*\n  ((?P<val>[^,\\[]*)            # single value: \"a\" or None\n   |\n   \\[(?P<vals>[^\\]]*)\\])       # list of values: None or \"1,2,3\"\n  ($|,\\s*)
\n  (?P<name>[a-zA-Z][\\w]*)      # variable name: \"var\" or \"x\"\n  (\\[\\s*(?P<index>\\d+)\\s*\\])?  # (optional) index: \"1\" or None\n  \\s*=\\s*\n  ((?P<val>[^,\\[]*)            # single value: \"a\" or None\n   |\n   \\[(?P<vals>[^\\]]*)\\])       # list of values: None or \"1,2,3\"\n  ($|,\\s*)
\n  (?P<year>\\d\\d\\d\\d)                # four digits year\n  (?:-?                             # one optional dash\n   (?:                              # followed by:\n    (?P<year_day>\\d\\d\\d             #  three digits year day\n     (?!\\d))                        #  when there is no fourth digit\n   |                                # or:\n    W                               #  one W\n    (?P<week>\\d\\d)                  #  two digits week\n    (?:-?                           #  one optional dash\n     (?P<week_day>\\d)               #  one digit week day\n    )?                              #  week day is optional\n   |                                # or:\n    (?P<month>\\d\\d)?                #  two digits month\n    (?:-?                           #  one optional dash\n     (?P<day>\\d\\d)?                 #  two digits day\n    )?                              #  after day is optional\n   )                                #\n  )?                                # after year is optional\n  (?:[T ]                           # one T or one whitespace\n   (?P<hour>\\d\\d)                   # two digits hour\n   (?::?                            # one optional colon\n    (?P<minute>\\d\\d)?               # two digits minute\n    (?::?                           # one optional colon\n     (?P<second>\\d\\d)?              # two digits second\n     (?:[.,]                        # one dot or one comma\n      (?P<fraction>\\d+)             # n digits fraction\n     )?                             # after second is optional\n    )?                              # after minute is optional\n   )?                               # after hour is optional\n   (?:                              # timezone:\n    (?P<Z>Z)                        #  one Z\n   |                                # or:\n    (?P<signal>[-+])                #  one plus or one minus as signal\n    (?P<hour_off>\\d                 #  one digit for hour offset...\n     (?:\\d(?!\\d$)                   #  ...or two, if not the last two digits\n    )?)                             #  second hour offset digit is optional\n    (?::?                           #  one optional colon\n     (?P<min_off>\\d\\d)              #  two digits minute offset\n    )?                              #  after hour offset is optional\n   )?                               # timezone is optional\n  )?                                # time is optional\n  (?P<garbage>.*)                   # store the extra garbage\n
\n  \\(\\s*\\$\\]\\s*>=\\s*5\\.005\\s*\\?\\s*(?:\\#\\#\\s*\\QAdd these new keywords supported since 5.005\\E\\s*)?\n  \\s+\\(\\s*ABSTRACT(?:_FROM)?\\s*=>\\s*'([^'\\n]+)',\\s*(?:\\#\\s*\\Qretrieve abstract from module\\E\\s*)?\n  \\s+AUTHOR\\s*=>\\s*'([^'\\n]+)'\n  \\s*\\)\\s*\\Q: ()\\E\\s*\\),\\s+\n  
\n  \\A(?:
\n  ^\n  (?P<name> .+? ) \\s+\n  (?P<alignment> [A-Z\\-]+ )\n  (?P<number> \\s+ \\d+ )? \\s* $\n  
\n  ^FOREIGN\\ KEY \\s* \\(   # FOREIGN KEY, arbitrary whitespace, literal '('\n    (?P<columns>         # Start a group to capture the referring columns\n      (?:                # Start a non-capturing group\n        \\s*              # Arbitrary whitespace\n        ([_a-zA-Z][\\w$]* | (\"[^\"]+\")+)   # SQL identifier\n        \\s*              # Arbitrary whitespace\n        ,?               # There will be a colon if this isn't the last one\n      )+                 # Close the non-capturing group; require at least one\n    )                    # Close the 'columns' group\n  \\s* \\)                 # Arbitrary whitespace and literal ')'\n  \\s* REFERENCES \\s*\n    ((?P<referred_schema>([_a-zA-Z][\\w$]* | (\"[^\"]*\")+))\\.)? # SQL identifier\n    (?P<referred_table>[_a-zA-Z][\\w$]* | (\"[^\"]*\")+)         # SQL identifier\n  \\s* \\(   # FOREIGN KEY, arbitrary whitespace, literal '('\n    (?P<referred_columns> # Start a group to capture the referring columns\n      (?:                # Start a non-capturing group\n        \\s*              # Arbitrary whitespace\n        ([_a-zA-Z][\\w$]* | (\"[^\"]+\")+)   # SQL identifier\n        \\s*              # Arbitrary whitespace\n        ,?               # There will be a colon if this isn't the last one\n      )+                 # Close the non-capturing group; require at least one\n    )                    # Close the 'columns' group\n  \\s* \\)                 # Arbitrary whitespace and literal ')'\n
\n  ^PRIMARY \\s* KEY \\s* \\(  # FOREIGN KEY, arbitrary whitespace, literal '('\n    (?P<columns>         # Start a group to capture column names\n      (?:\n        \\s*                # Arbitrary whitespace\n        # SQL identifier or delimited identifier\n        ( [_a-zA-Z][\\w$]* | (\"[^\"]*\")+ )\n        \\s*                # Arbitrary whitespace\n        ,?                 # There will be a colon if this isn't the last one\n      )+                  # Close the non-capturing group; require at least one\n    )\n  \\s* \\) \\s*                # Arbitrary whitespace and literal ')'\n
\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a \"q\" or a \"b\", case insensitive\n  \\?                    # literal ?\n  (?P<encoded>.*?)      # non-greedy up to the next ?= is the encoded string\n  \\?=                   # literal ?=\n  
\n  =\\?                   # literal =?\n  (?P<charset>[^?]*?)   # non-greedy up to the next ? is the charset\n  \\?                    # literal ?\n  (?P<encoding>[qb])    # either a \"q\" or a \"b\", case insensitive\n  \\?                    # literal ?\n  (?P<atom>.*?)         # non-greedy up to the next ?= is the atom\n  \\?=                   # literal ?=\n  
\\\\N
\\n *(?P<c>\\x1B\\[\\d+m) *
\\\\n \\\\l
\n# Must start with a sequence of word-characters, followed by an equals sign\n(?P<attr_name>\\w+)=\n\n# Then either a quoted or unquoted attribute\n(?:\n\n # Match everything that\\'s between matching quote marks\n (?P<qopen>[\"\\'])(?P<q_val>.*?)(?P=qopen)\n|\n\n # If the value is not quoted, match up to whitespace\n (?P<unq_val>(?:[^\\s<>/]|/(?!>))+)\n)\n\n|\n\n(?P<end_link>[<>])\n
\\n$program\\_LDFLAGS\\s*=.*KDE_PLUGIN
\\n$program\\_LDFLAGS\\s*=.*-no-undefined
\\n$source\\_DIR\\s*=\\s*(\\S+)\\n
\\n$sourceprogram\\_SOURCES\\s*=\\s*(.*)\\n
\\n($realprogram)(\\$\\(EXEEXT\\)?)?:.*\\$\\($program\\_OBJECTS\\)
\n((^|\\ ) [\"'\\(\\[]*)           # begin of line or space and opt. any char \"'([\n([a-z][\\w+-.]*://[^\\s|]+?)   # url\n(?=[\\]\\)|\"'.,!?:;]* ($|\\ ))   # opt. any char ])\"'.,!?:; and end of line or space\n
\\n(?! {2}\\S)\\h*
\\\n(?# FLAG        )\\\\([^\\x80-\\xff(){ \\x00-\\x1f\\x7f%\"\\\\]+)|\\\n(?# ATOM        )([^\\x80-\\xff(){ \\x00-\\x1f\\x7f%*\"\\\\]+)
\n(?:\n    (?:(?P<hours>\\d+):)?\n    (?P<minutes>\\d+):\n)?\n(?P<seconds>\\d+)\n
\n(?:\n    \\|(?P<ket_c>[^\\|\\ {}<>]+)>\n)\n(?P<between>\\ *)\n(?:\n    <(?P<bra_c>[^\\|\\ <>]+)\\|\n)\n
\n(?<!(\\\\left|right))(?P<type>[()])\n
\n(?<![_\\^].)\n(?P<operator>[_\\^]) # ^ or _\n(?P<before> # optional whitespace before\n  \\ *?\n)\n(?P<content>\n  [a-zA-Z0-9]\n  [a-zA-Z0-9\\+\\*\\-]+\n)\n\n(?P<after>\n  $|\\ |\\n|\\|\n)\n
\\n(?=
\n(?P<before>^|\\ |\\n|\\(|\\{)\n(?P<bra>\n    <(?P<bra_c>[^\\|\\ {}<>]+)\\|\n)\n(?P<after>$|\\ |\\n|\\)|\\})\n
\n(?P<before>^|\\ |\\n|\\(|\\{)\n(?P<content>\n\\\\\\w+?|             #\\word.. b\n\\\\vec\\ \\w|          #\\vec p.. b\n\\\\vec\\{[^\\{\\}]+\\} #\\vec{abc}.. b. no nested {} because that's impossible in regex\n)\n\\.\\.\n(?=$|\\ |\\n|,|\\)|\\})\n
\n(?P<before>^|\\ |\\n|\\(|\\{)\n(?P<content>\n\\\\\\w+?|             #\\word.. b\n\\\\vec\\ \\w|          #\\vec p.. b\n\\\\vec\\{[^\\{\\}]+\\} #\\vec{abc}.. b. no nested {} because that's impossible in regex\n)\n\\.\n(?=$|\\ |\\n|,|\\)|\\})\n
\n(?P<before>^|\\ |\\n|\\(|\\{)\n(?P<content>\\w+?)\n\\.\\.\n(?=$|\\ |\\n|,|\\)|\\})\n
\n(?P<before>^|\\ |\\n|\\(|\\{)\n(?P<content>\\w+?)\n\\.\n(?=$|\\ |\\n|,|\\)|\\})\n
\n(?P<before>^|\\ |\\n|\\(|\\{)\n(?P<ket>\n    \\|(?P<ket_c>[^\\|\\ {}<>\\n]+)>\n)\n(?P<after>$|\\ |\\n|\\)|\\})\n
\n(?P<distance>[0-9]*)NM\\s+EITHER\\s+SIDE\\s+OF\\s+LINE\\s+\n
\n(?P<frac>\\\\frac)\n\\ +\n(?P<num>    # 2 or more chars\n  [^\\{\\n]   # don't start with {\n  [^\\ \\n]+\n)\n\\ +\n(?P<denom>  # denominator can be a single char\n  [^\\{\\n]\n  [^\\ \\n]*\n)\n
\\n(?P<indent1>\\s*)if (?P<cond1>[^\\n]+):\\n+\\1(?P<indent2>\\s+)(?P<comment>(?:\\#[^\\n]*\\n+\\1\\3)*)if (?P<cond2>[^\\n]+):\\n+(?P<block>\\1\\3(?P<indent3>\\s+)[^\\n]*\\n+(?:\\1\\3\\7[^\\n]*\\n+)*)(?!\\1(?:\\3|elif|else))
\n(?P<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s+\n-\\s+\n(?:(?P<user>\\w+)|-)\\s+\n\\[(?P<timestamp>\\d{2}\\/\\w{3}\\/\\d{4}:\\d{2}:\\d{2}:\\d{2})\\]\\s+\n\"(?:(?P<method>\\w+)\\s+(?P<uri>.+)\\s+HTTP\\/(?P<version>\\d\\.\\d)|-)\"\\s+\n(?:(?P<status>\\d+)|-)\\s+\n(?:(?P<bytes>\\d+)|-)\\s+\n\"(?:(?P<referrer>.*?)|-)\"\\s+\n\"(?P<user_agent>.*?)\"\n(?:\\s+(?:\nrequest_time_seconds=(?:(?P<request_time_secs>\\d+)|-)|\nrequest_time_microseconds=(?:(?P<request_time_usecs>\\d+)|-)|\nguru_id=(?:(?P<guru_id>\\w+)|-)|\n\\w+=.+?))*\n
\n(?P<modulename>\\w+(\\.\\w+)*)\n(:(?P<objectname>\\w+(\\.\\w+)*))?\n\\s*\n(\\[(?P<extras>.+)\\])?\n$\n
\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?$\n
\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?\n-(?P<py>\\w+\\d+(\\.\\w+\\d+)*)\n-(?P<bi>\\w+)\n-(?P<ar>\\w+(\\.\\w+)*)\n\\.whl$\n
\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?\n-(?P<py>\\w+\\d+(\\.\\w+\\d+)*)\n-(?P<bi>\\w+)\n-(?P<ar>\\w+)\n\\.whl$\n
\n(?P<object>.*?)                                       # Whatever was before it.\n\\.to(?:                                               # Get all the options of.\n    String|                                           # toString\n    Int|                                              # toInt\n    Float|                                            # toFloat\n    Bool|                                             # toBool\n    PyObject|                                         # toPyObject\n    Ascii                                             # toAscii\n)\\(.*?\\)(?P<end>.*)
\n(?P<offset>[0-9]+)?(?P<drct>N|NE|NNE|ENE|E|ESE|SE|SSE|S|SSW|SW|WSW|W|WNW|NW|NNW)?\\s?(?P<loc>[A-Z0-9]{3})\n
\n(?P<operator>[_\\^]) # ^ or _\n(?P<before> # optional whitespace before\n  \\ *?\n)\n(?P<content>\n  [^\\ \\{\\}\\n\\^\\_]{2,}\n)\n(?P<after>\\ )\n
\n(?P<payload>[^*]*\\*[A-F0-9][A-F0-9])\n(?P<uscg_metadata>\n(\n  (,S(?P<slot>\\d*))\n  | (,s(?P<rssi>\\d*))  # Receiver signal strength indicator.\n  | (,d(?P<signal_strength>[-0-9]*))  # dB.\n  | (,t(?P<receiver_time>(?P<hour>\\d\\d)(?P<minute>\\d\\d)  # UTC time.\n      (?P<second>\\d\\d.\\d*)))\n  | (,T(?P<time_of_arrival>[^,]*))  # Seconds within the minute.\n  | (,x(?P<counter>[0-9]*))\n  | (,(?P<station>(?P<station_type>[rRbBbD])[a-zA-Z0-9_-]*))\n)*\n,(?P<time>\\d+([.]\\d*)?)?  # Logger timestamp.  Can be hours from receive time.\n)\n
\n(?P<root>[\\w\\.]+)?\\.connect(?:\\s+)?\\((?:[\\s\\n]+)?\n\n# Making the owner optional. \n# _connect_repl has been updated to use root if owner is missing.\n(?:(?P<owner>.*?),(?:[\\s\\n]+)?)?   \n\n(?:QtCore\\.)?SIGNAL(?:\\s+)?(?:\\s+)?\\((?:[\\s\\n]+)?(?:_fromUtf8(?:\\s+)?\\()?(?:[\\s\\n]+)?[\\'\\\"](?P<signal>\\w+)(?:(?:\\s+)?\\((?P<signal_args>.*?)\\))?[\\'\\\"](?:[\\s\\n]+)?\\)?(?:[\\s\\n]+)?\\),(?:[\\s\\n]+)?\n\n  # Either QtCore.SLOT(\"thing()\") or an actual callable in scope.\n  # If it is the former, we are assuming that the str name is owned by root.\n    (?:(?:(?P<slot_owner>.*>?),(?:[\\s\\n]+)?)?(?:(?:QtCore\\.)?SLOT(?:\\s+)?\\((?:[\\s\\n]+)?(?:_fromUtf8(?:\\s+)?\\()?(?:[\\s\\n]+)?[\\'\\\"](?P<strslot>.*?)(?:\\s+)?\\((?P<slot_args>.*?)\\)[\\'\\\"](?:[\\s\\n]+)?\\)?(?:[\\s\\n]+)?\\))\n  |\n    (?:(?:[\\s\\n]+)?(?P<slot>.*?)(?:,)?(?:[\\s\\n]+)?))\n\\)
\n(?P<root>[\\w\\.]+)?\\.disconnect(?:\\s+)?\\((?:[\\s\\n]+)?\n(?P<owner>.*?),(?:[\\s\\n]+)?\n(?:QtCore\\.)?SIGNAL(?:\\s+)?\\((?:[\\s\\n]+)?(?:_fromUtf8(?:\\s+)?(?:\\s+)?\\()?(?:[\\s\\n]+)?[\\'\\\"](?P<signal>\\w+)(?:\\s+)?\\((?P<signal_args>.*?)(?:\\s+)?\\)[\\'\\\"](?:[\\s\\n]+)?\\)?(?:[\\s\\n]+)?\\),(?:[\\s\\n]+)?\n\n  # Either QtCore.SLOT(\"thing()\") or an actual callable in scope.\n  # If it is the former, we are assuming that the str name is owned by root.\n    (?:(?:(?P<slot_owner>.*>?),(?:[\\s\\n]+)?)?(?:(?:QtCore\\.)?SLOT(?:\\s+)?\\((?:[\\s\\n]+)?(?:_fromUtf8(?:\\s+)?\\()?(?:[\\s\\n]+)?[\\'\\\"](?P<strslot>.*?)(?:\\s+)?\\((?P<slot_args>.*?)(?:\\s+)?\\)[\\'\\\"](?:[\\s\\n]+)?\\)?(?:[\\s\\n]+)?\\))\n  |\n    (?:(?:[\\s\\n]+)?(?P<slot>.*?)(?:,)?(?:[\\s\\n]+)?))\n(?:\\s+)?\\)
\n(?P<root>[\\w\\.]+)?\\.emit(?:\\s+)?\\((?:[\\s\\n]+)?\n(?:(?P<owner>.*?),(?:[\\s\\n]+)?)?\n(?:QtCore\\.)?SIGNAL(?:\\s+)?(?:\\s+)?\\((?:[\\s\\n]+)?(?:_fromUtf8(?:\\s+)?\\()?(?:[\\s\\n]+)?[\\'\\\"](?P<signal>\\w+)(?:(?:\\s+)?\\((?P<signal_args>.*?)\\))?[\\'\\\"](?:[\\s\\n]+)?\\)?(?:[\\s\\n]+)?\\)\n\n  # Getting the args.\n(?:,(?:[\\s\\n]+)?(?:[\\s\\n]+)?(?P<args>.*)\n(?:\\s+)?)?(?:[\\s\\n]+)?(?:\\s+)?\\)
\n(?x)\n((((git|hg)\\+)?(git|ssh|https?):(//)?)  # something like git:// ssh:// etc.\n |                                      # or\n (\\w+@[\\w\\.]+)                          # something like user@...\n)\n
\n(\n  \"(?P<key> (\\\\ . | [^\"])* )\"       # Quoted key\n)\n[ ]* => [ ]*    # Pair operator, optional adjoining whitespace\n(\n    (?P<value_null> NULL )          # NULL value\n  | \"(?P<value> (\\\\ . | [^\"])* )\"   # Quoted value\n)\n
\n(\n (?:                     # Start of non-capturing group\n  (?:\\r\\n|\\r|\\n)      |  # Match any single newline, or\n  [^\\r\\n'\"]+          |  # Match any character series without quotes or\n                         # newlines, or\n  \"(?:[^\"\\\\]|\\\\.)*\"   |  # Match double-quoted strings, or\n  '(?:[^'\\\\]|\\\\.)*'      # Match single quoted strings\n )\n)\n
\n(\n Cl? |             # Cl and Br are part of the organic subset\n Br? |\n [NOSPFIbcnosp*] |  # as are these single-letter elements\n \\[[^]]*\\]         # everything else must be in []s\n)\n
\n(\\\\\n(?P<metadata>(\n  (\n    c:(?P<time>\\d{10,15}(\\.\\d*)?) |  # Receiver Unix time in seconds or millisec\n    d:(?P<dest>[^*,\\\\]{1,15}) |  # Destination\n    g:(?P<group>(?P<sentence_num>\\d)-(?P<sentence_tot>\\d)-(?P<group_id>\\d+)) |\n    n:(?P<line_num>\\d+) |  # Line count\n    q:(?P<quality>\\w) |  # Orbcomm specific character code\n    r:(?P<rel_time>\\d+) | # Relative time\n    s:(?P<rcvr>[^$*,!\\\\]{1,15}) |  # Source / station\n    t:(?P<text>[^$*,!\\\\]+) |  # Text string\n    T:(?P<text_date>[^$*,!\\\\]+)  # Orbcomm human readable date\n  )[,]?\n)+([*](?P<tag_checksum>[0-9A-Fa-f]{2}))?)\n\\\\)(?P<payload>.*)\n
\\n(\\s{1,
\n(^\n\t\t\t\\[\n        (?P<section>\t.+) \\]\n        \t\t(\\s+((\\#|;).*)?)?\n$)|(^\n    \t\t\t\\s*\n        (?P<option>\t[^\\#;]+?)\n        \t\t(\\s* (=|:) \\s*)\n        (?P<value>\t.+?)?\n        \t\t(\\s+((\\#|;).*)?)?\n$)|(^\n\t\t       \t(\\s*(\\#|;)+\\s*\n        (?P<cmted>\t(.|\\s)*))\n$)|(^\n        \t\t\\s+\n        (?P<cont>\t[^\\#;]*?)\n        \t\t(\\s+(\\#|;).*)?\n$)
\n(^\n\t\t\t\\s*\n        (?P<option>\t[^\\#;]+?)\n        \t \t(\\s* (=|:) \\s*)\n        (?P<value>\t.+?)?\n        \t\t(\\s+((\\#|;).*)?)?\n$)|(^\n    \t\t\t(\\s*(\\#|;)+\\s*\n        (?P<cmted>\t(.|\\s)*))\n$)|(^\n\t\t\t\\s+\n        (?P<cont>\t[^\\#;]*?)\n    \t\t\t(\\s+(\\#|;).*)?\n$)
\n(rel\\s*=\\s*(?:\"(?P<rel1>[^\"]*)\"|'(?P<rel2>[^']*)'|(?P<rel3>[^>\\s\n]*))\\s+)?\nhref\\s*=\\s*(?:\"(?P<url1>[^\"]*)\"|'(?P<url2>[^']*)'|(?P<url3>[^>\\s\n]*))\n(\\s+rel\\s*=\\s*(?:\"(?P<rel4>[^\"]*)\"|'(?P<rel5>[^']*)'|(?P<rel6>[^>\\s\n]*)))?\n
\\n.*?merge yylloc info into a new yylloc instance[^]*?\\bthis\\.yyMergeLocationInfo\\b[^]*?\\};[^]*?\\n
\\n...\\n[^]*$
\\n@(?P<type>[a-z]+)
\\n[ \\t\\r\\n]*use\n                  [ \\t\\r\\n]+\n                  ([^ \\t\\r\\n;]+)\n                  [ \\t\\r\\n]+\n                  (qw[ \\t\\r\\n]*+.[ \\t\\r\\n]*+|['\"])\n                  ([^:!])\n                  [^;]*\n                  ['\" \\t\\r\\n][:!]\n                 
\n[ \t]*+(?!\n)
\n[ ]*\n  Nr\\. [ ]+ (?P<nr>\\d+) [ ]+\n  Spin [ ]+ (?P<spin>\\d+) [ ]+\n  K-Point [ ]+ (?P<a>\\S+) [ ]+ (?P<b>\\S+) [ ]+ (?P<c>\\S+) [ ]*\n  \\n\n[ ]* (?P<npoints>\\d+) [ ]* \\n\n(?P<values>\n  [\\s\\S]*?(?=\\n.*?[ ] Nr|$)  # match everything until next 'Nr.' or EOL\n)\n
\n[ ]*\n  POINT [ ]+ (?P<pointnr>\\d+) [ ]+ (?P<a>\\S+) [ ]+ (?P<b>\\S+) [ ]+ (?P<c>\\S+)\n
\n[ ]*\n  SET: [ ]* (?P<setnr>\\d+) [ ]*\n  TOTAL [ ] POINTS: [ ]* (?P<totalpoints>\\d+) [ ]*\n  \\n\n(?P<content>\n  [\\s\\S]*?(?=\\n.*?[ ] SET|$)  # match everything until next 'SET' or EOL\n)\n
\\n[\\\\](2)s*
\\n[^\\S\\n]*(
\\n[_a-z0-9]+ (tox_[\\_a-z]+\\()
\\n\\\\
\n\\ ->\\^\\{(?P<top>[^{}].*?)\\}\n
\n\"([^\"\\\\]|\\\\.)*\" |\n'([^'\\\\]|\\\\.)*'\n
\n\\$\\{                                   # opening brace for the lookup\n((?P<type>[._\\-a-zA-Z0-9]*(?=\\s))      # type of lookup, must be followed by a\n                                       # space\n?\\s*                                   # any number of spaces separating the\n                                       # type from the input\n(?P<input>[@\\+\\/,\\.\\?_\\-a-zA-Z0-9\\:\\s=\\[\\]\\*]+) # the input value to the lookup\n)\\}                                    # closing brace of the lookup\n
\\n\\?\\101\\x42\\u0043\\u{44 45}
\\\\N\\{(.*?)(?:\\}|$)
\\\\N\\{(?P<name>[^}]+)\\}
\\\\N\\{([A-Z ]+)\\}
\\\\N\\{[^}]*\\x{a0}[^}]*\\}
\\n\\+CME\\s+ERROR:\\s+(?P<error>[\\w ]+)
\\n\\1+
\n\\A\n(?:\n   (?P<scheme> [a-zA-Z] [^:]* )\n   (?P<colon_after_scheme> : )\n)?\n(?P<pathish> [^?#]* )\n(?:\n  (?P<question_mark> [?] )\n  (?P<query> [^#]* )\n)?\n(?:\n  (?P<hash_sign> [#] )\n  (?P<fragment> .* )\n)?\n\\Z\n
\n\\A\n(?:\n   (?P<username> [^:]* )\n   (\n     (?P<colon_before_password> : )\n     (?P<password> .* )\n   )?\n   (?P<at_sign> @ )\n)?\n(?P<host> \\[[^]]*\\] | [^:]* )\n(?:\n  (?P<colon_before_port> : )\n  (?P<port> .* )\n)?\n\\Z\n
\n\\A\n(?P<slashes> [/\\\\\\r\\n\\t]* )\n(?P<authority> [^/\\\\]* )\n(?P<path> [/\\\\] .* )?\n\\Z\n
\n\\A\n(?P<slashes> [\\r\\n\\t]* (?:/[\\r\\n\\t]*){2} )\n(?P<authority> [^/]* )\n(?P<path> / .* )?\n\\Z\n
\n\\A\n(?P<slashes> [\\r\\n\\t]* (?:[/\\\\][\\r\\n\\t]*){2} )\n(?P<host> [^/\\\\]* )\n(?P<path> [/\\\\] .* )?\n\\Z\n
\\n\\h+
\\n\\h+(?=\\n)
\\n\\h+(\\S+\\h+)? => \".*\"$
\n\n                \\?\n                (q?)                        # $1\n\n                (                           # $2\n                    sub \\s*\n                    (                       # $3\n                        \\s*\n\n                        \\{\n                            (               # $4\n                                (?: (?> 
\n\n        (?: ^ | [^\\\\] )     # Beginning of string or a character besides \"\\\"\n\n        \\{                  # \"{\"\n\n        
\n\n        (?: ^ | [^\\\\] )     # Beginning of string or a character besides \"\\\"\n\n        \\}                  # \"}\"\n\n        
\n\n        \\s *                                # Optional whitespace\n        (?P<option>                         # One or more chars excluding\n            [^:=\\s]                         # : a = characters (and first\n            [^:=] *                         # must not be whitespace)\n        )\n        \\s *                                # Optional whitespace\n        (?P<vi>\n            [:=]                            # Single = or : character\n        )\n        \\s *                                # Optional whitespace\n        (?P<value>\n            . *                             # One or more characters\n        )\n        $\n\n        
\n\n        \\s *                                # Optional whitespace\n        \\[                                  # Opening square brace\n\n        (?P<header>                         # One or more chars excluding\n            ( [^\\#;] | \\\\\\# | \\\\; ) +       # unescaped # and ; characters\n        )\n\n        \\]                                  # Closing square brace\n\n        
\\n\\n(?=[\\p{Alphabetic}])
\\n\\n\\$realInstanceReflection = [^{]++\\{([^}]++)\\}\\n\\n.*
\n\n\t(?<!\n\t    [\\N
\\n\\n++
\\n\\nBUNDLED WITH\\n\\s{2,}(
\\n\\\\part{([^\\{\\}]*)}
\n\\Q\u00e3\u0081\u0094\u00e7\u0099\u00bb\u00e9\u008c\u00b2\u00e3\u0080\u0081\u00e3\u0081\u0082\u00e3\u0082\u008a\u00e3\u0081\u008c\u00e3\u0081\u00a8\u00e3\u0081\u0086\u00e3\u0081\u0094\u00e3\u0081\u0096\u00e3\u0081\u0084\u00e3\u0081\u00be\u00e3\u0081\u0099\u00e3\u0080\u0082\u00e7\u0099\u00bb\u00e9\u008c\u00b2\u00e3\u0082\u0092\u00e6\u0089\u00bf\u00e8\u00aa\u008d\u00e3\u0081\u0099\u00e3\u0082\u008b\u00e5\u00a0\u00b4\u00e5\u0090\u0088\u00e3\u0081\u00af\n\u00e4\u00b8\u008b\u00e3\u0081\u00ae\u00e3\u0083\u00aa\u00e3\u0083\u00b3\u00e3\u0082\u00af\u00e3\u0082\u0092\u00e3\u0082\u00af\u00e3\u0083\u00aa\u00e3\u0083\u0083\u00e3\u0082\u00af\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\n\nThank you for registration. To confirm your registration,\nplease click following link:\n\n\\Ehttp://localhost/(?:[^/]+/)*register\\.yatt\\?!confirm=1[;&]token=(?<token>[0-9a-f]+)\\Q\n\n\u00e5\u00bf\u0083\u00e5\u00bd\u0093\u00e3\u0081\u009f\u00e3\u0082\u008a\u00e3\u0081\u00ae\u00e7\u0084\u00a1\u00e3\u0081\u0084\u00e6\u0096\u00b9\u00e3\u0081\u00af\u00e3\u0080\u0081\u00e3\u0081\u0093\u00e3\u0081\u00ae\u00e3\u0083\u00a1\u00e3\u0083\u00bc\u00e3\u0083\u00ab\u00e3\u0081\u00af\u00e7\u00a0\u00b4\u00e6\u00a3\u0084\u00e3\u0081\u0097\u00e3\u0081\u00a6\u00e3\u0081\u008f\u00e3\u0081\u00a0\u00e3\u0081\u0095\u00e3\u0081\u0084\u00e3\u0080\u0082\n\nIf you have received this mail without having requested it,\nplease dispose this mail.\n\\E
\\n\\r?\\n(BREAKING|FIX|FEATURE):\\s*([^]*?)(?=\\r?\\n\\r?\\n|\\r?\\n?$)
\\n\\r?|\\r\\n?|,|;|\\\\
\\n\\s*\\\\item
\\n\\s*\\n\\s*\n        (?!(?:\n            \\\\chapter |\n            \\\\paragraph |\n            \\\\begin |\n            \\\\end |\n            \\\\part |\n            \\\\salto\n        ))\n        
\\n\\s+\\* @param (.*?)(?<= )\\$([a-zA-Z0-9_\\x7f-\\xff]++)
\\n\\s+\\/\\/\\s*disable\\s*debugging.*?[\\r\\n]+\\s+if\\s+\\(sharedState_yy\\.yydebug[^]+?\\}
\n\t     \\\\([\\da-fA-F]{2}|[()\\\\*])\n\t    
\n\t    (%d(?:
\n\t    \\A \\h+\n\n\t    (?<CHAR>\n\t\t\\H\n\t    )\n\n\t    \\h+\n\n\t    (?<CPNUM>\n\t\t\\p{ahex}{4,6}\n\t    )\n\n\t    \\t\n\n\t    (?<NAME>\n\t\t(?=  \\w )\n\t\t[A-Z0-9\\N{SPACE}\\N{HYPHEN-MINUS}] +\n\t\t(?<= \\w )\n\t    )\n\n\t    \\z\n\t
\n\t    \\b (?:\n\n\t\t     \\N{ae}lfe?\n\n                 |   \\N{oe}il\n                 |   \\N{oe}illade\n                 |   \\N{oe}ufs?\n                 |   \\N{oe}uvres?\n                 |  b\\N{oe}ufs?\n                 |  c\\N{oe}urs?\n                 | ch\\N{oe}nix\n                 |  m\\N{oe}urs\n                 |  v\\N{oe}ux?\n\n\t    ) \\b\n\t  |  (?<!man|ped)\\N{oe}uvr\n\t  | c\\N{oe}ur\n\t
\n\t    ^\n\t  (?:
\n\t# <C++ type>_<module_name>_[opt:_<module label>]_<process name which produced>.(dot)\t\n\t^([^_]+)_([^_]+)_([^_]*)_([^.]+[.])\n\t# <plain_size> <compressed_size>\n\t\\s([^\\s]+)\\s(.+)$\n
\n\t((?:$RE
\n\t\t        \\A (\n\t\t          [^\\n.]+\n\t\t          (?:\n\t\t            (?! \\. \\n | \\n{2} ) # disallow the first seperator here\n\t\t            [\\n.] (?! [ \\t]* @\\pL ) # disallow second seperator\n\t\t            [^\\n.]+\n\t\t          )*\n\t\t          \\.?\n\t\t        )\n\t\t        (?:\n\t\t          \\s* # first seperator (actually newlines but it's all whitespace)\n\t\t          (?! @\\pL ) # disallow the rest, to make sure this one doesn't match,\n\t\t          #if it doesn't exist\n\t\t          (\n\t\t            [^\\n]+\n\t\t            (?: \\n+\n\t\t              (?! [ \\t]* @\\pL ) # disallow second seperator (@param)\n\t\t              [^\\n]+\n\t\t            )*\n\t\t          )\n\t\t        )?\n\t\t        (\\s+ [\\s\\S]*)? # everything that follows\n\t\t        
\n\t\t     ((^|[;,.]|\\s+-\\s) # 1,2\n\t\t      \\s*\n\t\t      (Recorded (\\s+[io]n)? \\s* (:\\s*)? )? # 3, 4, 5\n\t\t      (\\d
\n\t\t  (?(DEFINE)\n\t\t\t (?<number>   -? (?= [1-9]|0(?!\\d) ) \\d+ (\\.\\d+)? ([eE] [+-]? \\d+)? )    \n\t\t\t (?<boolean>   true | false | null )\n\t\t\t (?<string>    \" ([^\"\\\\]* | \\\\ [\"\\\\bfnrt\\/] | \\\\ u [0-9a-f]{4} )* \" )\n\t\t\t (?<array>     \\[  (?:  (?&json)  (?: , (?&json)  )*  )?  \\s* \\] )\n\t\t\t (?<pair>      \\s* (?&string) \\s* : (?&json)  )\n\t\t\t (?<object>    \\{  (?:  (?&pair)  (?: , (?&pair)  )*  )?  \\s* \\} )\n\t\t\t (?<json>   \\s* (?: (?&number) | (?&boolean) | (?&string) | (?&array) | (?&object) ) \\s* )\n\t\t  )\n\t\t  \\A (?&json) \\Z\n\t\t  
\n\t\t  (?:\n\t\t\t^[ ]{0,
\n\t\t# Make captures for user and domain only ($1 and $2), using (?: on any other parenthesis to avoid captures\n\t\t^\n\t\t\t( # Begin first part of email address\n\t\t\t\t(?: # Option 1\n\t\t\t\t\t[^<>()[\\]\\\\.,;:\\s@\\\"]+ # Any character NOT in this set, at least one\n\t\t\t\t\t(?:\n\t\t\t\t\t\t\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+ # Followed by any character NOT in these set, starting with dot, in groups from 0 to many\n\t\t\t\t\t)*\n\t\t\t\t)\n\t\t\t\t|\n\t\t\t\t(?: # Option 2\n\t\t\t\t\t\".*?(?<!\\\\)\" # Anything between double quotes, including escaped double quotes\n\t\t\t\t)\n\t\t\t)\n\t\t\t[ ]*@[ ]*\n\t\t\t( # Beginning of second part of email address (domain name or ip address)\n\t\t\t\t(?:\n\t\t\t\t\t\\[ # If IP address, accepted only between brackets\n\t\t\t\t\t\t(?: # First group cannot begin in zero. From 1 to 255\n\t\t\t\t\t\t\t[1-9]\t\t\t# If it's only one char, from 1 to 9\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[1-9][0-9]\t\t# If it's 2 chars, from 10 to 99\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[1][0-9][0-9]\t# If it's 3 chars, from 100 to 199\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[2][0-4][0-9]\t# If it's 3 chars, from 200 to 249\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[2][5][0-5]\t\t# If it's 3 chars, from 250 to 255\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\\.\t# Separating dot\n\t\t\t\t\t\t(?: # Second and third groups can start in zero. From 0 to 255\n\t\t\t\t\t\t\t(?:\n\t\t\t\t\t\t\t\t[0-9]\t\t\t# If it's only one char, from 0 to 9\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t\t[1-9][0-9]\t\t# If it's 2 chars, from 10 to 99\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t\t[1][0-9][0-9]\t# If it's 3 chars, from 100 to 199\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t\t[2][0-4][0-9]\t# If it's 3 chars, from 200 to 249\n\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t\t[2][5][0-5]\t\t# If it's 3 chars, from 250 to 255\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\\.\t# Separating dot\n\t\t\t\t\t\t){2}\t# This must be present 2 times\n\t\t\t\t\t\t(?: # Fourth group cannot begin in zero and cannot end in 255. From 1 to 254\n\t\t\t\t\t\t\t[1-9]\t\t\t# If it's only one char, from 1 to 9\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[1-9][0-9]\t\t# If it's 2 chars, from 10 to 99\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[1][0-9][0-9]\t# If it's 3 chars, from 100 to 199\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[2][0-4][0-9]\t# If it's 3 chars, from 200 to 249\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[2][5][0-4]\t\t# If it's 3 chars, from 250 to 254\n\t\t\t\t\t\t)\n\t\t\t\t\t\t# No dot here\n\t\t\t\t\t\\]\n\t\t\t\t)\n\t\t\t\t|\n\t\t\t\t(?: # If domain, accept only groups of alphanumeric chars, can contain dashes only between chars\n\t\t\t\t\t(?:\t# First part also must have a dot for one to n parts\n\t\t\t\t\t\t(?:\n\t\t\t\t\t\t\t[a-zA-Z0-9]{1,2} # If it's one or two chars\n\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t[a-zA-Z0-9][a-zA-Z0-9\\-]+[a-zA-Z0-9] # If it's 3 or more chars\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\\. # Trailing dot\n\t\t\t\t\t)+\t# One or more times the same\n\t\t\t\t\t[a-zA-Z]{2,} # It must end with only letters, from 2 to n\n\t\t\t\t)\n\t\t\t)\n\t\t$\n\t
\n\t\t(?:\\n\\n|\\A)\n\t\t(\t\t\t\t\t\t\t\t\t# $1 = the code block\n\t\t  (?:\n\t\t\t(?:[ ]{
\n\t\t(\\$APPLICATION->SetTitle\\()\n\t\t(\n\t\t\t\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"                           # match double quoted string\n\t\t\t|\n\t\t\t'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'                       # match single quoted string\n\t\t)\n\t\t(\\);)\n\t\t
\n\t\t(\\n)?\t\t\t\t\t\t\t# leading line = $1\n\t\t(^[ ]*)\t\t\t\t\t\t\t# leading whitespace = $2\n\t\t(
\n\t\t(\n\t\t\t^|\t\t\t\t\t\t# start of line OR\n\t\t\t[(-+=*\\/%^~\\s]\t\t\t# arithmetic symbol OR space\n\t\t)\n\t\t(?!exists\\()\t\t\t\t# not followed by \"exists(\"\n\t\t([A-Za-z]\\w*)\t\t\t\t# but followed by identifier\n\t\t
\n\t\t\\((?:\\?(?:[=!:]|&lt;[=!]|&gt;))?\n\t|\t\\[\\^?\n\t|\t\\\\(?:\\&\\w+;|.)\n\t|\t[\\*\\+\\?\\)\\]\\|]\n\t
\n\t\t\t(  \\\\  ([\\\\nrt\"]|U[A-Fa-f0-9]
\n\t\t\t(?(DEFINE)\n\t\t\t\t(?P<word> [\\w_]*[a-z][\\w_]* )\n\t\t\t)\n\t\t\t(?P<del> [.:])?(?P<key> (?&word))(\\((?P<throughColumn> (?&word))\\))?\n\t\t
\n\t\t\t(?<block>```php(?<code>[^`]++)```)\n\t\t\t\\s*\n\t\t\t(?<open>```\\w*|<pre>(?:<code>)?)\n\t\t\t(?<output>[^`]*)\n\t\t\t(?<close>```|</code></pre>)(?=\\n|$)\n\t\t
\n\t\t\t(\t\t# int is integer\n\t\t\t\\${(\\d+)(?: \\:((?:[^\\\\]|\\\\.)*?))?}     # ${int:default value} or ${int}\n\t\t\t|  \\$(\\d+)              # $int\n\t\t)
\n\t\t\t\\A/\n\t\t\t(?: 1(\\.1)?/
\n\t\t\t\t(.*?)\n\t\t\t\t(?| (?> \\\\ ( [\\[\\]\\|] ) \t(?{ \\&_parse_args_escape }) )\n\t\t\t\t  | (?> ( \\[ ) \t\t\t\t(?{ \\&_parse_args_open }) )\n\t\t\t\t  | (?> ( \\| ) \t\t\t\t(?{ \\&_parse_args_separator }) )\n\t\t\t\t  | (?> ( \\] ) \t\t\t\t(?{ \\&_parse_args_close }) )\n\t\t\t\t) \n\t\t\t\t
\n\t\t\t\t([a-z0-9_\\.]+) #property\n\t\t\t\t(?|\n\t\t\t\t\t(?:\\s+([a-z0-9]+[\\s_]?[a-z0-9]*)  #keyword\n\t\t\t\t\t(?:\\(|\\s+))|(?:\\s*([!=\\<\\>]+)\\s*) #condition\n\t\t\t\t)\n\t\t\t\t(.+) #value\n\t\t\t
\n\t\t\t\t\\[\\[\n\t\t\t\t\\s*+ # ignore leading whitespace, the *+ quantifier disallows backtracking\n\t\t\t\t:? # ignore optional leading colon\n\t\t\t\t([^\\]|]+) # 1. link target; page names cannot include ] or |\n\t\t\t\t(?:\\|\n\t\t\t\t\t# 2. link text\n\t\t\t\t\t# Stop matching at ]] without relying on backtracking.\n\t\t\t\t\t((?:]?[^\\]])*+)\n\t\t\t\t)?\n\t\t\t\t\\]\\]\n\t\t\t\t([^[]*) # 3. link trail (the text up until the next link)\n\t\t\t
\n\t\t\t\t\t(\t\t\t\t\t\t#$1\n\t\t\t\t\t\t<\t\t\t\t\t#tag beginning\n\t\t\t\t\t\t\t$class\n\t\t\t\t\t\t\t::\n\t\t\t\t\t\t\t(\t\t\t\t#$2 v\n\t\t\t\t\t\t\t\t
\n\t\t\t\t\t\t\t(?:\n\t\t\t\t\t\t\t\t[\\\\\\$]\\$\t\t\t\t\t# escaped dollar\n\t\t\t\t\t\t\t     \\{
\n\t\t\t\t\t\t\t+ B_rad * sin(theta)*cos_theta_0;\n\t\t\t\t\t}\n\t\t\t\t\tapc_gp_fill_poly (widget_handle, N_points, points_to_plot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tonMouseMove => sub {\n\t\t(my $self, undef, $x, $y) = @_;\n\t\t$self->notify('Paint');\n\t},\n);\n\nmy @points;\nmy $pi = 2*atan2(1, 0);\nmy $N_points = 200;\n\nPrima::MainWindow-> new( text => 'Pure Perl',\n\tonPaint => sub {\n\t\tmy ($self, $canvas) = @_;\n\t\treturn $self->repaint if $self->get_paint_state != 1;\n\t\t$self->clear;\n\t\t\n\t\t# Some pre-calculations\n\t\tmy $rotation = atan2($y - 250, $x - 250);\n\t\tmy $sin_theta_0 = sin($rotation);\n\t\tmy $cos_theta_0 = cos($rotation);\n\t\tmy $theta_inc = $pi 
\n\t\t\t\t\t^(\n\t\t\t\t\t\tController\n\t\t\t\t\t|\n\t\t\t\t\t\t(?P<subpackageKey>.+)\\\\Controller\n\t\t\t\t\t)\n\t\t\t\t\t\\\\(?P<controllerName>[a-z\\\\]+)Controller\n\t\t\t\t\t$
\n\t\t\t\t\tname=\"?\\Q$param\\E\"?;\n\t\t\t\t\t\\s+\n\t\t\t\t\tfilename=\"?([^\\\"]*)\"?\n\t\t\t\t
\n\t\t\t\t^ [\\t ]* (?:\n\t\t\t\t\t(?:final\\s+)? (?:abstract\\s+)? (?:class|interface|trait) \\s+\n\t\t\t\t\t(?P<class> [a-zA-Z0-9_]+)\n\t\t\t\t|\n\t\t\t\t\tclass_alias \\s* \\( \\s*\n\t\t\t\t\t\t(['\"]) (?P<original> [^'\"]+) \\g{-2} \\s* , \\s*\n\t\t\t\t\t\t(['\"]) (?P<alias> [^'\"]+ ) \\g{-2} \\s*\n\t\t\t\t\t\\) \\s* ;\n\t\t\t\t|\n\t\t\t\t\tclass_alias \\s* \\( \\s*\n\t\t\t\t\t\t(?P<originalStatic> [a-zA-Z0-9_]+)::class \\s* , \\s*\n\t\t\t\t\t\t(['\"]) (?P<aliasString> [^'\"]+ ) \\g{-2} \\s*\n\t\t\t\t\t\\) \\s* ;\n\t\t\t\t)\n\t\t\t
\n\t\t\t\tif ((double)candidate 
\n\t\t\t^(.*?)\n\t\t\t(?<!\\\\)\n\t\t\t$prefix\n\t\t\t(?:(\\w*)\n\t\t\t([^\\|><]*))?\n\t\t\t((?:\\||>>?|<<?).+)?\n\t\t\t$\n\t
\n\t\t\t^(\n\t\t\t\tController\n\t\t\t|\n\t\t\t\t(?P<subpackageKey>.+)\\\\Controller\n\t\t\t)\n\t\t\t\\\\(?P<controllerName>[a-z\\\\]+)Controller\n\t\t\t$
\n\t\t^[ ]*\\[(.+)\\]:\t\t# id = $1\n\t\t  [ ]*\n\t\t  \\n?\t\t\t\t# maybe *one* newline\n\t\t  [ ]*\n\t\t<?(\\S+?)>?\t\t\t\t# url = $2\n\t\t  [ ]*\n\t\t  \\n?\t\t\t\t# maybe one newline\n\t\t  [ ]*\n\t\t(?:\n\t\t\t# Titles are delimited by \"quotes\" or (parens).\n\t\t\t[\"(]\n\t\t\t(.+?)\t\t\t# title = $3\n\t\t\t[\")]\t\t\t# Matching ) or \"\n\t\t\t[ ]*\n\t\t)?\t# title is optional\n\t\t(?:\\n+|\\Z)\n\t  
\n\t\t^\n\t\t( (?: [^\\e]* ${color_re} ) *+ )\n\t\t( .*? )\n\t\t( ${alphanum_re}+ )\n\t\t\\z\n\t
\n\t\t^\t\t\t\t\t\t# Start of line\n\t\t<(
\n\t\t^insert\\s+\n\t\tinto\\s+\n\t\t((?:\\w+|\\w+\\.\\w+))\\s+?\\(\t\t\t# )\n\t\t
\n\t\tSafefree(prime_list);\n\t\treturn candidate;\n\t}\n}\n\nsub c_blocks_sub_Nth_prime {\n\tmy $N = shift;\n\tmy $to_return;\n\tcblock { sv_setiv($to_return, get_Nth_prime(SvIV($N))); }\n\treturn $to_return;\n}\n\nuse Time::HiRes qw(gettimeofday tv_interval);\n\nmy $N_iterations = 1000;\nfor my $log_N (1, 1.5, 2, 2.5, 3, 3.5, 4) {\n\tmy $N = int(10**$log_N);\n\tprint \"--- N = $N ---\\n\";\n\t\n\t# C::Blocks test\n\tmy $C_Blocks_accum = 0;\n\tmy $C_Blocks_result;\n\tfor (1 .. $N_iterations) {\n\t\tmy $t0 = [gettimeofday];\n\t\tcblock { sv_setiv($C_Blocks_result, get_Nth_prime(SvIV($N))); }\n\t\tmy $ellapsed = tv_interval ($t0);\n\t\t$C_Blocks_accum += $ellapsed;\n\t}\n\tmy $C_Blocks_time = $C_Blocks_accum 
\n\te(text|b?ook)\n\t\\s*\n\t(\\#\\s*(?P<etextid_front>\\d+)\n\t|\n\t(?P<etextid_back>\\d+)\\s*\\#)\n\t
\n^(?:\\s+)?                          # Allow whitespace at beginning\n(?P<src>\\S+)                       # Find the path\n(?:\\s+)?                           # Whitespace\n(?:(?:lang:)(?P<lang>\\S+))?        # Optional language\n(?:\\s+)?                           # Whitespace\n(?:(?:lines:)(?P<lines>\\d+-\\d+))?  # Optional lines\n(?:\\s+)?                           # Whitespace\n(?P<hidefilename>:hidefilename:)?  # Hidefilename flag\n(?:\\s+)?                           # Whitespace\n(?:(?:codec:)(?P<codec>\\S+))?        # Optional language\n(?:\\s+)?                           # Whitespace\n(?P<title>.+)?$                    # Optional title\n
\n^(?P<chars>[0-9]{4})\n(?P<stationid>......)\n(?P<wban>.....)\n(?P<yyyymmdd>[0-9]{8})\n(?P<hhmi>[0-9]{4})\n(?P<srcflag>.)\n(?P<lat>[\\+\\-][0-9]{5})\n(?P<lon>[\\+\\-][0-9]{6})\n(?P<report_type>.....)\n(?P<elevation>[\\+\\-][0-9]{4})\n(?P<call_id>.....)\n(?P<qc_process>....)\n(?P<drct>[0-9]{3})\n(?P<drct_qc>.)\n(?P<wind_code>.)\n(?P<wind_speed_mps>[0-9]{4})\n(?P<wind_speed_mps_qc>.)\n(?P<ceiling_m>[0-9]{5})\n(?P<ceiling_m_qc>.)\n(?P<ceiling_m_how>.)\n(?P<ceiling_m_cavok>.)\n(?P<vsby_m>[0-9]{6})\n(?P<vsby_m_qc>.)\n(?P<vsby_m_variable>.)\n(?P<vsby_m_variable_qc>.)\n(?P<airtemp_c>[\\+\\-][0-9]{4})\n(?P<airtemp_c_qc>.)\n(?P<dewpointtemp_c>[\\+\\-][0-9]{4})\n(?P<dewpointtemp_c_qc>.)\n(?P<mslp_hpa>[0-9]{5})\n(?P<mslp_hpa_qc>.)\n
\n^[ \\t]* i    [ ] = [ \\t]+ (?P<iteration> \\d+),\n [ \\t]* time [ ] = [ \\t]+ (?P<time> [\\+\\-]?  ( \\d*[\\.]\\d+  | \\d+[\\.]?\\d* )  ([Ee][\\+\\-]?\\d+)? ),\n [ \\t]* E    [ ] = [ \\t]+ (?P<energy> [\\+\\-]?  ( \\d*[\\.]\\d+  | \\d+[\\.]?\\d* )  ([Ee][\\+\\-]?\\d+)? )\n
\n^\n  (?P<protocol>\\w+)       # protocol\n  ://\n  (                       # optional @ section\n    (?P<user>\\w+)\n    (:(?P<password>\\w+))? # optional password\n  @)?\n  (?P<host>[^:]+)         # host or path\n  (:(?P<port>\\d+))?       # optional port number\n$\n
\n^\nv?\n(?:(?P<epoch>\\d+)!)?\n(?P<major>\\d+)\n(?:\\.(?P<minor>\\d+))?\n(?:\\.(?P<patch>\\d+))?\n(?P<prereleasetype>a|b|rc)?\n(?P<prereleaseversion>\\d+)?\n(?:\\.post(?P<post>\\d+))?\n(?:\\.dev(?P<dev>\\d+))?\n(\\+(?P<local>[\\.0-9A-Za-z-]*))?\n$\n
\n^\nv?\n(?:(?P<major>\\d+)\\.?)\n(?:(?P<minor>\\d+)?\\.?)\n(?:(?P<patch>\\d+)?)\n(?P<prerelease>-(?P<commit_count>\\d+)-(?P<commit>[a-z0-9]*)(-(?P<dirty>\\w*))?)?\n(\\+(?P<build>[\\.0-9A-Za-z-]*))?\n$\n
\n_\\ *?\\{\n(?P<a>[^{}]*?) \\\\\\\\\n(?P<b>[^{}]*?) \\}\n
\\n{2}+
\\N{ae}\\N{acute}|[\\N{eth}\\N{thorn}]
\\N{CARRIAGE RETURN}
\\N{CARRIAGE RETURN}\\N{LINE FEED}
\\N{GREEK SMALL LETTER MU}
\\N{LEFTWARDS ARROW}
\\N{LINE FEED}
\\N{LINE FEED}\\N{CARRIAGE RETURN}
\\N{MULTIPLICATION SIGN}
\\N{RIGHTWARDS ARROW}
\\N{U+00A0}
\\N{U+00A0}$
\\N{WHITE CIRCLE}|\\N{BULLSEYE}
\\\\\\n|\\\\(\\\\|<%)
\\\\n|\\\\N
\n<(?P<con>\n[^\\|<>]+\n\\|\n[^\\|<>]+\n(?:\n  \\|[^\\|<>]+ #optional middle\n|)\n)>\n
\n<[^\\>]*\nfunction \\s+\n(?P<name>[^\\s\\>]+)\n[^\\>]* \\>
\nAREA\\s(?P<areanum>[0-9]+)\\.\\.\\.FROM\\s(?P<locs>[0-9A-Z \\-]+)\\n\n
\\\\NestedGreaterGreater 
\\\\NestedLessLess 
\\\\newcommand\\{ \\\\([a-z]+) \\} \\[ (\\d+) \\](\\{.*)
\\\\NG 
\\\\node_modules\\\\
\\\\not\\\\($NEG_SYMB_RE)
\\\\not\\\\($re)
\\\\not\\\\geq 
\\\\not\\\\in 
\\\\not\\\\kern\\-0.3em\\\\times 
\\\\not\\\\leq 
\\\\not\\\\prec 
\\\\not\\\\preceq 
\\\\NotEqualTilde 
\\\\NotGreaterGreater 
\\\\NotHumpDownHump 
\\\\NotHumpEqual 
\\\\NotLeftTriangleBar 
\\\\NotLessLess 
\\\\NotNestedGreaterGreater 
\\\\NotNestedLessLess 
\\\\NotPrecedesTilde 
\\\\NotRightTriangleBar 
\\\\NotSquareSubset 
\\\\NotSquareSuperset 
\\\\NotSucceedsTilde 
\nOUTLOOK\\sVALID\\s(?P<begin>[0-9]{6})-(?P<end>[0-9]{6})\\n\n
\\nreturn (\\$this->valueHolder[0-9a-f]++)(->[^;]++);$
\nWI\\s+(?P<distance>[0-9]*)NM\\s+OF\\s+\n
\\\\O 
\\\\o 
\\\\o'(.)(.)'
\\\\o[0-7]+|\\\\x[0-9A-Fa-f]+|\\\\[0-9]+
\\\\o\\/
\\\\odot 
\\\\OE 
\\\\oe 
\\\\oint 
\\\\omega 
\\\\Omega 
\\\\ominus 
\\opacity:.100
\\\\openbracketleft 
\\\\openbracketright 
\\\\operatorname{(.*)}
\\\\oplus 
\\ORDER BY\\s(?!.*\\ORDER BY\\s)
\\ORDER\\b
\\origin([\\\\]+|\\/)node_modules
\\\\original 
\\\\oslash 
\\\\otimes 
\\p
\\\\p
\\\\p\\{(..?)\\}
\\\\p\\{Is
\\p{
\\p{$code}
\\\\p{\\w+}
\\p{^Alnum}
\\p{abc}
\\p{AHex}
\\p{AHex}+
\\p{Alnum}
\\p{Alnum}[-_\\.\\p{Alnum}]{0,48}\\p{Alnum}
\\p{Alnum}+(?:'\\p{Alnum}+)*
\\p{Alnum}+(\\+\\p{Alnum}+)?:/$
\\p{Alnum}+(\\+\\p{Alnum}+)?://.*
\\p{Alpha}
\\p{Alpha}+|\\p{Digit}+
\\p{Alphabetic}
\\P{Alphabetic}+
\\p{Alphabetic}+
\\p{Any}
\\P{Any}+
\\p{Any}+
\\p{Arabic}
\\p{ASCII
\\p{ASCII_Hex_Digit}
\\P{ASCII}
\\P{ascii}
\\p{AsciI}
\\p{ASCII}
\\p{ASCII}*
\\P{ASCII}|^(?:(?i)$IDNA_PREFIX)
\\P{ascii}+
\\P{ASCII}+
\\p{ASCII}+
\\P{Assigned}
\\P{Assigned}+
\\p{Assigned}+
\\p{Bc:EN}.*\\p{Bc:AN}|\\p{Bc:AN}.*\\p{Bc:EN}
\\p{bc=AL}+
\\p{bc=Arabic_Letter}+
\\p{bc=Left_To_Right}+
\\p{BC=NSM}
\\p{bc=R}
\\p{bc=R}|\\p{bc=AL}
\\p{Bidi_C}
\\p{Bidi_C}+
\\p{Bidi_Class=L}+
\\p{Bidi_Control}
\\p{Bidi_Control}+
\\p{Bidi_M}
\\p{Bidi_Mirrored}
\\p{blank}
\\p{Blank}
\\p{Blank}([Nn])([Oo])([Tt]) ([Ll])([Ii])([Kk])([Ee])\\p{Blank}
\\p{Blank}+
\\p{blk=BasicLatin}
\\p{blk=CJK_Unified_Ideographs}+
\\p{blk=CJK}+
\\p{blk=Greek_And_Coptic}
\\p{blk=Greek}
\\p{blk=Hiragana}
\\p{blk=Latin_1_Sup}+
\\p{blk=Latin_1_Supplement}+
\\p{blk=Latin_1}+
\\p{Block=ASCII}+
\\p{block=basic_latin}
\\p{Block=Basic_Latin}+
\\p{block=BasicLatin}
\\p{block=Domino Tiles}+
\\p{block=Emoticons}+
\\p{block=Enclosed Alphanumeric Supplement}+
\\p{block=Mahjong Tiles}+
\\p{block=Miscellaneous Symbols And Pictographs}+
\\p{block=Miscellaneous Symbols}+
\\p{block=Playing Cards}+
\\p{block=Transport and Map Symbols}+
\\p{Bopomofo}
\\p{Case_Ignorable}
\\p{CI}
\\p{Cntrl}
\\p{Control}
\\p{CWCF}
\\p{CWCM}
\\p{CWL}
\\p{CWT}
\\p{CWU}
\\p{Cyrillic}
\\p{Dash}
\\p{Dash}\\K\\h*\\n
\\p{Default_Ignorable_Code_Point}
\\p{Dep}
\\p{Deprecated}
\\p{DI}
\\p{Dia}
\\p{Diacritic}
\\p{Digit}
\\p{Digit}+
\\p{Digit}cd
\\p{EastAsianWidth:W}
\\p{Emoji_Component}
\\p{Emoji_Modifier_Base}
\\p{Emoji_Modifier}
\\p{Emoji_Presentation}
\\p{Emoji}
\\p{Emoji}(?:\\uFE0F|\\uFE0E)?|\\p{Emoji_Presentation}|\\p{Emoji_Modifier_Base}\\p{Emoji_Modifier}?
\\p{Emoji}\\uFE0E?|\\P{Emoji_Presentation}
\\p{Emoji}\\uFE0F|\\p{Emoji_Presentation}|\\p{Emoji_Modifier_Base}\\p{Emoji_Modifier}?
\\p{Ethiopic}
\\p{Ext}
\\p{Extender}
\\\\p{foo}
\\p{FORMAT}
\\p{GC=Ll}
\\p{gc=Ll}
\\p{gc=Lu}
\\p{General_Category=L}
\\p{general_category=Lu}
\\p{General_Category=Math_Symbol}
\\p{Gr_Base}
\\p{Gr_Ext}
\\p{Graph}
\\p{Grapheme_Base}
\\p{Grapheme_Extend}
\\p{Greek}
\\p{Han}
\\p{Han}|\\p{Hangul}|\\p{Hiragana}|\\p{Katakana}
\\p{Han}|\\p{Hangul}|\\p{Hiragana}|\\p{Katakana}|\\w+
\\p{Han}|\\p{Katakana}|\\p{Hiragana}|\\p{Hangul}
\\p{Han}+
\\p{Hangul}
\\p{Hangul}+
\\p{Hebrew}
\\p{Hex_Digit}
\\p{Hex}
\\p{hiraganA}
\\p{Hiragana}
\\p{Hiragana}|\\p{Katakana}
\\p{Hiragana}|\\p{Katakana}|\\p{Han}
\\p{Hiragana}+
\\p{Changes_When_Casefolded}
\\p{Changes_When_Casemapped}
\\p{Changes_When_Lowercased}
\\p{Changes_When_Titlecased}
\\p{Changes_When_Uppercased}
\\p{ID_Continue}
\\p{ID_Start}
\\p{IDC}
\\p{Ideo}
\\p{Ideo}+
\\p{Ideographic}
\\p{IDS_Binary_Operator}
\\p{IDS_Trinary_Operator}
\\p{IDS}
\\p{IDSB}
\\p{IDST}
\\p{InArabic}
\\P{InArabic}+
\\P{InBasic_Latin}
\\p{InBasicLatin}
\\p{InCombiningDiacriticalMarks}
\\p{InCombiningDiacriticalMarks}+
\\p{InCyrillic}
\\p{InDoCoMoPictograms}
\\p{InEmojiAny}
\\p{InEmojiDoCoMo}
\\p{InEmojiGoogle}
\\p{InEmojiKDDIapp}
\\p{InEmojiKDDIweb}
\\p{InEmojiMixed}
\\p{InEmojiSoftBank}
\\p{InEmojiUnicode}
\\p{InEthiopic}
\\p{InFullwidth}
\\p{InGreek}
\\p{InGreekAndCoptic}
\\p{InGujarati}
\\p{InHankakuKatakana}
\\p{InHebrew}
\\P{InHiragana}
\\p{InHiragana}
\\p{InHiragana}|\\p{InCJKUnifiedIdeographs}
\\p{InCherokee}
\\p{InKatakana}
\\P{InKatakana}
\\p{InKDDIAutoPictograms}
\\P{InMathematicalAlphanumericSymbols}
\\p{InSoftBankPictograms}
\\p{IsAlpha}
\\P{IsAlpha}+
\\p{IsAlpha}e
\\p{IsAlphabetic}
\\P{IsAlphabetic}
\\p{IsAlphabetic}+
\\p{IsAssigned}
\\p{IsC}
\\p{IsC}+
\\p{IsControl}
\\p{IsIdeographic}
\\p{IsIDNADot}
\\p{IsIgnored}
\\p{IsJoinControl}
\\p{IsLatin}
\\p{IsLetter}
\\p{IsLower}
\\p{IsLowerCase}
\\p{IsLu}
\\p{IsM}
\\p{IsNoncharacterCodePoint}
\\p{IsP}
\\p{IsSpace}+
\\p{IsTitle}|\\p{IsUpper}
\\p{IsTitleCase}
\\p{IsUnknown}
\\p{IsUpper}
\\p{IsUpperCase}
\\p{IsWhiteSpace}
\\p{IsWord}-\\p{IsWord}
\\p{IsZ}
\\p{IsZero}
\\p{IsZZ}
\\p{javaAlphabetic}
\\p{javaIdeographic}
\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*
\\p{javaLowerCase}
\\p{javaLowerCase}+
\\p{javaSpaceChar}
\\p{javaUpperCase}
\\p{javaWhitespace}+
\\p{Join_C}
\\p{Join_Control}
\\p{Js}\\p{Jp}*
\\p{Katakana}+
\\p{L&}
\\p{L_}
\\p{L}\\K[\u2018\u2019](?=\\p{L})
\\p{Latin}
\\p{lb=AL}
\\p{LC}
\\P{Letter}
\\p{Letter}${chartypes{notacute}}*\\x{0301}${chartypes{notacute}}*\u00c2\u00b4$
\\p{Letter}\\p{NonspacingMark}*$
\\p{Letter}+
\\p{Line_Break=Glue}
\\p{Lingua::AR::Regexp::IsTashkeel}
\\p{Lingua::AR::Tashkeel::InOnesToKeepIn}
\\p{Ll}\\K_(\\pL)
\\p{LOE}
\\p{Logical_Order_Exception}
\\p{Lower}
\\p{Lower}+
\\p{Lowercase_Letter}
\\p{Lowercase}
\\p{Math_Symbol}
\\p{Math}
\\p{NChar}
\\p{Noncharacter_Code_Point}
\\p{Nonspacing_Mark}
\\p{NonspacingMark}
\\p{Pat_Syn}
\\p{Pattern_Syntax}
\\p{Pattern_White_Space}
\\p{PerlSpace}+\\z
\\P{Print}
\\p{Print}
\\p{Print}*
\\p{Private_Use}
\\p{Punct}
\\p{Punct}|[\\x00-\\x08\\x0A-\\x1F\\x7F]
\\p{Punct}|\\d
\\p{Punct}|\\p{Cntrl}
\\p{Punct}|\\p{IsPunctuation}
\\p{Punct}+
\\p{QMark}
\\p{Quotation_Mark}
\\p{Radical}
\\p{Regional_Indicator}
\\p{sc=Greek}
\\p{sc=Grek}
\\p{sc=Hira}
\\p{sc=Hiragana}
\\p{sc=Latin}
\\p{sc=Phnx}
\\p{sc=Phoenician}
\\p{Script_Extensions=Anatolian_Hieroglyphs}
\\p{Script_Extensions=Bopo}+
\\p{Script_Extensions=Cypriot}+
\\p{Script_Extensions=Hang}+
\\p{Script_Extensions=Hani}+
\\p{Script_Extensions=Hira}+
\\p{Script_Extensions=Kana}+
\\p{Script_Extensions=Makasar}
\\p{Script_Extensions=Yiii}+
\\p{script=Common}
\\p{Script=Common}+
\\p{Script=Cypriot}+
\\p{Script=Han}+
\\p{Script=Hani}+
\\P{Script=Hiragana}
\\p{Script=Hiragana}
\\p{script=Latin}
\\p{Script=Latin}+
\\p{Script=Latn}+
\\p{scx=Bopomofo}+
\\p{scx=Cprt}+
\\p{scx=Han}+
\\p{scx=Hangul}+
\\p{scx=Hiragana}+
\\p{scx=Katakana}+
\\p{scx=Yi}+
\\p{SD}
\\p{Sentence_Terminal}
\\p{Soft_Dotted}
\\p{Space}
\\p{Space}*
\\p{Space}+
\\P{Space}+
\\p{Space}+\\z
\\p{STerm}
\\p{Term}
\\p{Terminal_Punctuation}
\\p{TerminalPunctuation}
\\p{UIdeo}
\\p{Unified_Ideograph}
\\p{Unknown}
\\P{Upper}
\\p{Upper}
\\p{Upper}.*
\\p{Upper}.+
\\p{Upper}\\K
\\p{Upper}\\p{Lower}+\\s+(?:\\p{Lower}+\\s+)?'[\\w\\s]+'
\\p{Upper}+
\\p{Uppercase_Letter}
\\p{Uppercase}
\\p{Uppercase}+
\\p{Variation_Selector}
\\p{VS}
\\p{White Space}
\\p{White_Space}
\\p{White_Space}+
\\p{Word}
\\p{Word}{3,}
\\P{Word}+
\\p{Word}+
\\p{Word}+( \\p{Word}+)*(?= \u00b7)
\\p{Word}+( \\S)?( \\p{Word}+( \\S)?)*(?= \u00b7)
\\p{WSpace}
\\p{XDigit}
\\p{XDigit}*
\\p{XDigit}{2}
\\p{XID_Continue}
\\p{XID_Start}
\\p{XIDC}
\\p{XIDS}
\\P{XPosixPrint}
\\p{XPosixPunct}
\\\\packages.*\\\\meteor\\.bat
\\\\pandoc$
\\\\par
\\\\par\\b
\\\\paragraph\\{(.*?)\\}
\\\\parallel 
\\\\param (.*?) 
\\\\pard*
\\\\partial 
\\\\path\\|(.*?)\\|
\\\\patterns\\{
\\\\patterns\\{([^\\}]*)\\}
\\\\patterns{.*
\\\\pause
\\pC
\\\\period
\\\\perl$
\\\\perp 
\\\\perspcorrespond 
\\\\phi 
\\\\Phi 
\\\\Pi 
\\\\pi 
\\\\pipe\\\\winpty-control
\\\\pisces 
\\\\Pisymbol\\{ppi020\\}\\{105\\}
\\\\Pisymbol\\{ppi020\\}\\{117\\}
\\\\Pisymbol\\{ppi022\\}\\{87\\}
\\\\pitchfork 
\\pL
\\PL
\\pL*[0-9][\\pL0-9]*
\\pL\\pL\\pP*[.!?]\\s+\\S
\\pL+
\\PL+
\\\\pluto 
\\\\pm 
\\pM
\\pM*
\\PM\\pM*|.
\\pM+
\\pN
\\pP
\\PP$
\\pP|\\pS|\\s*|\\t|\\r|\\n
\\pP+
\\\\prec 
\\\\precapprox 
\\\\preccurlyeq 
\\\\precedesnotsimilar 
\\\\preceq 
\\\\precnapprox 
\\\\precneqq 
\\\\Problem name: (.+)
\\\\probref{(.*?)}
\\\\prod 
\\\\propref{(.*?)}
\\\\propto 
\\\\proref{(.*?)}
\\\\protect
\\pS
\\pS+
\\\\psi 
\\\\Psi 
\\px
\\\\PYGZsq{}
\\\\python\\d\\d(m|d|u)?.dll$
\\pZ
\\pZ|\\s
\\Q
\\\\q
\\\\Q
\\Q $stopword \\E
\\Q \\E
\\Q = \"abc\"\\E$
\\Q = map[string]string = {[\"abc\"] = \"def\", [\"ghi\"] = \"jkl\"}\\E$
\\Q = map[string]string = {[\"ghi\"] = \"jkl\", [\"abc\"] = \"def\"}\\E$
\\Q at $c[1] line $c[2]\\E\\.\\n\\z
\\Q!\\@\\$%^&****unlikely_clade_separator***!\\@\\$%^&****\\E
\\Q$$block[-1]\\E$
\\Q$$self{BOLD}
\\Q$$self{config}{anon_placeholder}\\E
\\Q$$self{NORM}
\\Q$$self{UNDL}
\\Q$(\\E(${MACRO_RE})\\Q)\\E
\\Q$(\\E(INSTALL(?!DIRS)${MACRO_RE})\\Q)\\E
\\Q$(BASEEXT)\\E
\\Q$(DFSEP)\\E
\\Q$(PERL_INC)\\E
\\Q$/\\E
\\Q$/\\E$
\\Q$;\\E....\\Q$;\\E
\\Q$;\\EHPL_PH(\\d+)\\Q$;\\E
\\Q$\\E
\\Q$_
\\Q$_[0]{separator}
\\Q$_[0]->{name_sep}\\E
\\Q$_[1]\\E
\\Q$_[1]\\E$
\\Q$_\\E
\\Q$_\\E$
\\Q$_\\E\\s*
\\Q${comment}\\E
\\Q${currency_name}\\E
\\Q${del}\\E
\\Q${delim}\\E
\\Q${delim}\\E([imsx]*)$
\\Q${flags}\\E$
\\Q${inc}\\E\\Z
\\Q${key}\\E
\\Q${name}-${version}\\E\\/lib
\\Q${old}\\E
\\Q${ppport}\\E
\\Q${quos}\\E
\\Q${sep}\\E$
\\Q${start}\\E(\\S)
\\Q${suffix}\\E$
\\Q${VCS::CMSynergy::FS}\\E
\\Q${VCS::CMSynergy::RS}\\E
\\Q${XML::XQL::DirNode::SEP}\\E$
\\Q${xshelper}\\E
\\Q$0\\E
\\Q$1\\E
\\Q$1\\E([a-z]*)$
\\Q$a\\E
\\Q$a\\E$
\\Q$acstr\\E$
\\Q$action\\E
\\Q$action\\E=
\\Q$action\\E=(.*?)\\s*($|;)
\\Q$address\\E
\\Q$address\\E is undeliverable
\\Q$ALIAS_START\\E.*\\Q$ALIAS_END\\E
\\Q$allow
\\Q$also\\E
\\Q$alta{'ienc_pre'}\\E([^\\\"]*)\\Q$alta{'ienc_pst'}\\E
\\Q$alta{'kls_pre'}\\E([^\\\"]*)\\Q$alta{'kls_pst'}\\E
\\Q$alta{'pre'}\\E(.*)\\Q$alta{'pst'}\\E
\\Q$alta{'q_pre'}\\E([^\\\"]*)\\Q$alta{'q_pst'}\\E
\\Q$amen\\E$
\\Q$anno\\E
\\Q$apropos_option
\\Q$args_i\\E
\\Q$args{domain_name}
\\Q$arch\\E
\\Q$b\\E$
\\Q$b\\E[.]$e$
\\Q$bar\\E<
\\Q$base_path\\E\\/$ref_path/
\\Q$base2\\E
\\Q$baseDir\\E\\/?
\\Q$baseUrl
\\Q$bb_mark\\E
\\Q$bcc\\E
\\Q$before_angles\\E$
\\Q$before_re\\E(.+)\\Q$after_re\\E
\\Q$bn\\E$
\\Q$bn_match\\E
\\Q$break_str\\E
\\Q$build_folder\\E
\\Q$bundle_filename\\E$
\\Q$c
\\Q$C\\E
\\Q$c_comma
\\Q$candidate\\E$
\\Q$cc\\E
\\Q$cf->
\\Q$class\\E
\\Q$class_dir\\E
\\Q$close
\\Q$close\\E$
\\Q$closedelim\\E
\\Q$co->{$color}\\E
\\Q$code\\E
\\Q$code_block_prefix\\E
\\Q$collocation
\\Q$com_open\\E(.*?)\\Q$com_close\\E
\\Q$comma 
\\\\\\Q$command\\E
\\\\\\Q$command\\E(\\W|$)
\\Q$comment\\E
\\Q$comment_marker\\E
\\Q$complete_request\\E
\\Q$complete_word\\E\\s*\\z
\\Q$Config::Config{'path_sep'}
\\Q$Config::Config{path_sep}\\E
\\Q$Config_libext\\E\\z
\\Q$Config{_a}\\E$
\\Q$Config{_exe}$
\\Q$Config{_exe}\\E$
\\Q$Config{archname}\\E.
\\Q$Config{path_sep}
\\Q$Config{path_sep}\\E
\\Q$cont\\E$
\\Q$cookie_domain\\E$
\\Q$cur
\\Q$curword\\E
\\Q$cxx_version\\E
\\Q$d
\\Q$d\\E
\\Q$data[-2]\\E
\\Q$data->{path_col_sep}\\E
\\Q$deci_sep\\E.*
\\Q$decimal\\E\\d\\d{$dlen,}$
\\Q$DecimalSeparator\\E
\\Q$DEF{DATESEP}\\E
\\Q$Defaults{dir_sep}
\\Q$Defaults{rc_dir}$Defaults{dir_sep}\\E(.*)
\\Q$defp\\E([^\\n]*?)($str|\\n|$)
\\Q$del$del
\\Q$del\\E
\\Q$delim
\\Q$DELIM
\\Q$delim\\E
\\Q$DELIM\\E$word$
\\Q$DELIM\\E$word\\Q$DELIM\\E
\\Q$delim\\E\\s*
\\Q$delim\\E+
\\Q$DELIMITER\\E
\\Q$delimiter\\E
\\Q$delimiter\\E *
\\Q$dir\\E.
\\Q$dir_parent
\\Q$dist
\\Q$dist\\E[^/]*/($ignore_pat)$
\\Q$dist\\E[^/]*/($ignore_pat)/
\\Q$divsig\\E
\\Q$divsig\\E(\\d*)
\\Q$domain\\E$
\\Q$domain\\E\\z
\\Q$domain_name
\\Q$dwimop
\\Q$e\\E
\\Q$eaddrinuse_msg\\E
\\Q$emails{$ident}{ident}\\E
\\Q$embedded_idtype_marker\\E
\\Q$embedded_idtype_marker\\E(.*)
\\Q$enclose\\E
\\Q$end_mark
\\Q$ending\\E$
\\Q$entire_key\\E(?:\\n|\\f|\\r)?
\\Q$entry_delim\\E
\\Q$EOL
\\Q$eol\\E$
\\Q$eol\\E\\z
\\Q$esc\\E
\\Q$esc\\E(.)
\\Q$ESC{ASC}\\E\n        (\\Q$ESC{KANA}\\E|\\Q$ESC{JIS_0212}\\E|\\Q$ESC{JIS_0208}\\E)
\\Q$ESC{ASC}\\E\n\t    (\\Q$ESC{KANA}\\E|\\Q$ESC_JISX0213_1\\E|\\Q$ESC_JISX0213_2\\E)
\\Q$ESC{ASC}\\E\n\t    (\\Q$ESC{KANA}\\E|\\Q$ESC{JIS_0212}\\E|\\Q$ESC{JIS_0208}\\E)
\\\\\\Q$escape\\E
\\Q$escape\\E
\\Q$eseq$eseq\\E
\\Q$eseq\\E(?!\\Q$eseq\\E)
\\Q$esi\\E
\\Q$exclude\\E
\\Q$exclude_file\\E
\\Q$exe\\E$
\\Q$exe_ext\\E$
\\Q$exp_result
\\Q$expected_location\\E$
\\Q$ext\\E$
\\Q$extension\\E$
\\Q$f\\E
\\Q$file
\\Q$file syntax OK\\E$
\\Q$File::Find::topdir\\/
\\Q$File::Find::topdir\\E
\\Q$file\\E
\\Q$filename\\E
\\Q$filter
\\Q$find\\E
\\Q$first_caller\\E
\\Q$first_character$value$first_character\\E
\\Q$flag
\\Q$flags
\\Q$fn\\E
\\Q$format
\\Q$from\\E
\\Q$from\\E([^\\0]+)
\\Q$from_path\\E
\\Q$frompath\\E
\\Q$frompath\\E(.*?)\\0
\\Q$FS\\E
\\Q$fs\\E
\\Q$full\\E
\\Q$func
\\Q$g\\E
\\Q$g\\E$
\\Q$GAPCHAR
\\Q$gl
\\Q$grep\\E
\\Q$grep_pat\\E
\\Q$group_marker\\E
\\Q$h: $headers{$h}\\E(?:\\n|\\f|\\r)
\\Q$header\\E
\\Q$header\\E$
\\Q$header\\E\\Z
\\Q$HIGHLIGHT_STYLE\\E
\\Q$http_ext_id\\E
\\Q$char
\\Q$char\\E
\\Q$chunk\\E
\\Q$ignoring\\E
\\Q$image\\E
\\Q$implementation\\E
\\Q$indbr\\E$
\\Q$index_dir\\E/
\\Q$INPUT_RECORD_SEPARATOR\\E 
\\Q$inst_root
\\Q$installlibraryid\\E
\\Q$ISOLATE_CSS_RULE\\E
\\Q$item{incorrect}\\E
\\Q$j$i\\E
\\Q$k
\\Q$k\\E
\\Q$k\\E:
\\Q$key
\\Q$key\\E
\\Q$key_name\\E
\\Q$KEY_SEPARATOR\\E
\\Q$keyword\\E
\\Q$keyword\\E.*?($CLASS)->new
\\Q$keyword\\E.*?new ($CLASS)
\\Q$l
\\Q$L\\E\\s*(.*?)\\s*\\Q$R\\E
\\Q$label\\E\\n
\\Q$lang\\E
\\Q$last_part\\E$
\\Q$lc_db\\E
\\Q$lc_input\\E
\\Q$lead$lead$lead
\\Q$lib\\E/(.*_TEST)\\.pm$
\\Q$libruby
\\Q$line_sep\\E$
\\Q$Lingua::Wordnet::DELIM
\\Q$Lingua::Wordnet::SUBDELIM
\\Q$linktext\\E
\\Q$list
\\Q$listDelim\\E
\\Q$literal\\E
\\Q$long\\E\\z|\\Q$long_trail\\E\\z
\\Q$macro\\E
\\Q$MAGIC_NOLF\\E\\n
\\Q$main_xs_file\\E$
\\Q$mark\\E \\s+? $pattern
\\Q$mark1\\E
\\Q$mark2\\E
\\Q$marker
\\Q$marker\\E
\\Q$marker\\E(\\d+)\\0
\\Q$marker\\E\\s*([[:lower:]])
\\Q$match
\\Q$match\\E
\\Q$match\\E$
\\Q$me\\E
\\Q$method\\E
\\Q$model_name\\E$
\\Q$modpname.pm\\E$
\\Q$module
\\Q$msg
\\Q$msg\\E
\\Q$munge
\\Q$name
\\Q$name.\\E\\w{2,}$
\\Q$name\\E
\\Q$name\\E(?![\\[\\{])
\\Q$name_in\\E/
\\Q$name_sep\\E
\\Q$NAME_SEP\\E
\\Q$nbsp
\\Q$ne_cont\\E
\\Q$net_snmp_error\\E$
\\Q$newdependencypath\\E
\\Q$newpred
\\Q$next_boundary\\E\\r\\n
\\Q$nick
\\Q$no_domain\\E$
\\Q$no_proxy_domain\\E$
\\Q$null_pattern\\E
\\Q$num
\\Q$number
\\Q$o$c\\E
\\Q$o{I}\\E
\\Q$o->{font_suffix}\\E$
\\Q$odbclibdir
\\Q$odbchome
\\Q$OH/lib/
\\Q$OH/lib\\b
\\Q$old
\\Q$old\\E
\\Q$old_delimiter\\E
\\Q$old_encap_addr\\E
\\Q$old_expression\\E
\\Q$oldsubstate
\\Q$oldtext\\E
\\Q$omniholder
\\Q$op\\E
\\Q$open
\\Q$opendelim\\E
\\Q$opt{name}\\E
\\Q$option\\E
\\Q$opts{type}\\E$
\\Q$opts->{separator}\\E $
\\Q$orig_res\\E
\\Q$orig_sub
\\Q$origauth\\E$
\\Q$original_name\\E
\\Q$original_programs\\E
\\Q$originalTag\\E
\\Q$p_sep\\E
\\Q$p_sid
\\Q$p5p\\E
\\Q$package\\E$
\\Q$packet\\E
\\Q$packfn\\E\\z
\\Q$pair\\E
\\Q$params{contains}\\E
\\Q$parent_src_root
\\Q$parms[1]\\E
\\Q$parser->{POD_HTMLEASY}{MARK_FILTER}{MARK}\\E#(\\d+)#
\\Q$pat
\\Q$pat\\E
\\Q$path/\\E
\\Q$path;
\\Q$path\\E
\\Q$path\\E .
\\Q$path_info\\E$
\\Q$path_sep
\\Q$path_sep\\E
\\Q$path_separator
\\Q$pathPart\\E
\\Q$pattern\\E
\\Q$Pattern\\E
\\Q$perl
\\Q$perllibdir
\\Q$pgsig\\E
\\Q$phrase\\E
\\Q$pkg_dir\\E
\\Q$pkg_or_ver
\\Q$place_holder\\E
\\Q$placeholder
\\Q$plugin\\E$
\\Q$pmlcode\\E (.*?) \\Q$pmlcode\\E\n                          
\\Q$pmlcode\\E \"(.*?)\"\n                          
\\Q$pmlcode\\E\n                          
\\Q$pmlcode\\E\n                           =\"(.*?)\" (.*?) \\Q $pmlcode \\E\n                          
\\Q$possible\\E$
\\Q$pre_prefix\\E
\\Q$prefix\\E
\\Q$prefix->{$mode}
\\Q$prefSep\\E$
\\Q$prop->{value}
\\Q$ps\\E
\\Q$pv
\\Q$qstring\\E
\\Q$query
\\Q$quot\\E
\\Q$quote\\E
\\Q$quote_char
\\Q$quoter\\E
\\Q$r
\\Q$range\\E
\\Q$re\\E
\\Q$READ_DELIMITER
\\Q$regex\\E
\\Q$REGEX_TO_STRING_POSTFIX\\E$
\\Q$regexDelimiter\\E(.*)$
\\Q$regexDelimiter\\E.*$
\\Q$rel_file
\\Q$relayip\\E
\\Q$remote_ip\\E
\\Q$repl\\E
\\Q$replace
\\Q$replace\\E
\\Q$repositories{$_}{'LOCATION'}\\E
\\Q$rest\\E\\/?$
\\Q$result\\E\\s*$
\\Q$return\\E
\\Q$rev_id\\E
\\Q$root\\E
\\Q$root\\E.*/dp/
\\Q$root\\E::
\\Q$rperl_header_line
\\Q$RS\\E
\\Q$rs\\E
\\Q$rt\\E
\\Q$scalar\\E|hi
\\Q$search\\E
\\Q$search_str\\E
\\Q$search_term\\E
\\Q$searchstr
\\Q$section\\E
\\Q$seek\\E
\\Q$self->{'_DELIM'}\\E
\\Q$self->{_read}\\E
\\Q$self->{decimal_point}\\E
\\Q$self->{DELIMITER}\\E
\\Q$self->{EscapeSequence}\\E
\\Q$self->{Head}\\E([\\x00-\\xff]+)\\Q$self->{Tail}\\E
\\Q$self->{id_dir}\\E
\\Q$self->{ldap_inseparator}\\E
\\Q$self->{mon_decimal_point}\\E
\\Q$self->{multiValuesSeparator}\\E
\\Q$self->{multiValuesSeparator}\\E$
\\Q$self->{name_separator}\\E
\\Q$self->{name}\\E\\.$
\\Q$self->{path_col_sep}\\E
\\Q$self->{perl_lib_dir}\\E
\\Q$self->{portal}->{multiValuesSeparator}\\E$
\\Q$self->{quote_char}\\E$
\\Q$self->{'quote_instigator'}\\E
\\Q$self->{'quote_terminator'}\\E
\\\\\\Q$self->{'quote_terminator'}\\E
\\Q$self->{quote}\\E
\\Q$self->{sep}
\\Q$self->{SLASH_CHAR}\\E
\\Q$self->{SPACE_CHAR}\\E
\\Q$self->{thousands_separator}\\E
\\Q$self->{token}\\E
\\Q$self->{trigger}
\\Q$self->{urldc}\\E\\/?
\\Q$sep
\\Q$sep\\E
\\Q$sep\\E$
\\Q$SEP\\E$
\\Q$sep\\E(\\d+)$
\\Q$sep\\E+$
\\Q$sep_val\\E
\\Q$SEPARATOR
\\Q$separator\\E
\\Q$ship_name
\\Q$short\\E(.*)$
\\Q$sigils{$reftype}\\E
\\Q$sitedir\\E.
\\Q$snip\\E$
\\Q$snips[-1]$
\\Q$source\\E
\\Q$split_mark\\E
\\Q$src_root
\\Q$st
\\Q$star\\E(.*)\\Q$end\\E
\\Q$start\\E\\s*(.*?)\\s*\\Q$stop\\E
\\Q$start\\E\\s*(.+?)\\s*\\Q$end\\E
\\Q$start\\E\\s*.*?\\s*\\Q$stop\\E
\\Q$start_mark
\\Q$START_TOKEN\\E.*\\Q$END_TOKEN\\E\\n
\\Q$start_url\\E
\\Q$stop\\E(.*)
\\Q$stop_url\\E
\\Q$str\\E
\\Q$string\\E
\\Q$String\\E
\\Q$string\\E.*$
\\Q$strs[$str]\\E
\\Q$sub_with_sig\\E
\\Q$subbed
\\Q$SUBDELIM
\\Q$subj\\E
\\Q$subprefix\\E
\\Q$substitute_this
\\Q$suffix\\E$
\\Q$suffix\\E\\z
\\Q$symbol\\E
\\Q$symbol_db\\E
\\Q$t
\\Q$t1\\E
\\Q$t2\\E
\\Q$Tab{$key}\\E
\\Q$table\\E
\\Q$tag\\E
\\Q$tag\\E([^/]+)
\\Q$tag_open\\E(.*?)\\Q$tag_close\\E
\\Q$tag_sig\\E
\\Q$tagDelim\\E
\\Q$tagstack->[-1]\\E
\\Q$target\\E
\\Q$target\\E\"?$
\\Q$target_name\\E
\\Q$temp\\E
\\Q$template_dir\\/
\\Q$term_val\\E
\\Q$terminator\\E
\\Q$terminator->[1]\\E$
\\Q$testdir\\E/(.+)/TestSuite\\.html$
\\Q$ThousandsSeparator\\E
\\Q$thsd_sep\\E
\\Q$tld\\E$
\\Q$tmp\\E$
\\Q$tmpfile\\E
\\Q$tmx\\E-(.+)
\\Q$to\\E
\\Q$token\\E
\\Q$tool_label\\E result is '([^']+)'
-\\Q$trimmer\\E
\\Q$tstr\\E
\\Q$type
\\Q$type\\E$
\\Q$unsafe_arg\\E
\\Q$unsubbed
\\Q$updir\\E
\\Q$url\\E\n                         
\\Q$urn\\E$
\\Q$value\\E
\\Q$var\\E$
\\Q$variable\\E
\\Q$version\\E$
\\Q$violations_text
\\Q$voice\\E
\\Q$what\\E$
\\Q$whitespace\\E
\\Q$wholetag\\E
\\Q$wildcard
\\Q$words[-1]\\E$
\\Q$wpdir\\E\\/?
\\Q$x\\E
\\Q$xcodenew\\E
\\Q$xcodeold\\E
\\Q$z\\E
\\Q$ZERO\\E
\\Q&\\E.*?\\Q;\\E
\\Q&mdash;\\E
\\Q&nbsp;\\E
\\Q&quot;\\E
\\\\Q(.*?)\\\\E
\\Q(?^
\\Q(?^:
\\Q(?<foo>\\d+)  [  \\E(?<name>abc\\d+)  \\Q]\\E
\\Q(?<foo>\\d+)\\E (?<name>abc\\d+)
\\Q(?k:
\\Q(no filesize change)
\\Q(no IDAT change)
\\Q*
\\Q**\\E
\\Q,\\E
\\Q.$_\\E$
\\Q.$domain\\E$
\\Q..
\\Q...
\\Q.\\E
\\Q/*\\E.*?\\Q*/\\E
\\Q::\\E
\\Q;\\E
\\Q?>
\\Q@{[NBSP]}
\\Q[#SVAR \\E(.+?)\\Q#]\\E
\\Q[[$_]]
\\Q[[el]]
\\Q[{CONFIG}]
\\Q[{LIB}]
\\Q[l[$_]]
\\Q[l[el]]
\\Q[long options...]
\\Q\"\\E
\\Q\\$%\\E$
\\Q\\$sep\\E
\\Q\\;\\E(.*)$
\\Q\\\\\\E
\\\\Q\\\\E
\\\\\\Q\\\\E
\\Q\\n
\\Q\\n\\E
\\Q\\public\\ratlperl\\5.8.6\\nt_i386\\E
\\Q\\r
\\Q\\r\\n
\\Q]|[\\E
\\Q^failed^\\E
\\Q^made^\\E
\\Q_diary.pl\\E
\\Q`\\E
\\Q{%query%}\\E
\\Q{{amp}}
\\Q{{name}}\\E
\\Q{{perl}}\\E
\\Q{{var}}\\E
\\Q{cover_db_path}\\E
\\Q{interpreter_path}\\E
\\Q{libs}\\E
\\Q{twtfile}
\\Q{TYPE}: unrecognised attribute\\E
\\Q|$t2:\\E(.*?)\\|
\\Q|$type2:\\E(.*?)\\|
\\Q|\\E
\\Q||
\\Q<!-- COMMENT: start -->\\E(.*?)\\Q<!-- start : Loop -->\\E
\\Q<!-- MP3DATASPLIT -->\\E
\\Q<!-- start : Loop -->\\E(.*?)\\Q<!-- end : Loop -->\\E
\\Q<!--MATCHME-->\\E
\\Q<?
\\Q<b>description</b>\\E\\s+<u>(.+?)</u>
\\Q<CENTER><H1><a href=\"http://bioperl.org\">Bioperl</a> Reformatted HTML of BLASTN Search Report<br> for </H1></CENTER>\\E
\\Q<h3 class=\"title\">WEB\u00e3\u0082\u00a2\u00e3\u0082\u00af\u00e3\u0082\u00bb\u00e3\u0082\u00b9\u00e6\u0099\u0082 \u00ef\u00bc\u0088i\u00e3\u0083\u00a2\u00e3\u0083\u00bc\u00e3\u0083\u0089\u00e3\u0083\u0096\u00e3\u0083\u00a9\u00e3\u0082\u00a6\u00e3\u0082\u00b6\u00ef\u00bc\u0089</h3>\\E(.+)\\Q<h3 class=\"title\">WEB\u00e3\u0082\u00a2\u00e3\u0082\u00af\u00e3\u0082\u00bb\u00e3\u0082\u00b9\u00e6\u0099\u0082\u00ef\u00bc\u0088\u00e3\u0083\u0095\u00e3\u0083\u00ab\u00e3\u0083\u0096\u00e3\u0083\u00a9\u00e3\u0082\u00a6\u00e3\u0082\u00b6\u00ef\u00bc\u0089</h3>\\E
\\Q<title>[TL] \u00e5\u0086\u0085\u00e9\u0083\u00a8\u00e3\u0082\u00a8\u00e3\u0083\u00a9\u00e3\u0083\u00bc</title>\\E
\\Q<tr align=\"center\" bgcolor=\"#FFFFFF\">\\E(.*?)<\\/tr>\\s*\\Q<tr align=\"center\" bgcolor=\"#FFF4E0\">\\E(.*?)<\\/tr>
\\\\q=\"(.*?)\"(.*?)\\\\q\n              
\\\\Q=\"(.*?)\"\n              
\\Q'=bin='\\E
\\Q'=script='\\E
\\Qa^$bcabc\\E
\\Qabc\\Eefg\\\\Q\\\\Ehij
\\Qadd_diary.pl\\E
\\Qboxmuller\\E
\\Q'cite' => 'http://www.stonehenge.com/merlyn/'
\\Qcodeen.cs.princeton.edu\">CoDeeN
\\QcoreExtension>io.jenkins.tools.incrementals:git-changelist-maven-extension:\\E(.+)
\\Qdir1\\dir2\\E
\\Qdir1\\dir2\\\\E
\\QGo.\\E
\\QHTML/Mason.pm
\\Qhttp://www.ebi.ac.uk/chebi/searchId.do;?chebiId=\\E
\\Qhttp://www.ebi.ac.uk/chebi/searchId.do?chebiId=\\E
\\Qhttp://www.geneontology.org/formats/oboInOwl#\\E
\\Qhttp://www.helex.gr/content/en/Companies/ListedCo/Profiles/Profile.asp?cid=\\E(\\d+)
\\Q-l$lib\\E\\b
\\Qno such section
\\Qnow()\\E
\\Qrecently-used.xbel
\\Q-rw-r--r--\\E (.+) filemode\\.file
\\Qsend_message.pl\\E
\\QSPAN class=\"voteusrip\">(\\E(127.0.0.1)\\Q)<\\/SPAN>\\E
\\Q-std=c99\\E
\\QT5.6-009
\\Qtest.fixflo.com\\E
\\\\quarternote 
\\Qubic-watchdog ubic.watchdog\\E
\\\\quote\\\\
\\Q'url' => 'http://www.foo.com/foo.html'
\\QV5.5-004
\\Q-Wc++-compat
\\QWriteMakefileArgs{PREREQ_PM} = \\%FallbackPrereqs;\\E
\\R
\\R$
\\R.*
\\R?$
\\r?\\n[\\h]*
\\r?\\n--\\Q$b\\E--.*
\\r?\\n--\\Q$b\\E\\r?\\n
\\r?\\n--\\Q$b\\E--\\r?\\n.*
\r\n                    ^/               # comment started like /*/\r\n                    \\s*\r\n                    (\\S[\\s\\S]+?)  # has at least some non-ws content\r\n                    \\s*\r\n                    /\\*             # ends like /*/ or /**/\r\n                
\r\n        ( 
\\r\\n\\Q$code\\E-
\\\\r\\\\n|[\\\\r\\\\n\\\\t
\\r\\nHKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\\r\\n
\\R\\R
\\R\\R+
\\R\\s*\\R
\\R\\s+
\\R\\z
\\R{1,2}[\\t\\x20]*\\R{1,2}
\\R{2,}
\\R|$
\\R|\\]
\\R|=
\\R+
\\R+$
\\R+\\z
\\\\Rational
\\\\Real
\\\\Recent
\\REPLACE((?:[^\\\\\\REPLACE]|\\\\.)*)
\\REQ.IP.SOURCEIP == [0-9.]+
\\\\ReverseUpEquilibrium 
\\\\rhaco\\\\Exceptions::add\\(\\s*new\\s+([\\\\\\w]+)\\((.*?)\\)
\\\\Rho 
\\\\Rightarrow 
\\\\RightDownTeeVector 
\\\\RightDownVectorBar 
\\\\RightTeeVector 
\\\\RightTriangleBar 
\\\\RightUpDownVector 
\\\\RightUpTeeVector 
\\\\RightUpVectorBar 
\\\\RightVectorBar 
\\\\RoundImplies 
\\\\Rrightarrow 
\\\\Rsh 
\\\\ruby(\\{(?:
\\\\ruby\\{(?:
\\\\RuleDelayed 
\\s ([\\Q$ops\\E]+) \\s
\\s href \\s* = \\s* [\\\"']? \\Q$$url[2]\\E ([\\\"'>])\n\t\t           
\\s src \\s* = \\s* [\\\"']? \\Q$$url[2]\\E ([\\\"'>])\n\t\t           
\\s(?!\\\\)
\\s(?:href|src)\\s{,3}=\\s{,3}(?P<delim>['\"])(.*?)(?P=delim)
\\s(?P<fluff>.*?)`\\=(?P<context>\\S+?)\\([^\\)\\s]*?\\Z
\\s(?P<lib>\\S?/\\S+)\\s+\\((?P<addr>0x.+)\\)
\\s(?P<num>\\d+)\\s+(?P<name>(RPL|ERR)_\\w+)\\s*(?P<_>.*)
\\s([a-zA-Z][a-zA-Z0-9\\_\\.\\-]*[a-zA-Z]*\\@[a-zA-Z][a-zA-Z0-9\\_\\.\\-]*[a-zA-Z]{2,6})([\\s|\\.|\\,])
\\s(\\w*)\\s*=\\s*(?|\"([^\"]+)\"|'([^']+)'|([^\\s><'\"]+))
\\s(id|xlink:href)=\"(#?
\\s* (?<!\\\\) [|] \\s*
\\s* (\"(?:(?!(?<!\\\\)\").)*\" | '(?:(?!(?<!\\\\)').)*' | \\S+)
\\s*#.*?[^\\\\]\\s*\\n
\\s*#\\d++$
\\s*-#\\s*(
-\\s*#\\s*(
\\s*#\\s*include\\s+(?P<quote>[\"<])(?P<filename>.+?)[\">]
\\s*#\\s*pylint:\\s+disable=(?P<disables>[^#$]+?)(?=\\s*(#|$))
\\s*#+\\s*(?P<name>[^#\\n]+)([ \\r\\t\\v#]*)(?P<value>(.+?)(\\n(?!\\s#))|\\s*$)
\\s*#define[ \\t]+.*_width[ \\t]+(?P<width>[0-9]+)[\\r\\n]+#define[ \t]+.*_height[ \t]+(?P<height>[0-9]+)[\r\n]+(?P<hotspot>#define[ \t]+[^_]*_x_hot[ \t]+(?P<xhot>[0-9]+)[\r\n]+#define[ \t]+[^_]*_y_hot[ \t]+(?P<yhot>[0-9]+)[\r\n]+)?[\\000-\\377]*_bits\\[\\]
\\s*#define[ \t]+.*_width[ \t]+(?P<width>[0-9]+)[\r\n]+#define[ \t]+.*_height[ \t]+(?P<height>[0-9]+)[\r\n]+(?P<hotspot>#define[ \t]+[^_]*_x_hot[ \t]+(?P<xhot>[0-9]+)[\r\n]+#define[ \t]+[^_]*_y_hot[ \t]+(?P<yhot>[0-9]+)[\r\n]+)?[\\000-\\377]*_bits\\[\\]
\\s*#define\\s+(
\\s*(
\\s*'((?:[^']++|'')*+)'\\s*(?:,|$)
\\s*(([\"'])([\\s\\S]*?[^\\\\])\\2|[^,]+)\\s*
\\s*(/\\*+\\s|\\*+/|\\B\\*\\s?|///?!?)(?P<line>.*?)
\\s*(/\\*+\\s|\\*+/|\\B\\*\\s|///?!?)(?P<line>.*?)
\\s*(?:
\\s*(?:(?P<literal>[\\[\\]{}])|(?P<word>[a-zA-Z_]\\w*))
\\s*(?:([^\\s\\\\\\'\\\"]+)|'((?:[^\\'\\\\]|\\\\.)*)'|\"((?:[^\\\"\\\\]|\\\\.)*)\")
\\s*(?:(\")([^]*?)\"|(\\S+))\\s*
\\s*(?:(\"|')([^]*?)\\1|(\\S+))\\s*
\\s*(?:<p\\s*/?>)|(?:\\\\para(?:\\\\ )*)\\s*
\\s*(?<!\\\\)$delim.*
\\s*(?<!\\\\),\\s*
\\s*(?<!\\\\)/\\s*(.*)
\\s*(?<!\\\\);\\s*
\\s*(?<!\\\\)[\\s,]\\s*
\\s*(?<!\\\\)\\#.*$
\\s*(?P<addr>\\S*)\\s*\\<(?P<symbol>.*)\\>\\s*\\(File Offset:\\s*(?P<offset>\\S*)\\s*\\)
\\s*(?P<alias>[^\\s;]+)\\s*;?\\s*
\\s*(?P<arg_name>[a-zA-Z0-9_]+)\\s*=\\s*(?P<arg_type>[a-zA-Z]+)\\s*$
\\s*(?P<brackets>[\\'\"])(.*?)(?P=brackets)\\s*=>\\s*(?P=brackets)(.*?)(?P=brackets)
\\s*(?P<code>\\d+)
\\s*(?P<comm>.+) \\(\\s*(?P<pid>[0-9]+)\\/\\s*(?P<ppid>[0-9]+)\\/\\s*(?P<nrThreads>[0-9]+)\\/(?P<pri>.{4})\\)\\|\\s*(?P<cpu>\\S+)\\(.+\\)\\|\\s*(?P<vss>[0-9]+)\\(\\s*(?P<rss>[0-9]+)\\/.+\\)\\|\\s*(?P<blk>\\S+)\\(\\s*(?P<blkrd>.+)\\/\\s*(?P<blkwr>.+)\\/
\\s*(?P<comm>.+)\\(\\s*(?P<pid>[0-9]+)
\\s*(?P<command>\\S*)\\s*(?P<option>\\S*)
\\s*(?P<content>.*?)\\s*\\n
-\\s*(?P<control>elif|else)(?P<expr>.*)
-\\s*(?P<control>except|else|finally)(?P<expr>.*)
\\s*(?P<cpu>\\-*[0-9]+)\\s*%\\s*\\(\\s*(?P<user>\\-*[0-9]+)\\s*\\/s*\\s*(?P<kernel>\\-*[0-9]+)\\s*\\/s*\\s*(?P<block>\\-*[0-9]+)
\\s*(?P<date>\\d\\d\\d\\d-\\d\\d-\\d\\d)
\\s*(?P<free>\\-*[0-9]+)\\s*\\(\\s*(?P<freeDiff>\\-*[0-9]+)\\s*/\\s*(?P<anon>\\-*[0-9]+)\\s*/\\s*(?P<cache>\\-*[0-9]+)\\s*/\\s*(?P<kernel>\\-*[0-9]+)
\\s*(?P<gpu>.+)\\s*\\(\\s*(?P<usage>[0-9]+)\\s*%\\)
\\s*(?P<id>[A-Z0-9]+) /\\* (?P<isa>.*) \\*/ = {
\\s*(?P<id>[A-Z0-9]+) /\\* (?P<isa>.*) \\*/,
\\s*(?P<id>[A-Z0-9]+) /\\* (?P<name>.*) \\*/ = {
\\s*(?P<key>.*\\w)\\s*:\\s*(?P<value>.*)$
\\s*(?P<key>[\\w-]+)\\s*(?:=\\s*(?P<quote>[\"']?)(?P<value>.*?)(?P=quote)\\s*)?
-\\s*(?P<keyword>return|continue|break)\\s*
\\s*(?P<label>\\d+)\\s*(\\b|(?=&)|\\Z)
-\\s*(?P<lang>md|markdown|rst|rest|coffee|scss|sass|stylus)\\s*
\\s*(?P<left>[\\w\\.]+)\\s*=\\s*(?P<right>\\w+)\\s*
-\\s*(?P<line>(?:def|block)(?:\\s+.*)?)
-\\s*(?P<line>(?:include|inherit|page|namespace)(?:\\s+.*)?)
\\s*(?P<line>.*)\\s*\\n?
-\\s*(?P<line>call(?:\\s+.*)?)
-\\s*(?P<line>text(?:\\s+.*)?)
\\s*(?P<lt_or_gt>[<>]?)\\s*(?P<equals>=?)\\s*(?P<number>[0-9.]+)\\s*$
\\s*(?P<method_name>[a-zA-Z0-9._]+)\\s*(\\((?P<args_sig>[^)].*)?\\)\\s*(\\->\\s*(?P<return_sig>.*))?)?\\s*$
\\s*(?P<name>.+?)\\s*=\\s*(?P<module>[\\w.]+)\\s*(:\\s*(?P<attr>[\\w.]+))?\\s*(?P<extras>\\[.*\\])?\\s*$
\\s*(?P<name>[a-zA-Z0-9_]+)\\s*=\\s*(fudge\\.)?Fake\\(.*
\\s*(?P<name>\\S+)(\\s+(?P<attrs>[^#]+))?(\\s*#\\s*(?P<comment>.*)$)?
\\s*(?P<name>\\w[\\w\\d]*)\\s*=(?P<value>.*)
\\s*(?P<name>\\w+)\\s*:\\s*(\\b|(?=&)|\\Z)
\\s*(?P<operator>[<=>!]{1,2})?\\s*(?P<version>.+)\\s*
\\s*(?P<opt>\\[\\s*)?(?P<role>[^ ]+) (?P<value>[^ ,.{\\]]+)(?:\\s*\\{\\s*(?P<properties>[^ ]+ [^ ,}]+(?:, [^ ]+ [^ ,}]+)*)\\s*\\})?(?(opt)\\s*\\])(?:\\s*(?P<end>,|$)\\s*)
\\s*(?P<package>[^\\s\\[\\]]+)(?P<extras>\\[\\S+\\])?==(?P<version>\\S+)
\\s*(?P<param>\\w+).*:\\s*(?P<doc>[^\\n]+)
-\\s*(?P<python>py(?:thon)?(?P<excl>\\!?))(?P<expr>\\s+.*)?
\\s*(?P<rel>(?P<ver>\\d+\\.\\d+)(?:\\.\\S+)*)\\s*
\\s*(?P<selector>[#\\.\\w\\-\\s_]+)\\s*
\\s*(?P<selectors>[#\\.\\w\\-\\s,_]+)\\s*\\{\\s*(?P<declarations>[^}]+)\\}
\\s*(?P<schema>[a-z0-9]{3,9})://.*$
-\\s*(?P<stmnt>if|for|while|with|try)(?P<expr>.*)
-\\s*(?P<stmnt>unless|until)(?P<expr>.*)
\\s*(?P<swap>\\-*[0-9]+)
\\s*(?P<symbol>\\.|#)?(?P<name>[\\w-]+)\\s*
\\s*([\\*$~^|]?+=|[{};,>~]|!important\\b)\\s*
\\s*([^,=>\\\"\\']+?|           # word arg (yes, the => in the class is bad\n\t\t\t\t(\\\"|\\')(.*?(?<!\\\\))\\2   # quoted\n\t\t\t       )\\s*(?:,|=>|$)
\\s*([^:]*):\\s*([^#]*)\\s*#*\\s*([^\\z]*)
\\s*([^\\s]+)\\s*(?:->|?)((?:\\s*[^\\s(]+\\s*)+)\\s*(?:\\(([0-9](?:[.,][0-9]+)?)\\))?\\s*
\\s*(\\\\)?([>+~])(\\s*)
\\s*(\\}?)\\s*([^\\}\\{:\\\"\\s]+|$)\\s*(?:\\:\\s*\\\"((?:[^\\\"\\\\]|(?:\\\\.))*)\\\")?\\s*(\\{?)$
\\s*(\\\\9)\\s*
\\s*(\\b|(?!\\w))\\Q$c\\E$
\\s*(\\p{Punct})\\s*
\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f()\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)
\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)
\\s*(0x[a-f0-9]+)\\s((?:\\Q(has no name)\\E)|(?:\\\".+\\\")):
\\s*(AND|OR)?\\s*([\\w_.()]++)\\s*(?:(=|<[=>]?|>=?|LIKE)\\s*((?>'(?>[^']++|'')*+'|[\\d-.()]+))|((NOT )?IN\\s*\\((?>'(?>[^']++|'')*+',? ?|[\\d-.]+,? ?)*+\\)))
\\s*(and|to|-|?)?\\s*
\\s*(MIN|MAX)(?P<name>.*)FEDID\\s*=\\s*(?P<id>[0-9]+).*
\\s*(order\\sby)|$)
\\s*:param\\s+(?P<param>\\w+):\\s*(?P<doc>[^\\n]+)
\\s*;\\s*(?<key>
\\s*;\\s*(?<name>
\\s*;\\s*(?P<text>.*)$
\\s*;\\s*(?P<value>.*)
\\s*;\\s*([\\w\\-.!%*_+`'~]+)(?:\\s*=\\s*([\\w\\-.!%*_+`'~]+|\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\"))?
\\s*;\\s*(filename|name)\\s*(?:\n      = \\s* \"((?>\\\\\"|[^\"])*)\"         # quoted string - v1\n      | = \\s* (
\\s*@(?P<type>\\S*)\\s*\\{\\s*(?P<key>\\S*)\\s*,.*
\\s*@param\\s+(?P<param>\\w+):\\s*(?P<doc>[^\\n]+)
\\s*[\\s,;:/\\\\]+\\s*
\\s*[\\w.]+=(?:[\\w.]+|\"(?:[^\"\\\\]|\\\\.)*\")?\\s*
\\s*[a-zA-Z\\/\\/:\\.]*youtube.com\\/watch\\?v=([a-zA-Z0-9\\-_]+)([a-zA-Z0-9\\/\\*\\-\\_\\?\\&\\;\\%\\=\\.]*)
\\s*[float|vec2|vec3|vec4]?\\s+([\\w|\\_]*)[\\.\\w]*?\\s+[\\+|\\-|\\\\|\\*]?\\=
\\s*\\\\
\\s*\"(([^\"]|(\\\\\"))*)(?<!\\\\)\"
\\s*\\\"(?P<key>.*?)\\\"\\s*=\\s*\\\"(?P<value>[\\s\\S]*?)\\\"\\s*;
\\s*\"(?P<node>[^\\s\"]+)\"\\s*\\[.*
\\s*\"(?P<version_id>[.\\d]+)\"\\s*:\\s*\\(r\"(?P<version>[.\\d]+)\",\\s*(?P<version_module>v[_\\d]+)\\)\\s*
\\s*\\\"([^\\\"]*((?<=\\\\)\\\"[^\\\"]*)*)\\\"\\s*
\\s*\\\\([^\\s]+)
\\s*\\(\\s*(['\"`])((?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*?)\\1\\s*\\)
\\s*\\(\\s*\\Q$c\\E\\s*\\)$
\\s*\\*\\*Default:\\*\\*\\s*([^]+)$
\\s*\\*\\s*@(?P<tag>param|return)\\s+(?P<type>\\S+)\\s+(?P<paramName>\\$?\\w+)?
\\s*\\*\\s*@(?P<tag>phpconsistent-ignore)
\\s*\\/\\*[^]*?\\*\\/
\\s*\\[.*application_[_\\d]+.*\"RUNNING\".*width:(?P<percent>\\d{1,3}.\\d)%.*\\]
\\s*\\[\\s*(?P<name>\\S.*\\S)\\s*\\]\\s*
\\s*\\_\\s*|\\s+
\\s*\n                            OFXHEADER:(?P<OFXHEADER>\\d+)\\s+\n                            DATA:(?P<DATA>[A-Z]+)\\s+\n                            VERSION:(?P<VERSION>\\d+)\\s+\n                            SECURITY:(?P<SECURITY>[\\w]+)\\s+\n                            ENCODING:(?P<ENCODING>[A-Z0-9-]+)\\s+\n                            CHARSET:(?P<CHARSET>[\\w-]+)\\s+\n                            COMPRESSION:(?P<COMPRESSION>[A-Z]+)\\s+\n                            OLDFILEUID:(?P<OLDFILEUID>[\\w-]+)\\s+\n                            NEWFILEUID:(?P<NEWFILEUID>[\\w-]+)\\s+\n                            
\\s*\n                           (\n                             \\w+\\([^\\(\\)]*\\) # constructed (eg date(2001...))\n                            |[\\d.]+       # Numbers\n                            |\\w+          # Words\n                            |\\*\\*         # Exponentiation (**)\n                            |[-+*/()@]    # Operators\n                           )
\\s*\n\\Qhttp/1.1 401 Unauthorized\\E\\s*\n\\QServer:\\E\\s*\n.+?\n\\QWWW-Authenticate: Basic realm=\"ADSL Router \\(ANNEX A\\)\"\\E\\s*\n\\QContent-Type: text/html\\E\\s*\n\\QConnection: close\\E\\s*\n\\s*\n\\Q<html>\\E\\s*\n\\Q<head>\\E\\s*\n\\Q<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-9\">\\E\\s*\n\\Q<META http-equiv=\"Pragma\" CONTENT=\"no-cache\">\\E\\s*\n\\Q<META HTTP-EQUIV=\"Cache-Control\" CONTENT=\"no-cache\">\\E\\s*\n\\Q<meta HTTP-EQUIV=\"Expires\" CONTENT=\"Mon, 06 Jan 1990 00:00:01 GMT\">\\E\\s*\n
\\s*\\Q$break_str\\E\\s*
\\s*\\Q$d_right\\E\\s*$
\\s*\\Q$desc\\E\\s*
\\s*\\Q$self->{PACK}->{name}\\E\\s*:\\s*
\\s*\\R\\s*
\\s*\\t*namespace ([a-zA-Z0-9_\\\\]+)
\\s*\\t*namespace\\s*\\t*([a-zA-Z0-9_\\\\]+)
\\s*+([{},])\\s*+|(^\\s++)|(>)\\s*+|(?:(?!\\s*+[{},]|^\\s)[^>])++
\\s*+[q,Q]\\s*+
\\s*<(?P<tag>\\w+)\\s*(?P<attrs>[^>]+)?>
\\s*<(?P<url>[^>]+)>
\\s*</\\s*(?P<type>[^\\s]*)\\s*>\\s*\n
\\s*<\\?xml\\s*version=\"1.0\"\\s*encoding=\"(?P<encoding>[^\"]*)\"\\s*\\?>\\s*\n
\\s*<\\?xpacket\\s*\n                           begin=\\\"(?P<bom>.*)\\\"\\s*\n                           id=\\\"W5M0MpCehiHzreSzNTczkc9d\\\"\\?>
\\s*<\\s*(?P<id>[^\\s]*)\\s*>(?P<value>.*)</\\s*(?P=id)\\s*>\\s*\n
\\s*<\\s*(?P<type>[^\\s]*)\\s*size=(?P<size>\\d*)\\s*>\\s*\n
\\s*>?\\Q$bar\\E\\s*$
\\s*>?\\Q$bar\\E<?\\s*
\\s*at [\\/\\\\]\\S+ line \\d+$
\\s*background\\-image: url\\(\\'ss\\-icons(\\/|\\\\)ss\\-icons\\.svg\\'\\);
\\s*block\\s+'(.*[^\\\\])'\\s+until\\s+'(.*[^\\\\\\\\])'\\s+finish
\\s*CONSTRAINT\\s+`(?P<name>\\w+)`\\s+FOREIGN KEY\\s*\\(`(?P<localColumn>\\w+)`\\)\\s+REFERENCES\\s+`(?P<remoteTable>\\w+)`\\s+\\(`(?P<remoteColumn>\\w+)`\\)\\s*(?P<events>[\\w\\s]+)?
\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*
\\s*DisplayWidth=(?P<width>\\d+) *DisplayHeight=(?P<height>\\d+)
\\s*File extension(\\(s\\))?\\s*:\\s*([\\.,\\da-z\\h\\-_]+)
\\s*imp\\s*(
\\s*include\\s*(\\'|\")(?P<name>[^\\'\"]*)(\\'|\")
\\s*inet\\s+(?P<IP>\\d+\\.\\d+\\.\\d+\\.\\d+)\\/(?P<MASK>\\d+)\\s(brd)\\s(?P<BRD>\\d+\\.\\d+\\.\\d+\\.\\d+)\\sscope\\s(\\S.*\\S)\\s(\\S.*\\S)
\\s*interface=(?P<if>.*)\\s*:\\s*(?P<type>.*)\\s*
\\s*isa = (?P<isa>.*);
\\s*KEY\\s+`(?P<name>\\w+)`\\s*\\(`(?P<column>\\w+)`\\),?
\\s*module\\s+(?P<name>[a-z]\\w*)
\\s*mRestrictedScreen=\\((?P<x>\\d+),(?P<y>\\d+)\\) (?P<w>\\d+)x(?P<h>\\d+)
\\s*mUnrestrictedScreen=\\((?P<x>\\d+),(?P<y>\\d+)\\) (?P<width>\\d+)x(?P<height>\\d+)
\\s*name = (?P<name>.*);
\\s*productReference = (?P<id>[A-Z0-9]+) /\\* (?P<path>.*) \\*/;
\\s*productType = (?P<productType>.*);
\\s*python\\s*module\\s*(?P<name>[\\w_]*?__user__[\\w_]*)
\\s*python\\s*module\\s*(?P<name>[\\w_]+)
\\s*REBOL\\s*[
\\s*remotes/origin/(?P<branch>[^\\s]+$)
\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1
\\s*target = (?P<id>[A-Z0-9]+) /\\* (?P<name>.*) \\*/;
\\s*The (?P<p>[\\w\\d]+) processor operates at
\\s*TOTAL\\s*(?P<pss>\\d+)\\s*(?P<private_dirty>\\d+)\\s*(?P<private_clean>\\d+)\\s*(?P<swapped_dirty>\\d+)\\s*(?P<heap_size>\\d+)\\s*(?P<heap_alloc>\\d+)\\s*(?P<heap_free>\\d+)
\\s?(?P<lat>[0-9]{3,4}[NS])\\s?(?P<lon>[0-9]{3,5}[EW])
\\s?*,\\s*
\\s?\\_{2,}.*?\\_{2,}\\s?
\\s?+\\d+$
\\s[a-z
\\s\\(([a-zA-Z0-9\\:\\-\\_]+)\\)$
\\s\\(\\s*\\p{Alpha}+\\s*\\)\\s
\\s\\.(?P<nums>[0-9]+)
\\s\\.\\s|([-!#$%*+=\\?&@|~:<>^\\\\]*\\.[-!#$%*+=\\?&@|~:<>^\\\\]+)|([-!#$%*+=\\?&@|~:<>^\\\\]+\\.[-!#$%*+=\\?&@|~:<>^\\\\]*)|[-!#$%*+=\\?&@|~:<>^\\\\]+|(`([A-Z][_a-zA-Z0-9']*\\.)*[_a-z][_a-zA-Z0-9']*`)
\\s\\-c\\s(?P<ini>[^ \\t]+)\\s
\\S\\K
\\s\\K(?>([a-zA-Z\\.0-9\\-_]++))=(\\S+(?:\\s+\\S+)*?)(?=(?:\\s*[,;]|$|\\s+[a-zA-Z\\.0-9\\-_]+=))
\\s\\s++
\\s\\s+File \"(?P<path>.*)\", line .*
\\s\\\\x\\{b7\\}.*$
\\s{2,}+
\\s|\\Q$sep\\E|\"
\\s|\\R
\\s+ (?P<name>\\S+) \\s+ => \\s+\n               (?P<path>\\S+) \\s+ \\((?P<address>0x[0-9a-f]+)\\)
\\s+ -> \\s+ \\Q$clone\\E $
\\\\s+(
\\s+(
\\s+(?<!\\\\)\\#\\s.*$
\\s+(?=[a-zA-Z+!\\-_?0-9*~
\\s+(?=\\S*+$)
\\s+(?P<BD_ADDRESS>\\S+)\\s+ACL MTU:\\s+(?P<ACL_MTU>\\S+)\\s+SCO MTU:\\s+(?P<SCO_MTU>\\S+)
\\s+(?P<KEY>.*):\\s+(?P<VALUE>.*)
\\s+(?P<key>[a-zA-Z_-]+)=(['\"])(?P<value>.*?)(?!\\\\)\\2
\\s+(?P<KEY>\\S.*\\S+):\\s+(?P<VALUE>.*)
\\s+(?P<name>.+?)\\s+\\((?P<attributes>.+?)\\):\\s+(?P<description>.*)$
\\s+(?P<PCKT>\\d+)\\s+(?P<TIME>\\S+)\\s+(?P<SRC>\\S+)\\s+[^A-Za-z0-9\\s]\\s+(?P<DST>\\S+)\\s+(?P<PROTO>.*)\\s+id=(?P<ID>\\S+),\\s+seq=(?P<SEQ>\\S+),\\s+hop limit=(?P<HOP>\\S+).*$
\\s+(?P<PCKT>\\d+)\\s+(?P<TIME>\\S+)\\s+(?P<SRC>\\S+)\\s+[^A-Za-z0-9\\s]\\s+(?P<DST>\\S+)\\s+(?P<PROTO>.*)\\s+id=(?P<ID>\\S+),\\s+seq=(?P<SEQ>\\S+),\\s+ttl=(?P<TTL>\\S+).*$
------\\s+(?P<section>.*)\\s+-----
\\s+(?P<STATUS>\\[.*\\])\\s+(?P<SERVICE>\\S+)
\\s+(?P<status>\\w+)\\s+(?P<id>\\d+)\\s+(?P<name>\\w.*)$
\\s+(?P<tags>\\w(\\w|:)+)(\\s+(?P<amount>.+))?
\\s+(?P<TYPE>.*)\\s+Version:\\s(?P<VERSION>.*)\\s\\s(?P<KEY>\\w+):\\s(?P<VALUE>\\w+)
\\s+(?P<VALUE>.*)
\\s+(?P<VALUE>\\S+)
\\s+(?u)
\\s+(\\d+)\\s([A-Za-z\\.\\_]+),
\\s+[\"](.+?[^\\\\])[\"]
\\\\\\s+\\\\
\\s+\\\\
\\s+\\_(.*?)\\_\\s*
\\s+\\_\\_(.*?)\\_\\_\\s*
\\s+\n                      (?<year>20\\d\\d)   ## year\n                      \\s+\n                       @            ## at location\n                      \\s+\n                      [^;]+        ##  use ; as separator between place and date\n                      ;\n                      \\s+\n                      (?<start_month_en>
\\s+\\Q$sep\\E\\s+
\\s+\\Q[contact developer]\\E\\s*$
\\s+|&|-|\\+|\\*|\\/|\\||!|\\.|,|:|\\?|;|~|%|\\{|\\}|\\(|\\)|\\[|\\]|<|>|=|\\^|@|\\\\
\\s+|<[^>]++>
\\s++
\\s+alt=['\"](?<img-alt>.+?)['\"]
\\s+at\\s+\\Q$f\\E\\s+line\\s+\\d+
\\s+Description: (?P<description>.*?)
\\s+Description: (?P<description>.*?)$
\\s+inet (?P<ip4>[\\d\\.]+)(?:/| )
\\s+inet6 (?P<ip6>[\\da-f:]+)(?:/| )
\\s+LIMIT\\s+(?P<lower>\\d+)(,\\s+(?P<upper>\\d+))?(;)?$
\\S+-redhat-(?P<ver>\\S+)-\\S+
\\s+title=['\"](?<link-title>.+?)['\"]
\\s+try \\{([\\s\\r\\n]+this\\.__reentrant_call_depth[\\s\\S]+?)\\} catch \\(ex\\) \\{[\\s\\S]+?\\} finally \\{([^]+?)\\}\\s+\\/\\/\\s+\\/finally
\\s+up\\s+(?P<UPTIME_VAL>\\S.*\\S),\\s+(?P<USERS>\\d+)\\s+user.*
\\s+use\\s(?P<fqdn>[^\\s]+)(\\s+as\\s+(?P<alias>[^\\s]+))?;
\\sclass=\\\"[a-zA-Z_-\\s]*\\\"
\\sFROM <(?P<graphuri>[^>]+)>\\s
\\shref\\s{,3}=\\s{,3}(?P<delim>['\"])(.*?)(?P=delim)
\\shref=\n                                  ['|\"]\n                                  (\n                                    [^\\s]\n                                    [a-z0-9\\.\\/\\:\\-\\%\\+\\?\\!\\=\\&\\,\\:\\;\\~\\_]+\n                                  )\n                                  ['|\"]\n                                  [\\s|\\W]\n                                  
\\\\sim\\\\joinrel\\\\leadsto
\\\\sqrt\\s*(?<deg>\\[(?:(?>[^\\[\\]])|\\g<deg>)*\\])?\\s*(?<rad>\\{(?:(?>[^{}])|\\g<rad>)*\\})
\\ssrc\\s{,3}=\\s{,3}(?P<delim>['\"])(.*?)(?P=delim)
\\stime=(?P<hour>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})\\.(?P<ms>\\d{2})
\\surl\\(\\s?(?P<delim>['\"])(.*?)(?P=delim)
\\\\T
\\T
\\t#<Async::Node:0x\\h+>\\n
\\T.+
\t\t@^\\s*                           # Start at the beginning of a line, ignoring leading whitespace\n\t\t((?:\n\t\t  [^=;\\[\\]]|                    # Key names cannot contain equal signs, semi-colons or square brackets,\n\t\t  \\[[^\\[\\]]*\\]                  # unless they are balanced and not nested\n\t\t)+?)\n\t\t\\s*=\\s*                         # Key/value pairs are separated by equal signs (ignoring white-space)\n\t\t(?:\n\t\t  (\"(?:[^\"]|(?<=\\\\)\")*\")|     # Double-quoted string, which may contain slash-escaped quotes/slashes\n\t\t  ('(?:[^']|(?<=\\\\)')*')| # Single-quoted string, which may contain slash-escaped quotes/slashes\n\t\t  ([^\\r\\n]*?)                   # Non-quoted string\n\t\t)\\s*$                           # Stop at the next end of a line, ignoring trailing whitespace
\\t|\\n|\\u00lf|\\u000a|\\u000c|\\r
\\\\tasks_test\\\\
\\\\Tau 
\\Technicolor_([^;]+);
\\TechniSat ([^;]+);
\\\\Tennis\\\\Group A\\\\
\\\\textsc(\\{(?:[^{}]|\\g<1>)*\\})
\\\\textsuperscript(\\{(?:[^{}]|\\g<1>)*\\})
\\\\textsuperscript\\{\\\\($re)\\}
\\\\textsuperscript\\{\\\\($SUPERCMD_RE)\\}
\\\\TH 
\\\\Theta 
\\\\TLV
\\\\TLV_version
\\\\Type$
\\\\u
\\u
\\\\\\\\u
\\\\U
\\\\u(.)
\\\\U(.*?)(\\\\E|$)
\\\\u(....)
\\\\u(.{4})
\\\\u(?:[0-9A-Fa-f]{4,4})
\\\\U(?:[0-9A-Fa-f]{8,8})
\\\\u(?P<hexval>[0-9a-fA-F]{4})
\\\\U(?P<hexval>[0-9a-fA-F]{8})
\\\\u([[:xdigit:]]{4})
\\\\u([[:xdigit:]]+)
\\\\u([\\d\\w]{4})
\\\\u([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])
\\\\U([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])
\\\\u([\\da-fA-F]{4})
\\\\u([\\dA-Fa-f]{4})
\\\\U([\\dA-Fa-f]{8})
\\\\u([0-9A-F]{2})([0-9A-F]{2})
\\\\u([0-9a-f]{2})([0-9a-f]{2})
\\\\u([0-9a-f]{3})([0-9a-f])
\\\\u([0-9a-f]{4}(?:[0-9a-f]{4})?)
\\\\u([0-9a-f]{4})
\\\\u([0-9A-F]{4})
\\\\u([0-9a-f]{4})|\\\\\\\\
\\\\u([0-9A-F]{4})|\\\\U([0-9A-F]{8})
\\\\u([0-9a-f]{8})
\\\\u([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])
\\\\\\\\u([0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f][0-9A-Fa-f])
\\\\u([0-9a-fA-F]{1,4})
\\\\u([0-9A-Fa-f]{4,4})
\\\\u([0-9a-fA-F]{4})
\\\\u([0-9A-Fa-f]{4})
\\\\u([0-9A-Fa-f]{4})(?:\\\\u([0-9A-Fa-f]{4}))?
\\\\U([0-9a-fA-F]{4})([0-9a-fA-F]{4})
\\\\U([0-9A-Fa-f]{8,8})
\\\\u([0-9a-fA-F]{8})
\\\\U([0-9A-Fa-f]{8})
\\\\U([0-9a-fA-F]{8})
\\\\u([0-9a-fA-F]+)
\\\\u([0-9a-z]{4})
\\\\u([0-9a-zA-Z]{0,4})
\\\\U([0-9a-zA-Z]{0,8})
\\\\u([0-9a-zA-Z]{4})
\\\\u([a-f\\d]{4})
\\\\u([a-f0-9]{1,4})(?=')
\\\\u([a-f0-9]{4})
\\\\\\\\u([a-fA-F0-9]{4})
\\\\u([A-Fa-f0-9]{4})
\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]
\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\[uU]|\\\\(.)
\\\\u([a-fA-F0-9]{4})|\\\\u\\{([0-9a-fA-F]{1,})\\}
\\\\u([a-fA-F0-9]{4})|\\\\u\\{([0-9a-fA-F]+)\\}|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]
\\\\U([A-Fa-f0-9]{5,8})(?=')
\\\\u(\\p{XDigit}{4})
\\\\u(\\w\\w\\w\\w)
\\\\u(\\w{2})(?!\\w)
\\\\u(\\w{4})
\\\\u(\\w{4})(?:-\\\\u(\\w{4}))?
\\\\u(\\w{4}|\\w{2})
\\\\u(d[89ab][0-9a-f]{2})\\\\u(d[cdef][0-9a-f]{2})
\\\\u(d[8-b][0-9a-f]{2})\\\\u(d[c-f][0-9a-f]{2})
\\\\u....
\\\\u.{4}
\\\\u.{4}|\\\\.
\\\\u?([\\da-fA-F]{4})
\\\\\\\\u[[:xdigit:]]+
\\\\u[\\dAa-f]{4}
\\\\u[\\dA-F]{4}
\\\\u[\\da-f]{4}|\\\\x[\\da-f]{2}|\\\\[^UXux]
\\\\u[\\dA-Fa-f]{4}|\\\\x[\\dA-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\S\\s]|[^\\\\]
\\\\u[0-9]{4}
\\\\u[0-9ABCDEFabcdef]{1,4}
\\\\U[0-9ABCDEFabcdef]{1,8}
\\\\u[0-9abcdefABCDEF]{4,4}
\\\\u[0-9a-f]{4}
\\\\u[0-9A-F]{4}
\\\\u[0-9a-f]{4}|\\\\x[0-9a-f]{2}|\\\\[^ux]
\\\\u[0-9a-fA-F]{4,}
\\\\u[0-9a-fA-F]{4}
\\\\u[0-9a-fA-F]{4}|\\\\
\\\\u[0-9a-fA-F]{4}|\\\\x[0-9a-fA-F]{2}
\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]
\\\\U[0-9a-fA-F]{8}
\\\\u[a-f0-9]{1,6}
\\\\u[a-fA-F0-9]{4}
\\\\u[a-fA-F0-9]{4}|\\\\U[a-fA-F0-9]{8}|\\\\[^uU]
\\\\U[A-Fa-f0-9]{8}
\\\\u\\{
\\\\u\\{([\\da-f]+)\\}
\\\\u\\\\{([0-9a-f]{1,4})\\\\}
\\\\u\\{([0-9a-f]+)\\}
\\\\u\\{([0-9a-fA-F]{5,6})\\}
\\\\u\\{([0-9a-fA-F]+)\\}
\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})
\\\\u\\{(\\w{1,6})\\}
\\\\u\\{\\h{1,8}\\}
\\\\u\\{\\\\i\\}
\\\\u\\{A\\}
\\\\u\\{a\\}
\\\\u\\{E\\}
\\\\u\\{e\\}
\\\\u\\{G\\}
\\\\u\\{g\\}
\\\\u\\{I\\}
\\\\u\\{o\\}
\\\\u\\{O\\}
\\\\u\\{u\\}
\\\\u\\{U\\}
\\\\u\\h{4}
\\\\u\\w{4}
\\\\u{(.*)}
\\\\u{([\\dA-Fa-f]+)}
\\u{}
\\u{00000000}
\\u{00000001d306}
\\u{000001D306}
\\u{221a 2668}
\\u{30c6 30b9 30c8}
\\u{30eb 30d3 30fc}
\\u{D A}|(?!\\u{D A})[\\u{A}-\\u{D}\\u{85}\\u{2028}\\u{2029}]
\\u{-DDDD}
\\u{ff33 ff33 ff2c}
\\u{FFFFFFFF}
\\u{r}\\u{n}\\u{t}
\\\\u|\\\\\\\\|\\\\([0-9]+);
\\u{00}
\\u{0}
\\\\U00([\\da-fA-F]{6})
\\\\u00([0-9a-fA-F]{2})
\\\\U00(\\h+)
\u0000(?P<dir>\\d\\d)(\\\\|/)(?P<id>\\d{8})\u0000
\\\\u0000[*a-zA-Z_\\x7f-\\xff\\\\][a-zA-Z0-9_\\x7f-\\xff\\\\]*\\\\u0000
\\u0001\\d+[a-zA-Z\\_$]+
\u001b(B
\u001b[
\u001b[0K
\u001b[1K
\u001b[2K
\u001b[K
\u00ab(?>[^\u00bb\\\\]+|\\\\{2}|\\\\.)*\u00bb
\u00ab([^\u00bb\\\\]+|\\\\{2}|\\\\.)*\u00bb
\u00ae\u00a5\u00b3\u00df\u00b1z\u00a6\u00a9\u00c2I\u00ae\u00f8\u00b6O\u00a6\u00a8\u00a5\\\\
\u00d8\u00a1o|2\u00d9\u0088|\u00d8\u00a1(?=\\N{ARABIC DAMMA}\u00d9\u0088)
\u00d8\u00a6(?=\\N{ARABIC DAMMA})
\u00e9\u0083\u00a1\\Q$name\\E$
\\u{9}
\\u111:
\\u111@
\\u111`
\\u111g
\\u111G
\u201c(?>[^\u201d\\\\]+|\\\\{2}|\\\\.)*\u201d
\u201c([^\u201d\\\\]+|\\\\{2}|\\\\.)*\u201d
\u203b\\\\footnote\\{[^(?:\\\\footnote)]+\\}(?:
\u3042{0}\\p{foobarbaz}
\u3042{0}\\p{Hiragana}{4}
\u3042{0}\\p{Katakana}{4}
\\u{48}\\u{65}\\u{6c}\\u{6c}\\u{6f}\\u{20}\\u{77}\\u{6f}\\u{72}\\u{6c}\\u{64}
\u5173\u952e\u5185\u5bb9.+: (?P<password>.+)
\\u{65}\\u{65}
\u96f6[
\\u{a0}
\\\\uD[8-9a-fA-F]
\\\\uD[89A-Fa-f][0-9a-fA-F]{2}\\\\uD[c-fC-F][0-9a-fA-F]{2}
\\u{FC}
\\uFEFF?<[\\p{Alpha}]+
\\ug
\\\\ulcorner 
\\\\\\\\undef}
\\\\underline{(.*?)}
\\\\UniqueEntity$
\\\\uparrow 
\\\\Uparrow 
\\\\UpArrowBar 
\\\\updownarrow 
\\\\Updownarrow 
\\\\UpEquilibrium 
\\\\upharpoonleft 
\\\\upharpoonright 
\\\\uplus 
\\\\upsilon 
\\\\Upsilon 
\\\\upslopeellipsis 
\\\\upuparrows 
\\\\uranus 
\\\\urcorner 
\\url\\((.+)\\)
\\url\\(\\\"!!deep\\/deep-img.png\\\"\\)
\\url\\(\\\"?img.png\\\"?\\)
\\url\\(\\\"deep\\/deep-img.png\\\"\\)
\\url\\(\\\"file!deep\\/deep-img.png\\\"\\)
\\url\\(\\\"file\\?foo!deep\\/deep-img.png\\\"\\)
\\url\\(\\\"img.png\\\"\\)
\\url\\(\\s*([^\\)]+)\\s*\\)?
\\\\url\\{(.*?)\\}
\\\\url\\{(.+?)\\}
\\\\url|\\\\href|{\\\\[a-zA-Z]+}|\\$\\\\[a-zA-Z]+\\$|\\$[_^]{[0-9()+=\\-n]}\\$|`{2,3}|'{2,3}|-{2,3}|[!?]!|!\\?|{\\\\~}|\\\\[#$%&~_^\\\\{}]|{\\\\(?:[a-z] |[`\"'^~=.])\\\\?[a-zA-Z]}|[\\s\\S]
\\usecond
\\\\usepackage\\[pdftex\\]\\{graphicx\\}
\\\\usepackage\\{([^}]+)\\}
\\\\Users\\\\([a-z0-9]+)\\\\VenGO
\\\\Users\\\\([a-zA-Z0-9]+)\\\\AppData\\\\VenGO
\\uxx
\\uxxx
\\uxxxx
\\V
\\V(?P<version>\\d+)$
\\V\\d{0,}
\\\\Vdash 
\\\\VDash 
\\\\Vert 
\\\\vow\\{a\\}\\\\maq\\{\\}
\\\\vow\\{aN\\}\\\\maq\\{\\}
\\\\vow{a}\\\\maq{}
\\\\vow{aN}\\\\maq{}
\\\\Vvdash 
\\w(?=\\\\)|\\w(?=\\/)
\\W(\\$\\p{Alpha}\\p{Alnum}*)\\b
\\W(\\$\\p{Digit}+)\\b
\\W*(
\\w*?include \"(?P<include_path>.*?)\"\\w*$
\\w*\\multicolumn\\s*\\{\\s*2\\s*}
\\w*\\multirow\\s*\\{\\s*2\\s*}
\\w:[\\/|\\\\]
\\w:[\\\\]
\\w:\\\\
\\w?:(?P<name>[a-z]+)
\\w\\d+\\_N\\d+\\_CA\\d+\\_\\w\\d+
\\w\\K(?=[A-Z])
\\w+(?u)
\\w+(?u)[\\u0000-\\u00ff]
\\w+[\\p{Punct}\\s]+\\d+
\\w+\\\\
\\w+\\\\(.+)
\\w+\\_(\\w+)\\_Type$
\\w+\\_id$
\\w+\\s*=|((['\"]).*?(?<!\\\\)\\2|\\S+)
\\w+{3,}
\\w+{4,}
\\w++
\\\\watcher\\\\win32\\\\CodeHelper\\.exe
\\Wconfig.(?P<key>\\w+)\\s*=\\s*(?P<q>['\"])(?P<value>.*?)(?P=q);
\\\\\\\\x
\\\\x
\\X
\\X \\K ( \\X{$trim} ) \\z
\\\\x$
'\\\\x((?:[0-9a-f]{2})+)'
\\x-(.*)
\\\\x(..)
\\\\x([\\da-f]{2})
\\\\x([\\da-fA-F][\\da-fA-F])
\\\\x([\\da-fA-F]{2})
\\\\x([\\dA-Fa-f]{2})
\\\\x([0-9a-f][0-9a-f])
\\\\x([0-9a-f]{2})
\\\\x([0-9a-f]+)
\\\\x([0-9a-fA-F][0-9a-fA-F])
\\\\x([0-9A-Fa-f]{2})
\\\\x([0-9a-fA-F]{2}|[0-9a-fA-F])
\\\\x([0-9a-fA-F]{3,4})
\\\\x([0-9a-fA-F]+)
\\\\x([a-f0-9]{2})
\\\\x([A-Fa-f0-9]
\\\\x([a-fA-F0-9]{1,2})
\\\\x([a-fA-F0-9]{2})
\\\\x(\\w\\w) 
\\\\x(\\w{2})
\\\\x?[0-9a-fA-F]{2,}
\\\\x[01][0-9a-f]
\\\\x[0-9]{2}
\\\\x[0-9a-f]{2}
\\\\x[0-9A-Fa-f]{1,2}
\\\\x[0-9a-fA-F]{2,2}
\\\\x[0-9a-fA-F]{2}
\\\\x[0-9A-Fa-f]{2}
\\\\\\\\x[0-9A-Fa-f]{2}
\\\\x[0-9A-Fa-f]{2}|\\\\u[0-9A-Fa-f]{4}|\\\\U[0-9A-Fa-f]{8}
\\\\x[a-f0-9]{2}
\\\\x\\(([a-z\\d]+)\\)
\\\\x\\{
\\\\x\\{(.*?)\\}
\\\\x\\{([^}]+)\\}
\\\\x\\{([0-9a-f]+)\\}
\\\\x\\{([0-9a-fA-F]+)\\}
\\\\x\\{([0-9a-z]+)\\}
\\\\x\\{([a-f0-9]
\\\\x\\{([a-f0-9]{2,})\\}
\\\\x\\{(\\h+)\\}
\\\\x\\{?([0-9a-f]+)}?
\\\\x\\{?([0-9a-fA-F]+)\\}?
\\\\x\\{[0-9a-fA-F]{4,}\\}.*$
\\\\x\\{[0-9a-fA-f]+\\}
\\\\x\\{08(..)}
\\\\x\\h{2}
\\X\\-Postal\\-MsgID\\:\\s*([a-z0-9]+)
\\\\x\\w\\w
\\\\x\\w{2}
\\X\\z
\\\\x{([0-9a-z]+)}
\\\\x{?([0-9a-f]+)}?
\\X+
\\x0
\\x0(\\w+|\\*)\\x0
\\x00(\\s{0,
\\x1:
\\x1@
\\x1`
\\x{102c}\\x{1039}([\\x{1000}-\\x{1021}])
\\x{1031}([\\x{1000}-\\x{1021}])(\\x{103e})?(\\x{103b})?
\\x{1036}\\x{1039}([\\x{1000}-\\x{1021}])
\\x{1039}\\x{103c}\\x{103a}\\x{1039}([\\x{1000}-\\x{1021}])
\\x{103c}([\\x{1000}-\\x{1021}])([\\x{1000}-\\x{1021}])?
\\x{103c}\\x{1004}\\x{103a}\\x{1039}([\\x{1000}-\\x{1021}])
\\x{103c}\\x{1039}([\\x{1000}-\\x{1021}])
\\x{1047}(?=[\\x{102c}-\\x{1030}\\x{1032}\\x{1036}-\\x{1038}\\x{103d}\\x{1038}])
\\x1b\\\\
\\x1g
\\x1G
\\x23ifdef\\x20\\_\\_cplusplus.+$
\\x4
\\x9
\\xA
\\xa
\\xAG
\\xF
\\xf
\\xg
\\\\xi 
\\\\Xi 
\\\\y
\\y
\\\\Y
\\Z\\\\\\M-Z
^    (?:\\d+:\\d+:)?(
^    ([A-Za-z0-9\\\\.\\\\-\\\\_]+?) \\\\(([^)]+)\\\\)$
^    at ((null)|(Timeout))\\._onTimeout \\((?:.*[/\\\\])?.generated.js:3:11\\)$
^    at ((null)|(Timeout))\\._onTimeout \\((?:.*[/\\\\])?.generated\\.js:3:11\\)$
^    at (?:Object\\.)?eval \\(eval at (<anonymous>|exports.test) \\((?:.*[/\\\\])?line1\\.js:1001:101\\)
^    at (?:Object\\.)?eval \\(eval at (<anonymous>|exports.test) \\(eval at (<anonymous>|exports.test) \\((?:.*[/\\\\])?line1\\.js:1001:101\\)
^    at bar \\((?:.*[/\\\\])?line3\\.js:1003:103\\)$
^    at eval \\(eval at foo \\((?:.*[/\\\\])?line2\\.js:1002:102\\)
^    at foo \\((?:.*[/\\\\])?.generated.js:2:24\\)$
^    at foo \\((?:.*[/\\\\])?.generated.js:4:15\\)$
^    at foo \\((?:.*[/\\\\])?.original\\.js:1:1\\)$
^    at foo \\((?:.*[/\\\\])?\\.original\\.js:1:1\\)$
^    at foo \\((?:.*[/\\\\])?line2\\.js:1002:102\\)
^    at foo \\((?:.*[/\\\\])?line2\\.js:1002:102\\)$
^    at foo \\((?:.*[/\\\\])?line5\\.js:1005:105\\)$
^    at foo \\((?:.*[/\\\\])?original.js:1004:5\\)$
^    at foo \\((?:.*[/\\\\])?original\\.js:1002:5\\)$
^    at foo \\((?:.*[/\\\\])?original\\.js:1004:5\\)$
^    at foo \\(.*[/\\\\]original.js:1004:5\\)$
^    at foo \\(.*[/\\\\]original\\.js:1004:5\\)$
^    at myOriginalName \\((?:.*[/\\\\])?\\.original.js:1000:11\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?.generated.js:1:34\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?\\.generated.js:1:34\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?\\.generated.js:4:1\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?\\.generated\\.js:1:34\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?line1\\.js:1001:101\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?line4\\.js:1004:104\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?line7\\.js:1007:107\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?original.js:1001:5\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?original.js:1002:5\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?original\\.js:1001:5\\)$
^    at Object\\.exports\\.test \\((?:.*[/\\\\])?original\\.js:1002:5\\)$
^  - `(?P<name>[^`]*)`.*?(\\*\\(default (?P<value>(.*))\\)\\*)?$
^  (?P<key>[a-z]+): (?P<value>.*)$
^  (?P<platform>.*)$
^  (?P<text>[\\x20-\\x7E]+)$
^  at ([^\\(]*)\\(([^\\(]*)) 
^  File \"(?P<filename>.*?)\", line (?P<line>\\d+), in (?P<func>.*)$
^  Installed: (?<version>
^ (
^ ( (?: [^0-9@#.,E'*] | (?: ' [^']* ' )++ )+ ) 
^ ( [^\\\\$sep]* (?: \\\\(?:.|$) [^\\\\$sep]* )* ) 
^ ( [^\\\\\\.]* (?: \\\\(?:.|$) [^\\\\\\.]* )* ) 
^ ( \\Q$args->{self_alias}\\E \\. .+ ) 
^ ((?:$PREFIX\\s+)? \\S*[\\/\\\\])? $k (-|\\s|\\d|$) 
^ (-(?P<shortname>\\w), )?(--(?P<name>[\\w-]+))?(, --(?P<deprecation_name>[\\w-]+))?( (?P<value>\\w+))?\\s+(?P<help>.*)$
^ (.*? \\Q$/\\E )
^ (?: \\Q$relalias.\\E )? (.+)
^ (?:0x)? \\p{ahex}+ \\z
^ (?<absolute>//)?+ (?<path>[^!?#]++) (?<signal>!)?+ (?<query>\\?[^#]*)?+ (?<fragment>\\#.*)?+ $
^ (?= \\p{ASCII}+ \\z) (?! \\d) \\w+ \\z
^ (?=[\\w\\\\]+)
^ (?i:dbi) \\: SQLite (?: \\: | \\W ) .*? (?: dbname\\= )? (?: \\:memory\\: | t [\\/\\\\] var [\\/\\\\] DBIxClass\\-) 
^ (?i:dbi) \\: SQLite \\: (?: dbname\\= )? (?: \\:memory\\: | t [\\/\\\\] var [\\/\\\\] DBIxClass\\-) 
^--- (?P<filename>[^\\t\\n]+)(?:\\t(?P<timestamp>[^\\n]+))?
^ (?P<indent> [ \\t]+) [^\\s]+
^ (?P<key>[a-zA-Z0-9]+)\\| (?P<value>.*)
^ (?P<name>[\\w-]+)?\\s+(?P<description>.*)$
^ ([\\w\\\\\\/.]+) (\\( ( (?>[^()]+) | (?2) )* \\))? (?:\\@(.+))? $
^ ([\\w\\\\\\/.]+) (\\( (?: (?>[^()]+) | (?2) )* \\))? (\\-\\>|\\:\\:|\\#) (\\w+) (\\( (?: (?>[^()]+) | (?5) )* \\))? $
^ ([^_{}]+) ({(.+?)})? (\\s\\_[a-zA-Z]+)? \\s?$
^ (\\Q$prefix\\E)  # prefix\n\t                ([^#/]+)         # table name\n\t                (?:              # optionally...\n\t                  ([#/])         #   URI divider\n\t                  (.+)           #   other bit\n\t                )? $
^ (\\W+)? ([0-9A-Fa-f]{3}{1,2}) (\\W+)? $
^ *(.+?) *(
^ *(?P<blocks>\\d*) blocks (?:super (?P<superblock_version>\\d\\.\\d) )?(?:level (?P<raid_level>\\d), (?P<chunk_size>\\d*)k chunk, algorithm (?P<algorithm>\\d) )?(?:\\[(?P<total_members>\\d*)/(?P<actual_members>\\d*)\\])?(?:(?P<rounding_factor>\\d*)k rounding)?.*$
^ *(?P<events>\\d+) events processed$
^ *(?P<major>\\d+) *(?P<minor>\\d+) *(?P<num_blks>\\d+) (?P<dev_name>\\S+)$
^ *(?P<type>integer(?: *\\* *[0-9]+)?|logical|character(?: *\\* *[0-9]+)?|real(?: *\\* *[0-9]+)?|complex(?: *\\* *[0-9]+)?|type) *(?P<parameters>\\((?:[^()]+|\\((?:[^()]+|\\([^()]*\\))*\\))*\\))? *(?P<attributes>(?: *, *[a-zA-Z_0-9]+(?: *\\((?:[^()]+|\\((?:[^()]+|\\([^()]*\\))*\\))*\\))?)+)? *(?P<dpnt>::)?(?P<vars>[^\\n]+)\\n?
^ *(\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"|'([^'\\\\]*(\\\\.[^'\\\\]*)*)'|true|false|null|undefined) *$
^ *-? ?(?P<key>.*?):
^ *\\[.*\\] *recovery = (?P<percent>\\d*\\.?\\d*)% \\(\\d*/\\d*\\) finish=(?P<remaining_time>\\d*\\.?\\d*)min speed=(?P<speed>\\d*)K/sec$
^ *\\\\i +([^\\s]+)
^ *bitmap: (?P<allocated_pages>[0-9]*)/(?P<total_pages>[0-9]*) pages \\[(?P<page_size>[0-9]*)KB\\], (?P<chunk_size>[0-9]*)KB chunk.*$
^ .*\\b \\Q$called\\E ( \\(?\\s* | \\s+ )
^ .*\\b \\Q$called\\E ( \\s* \\( \\s* | \\s+ )
^ [\\* ]{13,} PROGRAM (?P<key>(STARTED (AT|ON|BY|IN))|(RAN (ON|BY))|STOPPED IN|PROCESS ID|ENDED AT)\\s+(?P<value>.*)$
^ [\\N{spu}\\N{err}]
^ \\* @(?P<class>\\w+)\\(\"(?P<contents>\\w+)\"\\)$
^ \\*\\*\\* (?P<tablename>.+?) \\*\\*\\*$
^ \\[\\-W(?P<name>.*)\\]$
^ \\N{ali}
^ \\N{ill} 
^ \\N{obs}
^ \\N{xref}
^ \\p{alnum} + \\z
^ \\P{alphabetic} + \\z
^ \\p{alphabetic} + \\z
^ \\p{ASCII} + \\z
^ \\p{whitespace}* \\z
^ \\p{XID_Start} \\p{XID_Continue}* \\z
^ \\Q$alias\\E \\. ([^\\.]+) $ 
^ \\Q$clone\\E \\s+ -> \\s+
^ \\Q$entry_dir\\E / (.*) $
^ \\Q$key\\E
^ \\Q$opts->{_recursion}{_base}$SL\\E (.+) 
^ \\Q$opts->{_recursion}{_base}\\E (.+) 
^ \\Q$PINTO_PROTOCOL_DIAG_PREFIX\\E (.*)
^ \\Q$re\\E
^ \\s* class \\s+ \\w+ \\s* < \\s* \\w+(::\\w+)* [\t ]*+ [\r\n] 
^ \\s* SELECT \\s* \\Q$rs_attrs->{_selector_sql}
^ \\s+ \\Q$_\\E \\: \\s+ 
^ {0,4}(?P<content>.*)
^ {4}+<div>\\n {6}text\\n {4}</div>
^!(
^!(?P<align>[<|>|=]?)(?P<string>.+?)!(?::(?P<href>[^ \\\\(\\\\)]+))?
^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]
^!\\[((?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*)\\]\\(\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*\\)
^!\\\\[(?P<text>.*?)\\\\]\\\\((?P<url>.*?)(?:\\\\s\"(?P<title>.*?)\")?\\\\)
^!int!cb!\\Q$action\\E!
^# +InnoDB_IO_r_ops: (?P<io_r_ops>[0-9]+)  InnoDB_IO_r_bytes: (?P<io_r_bytes>[0-9]+)  InnoDB_IO_r_wait: (?P<io_r_wait>[0-9.]+).*$
^# +InnoDB_pages_distinct: (?P<pages_distinct>[0-9]+).*
^# +InnoDB_rec_lock_wait: (?P<rec_lock_wait>[0-9.]+)  InnoDB_queue_wait: (?P<queue_wait>[0-9.]+).*$
^# === [Pp]ython (?P<op>[<>=]{1,2}) (?P<major>[\\d])\\.(?P<minor>[\\d]+) ===[\\s]*$
^# Bytes_sent: (?P<bytesSent>[0-9.]+) *Tmp_tables: (?P<tmpTables>[0-9.]+) *Tmp_disk_tables: (?P<tmpDiskTables>[0-9]+) *Tmp_table_sizes: (?P<tmpTableSizes>[0-9]+).*$
^# Filesort: (?P<filesort>[[:alpha:]]+)  Filesort_on_disk: (?P<filesort_on_disk>[[:alpha:]]+)  Merge_passes: (?P<merge_passes>[0-9]+).*$
^# In C:\\\\Windows\\\\Temp\\\\packer\\\\
^# InnoDB_trx_id: (?P<trxId>[A-F0-9]+) *$
^# QC_Hit: (?P<query_cache_hit>[[:alpha:]]+)  Full_scan: (?P<full_scan>[[:alpha:]]+)  Full_join: (?P<full_join>[[:alpha:]]+)  Tmp_table: (?P<tmp_table>[[:alpha:]]+)  Tmp_table_on_disk: (?P<tmp_table_on_disk>[[:alpha:]]+).*$
^# Query_time: (?P<queryTime>[0-9.]+) *Lock_time: (?P<lockTime>[0-9.]+) *Rows_sent: (?P<rowsSent>[0-9]+) *Rows_examined: (?P<rowsExamined>[0-9]+)( *Rows_affected: (?P<rowsAffected>[0-9]+))?.*$
^# Query_time: (?P<queryTime>[0-9.]+).*$
^# Time: (?P<datetime>[0-9]+ [0-9:.]+)
^# Time: (?P<time>[^ ]+)Z *$
^# User@Host: (?P<user>[^#]+) @ (?P<host>[^#]+?)( Id:.+)?$
^# VAGRANT-BEGIN:( 
^## (?P<local>\\S+?)(\\.{3}(?P<remote>\\S+?)( \\[(ahead (?P<ahead>\\d+)(, )?)?(behind (?P<behind>\\d+))?\\])?)?$
^## (?P<local>\\S+?)(\\.{3}(?P<remote>\\S+?)( \\[(ahead (?P<ahead>\\d+)(, )?)?(behind (?P<behind>\\d+))?])?)?$
^##(?P<key>[^<#]+?)=(?P<val>[^<#]+$)
^##\\s*(?P<verline>[^\\n]*?)\\s*$(?P<body>.*?)(?=^##|\\Z)
^##CODE_START##\n(?P<code>.*?)^##CODE_END##(\n|$)([\\s\\n]*?^##STDOUT_START##\n(?P<stdout>.*?)^##STDOUT_END##(\n|$))?([\\s\\n]*?^##END_OUT_START##\n(?P<end_out>.*?)^##END_OUT_END##(\n|$))?
^##teamcity\\[testStarted name='(?P<TaskName>.*)' captureStandardOutput='(?P<TaskOutPut>.*)']
^#(
^#(?P<columns>.*)$
^#(?P<chapterId>\\d+)$
^#(?P<name>[A-Za-z0-9]+)$
^#(?P<tag>([a-zA-Z][\\w:.-]*))$
^#([\\w\\-\\\\]+)
^#.+?[\\n\\z]
^#?(?:[0-9a-f]{1,2}+){3}$
^#?(\\h{3,8})$
^#?+(?:[0-9a-f]{1,2}+){3}$
^#?+[0-9a-f]{3}(?:[0-9a-f]{3})?$
^#?+[0-9a-f]{3}(?:[0-9a-f]{3})?\\z
^#[ \\t]*(
^#[ \\t]*escape[ \\t]*=[ \\t]*(?P<escapechar>.).*$
^#[ \\t]*platform[ \\t]*=[ \\t]*(?P<platform>.*)$
^#[ \\t]*pylint:[ \\t]*(disable|enable)[ \\t]*=(?P<messages>[a-zA-Z0-9\\-_, \\t]+)$
^#\\\\(.*)
^#\\\\([[:graph:]])$
^#\\[(?P<eq>=*)\\[\\.rst:$
^#\\d+\\h*
^#\\h+$
^#\\s*([\\pL\\pN\\p{Latin}]+.+)
^#\\s*@\\(#\\)\\s*(?P<filename>\\S+)\\s+(?P<version>\\S+)\\s*$
^#\\s*\\U$what\\E\\s*(.*)\\n
^#\\s?doitlive\\s+(?P<option>prompt|shell|alias|env|speed|unalias|unset|commentecho):\\s*(?P<arg>.+)$
^#\\\\x[a-zA-Z0-9]+$
^#{3}(?P<mode>\\\\.{1,2}) 
^#|[^\\\\]#
^#~#host=(?P<execHost>.*?)#~#
^#~#id=(?P<jobid>(?P<jobidNumber>.*?))#~#
^#~#id=(?P<jobid>(?P<jobidNumber>.*?))#~#state=(?P<state>.*?)(?:#~#time_rem=(?P<remainingWalltime>.*?))?#~#
^#+[^#]*[^\\\\]#+$
^#<Azure::Armrest::BaseModel:0x\\h+ name=\"test\", age=33>$
^#<PNM::\\w+Image:0x\\h+ PBM 5x6 Bilevel>$
^#<PNM::\\w+Image:0x\\h+ PGM 4x3 Grayscale, maxgray=250>$
^#<PNM::\\w+Image:0x\\h+ PPM 5x3 Color, maxgray=6>$
^#<Proc:0x\\h+ \\(lambda\\)>$
^#<Proc:0x\\h+@
^#data\\n(?:([^]*?)\\n)?(?:#script-(on|off)\\n)?#errors\\n((?:[^\\n]*\\n)*?)(?:#document-fragment\\n([^\\n]*)\\n)?(?:#script-(on|off)\\n)?#document\\n([^]*?)$
^#define $name\\s*\\(([^)]+)\\)\\s+(.+?[^\\\\])$
^#define __ARM_NR_(?P<syscall>[a-z0-9_]+)\\s+\\(__ARM_NR_BASE\\+(?P<number>\\d+)\\)
^$_\\_
^${ \\($self->base_directory()) }
^${\\(CC_FIELD)}:
^${\\(FROM_FIELD)}:
^${\\(INFO)}
^${\\(NOTIFY_FIELD)}:
^${\\(REPLYTO_FIELD)}:
^${\\(SENDPR_VER_FIELD)}:
^${\\(SUBJECT_FIELD)}:
^${\\(TO_FIELD)}:
^${\\REFBASE_ERROR}(\\?|$)
^${\\REFBASE_LOGIN}(\\?|$)
^${ignore_case}$prefix\\Q$typed_text\\E
^${ignore_case}$prefix\\Q$typed_text\\E(.*)
^${ignore_case}\\Q$choice\\E$
^${ignore_case}\\Q$typed_text\\E
^${j}\\_
^$alias\\_
^$attr\\W*=\\W*(?P<value>.*)$
^$caseregex\\Q$typedtext\\E
^$d\\\\
^$dir([/\\\\]|$)
^$dir/\\Q$dtname\\E
^$dir[/\\\\]*(.*)$
^$dom\\_
^$dow[$_-1]
^$entity\\_
^$expat->{_matches}->[$cm->{ptr}]->{char}$
^$first_character(.*?)(?<!\\\\)$first_character
^$flav[\\/\\\\]
^$global_directory[/\\\\]?
^$i\\Q$w\\E.*\\n\\Q$w\\E
^$label\\_(\\w+)\\.$extension$
^$name\\_
^$name\\_(.+)$
^$p([\\w\\.\\-\\_]+)\\/$
^$qrt\\x9(MX)?\\ ?preference\\ =\\ (\\d{1,5})\\, mail\\ exchanger\\ =\\ (.*?)$
^$re\\Q$san_name\\E$
^$state->{'stopconds'}[$i % ($#{$state->{'stopconds'}}+1)]
^$target\\_
^$tname\\_?
^$type[\\/\\\\]
^$types{all}(?:[\\w\\.\\-]*\\.)*\\Q$zone\\E:
^$word\\Q$DELIM
^$x(\\_|\\Z)
^%(?<format_code>.)(?<pan>[\\d]{1,19}+)\\^(?<name>.{2,26})\\^(?<expiration>[\\d]{0,4}|\\^)(?<service_code>[\\d]{0,3}|\\^)(?<discretionary_data>.*)\\?\\Z
^%([^%\\s]++)%$
^%([^\\\\])
^%([a-pt-vyzA-PR-VX-Z]|[QqrswWx]
^%[a-z_\\\\]
^%extend\\s+(
^&#x(\\h+);$
^&(#?+[0-9a-zA-Z]++);
^&(?P<ref>[^ ]+) *(?P<value>.*)
^(        \\* \\[\\`
^(  \\'\\Q$attr\\E)
^(
^--(
^( (?: (?: ' [^']* ' )*+ | [^';]+ )+ ) (?: ; (.+) )? $
^( (?: [^.] | \\[ (?: \\\\. | [^\\]\\\\] )* \\] )* )\n                            \\. (.*) \\z
^( (??{ $C_arg }) , )* $ 
^( [0-9a-z]{2,}+: (?: // (?: [a-z]: )? )? | [a-z]: )
^( {
^( {0,
^( {2,}|\\\\)\\n(?!\\s*$)
^( +\\d+:( +0x[0-9a-f]+ -)? (?P<symbol>.+?)(::h[0-9a-f]{16})?|\\s+at ([A-Za-z]:)?(/[A-Za-z0-9_ .]+)+:\\d+)$
^(!|
^(# 
^(#)?([\\w\\-\\*\\\\]+)
^(#\\h{3})\\h$
^(#\\h{6})$
^(#\\h{6})\\h{2}$
^(#\\pL[\\pL\\d\\-_.]*[\\pL\\d])$
^(#\\S+)@(irc.\\S+.\\w+{2,3})\\/(\\S+)\\/([\\.&\\|\\d]+)$
^(#|--).*\\R*
^(#|0x)?(
^(#|0x|0X)(\\p{IsXDigit})+$
^(#<
^(#define\\s+
^(${\\REFBASE_SHOW}\\?)
^($balancedQuoteString (?![\\\"$ldquo$rdquo])[ \\t\\n\\r\\pP]) \"\n               
^($i\\Q$word\\E.*)\\n
^(%|\\\\)
^(%Q|%W|%r|%x|.?%|.?\\\\)
^(&|@q|\\\\hline)\\s*
^(&|\\\\\\\\|\\\\hline)\\s*
^((
^(((?=(?>.*?(::))(?!.+\\3)))\\3?|([\\dA-F]{1,4}(\\3|:(?!$)|$)|\\2))(?4){5}((?4){2}|((2[0-4]|1\\d|[1-9])?\\d|25[0-5])(\\.(?7)){3})\\z
^(((?=.*(::))(?!.*\\3.+\\3))\\3?|([\\dA-F]{1,4}(\\3|:\\b|$)|\\2))(?4){5}((?4){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$
^(((?P<host>[a-fA-F\\d.:]+):)?(?P<ext>[\\d]*)(-(?P<ext_end>[\\d]+))?:)?(?P<int>[\\d]+)(-(?P<int_end>[\\d]+))?(?P<proto>/(udp|tcp))?$
^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$
^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$
^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$
^((([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\u0022)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\u0022)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$
^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$
^(((`[^`]*($|`))+)|((\\[[^\\]]*($|\\]))(\\][^\\]]*($|\\]))*)|((\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*(\"|$))+)|(('[^'\\\\]*(?:\\\\.[^'\\\\]*)*('|$))+))
^((.*?[^\\\\])?\\\"{3})
^((/|[a-zA-Z]:).*[/\\\\])[^/\\\\]+?$
^((?!
^((?!\\\\)[^${}[\\]])+
^((?!\\.)
^((?&FILTER))$GRAMMAR$
^((?&FILTER)|(?&FUNC_NAME)(?:\\(\\s*(?&EXPR)\\s*\\))?)\\s+((?&OP))\\s+((?&EXPR))$GRAMMAR$
^((?&FUNC_NAME))(?:\\(\\s*((?&EXPR))\\s*(?:,\\s*((?&EXPR))\\s*)*\\))?$GRAMMAR$
^((?:
^((?:(?:\\s?[*+-]|\\d+\\.)\\s+(?:[^]*?)$(?:\\r?\\n?))+)((?:\\r?\\n)*)
^((?:(?:> )(?:[^]*?)$(\\r?\\n?))+)([\\n\\r]*)
^((?:.*?[\\/\\\\])?)([^\\/\\\\]+?)$
^((?:[
^((?:[^)\\\\]+|\\\\.)*)\\)
^((?:[^\"\\\\]|\\\\.)*\n                    (?:\"(?:[^\"\\\\]|\\\\.)*\"(?:[^\"\\\\]|\\\\.)*)*)\n                    \\((?:[^()\\\\]|\\\\.)*\\)
^((?:[^\\\\]*)|(?:(?:.*[^\\\\])?)(?:\\\\\\\\)*)=([^=]+)$
^((?:[^\\s:].*\\n)+):\\s+([^]+)$
^((?:[a-z-]+:)?\\/\\/(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$
^((?:[a-z-]+:)?\\/\\/(?:[^\\/\\?#]+\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]+[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$
^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$
^((?:[a-z-]+:)?\\/+?(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$
^((?:\"(?>(?:(?>[^\"\\\\]+)|\\\\.)*)\"|\\S+)\\s*)
^((?:\\(\\[\\^\\\\\\/\\]\\*\\)(?:\\(\\?\\![\\w\\|]+\\))?\\(\\[\\^\\\\\\/\\]\\*\\)|(?:[^\\r\\n(\\[\\\"\\\\]|\\\\.))+)(\\\\\\/|\\/|\\\\).*$
^((?:\\.\\.[\\\\/])?\\w+[\\\\/][-\\w/\\\\]+)\\.*(.*)
^((?:\\\\.|[^\"\\\\])*)\"
^((?:\n\t\t    \\\\[pPN]\\{ [^{}]* \\}\n\t\t  | \\\\c?(?s:.)\n\t\t  | [^\\s\\[\\]]\n\t\t  | \\[\\: [^\\[\\]]+ \\:\\]\n\t\t\t)+)
^((?:\\Q$indentStr\\E)*)(.*)
^((?:\\s|\\w)++)(.*)$
^((?:\\w|-)+):\\ (.*?)(?<!\\\\)\\n
^((?<class>[\\w\\\\]*)?::)?(?<const>[\\w]+)$
^((?P<addr>\\*?0x[0-9a-fA-F]+|\\d+)|(?P<source>.+):(?P<line>\\d+)|(?P<sym>.+?(?P<off>\\+0x[0-9a-fA-F]+|\\d+)?))(@(?P<file>.+))?$
^((?P<addr>0x[0-9a-fA-F]+|\\d+)|(?P<sym>[\\w:]+(?P<off>\\+0x[0-9a-fA-F]+|\\d+)?)|(?P<source>.+):(?P<line>\\d+))(@(?P<file>.+))?$
^((?P<address>.*):)?(?P<port>\\d+)$
^((?P<address>[^:]+):)?(?P<port>\\d+)$
^((?P<bound_address>[\\w.]+):)?(?P<local_port>\\d+)(?P<hostname>)(?P<remote_port>)$
^((?P<bound_address>[\\w.]+):)?(?P<local_port>\\d+):(?P<hostname>[\\w.]+):(?P<remote_port>\\d+)$
^((?P<constant>c)/)?(?P<var_name>.+)$
^((?P<days>[-+]?\\d+) days?,? )?(?P<sign>[-+]?)(?P<hours>\\d+):(?P<minutes>\\d+)(:(?P<seconds>\\d+(\\.\\d+)?))?$
^((?P<domain>(([\\w-]+|\\*)(\\.)?)*|\\@)?\\s+\n                               (?P<ttl>\\d+)?\\s+\n                               (?P<class>\\w+)?)?\\s+\n                               (?P<type>\\w+)\\s+\n                               (?P<data>.*)
^((?P<freq>OCNL|FRQ|CONS)\\s+)?\n                             LTG(?P<type>(IC|CC|CG|CA)*)\n                                ( \\s+(?P<loc>( OHD | VC | DSNT\\s+ | \\s+AND\\s+ |\n                                 [NSEW][EW]? (-[NSEW][EW]?)* )+) )?\\s+
^((?P<indent>\\s+)\")((?P<level>warning|error)s?)(\": \\[)$
^((?P<indent>\\s+)\")(.+)(\": )
^((?P<indent>\\s+)\")(?P<name>description|code)(\": \")(.+)(\",?)$
^((?P<int>\\d+)\\s*)?(?P<num>\\d)/(?P<den>\\d+)$
^((?P<label>[^+]+)\\+)?(?P<id>[^@]+)@(?P<domain>(hotmail|live)\\.com)$
^((?P<label>[^+]+)\\+)?(?P<id>[^@]+)@(?P<domain>.+)$
^((?P<label>[^+]+)\\+)?(?P<id>[^@]+)@(?P<domain>gmail\\.com)$
^((?P<label>[^+]+)\\+)?(?P<id>[^@]+)@(?P<domain>prontomail\\.com)$
^((?P<label>[^+]+)\\+)?(?P<id>[^@]+)@(?P<domain>yahoo\\.(ca|com))$
^((?P<m1>\\\\w+)@)?(?P<m2>.*?)(:(?P<m3>\\\\d+))?$
^((?P<m1>\\w+)@)?(?P<m2>.*?)(:(?P<m3>\\d+))?$
^((?P<method>[^:/]*)://)?(?P<fullpath>(?P<host>[^/]*)(/(?P<path>.*))?)$
^((?P<mul>[0-9]+)n\\+)(?P<pos>[0-9]+)$
^((?P<name>.*)<(?P<namedEmail>[^>]+)>|(?P<email>.+))$
^((?P<name>.*?)<(?P<namedEmail>[^>]+)>|(?P<email>.+))
^((?P<name>.*?)<(?P<namedEmail>[^>]+)>|(?P<email>.+))$
^((?P<new_name>.+?)\\s+)??<\\s*(?P<new_email>.+?)\\s*>((\\s+(?P<old_name>.+?))??\\s+<\\s*(?P<old_email>.+?)\\s*>)?
^((?P<proto>tcp|unix)/)?(?P<host>[-:a-zA-Z0-9._]*):(?P<dno>[0-9]+)(\\.(?P<screen>[0-9]+))?$
^((?P<retval>[^=]+?)\\s*=|class)?\\s*(?P<head>[\\w\\.]+\\s?\\(.*?\\))\\s*(?P<sep>[:<>=-]*)\\s*(?P<tail>.*)$
^((?P<scheme>.+)://)?(?P<address>[^:]+)(:(?P<port>[0-9]+))?$
^((?P<scheme>[^:/?#]+):(//))?((\\3|//)?(?:(?P<user>[^:]+):(?P<pass>[^@]+)@)?(?P<host>[^/?:#]*))(:(?P<port>\\d+))?(?P<path>[^?#]*)(\\?(?P<query>[^#]*))?(#(?P<fragment>.*))?
^((?P<scheme>[^:/?#]+):)?((?P<_netloc_sep>//)(?P<authority>[^/?#]*))?(?P<path>[^?#]*)(\\?(?P<query>[^#]*))?(#(?P<fragment>.*))?
^((?P<scheme>[^:/?#]+):)?((?P<_netloc_sep>//)(?P<authority>[^/?#]*))?(?P<path>[^?#]*)(\\?(?P<query>[^#]*))?(#(?P<fragment>.*))?$
^((?P<scheme>[^:\\/?#]+):)?(\\/\\/(?P<authority>[^\\/?#]*))?(?P<path>[^?#]*)(\\?(?P<query>[^#]*))?(#(?P<fragment>.*))?$
^((?P<username>[^:]+?)(:(?P<password>[^@]+?))?@)?(?P<hostname>[a-zA-Z0-9.]+?)(:(?P<port>\\d+?))?/(?P<database>.+?)$
^((?P<week>\\d+)w)?((?P<day>\\d+)d)?((?P<hour>\\d+)h)?((?P<minute>\\d+)m)?((?P<second>\\d+)s)?$
^((?P<weeks>-?((\\d*\\.\\d+)|\\d+))\\W*w((ee)?(k(s)?)?)(,)?\\W*)?((?P<days>-?((\\d*\\.\\d+)|\\d+))\\W*d(ay(s)?)?(,)?\\W*)?((?P<hours>-?((\\d*\\.\\d+)|\\d+))\\W*h(ou)?(r(s)?)?(,)?\\W*)?((?P<minutes>-?((\\d*\\.\\d+)|\\d+))\\W*m(in(ute)?(s)?)?(,)?\\W*)?((?P<seconds>-?((\\d*\\.\\d+)|\\d+))\\W*s(ec(ond)?(s)?)?)?\\W*$
^((?P<weeks>\\d+) ?w(eeks?)?)? ?((?P<days>\\d+) ?d(ays?)?)?$
^((?u:[!-!\\\\&-\\\\&\\\\*-/:-\\\\?A-Z\\\\^-_a-z\\\\|-\\\\|\\\\~-\\\\~])(?u:[!-!\\\\&-\\\\&\\\\*-\\\\?A-Z\\\\^-_a-z\\\\|-\\\\|\\\\~-\\\\~])*)
^((?u:[0-9])+((?u:[E-Ee-e])(?u:[0-9])+))
^((?u:[0-9])+)
^((?u:\")(?u:[\\u{0}-!\\\\#-\\u{10ffff}])*(?u:\"))
^((?u:\\\\())
^((?u:\\'))
^((?u:\\\\)))
^((?u:`)(?u:[\\u{0}-!\\\\#-\\u{10ffff}])*(?u:`))
^((?u:0)((?u:b)|(?u:B))(?u:[\\\\.-\\\\.0-1])*)
^((?u:0)(?u:[O-Oo-o])(?u:[0-7])*)
^((?u:0)(?u:[X-Xx-x])(?u:[0-9A-F])*)
^((?u:false))
^((?u:true))
^(([
^(([,'])\\g{-1}*)$
^(([.]{2,})|/|\\\\)*
^(([[:alnum:]])[[:alnum:]\\_\\-]+)$
^(([\\p{L}_]+\\\\)+)?[\\p{L}_]*\\*$
^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$
^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$
^(([^.\\/?
^(([^[*?\\\\]|\\\\.)*)([[*?\\\\])?(.*)
^(([^\\(\\)\\\\]|\\\\.)*\\)\\s*)
^(([^\\(\\)\\\\]|\\\\.)+)
^(([^\\\\/]|\\\\/|\\\\)*)/?(.*)$
^('([^'\\\\]|\\\\.)*')
^'(([^'\\\\]|\\\\.)*)'
^(([^\\\\]|\\\\.)*?[^\\\\]\\$[a-zA-Z_\\x7f-\\uffff][a-zA-Z0-9_\\x7f-\\uffff]*)
^(([^\\\\]|\\\\.)*?[^\\\\]\\$[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)
^(([-=])\\2{74}\\n)(?:\\Q$new_source_trace\\E)?\\z
^(([a-z\\_]+)(\\.([a-z\\_]+))*).*$
^(([A-Z]:
^(([a-z]:)?[\\\\/]|\\\\\\\\)$
^(([a-z]+)(\\d*))(
^(([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD](([\\-.0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0300-\\u036F\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD])*[\\-0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0300-\\u036F\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD])?)?:([A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[0-9:]|%[0-9A-Fa-f][0-9A-Fa-f]|\\\\[!#$%&'()*+,\\-.\\/;=?@_~])((([\\-0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0300-\\u036F\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[.0-9:]|%[0-9A-Fa-f][0-9A-Fa-f]|\\\\[!#$%&'()*+,\\-.\\/;=?@_~]))*([\\-0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0300-\\u036F\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[0-9:]|%[0-9A-Fa-f][0-9A-Fa-f]|\\\\[!#$%&'()*+,\\-.\\/;=?@_~]))?|([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD](([\\-.0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0300-\\u036F\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD])*[\\-0-9A-Z_a-z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0300-\\u036F\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uD800-\\uDFFF\\uF900-\\uFDCF\\uFDF0-\\uFFFD])?)?:)
^(([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*\\*([\\_A-z0-9]*)\\*(\\d*)\\*(\\d*)\\*([\\_A-z][A-z0-9])*\\*([\\_A-z][A-z0-9]*)*(\\,[\\_A-z][A-z0-9]*)*\\*(([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*)*\\*((?:[a-zA-Z]\\:){0,1}(?:[\\/]*[\\w.]+){1,})*\\*(([a-zA-Z_$][a-zA-Z\\d_$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*)*)$
^(([a-zA-Z0-9_\\-]*|[a-zA-Z0-9_\\-]+/[a-zA-Z0-9_\\-]+)#|GH-)(?P<issue>\\d+)$
^(([a-zA-Z0-9_-]+)\\\\)*([a-zA-Z0-9_-]*)Bundle
^((\\$|@@|@|)[$A-Za-z_\\x7f-\\uffff\\-][$\\w\\x7f-\\uffff\\-]*)([^\\n\\S\\s]*:(?![\\*\\=:$A-Za-z\\_\\x7f-\\uffff]))
^((\\\\)?[\\p{L}_\\d]+)$|((\\\\)?(?:[\\p{L}_\\d]+\\\\+)+[\\p{L}_\\d]+)$
^((\\\\\\\\)|([^\\/\\\\]+\\:))
^((\\\\)begin)({)code(})(\\s*\\n)?
^((\\\\)end)({)code(})
^('(\\\\.|[^'\\\\])*')
^((\\/|[a-zA-Z]:\\\\)[^\\(\\)<>\\\\'\\\"\\[\\]]+)
^((\\\\cr)[^a-zA-Z]|\\\\\\\\)
^((\\s*\\/\\/.*\\n|\\s*#extension.*\\n)+)[^]*$
^((\\s*<(?:\\w+:)?\\w[-.\\w]* )[^ \"]+\"[^\"]+\")( .
^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)
^((==)|(~=)|(<=)|(>=)|(<<)|(>>)|(\\.[\\+\\-\\*/\\^\\\\]))
^((AC|AP|NC|NG|NM|NP|NR|NT|NW|XM|XP|XR|YP|ZP)_\\d+|(NZ\\_[A-Z]{4}\\d+))(\\.\\d+)?$
^((append|prepend|
^((built)|(pxt_modules)|(node_modules))[\\/\\\\]
^((hd(?P<Unit>\\d+)),.*(?P<Partition>\\d+))$
^((https?://)?(/|\\\\)?([^/\\\\]+(/|\\\\))*)([^/\\\\\\.]+)((\\.[^/\\\\\\.]+)?)$
^((https?://)?(/|\\\\)?([^/\\\\]+(/|\\\\))*)[^/\\\\\\.]+(\\.[^/\\\\\\.]+)?$
^((https?://)?(/|\\\\)?([^/\\\\]+(/|\\\\))*?)([^/\\\\]+(/|\\\\)?)$
^((https?|ftp|gopher|telnet|file|notes|ms-help):((\\/\\/)|(\\\\\\\\))+[\\w\\d:#@%\\/;$()~_?\\+-=\\\\\\.&]*)$
^(')[^'\\\\]*(?:\\\\.[^'\\\\]*)*\\z\n\t\t\t                 |\n\t\t\t                ^(\")[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\\z
^(.
^(.(?:[^${}!=~?| ]|(?<=\\\\)[${}!=~?|])*)$
^(.)\\^(?P<url>.*?)\\$\\1
^(.*
^(.*)${ \\( $self->{_extension} ) }$
^(.*)${ \\( $self->{_Sf_extension} ) }$
^(.*)(
^(.*)((?:\\s*\\[\\s*\\d+\\s*\\]\\s*)|(?:\\s*\\[\\s*\"(?:[^\"\\\\]|\\\\.)*\"\\s*\\]\\s*)|(?:\\s*\\[\\s*'(?:[^'\\\\]|\\\\.)*'\\s*\\]\\s*))(.*)$
^(.*)([/\\\\])$
^(.*)([/\\\\])([^/\\\\]+)$
^(.*)(\\Q$path\\E)$
^(.*):((?:\\s*
^(.*)?(\\*|\\_)(\\S+.*)?$
^(.*)?(\\*|\\_){2}(\\S+.*)?$
^(.*)[/\\\\][^/\\\\]+$
^(.*)[/\\Q$SEP\\E]
^(.*)[\\/\\\\]([^\\/\\\\]+)$
^(.*)[\\\\\\/]\\Q$basemodule\\E$
^(.*)[\\\\\\/]\\Q$wxmainfile\\E$
^(.*)\\\\(.)$
^(.*)\\\\(.*)$
^(.*)\\\\([^\\\\]*)$
^(.*)\\\\([^\\\\]/++)$
^(.*)\\\\([^\\\\]+)$
^(.*)\\\\([^\\]+)$
^(.*)\\\\([wsdc])$
^(.*)\\\\(\\n)
^(.*)\\.(
^(.*)\\.\\Q$ext\\E$
^(.*)\\@\\Q$self->{'domain'}\\E$
^(.*)\\[([\\p{Alnum}]+):([\\p{Alnum}]+)\\](.*)
^(.*)\\_(.*)$
^(.*)\\_(year|month|day)$
^(.*)\\_end
^(.*)\\_not
^(.*)\\_start
^(.*)\\_translation$
^(.*)\\{(.*?)(?<!\\\\)\\}(.*)$
^(.*)\\\\\\\\label\\\\{(
^(.*)\\\\label\\{([^}]*)\\}
^(.*)\\\\Mock$
^(.*)\\Q$aclabel\\E$
^(.*)\\Q$acstr\\E$
^(.*)\\Q$NESTED_KEY_TAG\\E$
^(.*)\\Q$pinfo\\E$
^(.*)\\Q$short\\E\\.pm\\z
^(.*)\\\\queryid\\\\([^\\\\]+)(\\\\|$)
^(.*)\\R
^(.*)_(
^(.*?
^(.*?(?:(?!\\\\).|))(['\"])(.*)
^(.*?(?<!\\\\):|\\w*(?<!\\\\)=)
^(.*?([^\\\\]|))(\\z|\\\\(n|r|l|c))
^(.*?) ((?<=.)\\.[^.\\/:\\\\]+)?$
^(.*?) (\\Q$args{'ALIAS2'}\\E)$
^(.*?)(
^(.*?)((?:\\\\(?:[nrtbf\\\\\\(\\)0-7]|$cr)|\\015\\012?).*)
^(.*?)((?<!\\\\)[\\>\\{\\|\\}])
^(.*?)(?!\\\\)([()])(.*)
^(.*?)(?<!\\\\)$ch
^(.*?)(?<!\\\\)(\\Q$self->{'quote_terminator'}\\E)(.*)$
^(.*?)(?<!\\\\)\\.(.*)$
^(.*?)([\\?\\_\\!]+)$
^(.*?)(\\\\)?:(.*)$
^(.*?)(\\\\\\\\|\\\\([aenr]|0\\d\\d)|\\\\(.)|!)
^(.*?)?(?<!\\\\)(\\#\\{$curly_brace_n\\})
^(.*?)?\\\\\\\\(\\#\\{$curly_brace_n\\})
^(.*?)[\\/@]\\Q$d\\E$
^(.*?)[\\\\/]*(([^/\\\\]*?)(\\.([^\\.\\\\/]+?)|))[\\\\/\\.]*$
^(.*?)[^\\/\\\\]*$
^(.*?)[^a-z0-9](?P<airdate>(\\d{2})[^a-z0-9](\\d{2})[^a-z0-9](19|20)(\\d{2}))[^a-z0-9]
^(.*?)[^a-z0-9](?P<airdate>(19|20)(\\d{2})[.\\/-](\\d{2})[.\\/-](\\d{2}))[^a-z0-9]
^(.*?)\\\\
^(.*?)\\\\(.*)$
^(.*?)\\\\([\\\\\"'nrt]|u[0-9A-Fa-f]{1,4}|x[0-9A-Fa-f]{1,2}|[0-7]{1,3}|[\r\n]{1,2})
^(.*?)\\\\([^\\\\]+)$
^(.*?)\\Q$eledelim\\E
^(.*?)\\Q$header\\E(.*?)</table[^>]*>\\s*</td[^>]*>\\s*
^(.*?)\\Q$header\\E(.*?)</tr[^>]*>\\s*(?=<tr)
^(.*?)\\Q$headsplitter\\E(.*)
^(.*?)\\Q$match\\E
^(.*?)\\Q$record_delim\\E
^(.*?)\\Q$short
^(.*?)\\Q$timezone\\E$
^(.*?)\\R
^(.*?)\\s*\\|\\s*'((?:[^'\\\\]|\\\\.)*)'\\s*$
^(.*?)\\s+(\\/|!\\/)(.*?)(?<!\\\\)\\/\\s+(.*?)\\n
^(.*?[/\\\\]?)([^/\\\\]+)$
^(.*?[^\\\\]);$
^(.*?\\.\\Q$Config{dlext}\\E\\.\\d+)\\..*
^(.*?\\\\Controller\\\\(.+)Controller)::(.+)Action$
^(.*[/\\\\])?[^A-Z][^/\\\\]*[/\\\\]
^(.*[/\\\\]?[^/\\\\]*)(\\.[^./\\\\]+)$
^(.*[/\\\\]+)
^(.*[\\/\\#])([a-z\\_][a-z0-9\\-\\_]*)$
^(.*[\\/\\#])([a-z0-9\\-\\_\\:]+)$
^(.*[\\/\\#])([a-z0-9\\-\\_]+)
^(.*[\\/\\\\])[^\\/\\\\]*$
^(.*[\\Q$tchrs\\E])[^\\Q$tchrs\\E]*$
^(.*[^\\\\])$separator.*
^(.*[^\\\\])\\|
^(.*\\(.*)\\b\\Q$args{column}\\E\\b
^(.*\\\\)
^(.*\\\\)?(.*)$
^(.*\\.)?\\Q${rule}\\E$
^(.*\\/)?(?P<subject_id>sub-[a-zA-Z0-9]+)(_(?P<session_id>ses-[a-zA-Z0-9]+))?(_(?P<task_id>task-[a-zA-Z0-9]+))?(_(?P<acq_id>acq-[a-zA-Z0-9]+))?(_(?P<rec_id>rec-[a-zA-Z0-9]+))?(_(?P<run_id>run-[a-zA-Z0-9]+))?
^(.*\\:)\\Q$word
^(.*\\b)\\Q$pos\\E\\b
^(.*\\d)\\h*(\\D)$
^(.*\\p{IsWord})\\.$
^(.*\\Q$EOL\\E)
^(.*\\S+)?(\\*|\\_)(\\s+.*)?$
^(.*\\S+)?(\\*|\\_){2}(\\s+.*)?$
^(...)\\t\\Q$_[0]\\E\\t
^(.[$alwaysarg]|\\+[$chanmodes->[2]])
^(.[^\\'\\\"\\\\]*)(.*)$
^(.{
^(.{0,
^(.{0,20}?)(???)\\s*(\\d+[??]?)(?)(\\s*)$
^(.{0,20}?)(\\d+)(\\s*)(??|?|??|?|??|?)(\\s*)$
^(.{1,20}?)(?????|?????|???|???|??|?|?|?|?|?|?|?|?|?|?|?)(\\s*)$
^(.|\n)*?(?P<first_letters>\\S+\\s?\\S+)
^(.|\\w|\\/|\\\\)*$
^(.+((abgx360EFNet|EFNet\\sFULL|FULL\\sabgxEFNet|abgx\\sFULL|abgxbox360EFNet)\\s|illuminatenboard\\sorg|Place2(hom|us)e.net|united-forums? co uk|\\(\\d+\\)))?(?P<title>.*?)[\\.\\-_ ](v\\.?\\d\\.\\d|PAL|NTSC|EUR|USA|JP|ASIA|JAP|JPN|AUS|MULTI(\\.?\\d{1,2})?|PATCHED|FULLDVD|DVD5|DVD9|DVDRIP|PROPER|REPACK|RETAIL|DEMO|DISTRIBUTION|REGIONFREE|[\\. ]RF[\\. ]?|READ\\.?NFO|NFOFIX|PSX(2PSP)?|PS[2-4]|PSP|PSVITA|WIIU|WII|X\\-?BOX|XBLA|X360|3DS|NDS|N64|NGC)
^(.+)(?!\\\\)/.*$
^(.+)(?:
^(.+)(?:\\Q$Dec_char\\E)?$
^(.+)(?<!\\\\)/(.*)(?<!\\\\)/([i]*)$
^(.+)?([^\\\\]+)$
^(.+)[/\\\\]$
^(.+)[/\\\\][^/\\\\]+
^(.+)\\\\(.+)$
^(.+)\\\\(.+Bundle)\\\\Controller\\\\(.+)Controller$
^(.+)\\\\([^\\\\]+Bundle)(\\\\.+?)$
^(.+)\\_(url|path)$
^(.+)\\_\\d+x\\d+$
^(.+)\\Q${XML::XQL::DirNode::SEP}\\E(.+)$
^(.+)\\Q$Dec_char\\E(.+)$
^(.+)\\Q$libfixedpart\\E([\\d\\.]+dylib)$
^(.+)\\Q$start\\E(.+)$
^(.+)\\\\Tests(\\\\.*)Test$
^(.+?(19|20)\\d\\d\\-([a-z0-9]{3}|[a-z]{2,}|C4))\\\\
^(.+?(x264|XviD)\\-TVP)\\\\
^(.+?)(
^(.+?)($Courriel::Helpers::LINE_SEP_RE)\\g{2}
^(.+?)(?:${\\(RE_EOL)}){2}
^(.+?)[\\\\\\/]\\Q$e\\E([\\\\\\/][^\\\\\\/]+|)([\\\\\\/][^\\\\\\/]+|)[\\\\\\/]*$
^(.+?)\\$?(?!\\\\)/
^(.+?)\\\\(.*)$
^(.+?)\\.\\Q$endpoint\\E
^(.+?)\\Q${separator}\\E(.+)=([^=\\@]+)\\@(.+)
^(.+?)\\Q--$boundary\\E(--)?\\r?\\n
^(.+?)\\s+([^\\s()]+\\s*(\\((?:[^()]+|(?3))*\\)))\\s*(.*)
^(.+?)\\s+:\\s+([^() ]+)\\s*(\\(((?:$re_quot|[^()]|(?3))*)\\))?$
^(.+?)=(.*?[^\\\\]),\\s*(.*)
^(.+?)=\"(.*?[^\\\\])\"$
^(.+[\\/\\\\])[^\\/\\\\]+
^(.+[^\\\\]):$
^(.+\\\\)(.+)$
^(.+\\\\)?(.+)(Bundle\\\\Entity)
^(.+Bundle)\\\\.+\\\\(.+)$
^(/
^(/[\\w]{2})?(?:\\/?)(?:index)?(
^(/|\\\\|[a-z]:(\\\\|/)|\\\\|//|\\./|\\.\\\\)
^(/|\\\\|\\w:/|\\w:\\\\|\\./|\\.\\\\)
^(/dev|
^(/tmp/manhole-)?(?P<pid>\\d+)$
^(:(?P<prefix>[^ ]+) +)?(?P<command>[^ ]+)(?P<params>( +[^:][^ ]*)*)(?: +:(?P<message>.*))?$
^(? *?|???|??)[?:]
^(?!
^(?!(
^(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){255,})(?!(?:(?:\\x22?\\x5C[\\x00-\\x7E]\\x22?)|(?:\\x22?[^\\x5C\\x22]\\x22?)){65,}@)(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E\\pL\\pN]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F\\pL\\pN]|(?:\\x5C[\\x00-\\x7F]))*\\x22))(?:\\.(?:(?:[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2F-\\x39\\x3D\\x3F\\x5E-\\x7E\\pL\\pN]+)|(?:\\x22(?:[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x21\\x23-\\x5B\\x5D-\\x7F\\pL\\pN]|(?:\\x5C[\\x00-\\x7F]))*\\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-+[a-z0-9]+)*\\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-+[a-z0-9]+)*)|(?:\\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\\]))$
^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z\\_a-z][$A-Z\\_a-z0-9]*$
^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$
^(?!(?>(?1)\"?(?>\\\\[ -~]|[^\"])\"?(?1)){255,})(?!(?>(?1)\"?(?>\\\\[ -~]|[^\"])\"?(?1)){65,}@)((?>(?>(?>((?>(?>(?>\\x0D\\x0A)?[\t ])+|(?>[\t ]*\\x0D\\x0A)?[\t ]+)?)(\\((?>(?2)(?>[\\x01-\\x08\\x0B\\x0C\\x0E-'*-\\[\\]-\\x7F]|\\\\[\\x00-\\x7F]|(?3)))*(?2)\\)))+(?2))|(?2))?)([!#-'*+\\/-9=?^-~-]+|\"(?>(?2)(?>[\\x01-\\x08\\x0B\\x0C\\x0E-!#-\\[\\]-\\x7F]|\\\\[\\x00-\\x7F]))*(?2)\")(?>(?1)\\.(?1)(?4))*(?1)@(?!(?1)[a-z0-9-]{64,})(?1)(?>([a-z0-9](?>[a-z0-9-]*[a-z0-9])?)(?>(?1)\\.(?!(?1)[a-z0-9-]{64,})(?1)(?5)){0,126}|\\[(?:(?>IPv6:(?>([a-f0-9]{1,4})(?>:(?6)){7}|(?!(?:.*[a-f0-9][:\\]]){7,})((?6)(?>:(?6)){0,5})?::(?7)?))|(?>(?>IPv6:(?>(?6)(?>:(?6)){5}:|(?!(?:.*[a-f0-9]:){5,})(?8)?::(?>((?6)(?>:(?6)){0,3}):)?))?(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\\.(?9)){3}))\\])(?1)$
^(?!(?>(?1)\"?(?>\\\\[ -~]|[^\"])\"?(?1)){255,})(?!(?>(?1)\"?(?>\\\\[ -~]|[^\"])\"?(?1)){65,}@)((?>(?>(?>((?>(?>(?>\\x0D\\x0A)?[\\t ])+|(?>[\\t ]*\\x0D\\x0A)?[\\t ]+)?)(\\((?>(?2)(?>[\\x01-\\x08\\x0B\\x0C\\x0E-'*-\\[\\]-\\x7F]|\\\\[\\x00-\\x7F]|(?3)))*(?2)\\)))+(?2))|(?2))?)([!#-'*+\\/-9=?^-~-]+|\"(?>(?2)(?>[\\x01-\\x08\\x0B\\x0C\\x0E-!#-\\[\\]-\\x7F]|\\\\[\\x00-\\x7F]))*(?2)\")(?>(?1)\\.(?1)(?4))*(?1)@(?!(?1)[a-z0-9-]{64,})(?1)(?>([a-z0-9](?>[a-z0-9-]*[a-z0-9])?)(?>(?1)\\.(?!(?1)[a-z0-9-]{64,})(?1)(?5)){0,126}|\\[(?:(?>IPv6:(?>([a-f0-9]{1,4})(?>:(?6)){7}|(?!(?:.*[a-f0-9][:\\]]){8,})((?6)(?>:(?6)){0,6})?::(?7)?))|(?>(?>IPv6:(?>(?6)(?>:(?6)){5}:|(?!(?:.*[a-f0-9]:){6,})(?8)?::(?>((?6)(?>:(?6)){0,4}):)?))?(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(?>\\.(?9)){3}))\\])(?1)$
^(?!.*\\/\\/)[a-z0-9\\_][a-z0-9\\_\\-\\/]*$
^(?!//[^/])[ \\t]*(
^(?![\"\\\\]).
^(?!['\\\\]).
^(?!\\.(?:\\/|\\\\))
^(?!^var .*)(?!.*(%>|{|})$)(?!.*(:|=).*(;|,)$)(?!.*return .*;$)(?!.*=)(?!^(if |unless ).*(\\=|\\&|\\|))(?!^(if |unless )\\S+$)(?!^end$)(?!.*do.*\\|$)\\s*(?<no-markup-content>[[:alnum:]]+[[:alnum:][:space:][:punct:]]*)
^(?!email\\.smtp\\_forward).*$
^(?!hash\\_for).*_(path|url)$
^(-?(?:[_a-z]|(?:\\\\[0-9a-f]+ ?))(?:[_a-z0-9\\-]|\\\\(?:\\\\[0-9a-f]+ ?))*)\\s*:
^(-?)([\\d\\.
^(?:
^(?: {2,}|\\\\)\\n
^(?: +([^ \\w*.#\\\\]) +|( )+|([^ \\w*.#\\\\]))(?! *$)
^(?:#(([a-zA-Z_]|[^\\x00-\\x7F]|-([a-zA-Z_\\-]|[^\\x00-\\x7F])|-?\\\\([\\da-fA-F]{1,6}\\s|[^\\n\\da-fA-F]))([\\w_\\-]|[^\\x00-\\x7F]|\\\\([\\da-fA-F]+\\s|[^\\n\\da-fA-F]))*)#(([a-zA-Z_]|[^\\x00-\\x7F]|-([a-zA-Z_\\-]|[^\\x00-\\x7F])|-?\\\\([\\da-fA-F]{1,6}\\s|[^\\n\\da-fA-F]))([\\w_\\-]|[^\\x00-\\x7F]|\\\\([\\da-fA-F]+\\s|[^\\n\\da-fA-F]))*))
^(?:#(([a-zA-Z_]|[^\\x00-\\x7F]|-([a-zA-Z_\\-]|[^\\x00-\\x7F])|-?\\\\([\\da-fA-F]{1,6}\\s|[^\\n\\da-fA-F]))([\\w_\\-]|[^\\x00-\\x7F]|\\\\([\\da-fA-F]+\\s|[^\\n\\da-fA-F]))*))
^(?:${\\(RE_EOL)})+
^(?:$RE_all_quote_NC|(?:[^=<>\\/]|[\\\\]\\/)*)$
^(?:(
^(?:(((([^\\n\\r\\*\\\\\\/\\[])|(\\\\([^\\n\\r]))|(\\[([^\\n\\r\\]\\\\]|(\\\\([^\\n\\r])))*\\]))(([^\\n\\r\\\\\\/\\[])|(\\\\([^\\n\\r]))|(\\[([^\\n\\r\\]\\\\]|(\\\\([^\\n\\r])))*\\]))*)\\/(((([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc])|[$_a-zA-Z]|(\\\\[u]([0-9a-fA-F]){4}))|([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f])|[0-9])*)))
^(?:((?:[$A-Z_a-z]|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))(?:(?:[$A-Z_a-z]|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))|\\d)*))
^(?:'((?:\\\\'|\\\\[^']|[^'\\\\])*)')
^(?:'((?:\\\\'|\\\\[^']|[^\\n\\r'\\\\])*)')
^(?:(([a-zA-Z_]|[^\\x00-\\x7F]|-([a-zA-Z_\\-]|[^\\x00-\\x7F])|-?\\\\([\\da-fA-F]{1,6}\\s|[^\\n\\da-fA-F]))([\\w_\\-]|[^\\x00-\\x7F]|\\\\([\\da-fA-F]+\\s|[^\\n\\da-fA-F]))*))
^(?:(([a-zA-Z_]|[^\\x00-\\x7F]|-([a-zA-Z_\\-]|[^\\x00-\\x7F])|-?\\\\([\\da-fA-F]{1,6}\\s|[^\\n\\da-fA-F]))([\\w_\\-]|[^\\x00-\\x7F]|\\\\([\\da-fA-F]+\\s|[^\\n\\da-fA-F]))*)\\()
^(?:((\"(([^\\\"\\\\\\n\\r]+)|(\\\\((([\\'\\\"\\\\bfnrtv])|([^\\'\\\"\\\\bfnrtv0-9xu]))|((?:[1-7][0-7]{0,2}|[0-7]{2,3}))|([x]([0-9a-fA-F]){2})|([u]([0-9a-fA-F]){4})))|(\\\\(\\r\\n|\\r|\\n)))*\")|('(([^\\'\\\\\\n\\r]+)|(\\\\((([\\'\\\"\\\\bfnrtv])|([^\\'\\\"\\\\bfnrtv0-9xu]))|((?:[1-7][0-7]{0,2}|[0-7]{2,3}))|([x]([0-9a-fA-F]){2})|([u]([0-9a-fA-F]){4})))|(\\\\(\\r\\n|\\r|\\n)))*')))
^(?:((\"(?:([^\\n\\r\"\\\\]+)|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))*\")|('(?:([^\\n\\r'\\\\]+)|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))*')))
^(?:((\\\\.)|(\\[((\\\\.)|[^\\\\\\]])*\\])|[^[\\\\\\/*])((\\\\.)|(\\[((\\\\.)|[^\\\\\\]])*\\])|[^[\\\\\\/])*\\/(([a-zA-Z$_]|([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc])|\\\\)|[0-9]|([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1\\u0cf2\\u0d02\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200c\\u200d\\u203f\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]))*)
^(?:((\\\\.)|(\\[((\\\\.)|[^\\\\\\]])*\\])|[^[\\\\\\/])*\\/(([a-zA-Z$_]|([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc])|\\\\)|[0-9]|([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1\\u0cf2\\u0d02\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200c\\u200d\\u203f\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]))*)
^(?:((`(?:([^\\n\\r\\\\`]+)|(\\\\(?:(?:(?:[\"'\\\\bfnrtv])|(?:[^\\d\"'\\\\bfnrt-vx]))|(?:[x](?:[\\dA-Fa-f]){2})|(?:[u](?:[\\dA-Fa-f]){4}))))*`)))
^(?:(?!
^(?:(?![a-z])\\d\\s?[\\\\h;m,.\\-:\\/\\s]?\\s?\\d?\\s?(am|pm|a\\.m|p\\.m|a\\sm|p\\sm|a.m.|p.m.|a. m|p. m|a .m|p .m|a . m|p . m)?\\s?)+$
^(?:(?:
^(?:(?:(?:
^(?:(?:[%=][0-9A-Fa-f]{2})|(?:\\\\u[0-9A-Fa-f]{4}))+
^(?:'(?:[^\\n\\r'\\\\]|\\\\.)*(?:'|$)|\"(?:[^\\n\\r\"\\\\]|\\\\.)*(?:\"|$))
^(?:'(?:[^\\n\\r'\\\\]|\\\\.)*'|\"(?:[^\\n\\r\"\\\\]|\\\\.)*(?:\"|$))
^(?:(?:[A-Z]:
^(?:(?:\\(([^\\)]*)\\))|(?:([^\\(\\)]+)))[\\s\\r\\n]*=>[\\s\\r\\n]*(?:(?:\\{([^]*?)\\})|(?:(([^\\s\\r\\n\\{)])[^]*?)))$
^(?:'(?:\\\\(?:.|([ \\n\\r\\t\\f]))|[^'\\\\])*')
^(?:'(?:\\\\(?:.|(\\r\\n|\\r|\\n\\b))|[^'\\\\])*')
^(?:'(?:\\\\['bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*')
^(?:'(?:\\\\['bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*')
^(?:(?:\\t| {4}){
^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:/\\b(?P<network>(?:3[0-2]|[12][0-9]|[1-9]))\\b)$
^(?:(?:array|bool|float|int|string)[ \\t]*+)?\\$
^(?:(?:file)|(?:\\w:)?\\\\)
^(?:(?:function.*\\(([^]*?)\\))|(?:([^\\(\\)]+?)\\s*=>)|(?:\\(([^]*?)\\)\\s*=>))[^]+$
^(?:(?:git|ssh)://)?([^@]+@)?(?P<host>[^/]+)/(?P<path>[^$]+)$
^(?:(?:git|ssh)://)?[^@]+@(?P<host>[^:]+):(?P<path>[^$]+)$
^(?:(?:https?):(?:(?://)|(?:\\\\\\\\))|www\\.)(?:[\\w\\d:#@%/;$()~_?\\+-=\\\\\\.&](?:#!)?)*
^(?:(?i)$IDNA_PREFIX)(\\p{ASCII}+)$
^(?:(?P<days>-?\\d+) (days?, )?)?((?:(?P<hours>-?\\d+):)(?=\\d+:\\d+))?(?:(?P<minutes>-?\\d+):)?(?P<seconds>-?\\d+)(?:\\.(?P<microseconds>\\d{1,6})\\d{0,6})?$
^(?:(?P<days>-?\\d+) (days?, )?)?((?:(?P<hours>\\d+):)(?=\\d+:\\d+))?(?:(?P<minutes>\\d+):)?(?P<seconds>\\d+)(?:\\.(?P<microseconds>\\d{1,6})\\d{0,6})?$
^(?:(?P<domain>[a-zA-Z0-9\\-]+)\\:)??(?P<vault>[^\\/:]+)(?:\\:?\\/.*)?$
^(?:(?P<hours>\\d+):)?(?P<minutes>\\d+):(?P<seconds>\\d+)$
^(?:(?P<local>[^@]+)@)?(?P<host>.*?)(?:/(?P<resource>.+?))?$
^(?:(?P<message>(?!expected)(?!got)(?!matcher)(?!source).+?)(?:, )?)?(?:expected: '(?P<expected>.+)', got: '(?P<got>.+?)'(?:, )?)?(?:matcher: '(?P<matcher>.+?)'(?:, )?)?(?:source:\\s+at\\s+(?P<source>.+?))?$
^(?:(?P<name>.+)\\s)?(?(name)<|<?)(?P<email>[^\\s]+?)(?(name)>|>?)$
^(?:(?P<name>[^:]+):(?P<val>.+)|(?P<kind>.+))$
^(?:(?P<post_ps>[\\._-]?)(?P<post_t>post|rev|r)(?P<post_is>[\\._-]?)|(?P<post_im>-))?$
^(?:(?P<pypi>https?://[^/]+/pypi)/)?\n                        (?P<name>[-A-Za-z0-9_.]+)\n                        (?:/(?P<version>[-A-Za-z0-9.]+))?$
^(?:(?P<scheme>[a-z]+):)?(?://(?P<host>[^/?#]+))?(?P<path>(?:/|^)(?!/)[^?#]*)?(?:\\?(?P<query>[^#]*))?(?:#(?P<fragment>.*))?()$
^(?:(?P<size>[0-9]+x[0-9]+)(?:\\||$))?(?P<title>.*)$
^(?:(?P<user>[^@]+)@)?(?P<host>[^:\\s]+):(?:(?P<port>[0-9]{1,5})/)?(?P<path>[^\\\\].*)$
^(?:(?P<user>[^@]+)@)?(?P<host>[^:]+)(?::(?P<port>\\d+))?$
^(?:(?P<user>[a-z0-9_-]+)?(?::(?P<password>[^@]+))?@)?(?P<host>[^:\\s]+)(?::(?P<port>[0-9]+))?$
^(?:(?P<userinfo>[^@/?#]*)@)?(?P<host>(?:\\[(?P<ipv6_host>[^[\\]/?#]*)\\])|(?P<plain_host>[^:/?#[\\]]*)|(?P<bad_host>.*?))?(?::(?P<port>.*))?$
^(?:(?P<username>.+)@)*(?P<hostname>[a-z0-9_.-]*)[:/]*(?P<port>[\\d]+){0,1}[:](?P<pathname>\\/?(?P<owner>.+)/(?P<name>.+).git)
^(?:(?P<weeks>\\d+?)w)?(?:(?P<days>\\d+?)d)?(?:(?P<hours>\\d+?)h)?$
^(?:([^/]|\\.\\.)[\\w_\\-]+/.*$
^(?:([^\"]+)|\\\\(.))
^(?:([^\\s]*)(\\([^)]*\\))|[^]+)$
^(?:([a-z]++)\\|)?([\\w-]++|\\*)$
^(?:([a-z]++)\\|)?+([\\w-]++|\\*)?+#([\\w-]++)$
^(?:([a-z]++)\\|)?+([\\w-]++|\\*)?+\\.([\\w-]++)$
^(?:([a-zA-Z$_]|([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc])|\\\\)(([a-zA-Z$_]|([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc])|\\\\)|[0-9]|([\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u0800-\\u082d\\u0840-\\u085b\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5c\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c58\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1\\u0cf2\\u0d02\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772\\u1773\\u1780-\\u17d3\\u17d7\\u17dc\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1cd0-\\u1cd2\\u1cd4-\\u1cf6\\u1d00-\\u1de6\\u1dfc-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200c\\u200d\\u203f\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua697\\ua69f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua827\\ua840-\\ua873\\ua880-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua900-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a\\uaa7b\\uaa80-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]))*)
^(?:(\\\\(\\[|\\]|\\|)|[^\\]\\[|;\\n])+)
^(?:'(\\\\['bfvnrt/(\\\\)]|\\\\u[a-fA-F0-9]{4}|[^'(\\\\)])*')
^(?:.*@)?(?P<host>[^:]*)(:(?P<port>\\d+))?$
^(?:.*\\\\)?cmd(?:\\.exe)?$
^(?:.|\\\\[bBdDfnrsStvwW]|\\\\x[A-Fa-f0-9]{2}|\\\\u[A-Fa-f0-9]{4}|\\\\c[A-Z]|\\\\[$()*+.?[\\/\\\\^{|]|\\[(?:\\\\\\]|[^\\]])*?\\]|\\\\\\d{1,2})$
^(?:.|\\\\[bdDfnrsStvwW]|\\\\x[A-Fa-f0-9]{2}|\\\\u[A-Fa-f0-9]{4}|\\\\c[A-Z])$
^(?:.+) (?:[A-Z]+) (?P<x>\\d+)x(?P<y>\\d+)
^(?:.+) (?P<x>\\d+)x(?P<y>\\d+)
^(?:/(?:[^\\/\\\\]|$)|~\\/.)
^(?:/[\\w]{2})?(/(
^(?:/[^\\h]+)+$
^(?:/|@)(?P<command>[^\\s@]+)@?(?P<bot_name>\\S+)?\\s?(?P<arguments>.*)$
^(?::
^(?:@(?P<tags>\\S+)\\s)?:(?P<data>\\S+)(?:\\s)(?P<action>[A-Z]+)(?:\\s#)(?P<channel>\\S+)(?:\\s(?::)?(?P<content>.+))?
^(?:@{[$self->get_regexes->{'chapitre_mots'}]}|@{[$self->get_regexes->{'verset_mots'}]})
^(?:[ \\t]*(?:-|\\*\\**|\\.\\.*|\\u2022|\\d+\\.|[a-zA-Z]\\.|[IVXivx]+\\))[ \\t]|(?!//[^/])
^---(?:[ \\t]+.*?|)(?=
^(?:[ +\\-@\\\\]|diff)
^(?:[!-'*-.?A-Z\\\\_-z\u00aa\u00b5\u00ba\u00c0-\u00d6\u00d8-\u00f6]|[\u00f8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377]|[\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5]|[\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea]|[\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee]|[\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea]|[\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0]|[\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977]|[\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2]|[\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a]|[\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39]|[\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8]|[\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c]|[\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c]|[\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99]|[\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0]|[\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d]|[\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3]|[\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10]|[\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1]|[\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81]|[\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3]|[\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6]|[\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a]|[\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081]|[\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d]|[\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0]|[\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310]|[\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c]|[\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u1700-\u170c\u170e-\u1711]|[\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7]|[\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c]|[\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16]|[\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf]|[\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec]|[\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d]|[\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d]|[\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3]|[\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f]|[\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128]|[\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2183\u2184]|[\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3]|[\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6]|[\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce]|[\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005\u3006\u3031-\u3035\u303b\u303c]|[\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d]|[\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc]|[\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b]|[\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6e5\ua717-\ua71f\ua722-\ua788]|[\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805]|[\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb]|[\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28]|[\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5]|[\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4]|[\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e]|[\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d]|[\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36]|[\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d]|[\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc]|[\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf]|[\\/_\uffd2-\uffd7\uffda-\uffdc])
^(?:[!\"#$%&'*+,-.`?\\\\_/])
^(?:[!\"#$%&'*+,-.`?\\\\_\\/])
^(?:[$@]|
^(?:[$\\\\]\\d+|\\$\\{\\d+\\})
^(?:[([|]|\\\\\\{|\\\\langle\\b|\\\\lVert\\b)
^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+
^(?:[.#]?|:*)(?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+
^(?:[./\\\\]|\\w+:)
^(?:[/.]|\\.\\.|[A-Z]:\\\\|\\\\\\\\)(?:[/\\\\]\\.\\.)*$
^(?:[/\\\\]|[a-zA-Z]:[/\\\\])
^(?:[\\/\\\\]|[A-Za-z]:[\\/\\\\]?)$
^(?:[\\d\\pL._-]+: )?lmgtfy:? (.+)
^(?:[\\w\\-]+\\.)*\\Q$domain\\E$
^(?:[\\w+(?:-\\w+)+.])+(?:[\\:0-9]{4,5})?
^(?:[\\x2D-9A-Z\\\\_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFF1]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])+$
^(?:[^\"#\\\\]*)
^(?:[^\\\"\\\\]{1,256}|\\\\[bfnrt\\\"\\\\\\/]|\\\\u[\\da-fA-F]{4}|\\\")
^(?:[^\\\\\\[\\]\\(\\)\\|^\\{\\}]|\\\\[^cxu0-9]|\\\\[0-9]{1,3}|\\\\c[A-Z]|\\\\x[0-9a-fA-F]{2}|\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\})+
^'(?:[^\\\\'\\r\\n]++|\\\\(?:.|\\r?\\n))*'
^'(?:[^'\\\\]*|\\\\(?:.|\\n)|'')*(?:'|\\z)
^(?:[^\\\\\\]]|\\\\[^cxu0-9]|\\\\[0-9]{1,3}|\\\\c[A-Z]|\\\\x[0-9a-fA-F]{2}|\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\})+
^'(?:[^'\\\\]|\\\\(?:.|\\n|\\r))*'?
^'(?:[^'\\\\]|\\\\.)*'
^'''(?:[^'\\\\]|\\\\.)*'''
^'(?:[^'\\\\]|\\\\.)*'$
^(?:[^\\\\]|\\\\[^cxu0-9]|\\\\[0-9]{1,3}|\\\\c[A-Z]|\\\\x[0-9a-fA-F]{2}|\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]+\\})
^(?:[^\\d{]*(
^'(?:[^\\n\\r'\\\\]|\\\\(?:'|[^\\n\\r']+))'
^'(?:[^\\n\\r'\\\\]|\\\\.)*(?:'|$)
^'(?:[^\\r\\n\\\\']|\\\\(?:'|[^\\r\\n']+))'
^(?:[^\\s]*\\s*\\bat\\s+)(?:(.*)\\s+\\()?((?:\\/|[A-Z]:\\\\)[^:\\)]+:(\\d+)(?::(\\d+))?)
^(?:[^']|\\\\(?:[befnrtv0'\"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\\{[0-9a-fA-F]{1,6}\\})))
^(?:[^_]+)\\_
^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$
^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$
^(?:[<](?:[^<> \\t\\n\\\\]|\\\\.)*[>])
^(?:[-=]=>|===|->|=>|!==|[-+*\\/%<>&|^!?=]=|=<|>>>=?|([-+:])\\1|([&|<>])\\2=?|\\?\\.|\\?\\:|\\.{2,3}|\\*(?=[a-zA-Z\\_]))
^(?:[AL]?GPL)-[1-3]\\K\\.0(\\+?)$
^(?:[a-z](?:[-a-z0-9\\+\\.])*:(?:\\/\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:])*@)?(?:\\[(?:(?:(?:[0-9a-f]{1,4}:){6}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|::(?:[0-9a-f]{1,4}:){5}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4}:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|v[0-9a-f]+[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:]+)\\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=@])*)(?::[0-9]*)?(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*|\\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*)?|(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])))(?:\\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])|[\\x{E000}-\\x{F8FF}\\x{F0000}-\\x{FFFFD}\\x{100000}-\\x{10FFFD}\\/\\?])*)?(?:\\#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])|[\\/\\?])*)?|(?:\\/\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:])*@)?(?:\\[(?:(?:(?:[0-9a-f]{1,4}:){6}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|::(?:[0-9a-f]{1,4}:){5}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4}:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|v[0-9a-f]+[-a-z0-9\\._~!\\$&'\\(\\)\\*\\+,;=:]+)\\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=@])*)(?::[0-9]*)?(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*|\\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*)?|(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=@])+)(?:\\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])))(?:\\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])|[\\x{E000}-\\x{F8FF}\\x{F0000}-\\x{FFFFD}\\x{100000}-\\x{10FFFD}\\/\\?])*)?(?:\\#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\\._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!\\$&'\\(\\)\\*\\+,;=:@])|[\\/\\?])*)?)$
^(?:[a-z]:)?[/\\\\]
^(?:[a-z]:)?[/\\\\]+$
^(?:[A-Z]:)?[\\/\\\\]
^(?:[a-z]\\w*|\\\\[^\\\\]*\\\\)
^(?:[a-z]{2}(?:-[A-Z]{2})?[\\/\\\\])(.+)
^(?:[A-Z]|\\_|[a-z])(?:[A-Z]|\\_|[a-z]|\\-|\\.|[0-9])*
^(?:[a-z-]+:|\\/|\\\\)
^(?:[-a-z0-9+.]++://[^/]++/?)?([^?#]++)?(\\?[^#]*+)?(#.*)?
^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+
^(?:[a-zA-Z]:)?$sbase[/\\\\]*(.+)
^(?:[a-zA-Z]:)?\\Q$sbase\\E[/\\\\]*(.*)$
^(?:[a-zA-Z]:\\\\|\\\\\\\\?|\\\\\\\\\\?\\\\|\\\\\\\\\\.\\\\)?(?:(?!(CLOCK\\$(\\\\|$)|(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9]| )(?:\\..*|(\\\\|$))|.*\\.$))(?:(?:(?![><:/\"\\\\\\|\\?\\*])[\\x20-\\u10FFFF])+\\\\?))*$
^(?:[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*+\\\\)++$
^(?:[A-Za-z0-9\\-\\.\\_\\~\\!\\$\\&'\\(\\)\\*\\+\\,\\;\\=\\:\\@\\/\\?]|%[A-Za-z0-9])*$
^(?:\"((?:\\\\\"|\\\\[^\"]|[^\"\\\\])*)\")
^(?:\"((?:\\\\\"|\\\\[^\"]|[^\\n\\r\"\\\\])*)\")
^(?:\"(?:(?:\"\"(?:\"\"?(?!\")|[^\\\\\"]|\\\\.)*\"{0,3})|(?:[^\"\\r\\n\\\\]|\\\\.)*\"?))
^(?:\"(?:(\\\\)[\"\\/\\\\bfnrt]|(\\\\)u[\\dA-Fa-f]{4}|[^\"\\\\])*\")
^(?:\\\"(?:[\\\\\\\\]?
^(?:\"(?:[^\\\"\\\\]|\\\\.)*\"|'(?:[^\\'\\\\]|\\\\.)*')
^(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')
^(?:\"(?:\\\\(?:.|([ \\n\\r\\t\\f]))|[^\"\\\\])*\")
^(?:\"(?:\\\\(?:.|(\\r\\n|\\r|\\n\\b))|[^\"\\\\\\n])*\")
^(?:\"(?:\\\\[\"bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\")
^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")
^(?:\"(?:\\\\[\"bfnrt\\/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\")
^(?:\"(?:\\\\[\\\\\"bfnrt\\/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")
^(?:\"(?P<name>[^\"]+)\")[ \t]*<(?P<uri>[^>]+)>[ \t]*(?:;(?P<params>[^\\?]*))?
^(?:\"(\\\\x[a-fA-F0-9]{2}|\\\\u[a-fA-F0-9]{4}|\\\\[^xu]|[^\"(\\\\)\\n])*\")
^(?:\"?
^(?:\"\"\"(?:\\\\\"\"\"|[^\"]|\"[^\"]|\"\"[^\"])*(?:\"\"\")?|\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?)
^(?:\\$(?:(?:$PAREN_TOKEN)|(?:\\w++)))*([^\\$]++)
^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$
^(?:\\\\(.)|([$^]))
^(?:\\\\(.)|\\$\\{)
^(?:\\\\(?:([0-7]{1,3})|c([@-Z])|x([\\dA-Fa-f]{2})|u([\\dA-Fa-f]{4})|u\\{([\\dA-Fa-f]{1,8})\\}))
^(?:\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S]))
^(?:\\\\(?:[BDPSWbdpsw]|[$(-+.\\/?\\[-\\^fnrtv{-}]))
^(?:\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??)
^(?:\\\\(?:backspace|formfeed|newline|return|space|tab|o[0-7]{3}|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{4}|.)?(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))
^(?:\\\\\\\\(?=(\\{\\{)))
^(?:\\\\([0-7]{1,3}|[$(-+.\\/?BDSW\\[-\\^bdfnr-tvw{-}]|c[A-Z]|x[\\dA-F]{2}|u[\\dA-Fa-f]{4}))
^(?:\\\\([0-7]{1,3}|[rfntvsSbBwWdD\\\\*+()${}|[\\]\\/.^?]|c[A-Z]|x[0-9A-F]{2}|u[a-fA-F0-9]{4}))
^(?:\\\\(_?)([<>\\|])?)?\"(.+)\"$
^(?:\\\\)
^(?:\\.(([a-zA-Z_]|[^\\x00-\\x7F]|-([a-zA-Z_\\-]|[^\\x00-\\x7F])|-?\\\\([\\da-fA-F]{1,6}\\s|[^\\n\\da-fA-F]))([\\w_\\-]|[^\\x00-\\x7F]|\\\\([\\da-fA-F]+\\s|[^\\n\\da-fA-F]))*))
^(?:\\.[/\\\\])?xt\\b
^(?:\\.[a-zA-Z\\_\\-]+\\?)
^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])
^(?:\\.\\.?\\/|\\/|([A-Za-z]:)?\\\\)
^(?:\\.\\.[/\\\\])?[\\w/\\\\-]+\\.*ok$
^(?:\\.\\.[/\\\\])?[\\w/\\\\-]+\\.*ok\\,\\s+\\d+/\\d+\\s+skipped:
^(?:\\.\\.[/\\\\])?[\\w/\\\\-]+\\.*ok\\s+\\d+(\\.\\d+)?\\s*m?s$
^(?:\\.\\.[/\\\\])?[\\w/\\\\-]+\\.*skipped[: ]
^(?:\\\\.|[^\\\\])*\\\\[0-7]
^(?:\\/|\\\\)(html|latex|doc|pdf|png|partials)(?:\\/|\\\\)?
^(?:\\/|\\\\|\\w\\:\\\\).*$
^(?:\\[(
^(?:\\[(?P<ipv6>[\\d:A-Fa-f]+)\\]|(?P<ipv4>[\\d\\.]+)|(?P<any>.*?))(?::(?P<port>\\d+))?$
^(?:\\[\\s+(?P<timestamp>\\d+\\.\\d+)\\]\\s+)?(?P<message>.*)$
^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)
^(?:\\{(.*?)\\})?([\\w\\d\\-\\_]+)$
^(?:\\+|@include)\\s*(
^(?:\\\\9\\b)
^(?:\\b|(-)?)(\\p{Currency_Symbol})?((?:(?:\\d{1,3}[\\.,])+\\d{3})|\\d+)(?:[\\.,](\\d{2}))?\\b$
^(?:\\\\g[e])
^(?:\\\\gamma\\b)
^(?:\\\\i\\s+|\\@)(.*)$
^(?:\\\\infty\\b)
^(?:\\\\iota\\b)
^(?:\\\\kappa\\b)
^(?:\\\\l[e])
^(?:\\\\lambda\\b)
^(?:\\\\Lambda\\b)
^(?:\\\\left\\()
^(?:\\\\left\\s*\\()
^(?:\\\\left\\s*\\[)
^(?:\\\\left\\s*\\|)
^(?:\\\\ln\\b)
^(?:\\\\log\\b)
^(?:\n    \t(?:re|fw):\\s*(?:\\w+\\s+)?\\Q$to\\E$\n    \t|(?-i:\\Q$to\\E)\\s*[,:;!?-](?:$|\\s)\n    \t|\\Q$to\\E$\n    \t|,\\s*\\Q$to\\E[,:;!?-]$\n    )
^(?:\n(?P<addr>\n    (?P<ipv4>\\d{1,3}(?:\\.\\d{1,3}){3}) |         # IPv4 address\n    (?P<ipv6>\\[[a-fA-F0-9:]+\\]) |               # IPv6 address\n    (?P<fqdn>[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*) # FQDN\n):)?(?P<port>\\d+)$
^(?:\\\\omega\\b)
^(?:\\\\Omega\\b)
^(?:\\\\phi\\b)
^(?:\\\\Phi\\b)
^(?:\\\\pi\\b)
^(?:\\\\Pi\\b)
^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)
^(?:\\\\psi\\b)
^(?:\\\\Psi\\b)
^(?:\\Q${alias}.\\E)?([^.]+)$
^(?:\\Q$alias\\E\\.)?([^.]+)$
^(?:\\Q$installs[0]\\E|\\Q$installs[1]\\E|\\Q$installs[2]\\E)
^(?:\\Qgit://github.com/\\E|git\\@github\\.com:\\E|\\Qhttp://github.com/\\E)([^/]+)/([^/]+)(?:\\.git)?$
^(?:\\r\\n|[\\S\\s])[^\\n\\r#*=A-[^`h{~]*
^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?
^(?:\\\\Theta\\b)
^(?:\\\\u|U\\+|)([a-z0-9]{4,6})$
^(?:\\\\upsilon\\b)
^(?:\\\\Upsilon\\b)
^(?:\\w:)?[/\\\\]
^(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"):(?!:)
^(?:\\w+\\:{2}|@)?[a-z0-9\\_\\-\\.\\/]+$
^(?:\\w++:)*+\\w++$
^(?:\\\\xi\\b)
^(?:\\\\Xi\\b)
^(?:|/rss|(?:/(?P<show>[\\w-]+))(?:/rss)?)/?$
^(?:~\\d+)?[^/\\\\~][^/\\\\]*$
^(?:<(?P<tag>[^>]+)>)?\\s*(?P<chars>[\\s0-9A-F]+)$
^(?:=|@mixin)\\s*(
^(?:0000:)*ffff:([\\p{IsXDigit}:]{9})
^(?:0o[0-7]+|0x[0-9a-fA-F]+|0b[01]+|0'(?:''|\\\\[abfnrtv\\\\'\"`]|\\\\x?\\d+\\\\|[^\\\\])|\\d+(?:\\.\\d+(?:[eE][+-]?\\d+)?)?)
^(?:0x)?(\\p{XDigit}+)$
^(?:0x|\\\\u|U[+]?)([\\da-f]+)$
^(?:5\\.5\\.5-)?(mariadb-)?(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)
^(?:a?n )?(
^(?:auto\\/)?\\Q$base\\E(?:\\/|\\.)
^(?:def\\s)?\\s*(
^(?:e=(?P<error>[^,]+)|v=(?P<verifier>[a-zA-Z0-9/+=]+)(?:,.*)?)$
^(?:F|f)(?:I|i)(?:L|l)(?:E|e):(?P<value>.*?$)
^(?:file:[\\/\\\\]{2}|[A-Z]:)?\\.?\\.?[\\/\\\\]
^(?:https:)?\\/\\/[0-9a-z.:[\\]-]+\\/|^\\/[^\\/\\\\]|^about:blank#
^(?:https?:)?\\Q$constants->{rootdir}\\E
^(?:https?://)?(?:www\\.)?ruv\\.is/\n                                (?P<stream_id>\n                                    ruv/?$|\n                                    ruv2/?$|\n                                    ruv-2/?$|\n                                    ras1/?$|\n                                    ras2/?$|\n                                    rondo/?$\n                                )\n                                /?\n                                
^(?:https?://)?(?:www\\.)?ruv\\.is/spila/\n                                    (?P<stream_id>\n                                        ruv|\n                                        ruv2|\n                                        ruv-2|\n                                        ruv-aukaras|\n                                    )\n                                    /\n                                    [a-zA-Z0-9_-]+\n                                    /\n                                    [0-9]+\n                                    /?\n                                    
^(?:https?:\\/\\/)?(?:[^.@]+@)?(?:www\\.)?(
^(?:ip\\sprefix-list\\s
^(?:java|openjdk) version \"(?P<major1>\\d+)\\.(?P<major2>\\d+)\\.[^\"]+\"$
^(?:lib|ext)\\/(?:
^(?:M|A)(\\s+)(?P<name>.*)
^(?:MM|M|A)(\\s+)(?P<name>.*)
^(?:null|true|false|\\d[\\d.]*|([\\w$]+|~([\\w$]+)|#(view|([\\w$]+))?)([\\w$.]*?)(?:[.[]([\\w$]+)\\]?)?|(['\"]).*\\8)$
^(?:on update)\\s([\\_\\-\\s\\w\\d]+)
^(?:P|p)(?:A|a)(?:S|s)(?:S|s):(?P<value>.*?$)
^(?:projects/[^/]*/databases/[^/]*/documents/)?(?:/)?timestamps/(?P<test_timestamps_id>[a-zA-Z0-9]+)$
^(?:projects/[^/]*/databases/[^/]*/documents/)?(?:/)?users/(?P<user_id>[a-zA-Z0-9]+)/test_models/(?P<test_model_id>[a-zA-Z0-9]+)$
^(?:que )?desmarco (?:
^(?:que )?elijo (?!
^(?:que )?elijo (?:
^(?:que )?marco (?:
^(?:que )?selecciono [\"']([^\"']+?)[\"'](?: (?:en (?:el listado de )?|como )(?!
^(?:que tenemos )?(
^(?:r(?P<region>\\d+))?z(?P<zone>\\d+)(?:s(?P<scheme>http|https))?-(?P<ip>[\\d\\.]+):(?P<port>\\d+)(?:R(?P<replication_ip>[\\d\\.]+):(?P<replication_port>\\d+))?\\/(?P<device>[^_]+)(?:_(?P<metadata>.+))?$
^(?:-r|--requirement)\\s*(?P<path>\\S+).*$
^(?:running|I run) the shell command `(.*)`(| as root)(
^(?:table(_?
^(?:tests|node_modules)[/\\\\]
^(?:that we have )?(
^(?:url\\((\"(?:\\\\(?:.|([ \\n\\r\\t\\f]))|[^\"\\\\])*\"|'(?:\\\\(?:.|([ \\n\\r\\t\\f]))|[^'\\\\])*'|[^)]*)\\))
^(?:use|require)\\s+(?:[a-z]|[\\d\\.\\_])+?\\s*;
^(?:www\\.|mailto:|
^(-?\\d+(.\\d+)?) (
^(?| )+
^(?| \\# ([0-9a-f])([0-9a-f])([0-9a-f])\n\t\t\t | \\#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2}) )$
^(?|([^\"-]*)|\"([^\"]*)\")-(?|([^\"-]*)|\"([^\"]*)\")\\z
^(?<!\\\\)\\\\TABLE
^(?<_>.*?)(?:
^(?<_1>(?<_2>\\\\)begin)(?<_3>{)code(?<_4>})(?<_5>\\s*\\n)?
^(?<_1>\\/)(?<_2>\\d{4}-\\d{2}-\\d{2})(?<_3>\\/)(?<_4>[^\\/]+)(?<_5>\\/)(?<_6>@\\S+)\\s++(?<_7>.*)$
^(?<base>.*)(/|\\\\)vendor(/|\\\\)composer(/|\\\\)autoload_real.php
^(?<before>\\s*\\$
^(?<begin>[^#]*
^(?<body>[\\ @\\+\\-\\\\].*)
^(?<class>[\\w\\\\]*)?->(?<property>[\\w]+)$
^(?<command_line>
^(?<date_time_delim>
^(?<file>.+?)(?:(?<!\\\\);(?<ver>\\d+))?$
^(?<first>
^(?<full_message>(?<short_message>(?<client>(?>\\S+)) - (?<user>(?>\\S+)) \\[(?<time>(?>[^\\]]*))\\] (?>\"(?<method>\\S+)(?: +(?<path>[^ ]*) +\\S*)?\") (?<code>(?>\\S+)) (?<size>(?>\\S+)))(?: (?>\"(?<referer>[^\\\"]*)\") (?>\"(?<agent>[^\\\"]*)\"))?)(?> \"(?<x-forwarded-for>[^\\\"]*)\")?(?> [0-9]+\\.(?<msec>[0-9]{3}) (?<scheme>\\S+) \"(?<vhost>[^\\\"]*)\" time (?<request_time>[0-9.]+) recv (?<request_length>[0-9]+) sent (?<bytes_sent>[0-9]+) \\((?<body_bytes_sent>[0-9]+)\\) from (?>- - \"-\" - time -|(?<upstream_addr>\\S+)\\s(?<upstream_cache_status>\\S+)\\s\"(?<upstream_http_cache_control>[^\\\"]*)\"\\s(?<upstream_status>\\S+)\\stime\\s(?<upstream_response_time>\\S+)))?$
^(?<i1>[ \\t]*)group\\(?[ \\t]*(?<grps>
^(?<key>[a-z-]+)=(?<value>\"[^\"]+(?<!\\\\)\"|[^,]+)
^(?<label>\\S+|\\s{1})\\s*(?<ttl>
^(?<lowest_trackable_value>\\d+) (?<highest_trackable_value>\\d+) (?<unit_magnitude>\\d+) (?<significant_figures>\\d+) (?<sub_bucket_half_count_magnitude>\\d+) (?<sub_bucket_half_count>\\d+) (?<sub_bucket_mask>\\d+) (?<sub_bucket_count>\\d+) (?<bucket_count>\\d+) (?<min_value>\\d+) (?<max_value>\\d+) (?<normalizing_index_offset>\\d+) (?<conversion_ratio>\\S+) (?<counts_len>\\d+) (?<total_count>\\d+) \\[(?<counts>([~!@
^(?<modifier>
^(?<name>.*?)(\\.
^(?<name>.+[^\\\\])_?Controller$
^(?<name>[a-z0-9]([a-z0-9-]*[a-z0-9])?)(\\.(?&name))*$
^(?<name>[-A-Za-z0-9.]+)(,\\g<name>)*$
^(?<operator>
^(?<organisation>[a-zA-Z0-9]+)/(?P<repositoryName>[a-zA-Z0-9\\-_\\.]+)$
^(?<pat>.+?)(?<!\\\\);(?<ver>\\d+)$
^(?<prefix>
^(?<prefix>[^\\#0]*)(?<numeric_part>
^(?<prefix>search|params|metadata)?_?(?<name>[a-z\\_]+)(?<setter>=)?
^(?<root>(?:[[:alpha:]]:[\\\\/]|/|[\\\\]{2}[[:alpha:]]+|[[:print:]]{2,}:[/]{2}|[\\\\])?)(?<path>(.*))$
^(?<root>(?:[[:alpha:]]:[\\\\]|/|[\\\\]{2}[[:alpha:]]+|[[:print:]]{2,}:[/]{2}|[\\\\])?)(?<path>(.*))$
^(?<type>(\\w+::)+|S)(\\|(?&type))+$
^(?<weekday>
^'(?=
^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1.
^(?=(?:\\w|\\\\)*\\\\+(?:\\w|\\\\)*)(?:(?:\\w|\\\\)+)$
^(?=.)(?P<head>\\D[^:]*)?:?(?P<rev>\\d+)?$
^(?=.)[^\"'\\\\]+?(?:(?!.)|(?=[\"'\\\\]))
^(?=\\D):?([^]*)$
^(?>
^'(?>[^'\\\\]+|\\\\.)*'$|^\\s*\"(?>[^\"\\\\]+|\\\\.)*\"\\s*$
^(?i)(?P<seeders>\\d+)\\s+seeder\\(s\\), (?P<leechers>\\d+)\\s+leecher\\(s\\),\\s+(?P<downloads>\\d+)\\s+download\\(s\\) - (?P<size>[^-]+) -
^(?i)(alpha|a)[-\\.\\_]?(\\d*)$
^(?i)(beta|b)[-\\.\\_]?(\\d*)$
^(?i)(final)[-\\.\\_]?(\\d*)$
^(?i)(pre-?alpha)[-\\.\\_]?(\\d*)$
^(?i)(rc)[-\\.\\_]?(\\d*)$
^(?i)[0-9a-z\\_\\.\\-\\]{1,100}:[0-9]+$
^(?i)[0-9a-z\\_\\.\\-]{1,100}$
^(?i)[0-9a-z\\_\\.\\-]{1,100}:[0-9]+$
^(?i)folder.[a-f0-9]+.(?P<user_id>[a-f0-9]+(?P<folder_n>!\\d+)?)$
^(?i:lower)\\(\\s*\\Q$args{'ALIAS'}\\.
^(?m)'.*?(?:[^\\\\]?'|$)
^(?m)\".*?(?:[^\\\\]?\"|$)
^(?P<A>(?P<A1>[A-Z]+):(?P<A2>[A-Z]+))$|^(?P<N>(?P<N1>\\d+):(?P<N2>\\d+))$|^(?P<AN>(?P<AN_A1>[A-Z]+)(?P<AN_N1>\\d+):(?P<AN_A2>[A-Z]+)(?P<AN_N2>\\d+))$
^(?P<a>-?[0-9]*)?n(?P<b>[-+]?[0-9]+)?$
^(?P<abbreviation>\\p{Lu}{3,})(?:\\((?P<transcript>.*?)\\))?
^(?P<action>[a-zA-Z0-9_-]+)(\\[(switch:(?P<switch>\\d+)|(?P<default>DEFAULT))\\])$
^(?P<action>set|(ap|pre)pend|offsetSet)(?P<mode>File|Script)$
^(?P<action>set|(ap|pre)pend|offsetSet)(?P<type>Stylesheet|Alternate)$
^(?P<action>set|(ap|pre)pend|offsetSet)(?P<type>Stylesheet|Alternate|Prev|Next)$
^(?P<action>set|(ap|pre)pend|offsetSet)(Style)$
^(?P<action>set|(pre|ap)pend)(?P<propType>[a-zA-Z0-9_]+)$
^(?P<action>set|(pre|ap)pend|offsetSet)(?P<type>Name|HttpEquiv|Property)$
^(?P<action>set|(pre|ap)pend|offsetSet)(?P<type>Name|HttpEquiv|Property|Itemprop)$
^(?P<adapter>\\w+)://(?P<path>.*)$
^(?P<adapter>\\w+)://(?P<user>[\\w\\d_.-]+):(?P<password>[\\w\\d_.-]*?)@(?P<host>.*?):(?P<port>\\d*?)/(?P<database>.*?)$
^(?P<address>(?P<service>github|git)\\s+\"[^/]+/(?:.+?)\")(?:\\s+(?P<predicate>.+)?)?
^(?P<address>.+?)/(?P<bits>\\d+)$
^(?P<address>.+?):(?P<port>\\d+)$
^(?P<address>[^\\s]+)\\s+(?P<time>\\d+\\.\\d+)\\s+(?P<pointers>\\d+G?)\\s+(?P<ban>.*)$
^(?P<address>[0-9a-f]+)\\s+\n                       (?P<type>\\S+)\\s+\n                       (?P<vnode>[0-9a-f]+)\\s+\n                       (?P<conn>[0-9a-f]+)\\s+\n                       (?:\n                           (?P<local_addr>\\S+)\\s+\n                           (?:\n                               (?P<remote_addr>\\S+)\\s+\n                           )?\n                       )?\n                       \\s*$
^(?P<address>\\S+) \\s+ (?P<type>\\S+) \\s+\n                       (?P<recvq>\\d+) \\s+ (?P<sendq>\\d+) \\s+ (?P<inode>[0-9a-f]+) \\s+ (?P<conn>[0-9a-f]+) \\s+\n                       (?P<refs>[0-9a-f]+) \\s+ (?P<nextref>[0-9a-f]+)\n                       (?:\n                           \\s+\n                           (?P<addr>.+)\n                       )?\n                       \\s*$
^(?P<age>\\d{1,2})\\+?$
^(?P<aggregator>\\w+):(?:(?P<downsample>\\w+-\\w+(?:-(?:\\w+))?):)?(?:(?P<rate>rate.*):)?(?P<metric>[\\w./-]+)(?:\\{([^}]+)?\\})?(?:\\{([^}]+)?\\})?$
^(?P<aggregator>\\w+):(?:(?P<downsample>\\w+-\\w+):)?(?:(?P<rate>rate.*):)?(?P<metric>[\\w./-]+)(?:\\{([\\w./,=*-|]+)\\})?$
^(?P<amount>(-){0,1}\\d+)$
^(?P<amount>(-){0,1}\\d+)\\/(?P<divisor>1(0)*)$
^(?P<amount>[0-9]+)(?P<unit>g|gb|m|mb)?$
^(?P<amount>\\d+)(?P<unit>h|d|w)$
^(?P<analogValue>[0-9.]+)\\s(?P<analogUnit>.*)|(?P<status>.+)|^$
^(?P<app_label>\\w+).(?P<model_name>\\w+):(?P<pk>\\d+)$
^(?P<area>\\d{3})[-\\ ]?(?P<group>\\d{2})[-\\ ]?(?P<serial>\\d{4})$
^(?P<attribute>.+)=(?:\\\"(?P<quoted>.+)\\\"|(?P<unquoted>.+))$
^(?P<author>.*)\\s+(?P<rev>\\d+):\\s
^(?P<author>\\w+)-(?P<module>\\w+)-(?P<version>[\\w\\.]+)\\.tar\\.gz$
^(?P<author>\\w+)[/\\-](?P<module>\\w+)$
^(?P<authstatus>\\w+) (?P<authmethod>\\w+) for (?P<username>[a-zA-Z0-9\\@._-]+) from (?P<sourceipaddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) port (?P<sourceport>\\d{1,5}) ssh2(\\:\\sRSA\\s)?(?:(?P<rsakeyfingerprint>(\\S+)))?$
^(?P<base>.*/)api/(?P<version>\\d+\\.\\d+)/?$
^(?P<base>[^[]+)(?P<extra>(\\[.*)|$)
^(?P<basefile>(MPRTFS|MRTVFS|RTVFS) \\d+:\\d+)$
^(?P<basefile>AFS \\d+: ?\\d+)
^(?P<basefile>S?NFS \\d+:\\d+)$
^(?P<basename>.*)-\\d{4}-\\d{2}-\\d{2}-\\d{2}-\\d{2}\\.csv$
^(?P<baseName>[A-Za-z0-9 _.\\-\\[\\]]+?)((?P<separator>[^\\da-zA-Z\\[]?)\\[?(?P<range>(?P<start>[0-9]+)[\\-\\:](?P<end>[0-9]+)))\\]?(\\.(?P<extension>[a-zA-Z0-9]+))$
^(?P<before>.*?)(?P<text>[A-Za-z0-9_-]+)$
^(?P<before>[^\\[]*)(?:\\[(?P<from>\\d+)-(?P<to>\\d+)(?:/(?P<step>\\d+))?\\])?(?P<after>.*)$
^(?P<beforestartline>\\d+)(,\\d+)?(?P<type>[acd])(?P<afterstartline>\\d+)(,\\d+)?$
^(?P<begin>\\d{1,2})-(?P<end>\\d{1,2})$
^(?P<begin>\\d{1,2})-(?P<end>\\d{1,2})/(?P<step>\\d{1,2})$
^(?P<bin>[a-z-]+)-(?P<tag>.+)$
^(?P<birth>\\d{6})/?(?P<id>\\d{3,4})$
^(?P<block_and_comment>.*?)?(?P<macro>%.*%?)?\\s*$
^(?P<bundle>[^:]*?)(?:Bundle)?:(?P<path>[^:]*+):(?P<template>.+\\.[^\\.]+\\.[^\\.]+)$
^(?P<bundle>[^:]+):(?P<directory>[^:]*:)?(?P<file>.+)$
^(?P<bundle>\\w+):(?P<directory>\\w+)$
^(?P<bx>0x)?(?P<begr>[0-9a-f]+)(\\-(?!0x)(?P<endr>[0-9a-f]+))?
^(?P<call>on|once)(?P<event>[A-Z].*)
^(?P<century>\\d{2})?(?P<year>\\d{2})(?P<month>\\d{2})(?P<day>\\d{2})(?P<sign>[\\-+])?(?P<serial>\\d{3})(?P<checksum>\\d)$
^(?P<class>(^(([\\\\])|([A-Z]))([A-Za-z0-9_\\\\]+)))(?P<sep>::{1})((?P<method>[\\w]+))$
^(?P<class>(^(([\\\\])|([A-Z]))([A-Za-z0-9_\\\\]+)))(?P<sep>::{1})((<{1})(?P<accessor>[!\\w]+)(>{1})\\s*\\Z)$
^(?P<class>[a-z0-9_\\\\]+)::(?P<method>[a-z0-9_]+)$
^(?P<clean_url>https?://steamcommunity.com/(?P<type>profiles|id|gid|groups)/(?P<value>.*?))(?:/(?:.*)?)?$
^(?P<code>\\d+) (?P<hostname>\\S+) \\S+ (?P<banner>.*)$
^(?P<codeblock> {4}#!(?P<shebang>.*)\\n(?P<body>(( {4}.*)?\\n)*))
^(?P<coefficient>\\d+(?:\\.\\d+))E\\+(?P<exponent>\\d+)$
^(?P<command>\\\\([a-zA-Z]+|[^a-zA-Z]))
^(?P<command>git-(?:receive|upload)-pack) '(?P<path>.+)'$
^(?P<command>git-(?:receive|upload)-pack) '[a-zA-Z][a-zA-Z0-9@._-]*(/[a-zA-Z][a-zA-Z0-9@._-]*)*'$
^(?P<component>amazon|buy|play){1}_list_skus_queue_(?P<account_id>\\d+)
^(?P<condition>and|or):\\[(?P<subCriteria>.+,.+)\\]$
^(?P<confnum>\\d+)\\s+(?P<parties>\\d+)\\s+(?P<marked>\\S+)\\s+(?P<activity>\\S+)\\s+(?P<creation>\\S+)
^(?P<continent_code>\\w\\w)(-(?P<country_code>\\w\\w)(-(?P<subdivision_code>\\w\\w))?)?$
^(?P<cor>COR)\\s+
^(?P<count1>%+)(?P<string>.+?)(?P<count2>%+)
^(?P<count1>\\*+)(?P<string>.+?)(?P<count2>\\*+)
^(?P<count1>\\^+)(?P<string>.+?)(?P<count2>\\^+)
^(?P<count1>\\++)(?P<string>.+?)(?P<count2>\\++)
^(?P<count1>_+)(?P<string>.+?)(?P<count2>_+)
^(?P<count1>~+)(?P<string>.+?)(?P<count2>~+)
^(?P<count1>-+)(?P<string>.+?)(?P<count2>-+)
^(?P<country>.*) population of$
^(?P<country>.*) population$
^(?P<cover>VV|CLR|SKC|SCK|NSC|NCD|BKN|SCT|FEW|[O0]VC|///)\n                        (?P<height>[\\dO]{2,4}|///)?\n                        (?P<cloud>([A-Z][A-Z]+|///))?\\s+
^(?P<cpu>[0-9]+)$
^(?P<d>\\d{4}-\\d{2}-\\d{2})T(?P<t>\\d{2}:\\d{2}:\\d{2})Z(?P<ms>\\d{4})$
^(?P<database>[A-Za-z][A-Za-z0-9\\_\\$\\(\\)\\+\\-\\/]+)$
^(?P<date>(?:\\d{2}|(?P<Y>\\d{4}))-\\d{2}-\\d{2})(?:[ T](?P<time>\\d{2}(?::\\d{2}(?::\\d{2})?)?)?)?$
^(?P<date>[0-9:\\- ]*)\\t *\\t(?P<nick>.*) (?P<action>.*)$
^(?P<date>[0-9:\\- ]*)\\t(?:[@&+])?(?P<nick>[^\\s\\-]+)\\t(?P<message>.*)$
^(?P<date>[0-9:\\- ]*)\\t--\\t(?P<nick>.*) has changed topic for (?P<channel>(?:&|#)\\w+) from \"(?P<topic>.*)\"$
^(?P<date>[0-9:\\- ]*)\\t--\\tMode (?P<channel>(?:&|#)\\w+) \\[(?P<mode>\\S+)[^\\]]*\\] by (?P<nick>.*)$
^(?P<date>[0-9:\\- ]*)\\t<--\\t(?P<nick>.*) \\((?P<host>.*)\\) has left (?P<channel>(?:&|#)\\w+)(?: \\((?P<message>.*)\\))?$
^(?P<date>[0-9:\\- ]*)\\t<--\\t(?P<nick>.*) \\((?P<host>.*)\\) has quit \\((?P<message>.*)\\)$
^(?P<date>[0-9:\\- ]*)\\t<--\\t(?P<nick>.*) has kicked (?P<target>.*) \\((?P<message>.*)\\)$
^(?P<date>[0-9:\\- ]*)\\t-->\\t(?P<nick>.*) \\((?P<host>.*)\\) has joined (?P<channel>(?:&|#)\\w+)$
^(?P<datetime>.*?)(?P<tzoffset>[+-]\\d{4})?$
^(?P<day>\\d\\d)\n                          (?P<hour>\\d\\d)\n                          (?P<min>\\d\\d)Z?\\s+
^(?P<days>\\d+)-(?P<hours>\\d+)$
^(?P<days>\\d+)-(?P<hours>\\d+):(?P<minutes>\\d+)$
^(?P<days>\\d+)-(?P<hours>\\d+):(?P<minutes>\\d+):(?P<seconds>\\d+)$
^(?P<days>\\d+):(?P<hours>\\d+):(?P<minutes>\\d+):(?P<seconds>\\d+)$
^(?P<dd>\\d{1,2})[. -] *(?P<mm>\\d{1,2})(?:[. -] *(?P<yyyy>\\d{4})?)?(?: *[ @-] *(?P<hh>\\d{1,2})[:.](?P<ii>\\d{1,2})(?:[:.](?P<ss>\\d{1,2}))?)?$
^(?P<dd>\\d{1,2})[. -] *(?P<mm>\\d{1,2})([. -] *(?P<yyyy>\\d{4})?)?$
^(?P<delete>no )?ip access-group (?P<acl>\\S+) (?P<dir>\\S+)$
^(?P<delete>no )?ip access-list (?P<acl>\\S+)(?P<dyn> dynamic)?$
^(?P<delimiter>.)?\\{(?P<placeholder>\\w+)\\}$
^(?P<delimiter>`{3,4}|~{3,4})(?:rust|(?:(?:rust,)?(?:no_run|ignore|should_panic)))?$
^(?P<delimiter>`{3,4}|~{3,4})\\w[\\w,\\+]*$
^(?P<delimiter>`{3,4}|~{3,4})text$
^(?P<desc>.+?)(?:\\s{2,})(?P<value>.+)
^(?P<det>\\S+)\\-(?P<det_id>\\d+)\\|(?P<dev>\\S+)\\-(?P<dev_id>\\d+)$
^(?P<det>\\S+)\\.(?P<det_id>\\d+)\\:(?P<dev>\\S+)\\.(?P<dev_id>\\d+)$
^(?P<detector_name>[^_]+)_(?P<year>\\d\\d\\d\\d)-(?P<month>\\d\\d)-(?P<day>\\d\\d)_(?P<hour>\\d\\d)\\.(?P<minute>\\d\\d)\\.(?P<second>\\d\\d)_(?P<num>\\d\\d)\\.wav$
^(?P<dev>/dev/.*):(?:\\s+LABEL=\"(?P<label>[^\"]*)\"|\\s+UUID=\"(?P<uuid>[^\"]*)\")+\\s*$
^(?P<dev>\\d+:\\d+)\\s+(?P<iotype>Read|Write)\\s+(?P<count>\\d+)$
^(?P<device>\\S+) (?P<path>.+) (?P<filesystem>\\S+)
^(?P<device>\\S+) on (?P<path>.+) \\((?P<filesystem>[^, ]+)
^(?P<device>\\S+) on (?P<path>.+) type (?P<filesystem>\\S+)
^(?P<digits>\\d+)$
^(?P<dir>[\\dO]{3}|[0O]|///|MMM|VRB)\n                          (?P<speed>P?[\\dO]{2,3}|[/M]{2,3})\n                        (G(?P<gust>P?(\\d{1,3}|[/M]{1,3})))?\n                          (?P<units>KTS?|LT|K|T|KMH|MPS)?\n                      (\\s+(?P<varfrom>\\d\\d\\d)V\n                          (?P<varto>\\d\\d\\d))?\\s+
^(?P<directory>.+)$
^(?P<domain>(?:[A-Za-z0-9_.-]{1,350}\\.[A-Za-z0-9]{2,63})|https?://[A-Za-z0-9_.-]{1,350}\\.[A-Za-z0-9]{2,63}[!-9;-~]+?)(?::(?P<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}))?(?::(?P<port>\\d{2,5}))?$
^(?P<domain>[^:]+)(?::(?:(?:(?P<remote_user>[^@]+)@)?(?P<remote_host>[^@:]+)(?::(?P<remote_port>\\d+))?:)?(?P<path>[^@:]+))?$
^(?P<dsn>.+)$
^(?P<duration>[0-9]+)(?P<unit>[smh])?$
^(?P<enabled>#)*[\\s#]*(?P<raw>(?P<header>[^()]+)\\((?P<options>.*)\\)$)
^(?P<end>.*) directions$
^(?P<end>\\w+)$
^(?P<epoch>\\d+):(?P<name>.+)-(?P<version>[\\w.+{}]+)-(?P<release>[\\w.+{}]+)\\.(?P<arch>[^.]+)$
^(?P<exact>\\d+)$|^(?P<from>\\d+)\\+$|^(?P<begin>^\\d+)\\-(?P<end>\\d+)$
^(?P<exception>[\\w\\.]+)\\: (?P<description>.*?)$
^(?P<expr>.+)\\s+(?P<attr>@[\\:|\\w_\\d-]+)$
^(?P<Family>\\d)\\d\\d
^(?P<field>.+)__(?P<filterType>.+)$
^(?P<field>min|max|mean|median|stddev|iqr):((?P<percentage>[0-9]?[0-9])%|(?P<difference>[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?))$
^(?P<file_path>.+): line (?P<line_number>\\d+),
^(?P<file_path>.+):(?P<line_number>\\d+):\\d+:.+$$
^(?P<file_path>.+):(?P<start_line>\\d+)-(?P<end_line>\\d+)$
^(?P<file>[^:]+).*Line\\s(?P<line>\\d+).*
^(?P<filename>[\\w\\.\\-_\\s]*):(?P<line>\\s*\\d*):(?P<type>[\\w\\s]*):(?P<error>.*)$
^(?P<filename>[\\w\\.\\-_\\s]*)\\((?P<line>\\s*\\d*)\\):(?P<type>[\\w\\s]*):(?P<error>.*)$
^(?P<filename>[^:]+):(?P<linenum>\\d+): \\[(?P<error_code>[^(]+)\\((?P<error_name>[^)]+)\\), (?P<function>[^\\]]*)\\] (?P<error_msg>.*)
^(?P<FILENAME>\\S+)\\s+.*\\d+\\%.*
^(?P<Filesystem>\\S+)\\s+(?P<Type>\\S+)\\s+(?P<Size>\\S+)M\\s+(?P<Used>\\S+)M\\s+(?P<Avail>\\S+)M\\s+(?P<Use_percentage>\\d+)%\\s+(?P<Mounted_on>\\S+)$
^(?P<first_char>\\W)(?P=first_char){1,}$
^(?P<fix_pos>^\\d+$)|^(?P<ratio>^\\d+)%$|^\\[(?P<align>\\d+)%\\]$
^(?P<flag> |\\-|\\+|U)(?P<sha>[a-f0-9]+) (?P<path>.+)( \\((?P<description>.+)\\))?
^(?P<flags>[~-]*)(?P<field>.*)$
^(?P<fluff>.*\")(?P<path>[^\"]*)\\Z
^(?P<format_id>\\d+)/(?P<width>\\d+)[xX](?P<height>\\d+)
^(?P<fpfx>!?)(?:/(?P<regex>.+)/|\\[(?P<prog>.+)\\]|(?P<fac>[,*0-9a-zA-Z]+))\\.(?P<pfx>!?=?)(?P<pri>[*a-zA-Z]+)$
^(?P<fqdn>(?:https?://)?[^/]+)
^(?P<from>.*) (?P<to>.*)$
^(?P<from>.*) to (?P<to>.*)$
^(?P<from>.*)$
^(?P<from>[-\\w]+)(:(?P<to>[-\\w]+))?$
^(?P<from>\\s*from\\s+)(?P<registry>[\\w.-]+(?P<port>:\\d+)?(?P<path>([\\w.-]+/)+|/))?(?P<name>[\\w.-]+)(?P<whitespace>(\\s*))$
^(?P<full_path>(?P<path_to_current>.*)/(?P<current_path>.*))$
^(?P<full>((?P<year>\\d{4})([/-]?(?P<mon>(0[1-9])|(1[012]))([/-]?(?P<mday>(0[1-9])|([12]\\d)|(3[01])))?)?(?:T(?P<hour>([01][0-9])|(?:2[0123]))(:?(?P<min>[0-5][0-9])(:?(?P<sec>[0-5][0-9]([,.]\\d{1,10})?))?)?(?:Z|([\\-+](?:([01][0-9])|(?:2[0123]))(:?(?:[0-5][0-9]))?))?)?))$
^(?P<full>((?P<year>\\d{4})([/-]?(?P<mon>(0[1-9])|(1[012]))([/-]?(?P<mday>(0[1-9])|([12]\\d)|(3[01])))?)?(?:T(?P<hour>([01][0-9])|(?:2[0123]))(\\:?(?P<min>[0-5][0-9])(\\:?(?P<sec>[0-5][0-9]([\\,\\.]\\d{1,10})?))?)?(?:Z|([\\-+](?:([01][0-9])|(?:2[0123]))(\\:?(?:[0-5][0-9]))?))?)?))$
^(?P<func>[a-zA-Z0-9_]+)\\((?P<stat>[^\\)]+)\\)$
^(?P<graph_index>\\d+)r:r(?P<repeat_index>\\d+)
^(?P<group>.+)-(?P<token>[^\\-\\.]+).css$
^(?P<H>\\d{2}):?(?P<M>\\d{2}):?(?P<S>\\d{2})(?P<MS>|[.]\\d+)(?P<TZ>|Z|(?P<TZH>[+-]\\d{2}):?(?P<TZM>\\d{2}))$
^(?P<head>.+):(?P<minrev>\\d+)(?:-(?P<maxrev>\\d+))$
^(?P<header>[a-z]+[a-z0-9_-]+):\\s*(?P<value>.*)$
^(?P<header>-{5}BEGIN PGP (.*?)-{5})(\\s*(?P<junk>.+?))$
^(?P<height>\\d+)[Pp]
^(?P<height>\\d+)[pP]
^(?P<host>((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(:(?P<port>.+))?$
^(?P<host>(\\w+:\\/{2,3})?[a-z0-9\\.\\-]+)(:(?P<port>[^:]+))?$
^(?P<host>.*?):(?P<port>\\d+)$
^(?P<host>[\\w\\.]+)?(?::(?P<port>\\d+))?(?:\\/(?P<path>.+))?$
^(?P<host>[^ ]*) [^ ]* (?P<user>[^ ]*) \\[(?P<time>[^\\]]*)\\] \"(?P<method>\\S+)(?: +(?P<path>[^\\\"]*?)(?: +\\S*)?)?\" (?P<code>[^ ]*) (?P<size>[^ ]*)(?: \"(?P<referer>[^\\\"]*)\" \"(?P<agent>[^\\\"]*)\")?$
^(?P<host>[^:\\s]+)(?::(?P<port>[0-9]+))?$
^(?P<host>[^:]+)(:(?P<port>[0-9]+))?$
^(?P<host>\\[.*\\])(:(?P<port>.+))?$
^(?P<hostname>\\S+)\\s+(?P<ipv4_address>[0-9\\.]+)\\s+(?P<mac_address>[0-9A-Fa-f\\:]+)
^(?P<hostnames>[^ \t]+)\\s+(?P<num>[0-9]+)\\s+(?P<partition>[^ \t]+)\\s+(?P<state>[^ \t]+)\\s+(?P<cpus>[0-9]+)\\s+(?P<S>[0-9]+):(?P<C>[0-9]+):(?P<T>[0-9]+)\\s+(?P<memory>[0-9]+)\\s+(?P<tmp_disk>[0-9]+)\\s+(?P<weight>[0-9]+)\\s+(?P<features>[^ ]+)\\s+(?P<reason>[^ \t]+)
^(?P<hour>\\d{1,2})(?P<minute>\\d{2})$
^(?P<Hour>\\d{1,2}):(?P<Minute>\\d{2})$
^(?P<hour>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})$
^(?P<hour>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})\\.(?P<nsec>\\d{9})$
^(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})$
^(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(\\.(?P<microseconds>\\d+))?(?P<timezone>Z|((?P<tz_sign>[-+])(?P<tz_hour>\\d{2})(:(?P<tz_minute>\\d{2}))?))?$
^(?P<hours>\\d+):(?P<minutes>\\d+):(?P<seconds>\\d+)$
^(?P<http_header>.*?): (?P<value>.*?)\\r\\n
^(?P<http_method>\\w+?)\\s+(?P<url>.*?)\\s+HTTP/[\\d\\.]+
^(?P<channel>[^_]+)_(?P<environment>[^-]+)\\-(?P<date>[0-9-]+)\\.log$
^(?P<channel>SIP/\\S+)\\s+(?P<user_profile>\\S+)?\\s+(?P<bridge_profile>\\S+)?\\s+(?P<menu>\\w*)\\s+(?P<caller_id>\\S+)\\s+(?P<muted>\\S+)
^(?P<chapterId>\\d+)\\.
^(?P<checkbox> *\\[(?P<state>(?:x|X| ){1})\\] +)(?P<line>.*)
^(?P<chr1>[^:]+):(?P<pos1_start>\\d+)\\|(?P<chr2>[^:]+):(?P<pos2_start>\\d+)$
^(?P<chunk>[^\\r\\n]+)|(?P<newline>\\n|\\r\\n?)
^(?P<ia>\\d+-[\\d:A-Fa-f]+),\\[(?P<host>[^\\]]+)\\](?P<port>:\\d+)?$
^(?P<id>([a-zA-Z0-9]{3,8}))\\.?[a-zA-z]*$
^(?P<id>[^@]+)@(?P<domain>l2g\\.com)$
^(?P<id>\\d+):(?P<op>\\d+)$
^(?P<idnumber>\\w{8})(?P<pos9>(\\d{1}|<))(?P<checksum>\\d{1})$
^(?P<indent_spaces> +)\"?(?P<key>[\\w-]+)\"? = (?P<value>.*)$
^(?P<indent> *)(-|\\+|\\*) (?P<content>.*)
^(?P<indent>#+) ?(?P<title>.+)$
^(?P<indent>(    )*)(?P<key>[a-zA-Z0-9][a-zA-Z0-9/]*)(\\s*(?P<hasvalue>=)\\s*(?P<value>[^ ].*))?$
^(?P<indent>(    )*)(?P<key>[a-zA-Z0-9][a-zA-Z0-9/]*)(\\s*(?P<hasvalue>=)\\s*\"(?P<value>[^ ].*)\")?$
^(?P<indent>( +|\\t+)).*
^(?P<indent>(\\t| )*)\\.\\.\\s*-+>\\s*(?P<name>\\S+).*$
^(?P<indent>[ \\t]*)\\.\\.\\s*(invisible-)?code(-block)?::?\\s*python\\b(?:\\s*\\:[\\w-]+\\:.*\\n)*(?:\\s*\\n)*
^(?P<indent>\\s*(?:- )?)(?P<rest>.*)$
^(?P<indent>\\s*)# module: (?P<name>.*)$
^(?P<indent>\\s*)# test: (?P<name>.*)$
^(?P<indent>\\s*)#\\s+at\\s+(?P<stack>.*)$
^(?P<indent>\\s*)(?P<start>\\d+)\\.\\.(?P<end>\\d+)(?: - (?P<details>.*))?$
^(?P<indent>\\s*)(?P<type>(?:not )?ok) (?P<num>\\d+)(?: - (?P<details>.*))?$
^(?P<indent>\\s*)\\!include (?P<path>[^\\s]+)$
^(?P<indent>\\s*)report\\s*(?P<note>\"[^\"]*\")\\s*;
^(?P<indent>\\s+)-
^(?P<indent>\\s+)(?P<counter>.*)=(?P<amount>\\d+)\\s*$
^(?P<indent>\\s+)(?P<group>.*)$
^(?P<indent>\\s+)(\"status\": \")(?P<status>.+)(\",?)
^(?P<indent>\\s+)],?$
^(?P<index>-?\\d+)$
^(?P<index>\\d+):\\s+(?P<name>\\S+)\\s+inet6?\\s+(?P<ip>[\\da-f.:]+)/(?P<mask>\\d+)\\s+.*
^(?P<initial>\\d{1})(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<checksum>\\d{1})
^(?P<instance>.*)/(?P<db>.*)$
^(?P<instance>[0-9]+)\\s+(?P<afi>[0-9]+)\\s+(?P<prefix>[0-9a-fA-F.:/]+)\\s+(?P<address>[0-9a-fA-F.:]+)$
^(?P<int>(-|\\+|VC)*)\n                             (?P<desc>(MI|PR|BC|DR|BL|SH|TS|FZ)+)?\n                             (?P<prec>(DZ|RA|SN|SG|IC|PL|GR|GS|UP|/)*)\n                             (?P<obsc>BR|FG|FU|VA|DU|SA|HZ|PY)?\n                             (?P<other>PO|SQ|FC|SS|DS|NSW|/+)?\n                             (?P<int2>[-+])?\\s+
^(?P<INTERFACE>\\S+):\\s+Type:\\s(?P<TYPE>.*)\\s+Bus:\\s+(?P<BUS>.*)$
^(?P<INTERFACE>\\S+)\\s+(.+)$
^(?P<item>\\S+)\\s(?P<predicate>eq|ne|ge|gt|lt|le|rgx)\\s(?P<value>\\S+.*)
^(?P<item>\\w[^,\\n]+)(,\\s+(?P<charge>(.*)))?$
^(?P<KEY>([^=]*))=(.*)$
^(?P<key>.+): (?P<value>.+)$\n?
^(?P<key>.+\\..+\\.)\\*(?P<remainder>.*)
^(?P<key>[\\w:,]+)(?P<op>(==)|(!=)|(>)|(>=)|(<)|(<=))(?P<value>.*)$
^(?P<key>[\\w\\(\\)]+):\\s+(?P<val>\\d+)
^(?P<key>[\\w]+)=(?P<value>.+)$
^(?P<key>[^- ]\\S*) +(?P<value>[^#]+).+$
^(?P<key>[^:\\s]+)\\s*:\\s*(?P<value>.*)$
^(?P<key>[^\\s\\=]+)\\=\"?(?P<value>[^\\s\\\"]*)\"?$
^(?P<key>[^\\s]+)\\s+(?P<value>.*?)\\s+\\s+.*$
^(?P<Key>[^=]+)=(?P<Value>.*)$
^(?P<key>[_a-zA-Z][a-zA-Z0-9_.]*)\\s*=\\s*(?P<value>.*)$
^(?P<key>[a-z-]+)=(\"?)(?P<value>.*?)\\2$
^--(?P<key>[a-z0-9-]+)(?:=(?P<val>.+))?$
^-(?P<key>[a-zA-Z0-9])$
^(?P<key>[A-Za-z0-9]+)\\s*:\\s*(?P<value>.+)$
^(?P<key>\\S*):\\s*(?P<value>\\d*)\\s*kB
^(?P<key>\\w[\\w\\s]+\\w):\\s+(?P<value>\\w.*)$
^(?P<key>host_perfdata_file)\\s*=\\s*(?P<value>.+)$
^(?P<key>host_perfdata_file_template)\\s*=\\s*(?P<value>.+)$
^(?P<key>log_file)\\s*=\\s*(?P<value>.+)$
^(?P<key>service_perfdata_file)\\s*=\\s*(?P<value>.+)$
^(?P<key>service_perfdata_file_template)\\s*=\\s*(?P<value>.+)$
^(?P<key>VG Name|LV Path|PV Name)\\s+(?P<val>\\S.*)$
^(?P<label_num>[^ ]+)\\s+(?P<features>[^#]*)\\s*(?P<comments>#\\s*(?P<example_id>[^|]+)\\s*\\|\\s*(?P<label_map>[^|]+)\\s*\\|\\s*(?P<feat_map>.*)\\s*)?$
^(?P<label>[-[:alnum:]]+)(?P<params>(?:;(?:(?:[-[:alnum:]]+)=(?:[^[:cntrl:]\";:,]+|\"[^[:cntrl:]\"]+\")))*):(?P<data>.*)$
^(?P<layer>.*?)\\+(?P<weight>.*?)\\.kur$
^(?P<left>-?\\d+)?(?P<sep>\\.\\.)?(?P<right>-?\\d+)?$
^(?P<length>[0-9a-fA-F]+)(;[^\\r\\n]+)?(\\r\\n|\\r|\\n)
^(?P<letter>[A-Za-z]):\\\\
^(?P<level>#{1,6})(?P<rest>.*)
^(?P<level>#{1,6})\\s(?P<text>.*?)(?:\\s#*)?$
^(?P<level>#+)\\s*(?P<title>.*)$
^(?P<line_type>[- \\+\\\\])(?P<value>.*)
^(?P<line_type>[- \\+\\\\]?)(?P<value>[\\r\\n]{1,2})
^(?P<line_type>[- \\n\\+\\\\]?)(?P<value>.*)
^(?P<LINES>(?P<PORTS>(?P<PORT>\\d+)\\/(?P<TYPE>\\w+))\\s+(?P<STATE>\\S+)\\s+(?P<SERVICE>\\S+)\\s+(?P<REASON>\\S+)\\s*)$
^(?P<local_host>\\S+?)\\.(?P<local_port>\\w+)\\s+\n                       (?P<foreign_host>\\S+?)\\.(?P<foreign_port>\\w+|\\*)\\s+\n                       (?P<state>\\S+)\n                       \\s*$
^(?P<local_host>\\S+?)\\.(?P<local_port>\\w+)\\s+\n                       (?P<foreign_host>\\S+?)\\.(?P<foreign_port>\\w+|\\*)\\s+\n                       (?P<swind>\\d+) \\s+\n                       (?P<sendq>\\d+) \\s+\n                       (?P<rwind>\\d+) \\s+\n                       (?P<recvq>\\d+) \\s+\n                       (?P<state>\\S+)\n                       \\s*$
^(?P<local>[^@]*[^@.])@(?P<server>[^@]+(?:\\.[^@]+)*)$
^(?P<locale>[a-z]{2})\\-[A-Z]{2}$
^(?P<loopexpr>[a-zA-Z_]\\w*(\\s*,\\s*[a-zA-Z_]\\w*)*)\\s+in\\s+(?P<iter>.+)$
^(?P<m_number>[\\d]{4})
^(?P<macro>_?[\\w\\d]*?):(?P<cr>[\\r\\n]{0,2} {1,16})(?P<contents>.*?$(?:[\\r\\n]{0,2} {16,16}.*?$)*)
^(?P<macro>_?[\\w\\d]*?):(?P<cr>[\\r\\n]{0,2} {1,16})(?P<contents>.*?$)
^(?P<main>.+):(?P<port>\\d+)$
^(?P<MAJOR>(?:0|(?:[1-9]\\d*)))\\.(?P<MINOR>(?:0|(?:[1-9]\\d*)))\\.(?P<PATCH>(?:0|(?:[1-9]\\d*)))(?:-(?P<prerelease>[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*))?(?:\\+(?P<build>[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*))?$
^(?P<major>(?:0|[1-9][0-9]*))\\.(?P<minor>(?:0|[1-9][0-9]*))\\.(?P<patch>(?:0|[1-9][0-9]*))(\\-(?P<prerelease>[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*))?(\\+(?P<build>[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*))?$
^(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)\\.(?P<patch>[0-9]+)b(?P<build>[0-9]+)$
^(?P<major>[1-9][0-9]{0,2})\\.(?P<minor>(([0-9])|([1-9][0-9]?)))\\((?P<mr>(([0-9])|([1-9][0-9]{0,2})))(?P<patch>[a-z])\\)$
^(?P<major>[1-9][0-9]{0,2})\\.(?P<minor>(([0-9])|([1-9][0-9]?)))\\((?P<mr>(([0-9])|([1-9][0-9]{0,2})))\\)$
^(?P<major>[1-9][0-9]{0,2})\\.(?P<minor>(([0-9])|([1-9][0-9]?)))\\((?P<mr>(([0-9])|([1-9][0-9]{0,2})))\\.(?P<patch>(([0-9])|([1-9][0-9]{0,4})))\\)$
^(?P<major>[1-9][0-9]{0,2})\\.(?P<minor>(([0-9])|([1-9][0-9]{0,1})))\\((?P<mr>(([0-9])|([1-9][0-9]{0,2})))(?P<patch>[a-z])(?P<spin>S[1-9][0-9]{0,2})\\)$
^(?P<major>[1-9][0-9]{0,2})\\.(?P<minor>(([0-9])|([1-9][0-9]{0,1})))\\((?P<mr>(([0-9])|([1-9][0-9]{0,2})))(?P<patch>[a-z])\\)$
^(?P<major>[1-9][0-9]{0,2})\\.(?P<minor>(([0-9])|([1-9][0-9]{0,1})))\\((?P<mr>(([0-9])|([1-9][0-9]{0,2})))(?P<spin>S[1-9][0-9]{0,2})\\)$
^(?P<major>[1-9][0-9]{0,2})\\.(?P<minor>(([0-9])|([1-9][0-9]{0,1})))\\((?P<mr>(([0-9])|([1-9][0-9]{0,2})))\\)$
^(?P<major>[1-9][0-9]{0,2})\\.(?P<minor>(([0-9])|([1-9][0-9]{0,1})))\\((?P<mr>(([0-9])|([1-9][0-9]{0,2})))\\.(?P<patch>(([0-9])|([1-9][0-9]{0,4})))\\)$
^(?P<major>\\d)\\.(?P<minor1>\\d)\\.(?P<minor2>\\d+)
^(?P<major>\\d+)
^(?P<major>\\d+)(?:\\.(?P<minor>\\d+)(?:\\.(?P<patch>\\d+)(?:\\.(?P<build>\\d+))?)?)?
^(?P<major>\\d+)(?:\\.(?P<minor>\\d+)(?:\\.(?P<patch>\\d+))?)?
^(?P<major>\\d+)(\\.(?P<minor>\\d+))?(\\.(?P<micro>\\d+))?(?P<extraversion>.*)$
^(?P<major>\\d+)(\\.(?P<minor>\\d+))?(\\.(?P<revision>\\d+))?(-.*)?$
^(?P<major>\\d+)\\.(?P<minor>\\d+)(?:\\.(?P<patch>\\d+))?$
^(?P<major>\\d+)\\.(?P<minor>\\d+)(?:\\.(?P<patch>\\d+))?(?:(?P<pre0>[a-z]+)(?P<pre1>\\d*))?$
^(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.(?P<subminor>\\d+))?
^(?P<major>\\d+)\\.(?P<minor>\\d+)(\\.\\d+)?.*
^(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<mini>\\d+)(?P<suffix>.*)?$
^(?P<majorMinor>\\d++\\.\\d++)\\.(?P<patch>\\d++)
^(?P<master>.*?)!(?P<worker>.*?)=(?P<dir>.*)$
^(?P<mem>[0-9]+(MB|KB|GB|[BKMG]))$
^(?P<member_name>.*)\\[(?P<member_role_number>\\d*)\\]\\(?(?P<member_state>[FS])?\\)?$
^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)$
^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)/delete$
^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)/history$
^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)/move_down$
^(?P<menu_pk>[-\\w]+)/items/(?P<menu_item_pk>[-\\w]+)/move_up$
^(?P<message_id>[A-Z0-9]+): (?P<postfix_message>.*)
^(?P<message>[^\\n]*?)((?: in:)?\\n|\\nFailed assertion:)(?s).*$
^(?P<method>[!\\#$%&'*+.^_`|~a-zA-Z0-9-]+) (?P<target>[^\\s]+) HTTP/(?P<version>[1-9]\\d*\\.\\d+)$
^(?P<method>\\w+) (?P<path>\\S+) (?P<version>HTTP/\\d\\.\\d)\\r\\n
^(?P<mext>m=[^\\000=]+,)?r=(?P<nonce>[\\x21-\\x2B\\x2D-\\x7E]+),s=(?P<salt>[a-zA-Z0-9/+=]+),i=(?P<iteration_count>\\d+)(?:,.*)?$
^(?P<min_size>\\d+)$|^(?P<ratio>\\d+)%$|^(?P<fill_1>fill)$|^fill[(](?P<fill>\\d+)[)]+$
^(?P<min>[0-9]{1,})\\-(?P<max>[0-9]{1,})$
^(?P<min>[0-9]{1,10})(:(?P<max>[0-9]{1,10}))?$
^(?P<min>[0-9]+)\\-(?P<max>[0-9]+)$
^(?P<minlon>-?[0-9]{1,3}(\\.[0-9]{1,10})?) (?P<minlat>-?[0-9]{1,3}(\\.[0-9]{1,10})?) (?P<maxlon>-?[0-9]{1,3}(\\.[0-9]{1,10})?) (?P<maxlat>-?[0-9]{1,3}(\\.[0-9]{1,10})?)$
^(?P<minlon>-?[0-9]{1,3}(\\.[0-9]{1,10})?),(?P<minlat>-?[0-9]{1,3}(\\.[0-9]{1,10})?),(?P<maxlon>-?[0-9]{1,3}(\\.[0-9]{1,10})?),(?P<maxlat>-?[0-9]{1,3}(\\.[0-9]{1,10})?)$
^(?P<minor>\\d+.\\d+)
^(?P<minutes>\\d+)$
^(?P<minutes>\\d+):(?P<seconds>\\d+)$
^(?P<mod>AUTO|FINO|NIL|TEST|CORR?|RTD|CC[A-G])\\s+
^(?P<mode>both|math|text)
^(?P<month>(\\d+|-\\d+))$
^(?P<month>(\\d+|-\\d+))\\s*(months|month)$
^(?P<month>\\\\d\\\\d)\\\\/(?P<day>\\\\d\\\\d)(?:\\\\/)?(?P<year>\\\\d{4})?-(?P<hour>\\\\d\\\\d):(?P<minute>\\\\d\\\\d):(?P<seconds>\\\\d\\\\d).(?P<microseconds>\\\\d+)
^(?P<month>\\d\\d?)-(?P<day>\\d\\d?)-(?P<year>\\d\\d\\d\\d)_(?P<hour>\\d\\d?);(?P<minute>\\d\\d);(?P<second>\\d\\d)_(?P<period>AM|PM)\\.wav$
^(?P<mount_id>[0-9]+) (?P<parent_id>[0-9]+) (?P<major>[0-9]+):(?P<minor>[0-9]+) (?P<root>(?:/|net:)[^ ]*) (?P<mount>/[^ ]*) .+$
^(?P<mul>[0-9]?n)(?:(?P<sign>\\+|\\-)(?P<pos>[0-9]+))?$
^(?P<n>[0-9]+)(?P<op>[MIDNSHP=X])
^(?P<n>\\d*;?\\d*)(?P<cmd>[ABCDEFGHJKfP]{1})
^(?P<name>(?:[(]\\s*)?[a-zA-Z_]\\w*(?:\\s*,\\s*[a-zA-Z_]\\w*)*(?:\\s*[)])?)\\s*(?:=\\s*(?P<expr>.*))?$
^(?P<name>(?:\"?([^\"]*)\"?\\s)?)(?:\\s+)?(?:(?P<open><?)((?P<local>.+)@(?P<domain>[^>]+))(?P<close>>?))$
^(?P<name>(?P<base>Base)?.*?)Presenter$
^(?P<name>(\\w+:)?[\\w\\d_\\-]+)?(?P<id>#[\\w\\d_\\-]+)?(?P<class>\\.[\\w\\d_\\-]+)?(?P<property>\\:[\\w\\d\\-]+)?(?P<count>\\[\\-?\\d+\\])?$
^(?P<name>.*?)<(?P<email>[^>]+)>$
^(?P<name>.+)-(?P<evra>(?:(?P<epoch>\\d+):)?(?P<version>[\\w.+{}]+)-(?P<release>[\\w.+{}]+)\\.(?P<arch>[^.]+))$
^(?P<name>.+)\\.(?P<arch>[^.]+)$
^(?P<name>.+?)(?:\\.git)$
^(?P<name>.+?)(?P<copy>\\s+copy\\s+(?P<num>\\d+))?$
^(?P<name>.+?)\\s+(?P<rev>-?\\d+):(?P<nodeid>[0-9a-f]+)
^(?P<name>.+?)=(?P<quoted>\"|')?(?P<value>.*?)(?:\\k<quoted>)?$
^(?P<name>[- .,\\p{L}\\p{N}\\p{Mn}'\u2019\"()]+) <(?P<email>.+?)>$
^(?P<name>[- \\.,\\p{L}\\p{N}'\u2019]+) <(?P<email>.+?)>$
^(?P<name>[- \\.,\\p{L}'\u2019]+) <(?P<email>.+?)>$
^(?P<name>[!#$%&'*+.^_`\\|~0-9a-zA-Z-]+):(?P<value>.*)$
^(?P<name>[\\w-]+)=(?P<url>(http|https)://[\\w-./:]+)
^(?P<name>[^()><@,;:\\\"\\/\\[\\]?={} \\t]+):.*$
^(?P<name>[^()><@,;:\\\"\\/\\[\\]?=}{ \\t]+):.*$
^(?P<name>[^()><@,;:\\\"\\/\\[\\]?=}{ \\t]+):\\s*(?P<value>.*)$
^(?P<name>[^()><@,;:\\\"\\/\\[\\]?=}{ \\t]+):\\W+(?P<value>.*)$
^(?P<name>[^.]+?)-(?P<ver>(?:[1-9]\\d*!)?(?:0|[1-9]\\d*)(?:\\.(?:0|[1-9]\\d*))*(?:(?:a|b|rc)(?:0|[1-9]\\d*))?(?:\\.post(?:0|[1-9]\\d*))?(?:\\.dev(?:0|[1-9]\\d*))?(?:\\+(?:[a-z0-9]+(?:[-_\\.][a-z0-9]+)*))?)$
^(?P<name>[^.]+?)-(?P<ver>(?:[1-9]\\d*!)?(?:0|[1-9]\\d*)(?:\\.(?:0|[1-9]\\d*))*(?:(?:a|b|rc|alpha|beta)(?:0|[1-9]\\d*))?(?:\\.post(?:0|[1-9]\\d*))?(?:\\.dev(?:0|[1-9]\\d*))?(?:\\-(?:[a-z0-9]+(?:[-_\\.][a-z0-9]+)*))?)$
^(?P<name>[^/]+)(/(?P<target>[^/]+))?$
^(?P<name>[^:\\s]+):(?P<value>[^|\\s]+)\\|(?P<type>[a-z]+)(?:\\|@(?P<sample>[0-9.]+))?(?:\\|#(?P<tags>[^:,]+:[^:,]+(,[^:,]+:[^:,]+)*))?$
^(?P<name>[^\\(<]+)\\s?(?P<email><([^>]+)>)?\\s?(?P<url>\\([^\\)]+\\))?$
^(?P<name>[^\\.]+)(\\.(?P<sub>.+))?$
^(?P<name>[^\\s]+)(?:\\s+\\((?P<type>.*)\\))?$
^(?P<name>[^\\s]+)\\s*=\\s*(?P<value>.+)$
^(?P<name>[^|]*)\\|(?P<description>[^|]*)\\|(?P<status_code>.*)
^(?P<name>[^|]*)\\|[^|]+\\|(?P<status_code>[^|]*)\\|(?P<entity_id>[^|]*)\\|(?:(?P<description>[^|]+))?
^(?P<name>[^<>=!]+)(?P<specifier>(?:==|!=|>=?|<=?).*)?$
^(?P<name>[0-9A-Za-z-]+) connected(?P<primary> primary)? (?P<width>\\d+)x(?P<height>\\d+)\\+(?P<x>\\d+)\\+(?P<y>\\d+)
^(?P<name>[A-Z-]+)(?P<nums>[\\d-]+)$
^(?P<name>[a-z_][a-z0-9_]*)(\\((?P<parent_class>[a-z_][a-z0-9_]*)\\)|\\.(?P<index>\\d+))?$
^(?P<name>[A-Z0-9_]+) = (?P<value>.+)
^(?P<name>[a-zA-Z]+)=(?P<value>.*)$
^(?P<name>[a-zA-Z_][\\w.]*)$
^(?P<name>[a-zA-Z_][\\w.]*)[ \\t]*(?:\\([ \\t]*(?P<args>.*)[ \\t]*\\))?$
^(?P<name>[a-zA-Z_]\\w*)$
^(?P<name>[a-zA-Z_]\\w*)[ \\t]*\\(\\s*(?P<args>.+)?\\s*\\)$
^(?P<name>[a-zA-Z0-9._-]+)$
^(?P<name>[a-zA-Z0-9._-]+)[@:](?P<owner>[a-zA-Z0-9._-]+)$
^(?P<name>[a-zA-Z0-9._-]+)[@:](?P<owner>[a-zA-Z0-9._-]+):(?P<version>\\d+\\.\\d+\\.\\d+)$
^(?P<name>[a-zA-Z0-9\\-\\.!%\\*_\\+`'~]*)[ \t]*<(?P<uri>[^>]+)>[ \t]*(?:;(?P<params>[^\\?]*))?
^(?P<name>[A-Za-z0-9]+)$
^(?P<name>[a-zA-Z0-9]+)=\\\"(?P<value>.*)\\\"$
^(?P<name>[A-Za-z0-9_]+)(:(?P<type>[A-Za-z_]+))=(?P<value>.*)$
^(?P<name>[a-zA-Z0-9_]+){(?P<labels>[a-zA-Z0-9]+=\\\".*\\\")+(?:,+)?(?:\\ +)?} (?P<value>[0-9.E]+)$
^(?P<name>\\S+) *(?P<fg>.*?) +on +(?P<bg>.*) *$
^(?P<name>\\S+)\\sv(?P<version>\\S+):
^(?P<name>\\w+)$
^(?P<Name>\\w+)(?:(?:\\[(?P<Index>\\d+)\\])|(?::(?P<Version>inet6?)))?$
^(?P<name>\\w+):\\d+$
^(?P<name>\\w+)\\*((?P<num>[0-9]+)\\*?)?$
^(?P<name>\\w+)=
^(?P<namespace>.*?)\\\\(?P<short_name>[^\\\\]*?)$
^(?P<namespace>[^:]+)::(?P<template>.*)$
^(?P<namever>(?P<name>.+?)(-(?P<ver>.+?))?)\n                                \\.dist-info$
^(?P<namever>(?P<name>.+?)(-(?P<ver>\\d.*?))?)\n        ((-(?P<build>\\d.*?))?-(?P<pyver>.+?)-(?P<abi>.+?)-(?P<plat>.+?)\n        \\.whl|\\.dist-info)$
^(?P<namever>(?P<name>.+?)(-(?P<ver>\\d.+?))?)\n                                \\.dist-info$
^(?P<namever>(?P<name>.+?)(-(?P<ver>\\d.+?))?)\n    ((-(?P<build>\\d.*?))?-(?P<pyver>.+?)-(?P<abi>.+?)-(?P<plat>.+?)\n    \\.whl|\\.dist-info)$
^(?P<namever>(?P<name>.+?)-(?P<ver>.*?))\n        ((-(?P<build>\\d[^-]*?))?-(?P<pyver>.+?)-(?P<abi>.+?)-(?P<plat>.+?)\n        \\.whl|\\.dist-info)$
^(?P<namever>(?P<name>.+?)-(?P<ver>.*?))\n    ((-(?P<build>\\d.*?))?-(?P<pyver>.+?)-(?P<abi>.+?)-(?P<plat>.+?)\n    \\.whl|\\.dist-info)$
^(?P<namever>(?P<name>.+?)-(?P<ver>.+?))(-(?P<build>\\d[^-]*))?\n     -(?P<pyver>.+?)-(?P<abi>.+?)-(?P<plat>.+?)\\.whl$
^(?P<namever>(?P<name>.+?)-(?P<ver>\\d.*?))(-(?P<build>\\d.*?))?\n     -(?P<pyver>[a-z].+?)-(?P<abi>.+?)-(?P<plat>.+?)(\\.whl|\\.dist-info)$
^(?P<namever>(?P<name>.+?)-(?P<ver>\\d.*?))\\.dist-info$
^(?P<namever>(?P<name>.+?)-(?P<ver>\\d.*?))\n        ((-(?P<build>\\d.*?))?-(?P<pyver>.+?)-(?P<abi>.+?)-(?P<plat>.+?)\n        \\.whl|\\.dist-info)$
^(?P<namever>(?P<name>.+?)-(?P<ver>\\d.*?))\n    ((-(?P<build>\\d.*?))?-(?P<pyver>.+?)-(?P<abi>.+?)-(?P<plat>.+?)\n    \\.whl|\\.dist-info)$
^(?P<nestedValueType>[^\\[]+)\\[\\]$
^(?P<network>\\w+)-(?P<build>\\d+)-(?P<shard>\\d+)-allow-(?P<type>[\\w\\-]+)$
^(?P<network>\\w+)-allow-(?P<type>\\w+)-(?P<build>\\d+)-(?P<shard>\\d+)$
^(?P<new>\\\\w+)(?P<preserve>\\\\+)*=(?P<old>\\\\w+)$
^(?P<note>[A-Ga-g])(?P<accidental>[#b!]*)(?P<octave>[+-]?\\d+)?(?P<cents>[+-]\\d+)?$
^(?P<notional>\\d+) (?P<from>.*) (?P<to>.*)$
^(?P<notional>\\d+) (?P<from>.*) to (?P<to>.*)$
^(?P<notional>\\d+) (?P<from>.*)$
^(?P<nuclearity>nucleus|satellite):(?P<relname>.*)$
^(?P<nullable>NOT NULL|NULL)($| )
^(?P<num>-(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)(?P<multi>[kMGT])?$
^(?P<num>[0-9]+)(?P<ext>[smhDWMY])
^(?P<num>\\d+(\\.(?P<decimal>\\d+))?)(?P<unit>([KMGTPEZ]i)?B)$
^(?P<num>\\d+(\\.(?P<decimal>\\d+))?)(?P<unit>[KMGTPEZ]?B)$
^(?P<number>(?:-)?\\d*(?:(?:\\.)(?:\\d*)?)?)(?P<unit>[a-z]+)$
^(?P<number>[\\d]+)\\/(?P<protocol>tcp|udp)\\s+(?:open|open\\|filtered)\\s+(?P<service>[\\w\\S]*)(?:\\s*(?P<version>.*))?$
^(?P<number>[\\d]+)\\/(?P<protocol>tcp|udp)\\s+(?:open|open\\|filtered)\\s+(?P<service>[\\w\\S]*)\\s+(?P<reason>.* ttl [\\d]+)\\s*(?:\\s*(?P<version>.*))$
^(?P<number>[0-9]{4})\\.(?P<name>[_0-9a-zA-Z]*)\\.(?P<direction>up|down)\\.sql$
^(?P<number>\\d*)(?P<rest>.*)
^(?P<number>\\d{7})(?P<check>\\d)$
^(?P<number>\\d+)-
^(?P<number>\\d+)(?P<suffix>ms|s|min|h|d)?$
^(?P<NUMBER>\\d+):(?P<BYTES>\\d+):(?P<LINE>.*)$
^(?P<NUMBER>\\d+):(?P<LINE>.*)$
^(?P<number>\\d+)\\s*(?P<unit>\\w+)( ago)?$
^(?P<object>[0-9a-f]{40}) (?P<mode>[0-7]{3}) (?P<type>.) (?P<name>.+)$
^(?P<oid>[0-9]+(\\.[0-9]+)+)(?P<crit> (true|false))?(?P<value>:.+)$
^(?P<op>=|[<>!]=?)?(?P<ver>.*)$
^(?P<p1>\\d+)(?:-(?P<p2>\\d+))?(?:/(?P<proto>(tcp|udp)))?$
^(?P<package_name>[\\w.]+)-(?P<version>[\\w.]+)-py(?P<python_version>\\d+\\.\\d+)-(?P<platform_key>[\\w.-]+)$
^(?P<package>.*?)(;\\s*(?P<condition>.*?)(extra == '(?P<extra>.*?)')?)$
^(?P<package>[A-Za-z0-9-.+_]+)(:(?P<arch>[a-z0-9]+))?$
^(?P<PackageNamespace>\\w+(?:\\\\\\w+)*)\\\\Command\\\\(?P<CommandName>\\w+)$
^(?P<PackageNamespace>\\w+(?:\\\\\\w+)*)\\\\Command\\\\(?P<ControllerName>\\w+)CommandController$
^(?P<PackageNamespace>\\w+(?:\\\\\\w+)*)\\\\Domain\\\\Model\\\\(?P<ModelNamePrefix>(\\w+\\\\)?)(?P<ModelName>\\w+)$
^(?P<paren>\\()?(\\d+|#|[ivxlcdm]+|[IVXLCDM]+|[a-zA-Z])(?(paren)\\)|\\.)(\\s+\\S|\\s*$)
^(?P<parent>[^{]+?)\\{(?P<inner>.+)\\}$
^(?P<parsable>\\d{4}-\\d{2}-\\d{2}(?P<T>[ T])\\d{2}:\\d{2}:\\d{2}(?P<f>\\.\\d{1,7})?)(?P<z>[-+]\\d{2}\\:?\\d{2})?(?P<Z>Z)?
^(?P<path>(?:(?:^|\\.)[^\\d\\W]\\w*)+)?:(?P<name>[^\\d\\W]\\w*)$
^(?P<path>.*): ((?P<virus>.+) )?(?P<status>(FOUND|OK|ERROR))$
^(?P<path>.*[/\\\\])(?P<query>[^/\\\\]*)$
^(?P<path>[:\\-\\w/.\\(\\)]+?)(?:\\.(?P<name>\\w+))?(?:#(?P<form>[\\w.]+))?$
^(?P<path>[^:]+): ((?P<desc>[^:]+)(\\((?P<virhash>([^:]+)):(?P<virsize>\\d+)\\))? )?(?P<status>FOUND|ERROR|OK)$
^(?P<path>[^\\s]+)\\s+(?P<value>inherit|(?P<fileMode>[0-7]{3,4})\\s+(?P<dirMode>[0-7]{3,4})(\\s+(?P<uid>[^\\s]+)\\s+(?P<gid>[^\\s]+))?)$
^(?P<PATH>\\/\\S+):(?P<LINE>.*)$
^(?P<PATH>\\/\\S+):(?P<NUMBER>\\d+):(?P<BYTES>\\d+):(?P<LINE>.*)$
^(?P<PATH>\\/\\S+):(?P<NUMBER>\\d+):(?P<LINE>.*)$
^(?P<path>\\S.*?):(?P<line>\\d+):(?P<column>\\d*):? (?P<type>warning|note): (?P<message>.*?)(?P<switch> \\[\\-W.+\\])?$
^(?P<patch>\\d+.\\d+.\\d+)
^(?P<PCKTS>\\d+) packets captured$
^(?P<percent>[0-9.e+-]+)%\\s*\\((?P<min>[0-9.e+-]+),\\s*(?P<max>[0-9.e+-]+)\\)$
^(?P<pkg>[^><==]+)[><==]{,2}(?P<version>.*)$
^(?P<placeholder_name>[a-zA-Z]+)(\\d*)(=[^\\s\\[\\]\\{\\}=]*)?$
^(?P<plus_minus>(\\+|-))(?P<hours>\\d{2})(?P<minutes>\\d{2})$
^(?P<points>[\\d]+)\\*(?P<precision>[\\d]+)s(?P<type>(_0|_aggr))?$
^(?P<port>PORT)\\s+(?P<state>STATE)\\s+(?P<service>SERVICE)\\s+(?P<reason>REASON\\s*)?(?P<version>VERSION$)?
^(?P<position>[cj]?(?:ob|fl|fi|fe|fn))=\\s*(?:\\((?P<id>\\d+)\\))?(?:\\s*(?P<name>.+))?
^(?P<pre_hostname>[a-zA-Z-.]+): 
^(?P<pre>()|(.*[^\\d]))(?P<digits>\\d+)(?P<post>.*)$
^(?P<prefix>(?i)mac|uuid|dns|serial):(?P<id>[^/]+)(?P<service>/[^/]+)?
^(?P<prefix>([a-zA-Z]:)?/)
^(?P<prefix>([a-zA-Z]+:)?//?)
^(?P<prefix>.*?) ?{{ widget }} ?(?P<suffix>.*?)$
^(?P<prefix>.*?)(?P<fps>\\d{1,}\\.?\\d* fps,)(?P<postfix>.*)$
^(?P<prefix>.*?)(?P<size>\\d{3,}?x\\d{2,}?)([,\\s])(?P<postfix>.*)$
^(?P<prefix>.*?)(?P<tbr>\\d{1,}\\.?\\d* tbr,)(?P<postfix>.*)$
^(?P<prefix>.*?/)(?P<application_id>application_\\d+_\\d{4})/(?P<container_id>container(_\\d+)+)/(?P<log_type>stderr|stdout|syslog)(?P<suffix>\\.\\w{1,3})?$
^(?P<prefix>.*?/)(?P<attempt_id>attempt_(?P<timestamp>\\d+)_(?P<step_num>\\d+)_(?P<task_type>[mr])_(?P<task_num>\\d+)_(?P<attempt_num>\\d+))/(?P<log_type>stderr|syslog)(?P<suffix>\\.\\w{1,3})?$
^(?P<prefix>.*?/)(?P<job_id>job_\\d+_\\d{4})[_-]\\d+[_-]hadoop[_-](?P<suffix>\\S*)$
^(?P<prefix>.*?/)(?P<step_id>s-[A-Z0-9]+)/(?P<log_type>syslog|stderr)(\\.(?P<timestamp>[\\d-]+))?(?P<suffix>\\.\\w+)?$
^(?P<prefix>.*?/)node/(?P<node_id>i-[0-9a-f]+)/bootstrap-actions/(?P<action_num>\\d+)/stderr(?P<suffix>\\.\\w+)?
^(?P<prefix>[[:xdigit:]]{6})\\s+\\(base 16\\)\\s*(?P<name>.+)$
^(?P<prefix>[a-z,A-Z,_]+)?(?P<major>\\d+)(?:\\.(?P<minor>\\d+)(?:\\.(?P<patch>\\d+))?)?(?:-(?P<identifiers>.+))?$
^(?P<prefix>[A-Z]{1,2})\\d+n(?P<work>[A-Z]?\\d+)(?P<part>[A-Za-z]?)$
^(?P<prefix>[a-z]+)://(?P<suffix>.*)$
^(?P<prefix>[kMGTP])?(?P<unit>.+)$
^(?P<prefix>\\d+-)?(?P<account>\\d+)(?P<code>/\\d+)?$
^(?P<prefix>\\W*)(\\(c\\))?\\s*?copyright\\s*(\\(c\\))?\\s+\\d{4}(\\s*-\\s*\\d{4})?\\s+(?P<name>.+?)\\s*$
^(?P<prefix>-{1,2})(?P<name>[a-zA-Z0-9\\-_]+)=?(?P<value>.*)$
^(?P<prefix>RIFLGFC)(?P<unit>[YM])(?P<periods>[0-9]{2})(?P<suffix>_N.B)$
^(?P<program>([^(:]+\\([^)]+\\)|[^\\[:]+\\[[^\\]]+\\])) ?: ?(?P<msg>.*)$
^(?P<program>[A-Za-z]+): {2}(?P<msg>.*)
^(?P<project_name>.+?)-(?P<version>\\d.*?)\n    ((-(?P<build>\\d.*?))?-(?P<py_version>.+?)-(?P<abi>.+?)-(?P<platform>.+?)\n    )\\.whl$
^(?P<proto>.+:\\/\\/)?.*$
^(?P<proto>\\w+)://github.com/(?P<username>[^/]+)/(?P<project>[^/]+)([.]git)?$
^(?P<proto>https?)://packagist\\.org/?$
^(?P<proto>inet):(?P<host>[^:]+)(:(?P<port>[0-9]+))?$
^(?P<proto>inet6):\\[(?P<host>[^\\[\\]]+)\\](:(?P<port>[0-9]+))?$
^(?P<proto>tcp(?:4|6|46)?) \\s+ (?P<recvq>\\d+) \\s+ (?P<sendq>\\d+)\\s+\n                       (?P<local_host>\\S+?)[:.](?P<local_port>\\w+)\\s+\n                       (?P<foreign_host>\\S+?)[:.](?P<foreign_port>\\w+|\\*)\\s+\n                       (?P<state>\\S+) (?: \\s+ (?:\n                               (?P<pid>\\d+)/(?P<program>.+?) |\n                               -\n                       ))? \\s*$
^(?P<proto>tcp[46]?) \\s+ (?P<recvq>\\d+) \\s+ (?P<sendq>\\d+)\\s+\n                       (?P<local_host>\\S+?):(?P<local_port>\\w+)\\s+\n                       (?P<foreign_host>\\S+?):(?P<foreign_port>\\w+|\\*)\\s+\n                       (?P<state>\\S+) (?: \\s+ (?:\n                               (?P<pid>\\d+)/(?P<program>.+?) |\n                               -\n                       ))? \\s*$
^(?P<proto>udp(?:4|6|46)?) \\s+ (?P<recvq>\\d+) \\s+ (?P<sendq>\\d+) \\s+\n                       (?P<local_host>\\S+?)[:.](?P<local_port>\\w+|\\*)\\s+\n                       (?P<foreign_host>\\S+?)[:.](?P<foreign_port>\\w+|\\*)\n                       (?: \\s+\n                           (?P<state>\\S+)?\n                           (?: \\s+ (?:\n                                   (?P<pid>\\d+)/(?P<program>.+?) |\n                                   -\n                           ))?\n                       )? \\s*$
^(?P<proto>udp[46]?) \\s+ (?P<recvq>\\d+) \\s+ (?P<sendq>\\d+) \\s+\n                       (?P<local_host>\\S+?):(?P<local_port>\\w+|\\*)\\s+\n                       (?P<foreign_host>\\S+?):(?P<foreign_port>\\w+|\\*)\n                       (?: \\s+\n                           (?P<state>\\S+)?\n                           (?: \\s+ (?:\n                                   (?P<pid>\\d+)/(?P<program>.+?) |\n                                   -\n                           ))?\n                       )? \\s*$
^(?P<proto>unix) \\s+ (?P<refcnt>\\d+) \\s+\n                       \\[\\s*(?P<flags>\\S*)\\s*\\] \\s+ (?P<type>\\S+) \\s+\n                       (?P<state>\\S+|\\s+) \\s+ (?P<inode>\\d+) \\s+\n                       (?: (?: (?P<pid>\\d+)/(?P<program>.+?) | - ) \\s+)?\n                       (?P<path>.*?)\\s*$
^(?P<proto>unix):(?P<path>.*)$
^(?P<protocol>(tcp|ssl))://(?P<host>[^:]+):(?P<port>\\d+)$
^(?P<protocol>http(s)?)://
^(?P<protocol>https?|git|ssh|rsync)\\://(?:(?P<username>[^:]+)(:(?P<password>[^@]+))?@)?(?P<hostname>[a-z0-9_.-]*)[:/]*(?P<port>[\\d]+){0,1}(?P<pathname>\\/(?P<owner>.+)/(?P<name>.+).git)
^(?P<qty>\\d+)(?P<unit>[KMGT]i?B|B)$
^(?P<quot>[\"']?)[^`,;+\\-*\\/\\{\\}\\[\\]\\(\\)&\\|=\\\\]*(?P=quot)$
^(?P<r>[+-])?(?:(?P<h>\\d\\d):(?=\\d\\d:))?(?:(?P<m>\\d\\d):)?(?P<s>\\d\\d)$
^(?P<r1>[^.]+)\\.googlesource.com/(?P<r2>[^./]+)$
^(?P<realAnalogUnit>[^,]+)(?:,\\s*(?P<statusDesc>.*))?
^(?P<ref>\\w)(?P<useq>\\w*)\\[(?P<chr>[^:]+):(?P<pos>\\d+)\\[$
^(?P<ref>\\w)(?P<useq>\\w*)](?P<chr>[^:]+):(?P<pos>\\d+)\\]$
^(?P<registrant_type>\\w)(?P<registrant_identifier>\\w)(?P<math_digits>\\d{6})(?P<control_digit>\\d)$
^(?P<remainder>.*)$
^(?P<remote_addr>(\"[^\"]+\"|[^\\s]+)) - (?P<remote_user>[^\\s]+) \\[(?P<time>[^\\]]+)\\]\\s+\"(?P<request>[^\"]*)\" (?P<status>[^\\s]+) (?P<bytes>[^\\s]+)\\s+\"(?P<referrer>[^\"]*)\"\\s+\"(?P<user_agent>[^\"]*)\".*$
^(?P<remote_addr>[^ ]+) (?P<user>[^ ]+) (?P<other>[^ ]+) \\[(?P<time_local>[^]]+)\\] \"(?P<request>[^\"]+)\" (?P<code>[^ ]+) (?P<size>[^ ]+) \"(?P<referrer>[^ ]*)\" \"(?P<user_agent>[^\"]+)\"$
^(?P<remote>[^ ]*) (?P<host>[^ ]*) (?P<user>[^ ]*) \\[(?P<time>[^\\]]*)\\] \"(?P<method>\\S+)(?: +(?P<path>[^\\\"]*?)(?: +\\S*)?)?\" (?P<code>[^ ]*) (?P<size>[^ ]*)(?: \"(?P<referer>[^\\\"]*)\" \"(?P<agent>[^\\\"]*)\")?$
^(?P<repeat>[+-]?\\d*)n(?P<add>[+-]\\d+)$
^(?P<repeat>\\d+)n$
^(?P<repo>(?:[a-z0-9.\\-]+\\.)+[a-z0-9.\\-]+(?::[0-9]+)?/[A-Za-z0-9_.\\-/]*?)\\.(?P<vcs>bzr|git|hg|svn)(?P<dir>/[A-Za-z0-9_.\\-/]*)?$
^(?P<req>\\d+):(?P<group>.+)$
^(?P<residence>\\d{10})(?P<origin>\\w{1,3})[-\\ ]?(?P<birthday>\\d{7})[-\\ ]?(?P<validity>\\d{7})[-\\ ]?(?P<checksum>\\d{1})$
^(?P<resource>\\/[a-z0-9A-Z-_]+)(?P<action>\\/[a-z0-9A-Z-_/]+)?
^(?P<room_name>\\S+)(\\s+)(?P<users>\\S+)(\\s+)(?P<marked_users>\\S+)(\\s+)(?P<locked>\\S+)
^(?P<root>(?P<repo>([a-z0-9.\\-]+\\.)+[a-z0-9.\\-]+(:[0-9]+)?/[A-Za-z0-9_.\\-/~]*?)\\.(?P<vcs>bzr|git|hg|svn))([/A-Za-z0-9_.\\-~]+)*$
^(?P<root>([a-z0-9.\\-]+\\.)+[a-z0-9.\\-]+(:[0-9]+)?/[A-Za-z0-9_.\\-/~]*?\\.(?P<vcs>bzr|git|hg|svn))((?:/[A-Za-z0-9_.\\-]+)*)$
^(?P<root>bitbucket\\.org(?P<bitname>/[A-Za-z0-9_.\\-]+/[A-Za-z0-9_.\\-]+))((?:/[A-Za-z0-9_.\\-]+)*)$
^(?P<root>bitbucket\\.org/(?P<bitname>[A-Za-z0-9_.\\-]+/[A-Za-z0-9_.\\-]+))(/[A-Za-z0-9_.\\-]+)*$
^(?P<root>code\\.google\\.com/[pr]/(?P<project>[a-z0-9\\-]+)(\\.(?P<subrepo>[a-z0-9\\-]+))?)(/[A-Za-z0-9_.\\-]+)*$
^(?P<root>git\\.apache\\.org(/[a-z0-9_.\\-]+\\.git))((?:/[A-Za-z0-9_.\\-]+)*)$
^(?P<root>git\\.launchpad\\.net(/[A-Za-z0-9_.\\-]+))((?:/[A-Za-z0-9_.\\-]+)*)$
^(?P<root>github\\.com(/[A-Za-z0-9][-A-Za-z0-9]*/[A-Za-z0-9_.\\-]+))((?:/[A-Za-z0-9_.\\-]+)*)$
^(?P<root>github\\.com/([A-Za-z0-9_.\\-]+/[A-Za-z0-9_.\\-]+))(/[A-Za-z0-9_.\\-]+)*$
^(?P<root>gopkg\\.in(?:(/[a-zA-Z0-9][-a-zA-Z0-9]+)?)(/[a-zA-Z][-.a-zA-Z0-9]*)\\.((?:v0|v[1-9][0-9]*)(?:\\.0|\\.[1-9][0-9]*){0,2}(?:-unstable)?)(?:\\.git)?)((?:/[a-zA-Z0-9][-.a-zA-Z0-9]*)*)$
^(?P<root>hub\\.jazz\\.net(/git/[a-z0-9]+/[A-Za-z0-9_.\\-]+))((?:/[A-Za-z0-9_.\\-]+)*)$
^(?P<root>launchpad\\.net(/[A-Za-z0-9-._]+))((?:/[A-Za-z0-9_.\\-]+)*)?
^(?P<root>launchpad\\.net(/[A-Za-z0-9-._]+))((?:/[A-Za-z0-9_.\\-]+)*)?$
^(?P<rule>(?:(?P<dir>src|dst|src or dst|src and dst)\\s+)(?P<type>host|port))\\s+(?P<value>\\S+|in \\S+)$
^(?P<section>.+)\\s+\\\"(?P<subsection>.+)\\\"$
^(?P<seg_id>[A-Z][A-Z0-9]{1,2})?(\\\\[(?P<id_val>[A-Z0-9]+)\\\\])?(?P<ele_idx>[0-9]{2})?(-(?P<subele_idx>[0-9]+))?$
^(?P<sep>\\A\\::{1})(?P<method>\\w+)$
^(?P<separator>\\||>)(?P<modifiers>\\+|\\-|\\d+|\\+\\d+|\\-\\d+|\\d+\\+|\\d+\\-)?(?P<comments> +#.*)?$
^(?P<series>.*?)(?: \\((?:(?P<year>\\d{4})|(?P<country>[A-Z]{2}))\\))?$
^(?P<series>.+?)(?: \\(?\\d{4}\\)?| \\((?:US|UK)\\))? \\((?P<first_year>\\d{4})-\\d{4}\\)$
^(?P<series>[ \\w\\'.:(),&!?-]+?)(?: \\((?P<year>\\d{4})\\))?$
^(?P<service>[^:]+)(::(?P<action>.*))?$
^(?P<service>[^:]+)::(?P<action>.*)$
^(?P<service>[a-z0-9_.]+):(?P<method>[a-z0-9_]+)$
^(?P<setting>.+) = (?P<value>.+)$
^(?P<sha>[0-9a-f]{5,40})\\trefs/(?P<kind>heads|tags)/(?P<name>[\\w./-]+(?:\\^\\{})?)$
^(?P<scheme>[^\\:]+):\\/\\/((((?P<user>[^:^@]+))?((\\:(?P<password>[^@]+)?))?\\@)?(?P<host>([^\\/^:^\\?]+|\\[([^\\/]+)\\]))(\\:(?P<port>\\d+))?)?(((?P<path>\\/[^\\?]*)?(\\?(?P<query>[^\\#]+)?)?(\\#(?P<fragment>.*))?)?)?$
^(?P<scheme>[a-z]{2,3})\\+(?P<url>.+)
^(?P<scheme>https?|file|ftps?)://(?P<path>[^#]+)(#(?P<fragment>\\S+))?
^(?P<sign>[+-])?P(?!\\b)(?P<years>[0-9]+([,.][0-9]+)?Y)?(?P<months>[0-9]+([,.][0-9]+)?M)?(?P<weeks>[0-9]+([,.][0-9]+)?W)?(?P<days>[0-9]+([,.][0-9]+)?D)?((?P<separator>T)(?P<hours>[0-9]+([,.][0-9]+)?H)?(?P<minutes>[0-9]+([,.][0-9]+)?M)?(?P<seconds>[0-9]+([,.][0-9]+)?S)?)?$
^(?P<sign>[-+]?)P(?:(?P<days>\\d+(.\\d+)?)D)?(?:T(?:(?P<hours>\\d+(.\\d+)?)H)?(?:(?P<minutes>\\d+(.\\d+)?)M)?(?:(?P<seconds>\\d+(.\\d+)?)S)?)?$
^(?P<size>[-0-9.,]+)?(?P<unit>[%a-z-]+)?$
^(?P<size>[0-9]+)\\s*(?i)(?P<unit>(k|m|g))b?$
^(?P<source_filename>.*)__(?P<opts_and_ext>.*?)$
^(?P<source>\\S+).*\\s+(?P<offset>[+-]\\d+)(?P<unit>\\w+)\\s+
^(?P<source>github|git)\\s+\"(?P<link>.+)\"
^(?P<start>-*\\d+)[.][.](?P<limit>-*\\d+)$
^(?P<start>.*) to (?P<end>.*) directions$
^(?P<start>-?\\d+)?(:(?P<stop>-?\\d+)?(:(?P<step>-?\\d+)?)?)?$
^(?P<start>[\\w\\/]+)(?:\\s*(\\.{3,}|\\~|\\-+|to|thru|through|\\u2011+|\\u2012+|\\u2013+|\\u2014+|\\u2012+|\\u2212+)\\s*)(?P<end>[\\w\\/]+)$
^(?P<start>[0-9a-f]+)\\-(?P<end>[0-9a-f]+) (?P<perms>[r\\-][w\\-][x\\-][sp]) (?P<offset>[0-9a-f]{8}) (?P<device>[0-9a-f]{2}:[0-9a-f]{2}) (?P<inode>\\d+)\\s+(?P<pathname>.*)
^(?P<start>[A-Z0-9]+)\\.\\.(?P<end>[A-Z0-9]+)$
^(?P<startAddr>.\\S+)-(?P<endAddr>.\\S+) (?P<permission>.\\S+) (?P<offset>.\\S+) (?P<devid>.\\S+) (?P<inode>.\\S+)\\s*(?P<binName>.\\S+)
^(?P<startAddr>.\\S+)-(?P<endAddr>.\\S+) (?P<permission>.\\S+) (?P<offset>.\\S+) (?P<devid>.\\S+) (?P<inode>.\\S+)\\s*(?P<binName>.+)
^(?P<stat>[\\w_.,]*)\\s+(?P<psa>\\d*)\\s+(?P<psan>[\\d.]*)\\s+(?P<desc>.*)$
^(?P<station_name>[^_]+)_(?P<channel_nums>_0_|_1_|0\\+1)_(?P<year>\\d\\d\\d\\d)(?P<month>\\d\\d)(?P<day>\\d\\d)(_|\\$)(?P<hour>\\d\\d)(?P<minute>\\d\\d)(?P<second>\\d\\d)\\.wav$
^(?P<station_name>[^_]+)_(?P<channel_nums>0\\+1_0|0\\+1_1)_(?P<year>\\d\\d\\d\\d)(?P<month>\\d\\d)(?P<day>\\d\\d)(_|\\$)(?P<hour>\\d\\d)(?P<minute>\\d\\d)(?P<second>\\d\\d)\\.wav$
^(?P<station_name>[^_]+)_(?P<channel_nums>0\\+1_0|0\\+1_1)_(?P<year>\\d\\d\\d\\d)(?P<month>\\d\\d)(?P<day>\\d\\d)(_|\\$)(?P<hour>\\d\\d)(?P<minute>\\d\\d)(?P<second>\\d\\d)_(?P<fraction>\\d\\d\\d)\\.wav$
^(?P<station_name>[^_]+)_(?P<month>\\d\\d)(?P<day>\\d\\d)(?P<year>\\d\\d)_(?P<hour>\\d\\d)(?P<minute>\\d\\d)(?P<second>\\d\\d)_(\\d{6})(_.+)?\\.wav$
^(?P<station_name>[^_]+)_(?P<year>\\d\\d\\d\\d)(?P<month>\\d\\d)(?P<day>\\d\\d)_(?P<hour>\\d\\d)(?P<minute>\\d\\d)(?P<second>\\d\\d)(_.+)\\.wav$
^(?P<station_name>[^_]+)_(?P<year>\\d\\d\\d\\d)(?P<month>\\d\\d)(?P<day>\\d\\d)_(?P<hour>\\d\\d)(?P<minute>\\d\\d)(?P<second>\\d\\d)\\.wav$
^(?P<station_name>[^_]+)_(?P<year>\\d\\d\\d\\d)-(?P<month>\\d\\d)-(?P<day>\\d\\d)_(?P<hour>\\d\\d)\\.(?P<minute>\\d\\d)\\.(?P<second>\\d\\d)_Z\\.wav$
^(?P<station>[A-Z][A-Z0-9]{3})\\s+
^(?P<status>[+-U ])(?P<commit>[0-9a-f]{40}) (?P<submodule>\\S+)( .*)?$
^(?P<status>[UD])[NLJM] +(?P<address>\\d+\\.\\d+\\.\\d+\\.\\d+) +(?P<load>\\d+(\\.\\d*)?) (?P<load_unit>(K|M|G|T)?i?B) +\\d+ +(?P<owns>(\\d+(\\.\\d+)?)|\\?)%? +(?P<id>[a-fA-F0-9-]*) +(?P<rack>.*)
^(?P<status>\\+OK|-ERR) (?P<statustext>.*)
^(?P<status>\\S{1,2})\\s+(?P<filename>.*)
^(?P<STATUS>Status[\\w\\s]*\\w)\\s*\\((?P<DAEMON>\\S+)\\s+(?P<DAEMON_VER>\\S+),.*\\):$
^(?P<stream>.+)\\-(?P<date>\\d{8,10})\\-?(?P<host>.+)?\\.log(?P<zip>\\.bz2|\\.gz)?$
^(?P<subject_id>sub-[a-zA-Z0-9]+)$
^(?P<suffix>[.*!]*\\w[\\S]*)
^(?P<table>\\w.+):$
^(?P<tag>.+?): *(?P<value>.+?) ?(?P<trailing_modifier>(?<!\\\\)\\{.*?(?<!\\\\)\\})? ?(?P<comment>(?<!\\\\)!.*?)?$
^(?P<tag>[$\\w]+)\\s+(?P<contents>.*)$
^(?P<tag>[a-zA-Z]+)[\\s-]*(?P<pk>\\d+)$
^(?P<tag>[a-zA-Z0-9.+~-]+)-(?P<revs_ahead>\\d+)-g(?P<commit>[0-9a-fA-F]+(?:-dirty)?)$
^(?P<tag>\\S+)\\s+
^(?P<tag>\\w+)?\\[(?P<attribute>[a-z\\-_]+)(?P<operator>[=~\\|\\^\\$\\*]?)=?\"?(?P<value>[^\\]\"]*)\"?\\]$
^(?P<talker>\\w{2})(?P<listener>\\w{2})Q,(?P<sentence>\\w{3})$
^(?P<talker>\\w{2})(?P<sentence>\\w{3}),$
^(?P<target>[^{]+?)\\<(?P<alias>.+)\\>$
^(?P<task_name>.*):\\d+\\.\\d+\\.\\d+$
^(?P<teaser_content>.*?)(?P<break>\\s*<?!?-{2,}\\s*more\\s*-{2,}>?)\\s*(?P<rest_of_content>.*)
^(?P<temp>(M|-)?\\d+|//|XX|MM)/\n                          (?P<dewpt>(M|-)?\\d+|//|XX|MM)?\\s+
^(?P<test>.*)/test/$
^(?P<text> *)$
^(?P<time_offset>\\d+(?:\\.\\d+)?)s?$
^(?P<time>\\d+)(?P<units>s|ms)?$
^(?P<timestamp>\\\\d\\\\d/\\\\d\\\\d-\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d\\\\.\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d) \\\\[.+?\\\\] \\\\[.+?\\\\] \\\\\\\"(?P<message>.+?)\\\\\\\" \\\\[.+?\\\\] \\\\[(?P<classification>.+?)\\\\].*\\n
^(?P<timestamp>\\d+) (?P<name>\\S+): (?P<metrics>.*)$
^(?P<timestamp>\\d+:\\d+:\\d+)(,\\d+)(?P<messages>.*)$
^(?P<title>.*?):\\s(?P<numChapters>\\d+)\\sPart\\sSeries$
^(?P<title>.+?)(\\[\\w\\[\\]\\(\\). -]+)?\\.(pdf|htm(l)?|epub|mobi|azw|tif|doc(x)?|lit|txt|rtf|opf|fb2|prc|djvu|cb[rz])
^(?P<title>[^/]+)$
^(?P<title>[^/]+)/(?P<id>[0-9a-f]{8})$
^(?P<title>\\S+)=(?P<content>.*)$
^(?P<tld>[.*!]*\\w[\\S]*)
^(?P<token>\\s*[0-9A-Za-z!#\\$%\\&'\\*\\+\\-\\.^_`\\|~]+)=
^(?P<trend>TEMPO|BECMG|FCST|NOSIG)\\s+
^(?P<ts>[a-zA-Z]{3} [a-zA-Z]{3} {1,2}\\d+ \\d{2}:\\d{2}:\\d{2}).*
^(?P<ttaaii>[A-Z0-9]{4,6}) (?P<cccc>[A-Z]{4}) (?P<ddhhmm>[0-3][0-9][0-2][0-9][0-5][0-9])\\s*(?P<bbb>[ACR][ACMORT][A-Z])?\\s*$
^(?P<type>(auth|verification|storage)) (?P<opener>\"?)(?P<name>.+)(?P=opener)$
^(?P<type>[#*]+)
^(?P<type>[^0-9]+)(?P<id>[0-9]*)?(_(?P<property>.+))?$
^(?P<type>[+ -])?(?P<line>.*)
^(?P<type>[AD])\\s+(?P<ORD>\\d+)
^(?P<type>[a-z]+)
^(?P<type>[a-z]+)(\\((?P<arg>.*)\\))?$
^(?P<type>[A-Za-z0-9]+)_(?P<subtype>.+)
^(?P<type>\\d{1,3}):(?P<id>[0-9]+)?(?P<ack>[+])?:(?P<endpoint>[^:]+)?:?(?P<data>.+)?$
^(?P<type>1|2)\n                              (?P<sign>0|1)\n                              (?P<temp>\\d\\d\\d)\\s+
^(?P<type>6|7)\n                                 (?P<precip>\\d\\d\\d\\d)\\s+
^(?P<type>audio|video|application(?=/(?:ogg$|(?:vnd\\.apple\\.|x-)?mpegurl)))/(?P<format_id>[^;\\s]+)
^(?P<type>bool|int|string|float)@(?P<value>.*)$
^(?P<type>deb|deb-src)\\s+(\\[\\s*(?P<options>.+\\S)?\\s*\\]\\s+)?(?P<uri>\\S+)\\s+(?P<distribution>\\S+)(\\s+(?P<components>.+\\S))?\\s*$
^(?P<type>int|string|bool|float)$
^(?P<type>METAR|SPECI)\\s+
^(?P<type>PRIMARY |UNIQUE |)KEY
^(?P<type>property):(?P<value>.*)$
^(?P<type>sink|source|channel):(?P<name>.+?)$
^(?P<type>tag|ip|instance):(?P<value>.*)$
^(?P<tz>(?:Z|[+-](?P<tzhh>\\d{2})(?::?(?P<tzmm>\\d{2}))?))$
^(?P<ugc>[A-Z0-9]{6})\\s+(?P<hour01>[0-9\\.]+)/\\s+(?P<hour03>[0-9\\.]+)/\\s+(?P<hour06>[0-9\\.]+)\\s*/?\\s*(?P<hour12>[0-9\\.]+)?\\s*/?\\s*(?P<hour24>[0-9\\.]+)?\\s*
^(?P<unit>[^\\/]+)(?:\\/.*$)?
^(?P<unit>A|Q|QNH)?\n                           (?P<press>[\\dO]{3,4}|////)\n                           (?P<unit2>INS)?\\s+
^(?P<upload_date>\\d{8})_\\w+_(?P<part>\\d+)$
^(?P<uri>.+)://
^(?P<url>.*?)(?:\\[(?P<begin>\\d+)?(?P<comma>[,-])?(?P<end>\\d+)?\\])?$
^(?P<url>[^,]+?)(,(?P<fullnote>(((?P<title>.+?) by (?P<auth>.+?)( - (?P<note>.+))?)|.*)))?$
^(?P<url>rtmp://[^/]+/(?P<app>.+))/(?P<playpath>.+)$
^(?P<url>rtmp://[^/]+/(?P<app>.+))/(?P<playpath>mp4:.+)$
^(?P<url>rtmp://[^/]+/(?P<app>.+/))(?P<play_path>mp4:.+)$
^(?P<url>rtmp://[^/]+/(?P<app>.+?))/(?P<playpath>mp4:.+)$
^(?P<url>rtmp://[^/]+/(?P<app>[^/]+))/(?P<play_path>.+)$
^(?P<url>rtmp://[^/]+/(?P<app>[^/]+))/(?P<playpath>.+)$
^(?P<url>rtmpe?://(?P<host>[^/]+)/(?P<app>.+))/(?P<playpath>mp[34]:.+)$
^(?P<url>rtmpe?://(?P<host>[^/]+)/(?P<app>.+/))(?P<playpath>mp[34]:.+)
^(?P<url>rtmpe?://[^/]+)/(?P<path>.+)$
^(?P<url>rtmpe?://[^/]+/(?P<app>.+))/(?P<playpath>mp4:.+)$
^(?P<url>rtmpe?://[^/]+/(?P<app>[^/]+?))/&*(?P<playpath>.+)$
^(?P<user>[^:@]+)(:(?P<password>[^@]*))?@(?P<host>[^:/]*)(:(?P<port>[0-9]+))?/(?P<db>[^?]+)(\\?sslmode=(?P<sslmode>[^?]+))?(\\?(?P<ssl_flag>ssl))?(\\?unix_socket=(?P<socket>.+))?$
^(?P<user>[^:@]+)(:(?P<password>[^@]*))?@(?P<host>[^:/]+)(:(?P<port>[0-9]+))?/(?P<db>.+)$
^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>.+)$
^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>.+?)(\\?set_encoding=(?P<charset>\\w+))?$
^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^?]+)(\\?set_encoding=(?P<charset>\\w+))?$
^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:/]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?(?P<urlargs>.*))?$
^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?sslmode=(?P<sslmode>.+))?$
^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<path>[^\\?]+)(\\?set_encoding=(?P<charset>\\w+))?$
^(?P<user>[^:]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?$
^(?P<user>[^:]+)(\\:(?P<password>[^@]*))?@(?P<host>\\[[^/]+\\]|[^\\:@]+)(\\:(?P<port>[0-9]+))?$
^(?P<user>[^@]+)
^(?P<v>v)?(?:(?P<e>\\d+)(?P<e_s>!))?(?P<r>\\d+(?:\\.\\d+)*)(?:(?P<pre_ps>[\\._-])?(?P<pre_t>a|alpha|b|beta|rc|c|pre|preview)(?P<pre_is>[\\._-](?=\\d))?(?P<pre_n>\\d*))?(?:(?:(?P<post_ps>[\\._-])?(?P<post_t>post|rev|r)(?P<post_is>[\\._-](?=\\d))?|(?P<post_im>-))(?P<post_n>(?(post_t)\\d*|\\d+)))?(?:(?P<dev_ps>[\\._-])?(?P<dev_t>dev)(?P<dev_is>[\\._-](?=\\d))?(?P<dev_n>\\d*))?(?:-(?P<git_rev>\\d+)-(?P<git_commit>g?[0-9a-f]{4,20}))?(?P<git_dirty>-dirty)?$
^(?P<v1>.*?) .*? .*? \\[(?P<v2>.*?)\\] \"(?P<v3>GET|POST) (?P<v4>.*?) .*?\" (?P<v5>.*?) (?P<v6>.*?) .*? .* (?P<v7>.*?) (?P<v8>.*?)\\s*$
^(?P<v1>.*?) .*? .*? \\[(?P<v2>.*?)\\] \"(?P<v3>GET|POST) (?P<v4>.*?)\" (?P<v5>.*?) (?P<v6>.*?) .*? \".*?\" .* (?P<v7>.*?) (?P<v8>.*?)\\s*$
^(?P<value>((https?|ftp)://(\\S+(:\\S+)?@)?(([A-Z0-9]([A-Z0-9-]{0,61}[A-Z0-9])\\.?)+|(\\d{1,3}\\.){3}\\d{1,3}|\\[?[A-F0-9]*:[A-F0-9:]+\\]?)(:\\d{1,5})?(/?|[/?]\\S+)|file:///.*))$
^(?P<value>(?:[0-9]+(?:\\.[0-9]+)?|inf)) (?P<prefix>[kMGTP])?(?P<unit>.*)$
^(?P<value>(\\d*\\.\\d+|\\d+))$
^(?P<value>(\\d*\\.\\d+|\\d+))(?P<unit>cm|em|pt)$
^(?P<value>.*)____(?P<count>[0-9]+)$
^(?P<value>[0-9\\.,]+?)\\s*(?P<unit>[KMGTPEZY]?B?)$
^(?P<value>[0-9]+(?:\\.[0-9]+)?) (?P<prefix>[kMGTP])?(?P<unit>.*)$
^(?P<value>\"Plural-Forms.+?\\\\n\")\\s*$
^(?P<value>\\d{4}-\\d{2}-\\d{2})$
^(?P<value>\\d+)(?P<unit>%|px)$
^(?P<value>\\d+)(?P<unit>[a-z%]*)$
^(?P<value>\\d+\\.?\\d*)(?P<units>[a-z]+)/s$
^(?P<value>\\d+\\.?\\d*)(?P<units>[a-zA-Z]+)$
^(?P<var>[^=]+)\\=(?P<val>(\\\"(([^\"\\\\]+)|(\\\\\\\")|(\\\\\\\\))+\\\")|([^\",]+))(\\s*\\,\\s*(?P<rest>.*))?$
^(?P<vector_size>\\d+)?(?P<vector_signed>[US])?(?P<vector_type>[FD])?(?P<vector_zero>0)?x(?P<vector_count>\\d+)?$
^(?P<vendor_name>[^/]+)/(?P<package_name>[^/]+)$
^(?P<version>(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<subminor>\\d+))(rc(?P<release_candidate>\\d+))?-CAPI-(?P<capi_version>\\d+\\.\\d+\\.\\d+)$
^(?P<version>(\\d+\\.)*\\d+)(?:\\.x)?-dev$
^(?P<version>[^+]+)\\+(?P<hash>[^~]+)\\~(?P<distr>.+)$
^(?P<version>[0-9]\\.[0-9]|[0-9]{2,})
^(?P<version>\\d+\\.\\d+)$
^(?P<version>HTTP\\/1\\.[01])\\s+(?P<code>[0-9]+)\\s+(?P<message>.*?)$
^(?P<version>v\\d+\\.\\d+\\.\\d+)-(?P<git>\\d+-g[a-fA-F0-9]+(?:-dirty)?)$
^(?P<vfdb_id>V\\S+\\)) \\((?P<name>\\S+)\\) (?P<description>.*\\]) \\[(?P<genus_etc>.*)\\]$
^(?P<vis>(?P<dist>(M|P)?\\d\\d\\d\\d|////)\n                                        (?P<dir>[NSEW][EW]? | NDV)? |\n                                        (?P<distu>(M|P)?(\\d+|\\d\\d?/\\d\\d?|\\d+\\s+\\d/\\d))\n                                        (?P<units>SM|KM|M|U) |\n                                        CAVOK )\\s+
^(?P<vtag>.*)-(?P<ncommits>\\d+)-(?P<githash>g[a-fA-F0-9]+)$
^(?P<w>\\d\\d?\\d?)\\.(?P<x>\\d\\d?\\d?)\\.(?P<y>\\d\\d?\\d?)\\.(?P<z>\\d\\d?\\d?)$
^(?P<w>\\d+)x(?P<h>\\d+)$
^(?P<w>\\d+)x(?P<h>\\d+)(-(?P<x>\\d+)x(?P<y>\\d+))?$
^(?P<width>(_|\\d{1,})):(?P<height>(_|\\d{1,}))$
^(?P<width>[0-9]+.*):(?P<height>[0-9]+.*)$
^(?P<width>[0-9]+|AUTO)x(?P<height>[0-9]+|AUTO)
^(?P<width>\\d+)[xX](?P<height>\\d+)$
^(?P<width>\\d+)x(?P<height>\\d+)$
^(?P<wordlist>.*?)([.]txt)?([.](gz|bz2|xz|lzma))?$
^(?P<x>\\d+)?(?:x(?P<y>\\d+))?
^(?P<x>\\d+)?(?:x(?P<y>\\d+))?$
^(?P<xyz>\\d+\\.\\d+\\.\\d+)(?P<extra>.*)
^(?P<Y>\\d{4})-(?P<m>\\d{2})-(?P<d>\\d{2})T(?P<H>\\d{2}):(?P<M>\\d{2}):(?P<S>\\d{2})(?P<MS>\\.\\d{1,6})?\\d*(?P<tz>Z|[+-]\\d{2}:?\\d{2})?$
^(?P<Y>\\d{4})-?(?P<m>\\d{2})-?(?P<d>\\d{2})$
^(?P<Y>\\d{4})-?(?P<m>\\d{2})-?(?P<d>\\d{2})T(?P<H>\\d{2}):?(?P<M>\\d{2}):?(?P<S>\\d{2})(?P<MS>|[.]\\d+)(?P<TZ>|Z|(?P<TZH>[+-]\\d{2}):?(?P<TZM>\\d{2}))$
^(?P<year>(\\d+|-\\d+))\\s*(years|year)$
^(?P<year>(\\d+|-\\d+))\\s*(years|year)\\s*(?P<month>(\\d+|-\\d+))\\s*(months|month)$
^(?P<year>(\\d+|-\\d+))\\s*-\\s*(?P<month>(\\d+|-\\d+))$
^(?P<year>(19|20)\\d{2})(?P<month>\\d{2})(?P<day>\\d{2})(-|_|.)
^(?P<year>[0-9][0-9][0-9][0-9])\n                -(?P<month>[0-9][0-9]?)\n                -(?P<day>[0-9][0-9]?)\n                (?:(?:[Tt]|[ \\t]+)\n                (?P<hour>[0-9][0-9]?)\n                :(?P<minute>[0-9][0-9])\n                :(?P<second>[0-9][0-9])\n                (?:\\.(?P<fraction>[0-9]*))?\n                (?:[ \\t]*(?P<tz>Z|(?P<tz_sign>[-+])(?P<tz_hour>[0-9][0-9]?)\n                (?::(?P<tz_minute>[0-9][0-9]))?))?)?$
^(?P<year>\\d{2}|\\d{4})-(?P<month>\\d{1,2})-(?P<day>\\d{1,2})$
^(?P<year>\\d{4})(?:[-/](?P<month>\\d{1,2})(?:[-/](?P<day>\\d{1,2}))?)?$
^(?P<year>\\d{4})-(?P<mon>[01]\\d)-(?P<day>[0-3]\\d)[\\sTt](?P<hour>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})$
^(?P<year>\\d{4})-(?P<mon>[01]\\d)-(?P<day>[0-3]\\d)[\\sTt](?P<hour>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})\\.(?P<nsec>\\d{9})$
^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})(?:[\\.\\-](?P<tag>.+))?$
^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})(T|\\s+)(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2}).*?$
^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})[tT\\s](?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(\\.(?P<microseconds>\\d+))? ?(?P<timezone>Z|GMT|UTC|((?P<tz_sign>[-+])(?P<tz_hour>\\d{2})(:?(?P<tz_minute>\\d{2}))?))?$
^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hour>\\d{2}):(?P<minute>\\d{2})(:(?P<second>\\d{2})(\\.(?P<fraction>\\d+))?)((?P<tzzulu>Z)|((?P<tzoffset>[\\-+])(?P<tzhour>\\d{2}):(?P<tzminute>\\d{2})))$
^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(\\.\\d+)?$
^(?P<year>\\d{4})-(?P<month>\\d{2})-(?P<day>\\d{2})T(?P<hour>\\d{2}):(?P<minute>\\d{2}):(?P<second>\\d{2})(\\.\\d+)?Z$
^(?P<year>\\d{4})/(?P<month>\\d{1,2})/(?P<day>\\d{1,2})/(?P<post_name>[^/]+?)(?:(?:\\.html)|(?:/(?P<index>index(?:\\.html?)?)?))?$
^(?P<year>\\d+)\\s(?P<month>\\d+)\\s(?P<day>\\d+)\\s(?P<hour>\\d+)\\s*$
^(?P<YMD>\\d{4}-\\d{2}-\\d{2})[T ](?P<HMS>\\d{2}:\\d{2}:\\d{2})(?P<FRACTS>\\.\\d{1,6})?((?P<ZULU>Z)|\\s(?P<UTC>)|\\s(?P<TZOFFSET>[\\+\\-]\\d{2}:\\d{2})|\\s(?P<TZ>[A-Z]{3})|)$
^(?P<yy>\\d\\d)(?P<mm>\\d\\d)(?P<dd>\\d\\d)(?P<mid>\\d{4})(?P<end>\\d{3})
^(?U)([^\\/]+)(?U)(?:(?:_CMCC_TD|_CMCC|_TD|_TDLTE|_LTE)?\\/[^\\/]*)? Android(_OS)?\\/[0-9.]+
^(?U)([^\\/]+)(?U)(?:(?:_CMCC_TD|_CMCC|_TD|_TDLTE|_LTE)?\\/[^\\/]*)? Linux\\/[0-9.+]+ Android\\/[0-9.]+
^(?U)([^\\/]+)(?U)(?:(?:_CMCC_TD|_CMCC|_TD|_TDLTE|_LTE)?\\/[^\\/]*)? Release\\/[0-9.]+
^(?u)[\\w#\\[\\], ]+$
^(?u)[\\w, ]+$
^(?u:!)
^(?u:,)
^(?u::)
^(?u:;)
^(?u:@)
^(?u:[A-Z_-_a-z])(?u:[0-9A-Z_-_a-z])*
^(?u:[A-Za-z])(?u:[0-9A-Z_-_a-z])*
^(?u:\")(?:(?u:[\\u{0}-!\\\\#-\\\\[\\\\]-\\u{10ffff}])|(?u:\\\\\\\\)(?u:.))*(?u:\")
^(?u:\")(?u:[\\u{0}-!\\\\#-\\u{10ffff}])*(?u:\")
^(?u:\\\\#)
^(?u:\\\\#)(?u:[\\t-\\r - \\u{85}-\\u{85}\\u{a0}-\\u{a0}\\u{1680}-\\u{1680}\\u{2000}-\\u{200a}\\u{2028}-\\u{2029}\\u{202f}-\\u{202f}\\u{205f}-\\u{205f}\\u{3000}-\\u{3000}])*(?u:.)+
^(?u:\\\\()
^(?u:\\\\))
^(?u:\\\\[)
^(?u:\\\\])
^(?u:\\\\{)
^(?u:\\\\})
^(?u:=)(?u:[\\t-\\r - \\u{85}-\\u{85}\\u{a0}-\\u{a0}\\u{1680}-\\u{1680}\\u{2000}-\\u{200a}\\u{2028}-\\u{2029}\\u{202f}-\\u{202f}\\u{205f}-\\u{205f}\\u{3000}-\\u{3000}])*(?u:.)+
^(?u:as)
^(?u:assets)
^(?u:connection)
^(?u:enum)
^(?u:for)
^(?u:has)
^(?u:implements)
^(?u:in)
^(?u:input)
^(?u:interface)
^(?u:many)
^(?u:method)
^(?u:mod)
^(?u:one)
^(?u:resource)
^(?u:scalar)
^(?u:setup)
^(?u:to)
^(?u:type)
^(?u:union)
^(?u:use)
^(?um)\\[(-?\\d+)\\]\\[(-?\\d+)\\](.*)
^(?x:\n                \\s*           # Leading whitespace\n                (\\[)(.+?)(\\])(:)    # Reference name\n                [ \\t]*          # Optional whitespace\n                (<?)(\\S+?)(>?)      # The url\n                [ \\t]*          # Optional whitespace\n                (?:\n                    ((\\().+?(\\)))   # Match title in quotes\u2026\n                  | ((\").+?(\"))   # or in parens.\n                )?            # Title is optional\n                \\s*           # Optional whitespace\n                $\n              )
^(@(
^(@(?P<tag>(?P<category>[a-zA-Z][\\w.-]*):(([a-zA-Z][\\w.-]*)|(\\d*(\\.\\d*)*))))$
^(@*(?P<idno>-?[0-9]{1,32})|(?P<name>[a-z_-][a-z0-9_-]+))$
^(@.+?/)*?\\Q$_[0]\\E$
^(@.+?[\\/\\\\])?(sails-hook-)?
^(@[0-9a-zA-Z\\-\\_][0-9a-zA-Z\\.\\-\\_]*\\/)?([0-9a-zA-Z\\-\\_][0-9a-zA-Z\\.\\-\\_]*)
^(@[-a-zA-Z\\\\]+)(?:\\((.*)\\))?(?:\\s+(.+))?($)
^(@method)\\s+(?:(static)\\s+)?(?:(\\S+)\\s+)?(\\S+)\\(\\s*([^)]*)\\s*\\)\\s*([^]*)$
^(@param|@property|@property-read|@property-write)\\s+(\\S+)\\s+(\\$\\S+)\\s*([^]*)$
^(@return)\\s+(\\S+)\\s*([^]*)$
^(@var)\\s+(\\S+)(?:\\s+(\\$\\S+))?\\s*([^]*)$
^([
^([ \\t]*) \\Q?
^([ \\t]*):param\\ \n                              (?P<param>\\w+):\\ \n                              (?P<body>.*\\n(\\1[ \\t]+\\w.*\\n)*)
^([ \\t]*)```swift\\n[^]*?```
^([ \\t]+
^([ ]*['\"([\\x{00bf}\\x{00A1}\\p{IsPi}]*[ ]*[\\p{IsUpper}0-9])
^([!
^([!\\*\\w\\-]+)(\\s+
^([#*]+)(
^([#*]+?
^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(
^([#.](?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+)\\s*\\(
^([$el->[1]->{allowed_chars}]+)$
^([$quotes])                 # a $quote\n                ((?:\\\\.|(?!\\1)[^\\\\])*)    # and $quoted text\n                \\1 \t\t       # followed by the same quote\n                ([\\000-\\377]*)\t       # and the rest\n\t       |                       # --OR--\n                ^((?:\\\\.|[^\\\\$quotes])*?)    # an $unquoted text\n\t        (\\Z(?!\\n)|(?:\\s*([()|&!\\~]|\\b(?:$operators)\\b|\\b(?:[-,_\\.\\w]+\\:))\\s*)|(?!^)(?=[$quotes])) # plus EOL, delimiter, or quote\n                ([\\000-\\377]*)\t       # the rest\n\t       
^([$quotes])                 # a $quote\n                ((?:\\\\.|(?!\\1)[^\\\\])*)    # and $quoted text\n                \\1 \t\t       # followed by the same quote\n                ([\\000-\\377]*)\t       # and the rest\n\t       |                       # --OR--\n                ^((?:\\\\.|[^\\\\$quotes])*?)    # an $unquoted text\n\t        (\\Z(?!\\n)|\\s+|(?!^)(?=[$quotes])) # plus EOL, delimiter, or quote\n                ([\\000-\\377]*)\t       # the rest\n\t       
^([$self->{conf}{PassChars}]+)$
^([$self->{conf}{UserChars}]+)$
^([*#]) .*+(?:\\n\\1 .*+)++$
^([.a-z0-9_-]+/([.a-z0-9_-]+)) *[@#]?([^/:\\?\\[\\\\]*)$
^([/\\\\])([^/\\\\]+)$
^([/\\\\])|(\\w:)
^([:\\p{IsXDigit}]+)
^([[(<{]+)(
^([[:alnum:]-]|[\\_])*$
^([[:alpha:]\\_][[:word:]\\-\\.]*)\\s(.*)
^([[:alpha:]_]([[:alnum:]\\-\\.]*)?:)?[[:alpha:]_]([[:alnum:]\\_\\-\\.]+)?$
^([\"'])((?:\\\\.|(?!\\1)[^\\\\])*)\\1
^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$
^([\"'])((\\\\{2})*|(.*?[^\\\\](\\\\{2})*))\\1\\s*
^(['\"])(.*?)(?<!\\\\)\\1$WS*?$CRLF+(.*)
^(['\"])(.*?)([^\\\\])\\1
^([\"])\t\t\t\t\t\t\t\t# a $quote\n\t\t\t((?:\\\\.|(?!\\1)[^\\\\])*)\t\t\t\t\t\t# and $quoted text\n\t\t\t\\1\t\t\t\t\t\t\t\t\t\t\t# followed by the same quote\n\t\t\t|\t\t\t\t\t\t\t\t\t\t\t# --OR--\n\t\t\t^((?:\\\\.|[^\\\\\"])*?) \t\t\t\t\t\t# an $unquoted text\n\t\t\t(\\Z(?!\\n)|(?-x:$delimiter)|(?!^)(?=[\"]))  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t# plus EOL, delimiter, or quote\n\t\t
^(['\"]?)[a-zA-Z0-9\\/\\.\\-\\_]+(\\1)$
^([\\$\\%\\@\\\\]+)(.*)$
^([\\$\\@\\%\\*\\&])(\\Q$class\\E:*)(.*)
^([\\$\\\\]?[^\\$\\\\]*([\\$\\\\][^\\\\\\$\\{][^\\$\\\\]*)*)
^([\\*-]){3} (?P<startline>\\d+)(,(?P<endline>\\d+))? \\1{4}$
^([\\.#])((?:(?![\\.#\\[:\\s\\\\]).|\\\\.)+)
^([\\.\\:]?[\\w\\_]+([\\-\\:\\.][\\w]+)*)(\\s)*\\=(?!\\>)
^([\\.-\\w]+)\\/([\\.-\\w]+)(.*)$
^([\\/\\.\\_\\-a-zA-Z0-9 ]+)$
^([\\/\\.\\_\\-a-zA-Z0-9 >]+)$
^([\\/\\.])|([A-Za-z]:\\\\)|(\\\\\\\\)
^([\\/\\\\]|[a-zA-Z]:[\\/\\\\])
^([\\/\\\\A-Z0-9])([\\x21-\\x7b\\x7d])$
^([\\:\\w\\.\\-/\\\\]+)$
^([\\'\\\"])(([^\\\\]|\\\\.)*?)\\1
^([\\-\\~\\`\\!\\@\\#\\$\\%\\^\\&\\(\\)\\=\\+\\{\\}\\[\\]\\|\\'\\;\\?\\/\\>\\<\\.\\,A-Za-z0-9\\_]+)
^([\\^:]|
^([\\_ ]*)(CR\\s*)$
^([\\_ ]*)CR\\s*$
^([\\d\\pL]+)(\\+\\+|--)(?:$|\\s#)
^([\\d+,\\w,\\.,\\_,\\-]+)[\\s:]+([0-9,\\.]+?)([KkMmGg])?((-|\\.\\.|\\s)+([0-9,\\.]+)([KkMmGg])?)?$
^([\\h]{2})(.*)
^([\\p{Digit}]+)(;?)
^([\\p{Han}a-zA-Z0-9])+([\\p{Han}a-zA-Z0-9\\-])*\\.[a-zA-Z\\.\\p{Han}]+$
^([\\p{Word}&].*?)\\s>\\s([\\p{Word}&].*(?:\\s>\\s|$))+
^([\\pL_0-9]+)\\.[\\pL_0-9]+$
^([\\Q$cchrs\\E]+)(.+)$
^([\\Q$pchrs\\E]+)(.+)$
^([\\s
^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\/]+?|)(\\.[^./\\\\]*|))(?:[\\\\/]*)$
^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$
^([\\s\\w\\\\]+):\\s
^([\\w !\"#$%&'()*+,-.\\/:;<>?@\\[\\]^`{|}~\\\\]{1,1024})=(.*)$
^([\\w:]+)(?:-\\Q$Organization\\E)?-(.+)$
^([\\w:]+):(\\w*+)(#.*)?()\\z
^([\\w:]+)?\\/\\/([^\\/\\\\]+)
^([\\w\\\\*]+)?(?:#([\\w\\-\\\\]+))?(?:\\.([\\w\\\\\\.]+))?(?:\\[\\@?([\\w\\\\]+)([\\^\\$\\*!~]?=)([\\w\\\\]+)\\])?(?:\\:(.+))?
^([\\w\\\\*]+)?(?:#([\\w\\\\]+))?(?:\\.([\\w\\\\\\.]+))?(?:\\[\\@([\\w\\\\]+)([\\^\\$\\*!]?=)([\\w\\\\]+)\\])?(?:\\:([\\w\\\\]+))?
^([\\w\\\\*]+)?(?:#([\\w\\\\]+))?(?:\\.([\\w\\\\\\.]+))?(?:\\[\\@?([\\w\\\\]+)([\\^\\$\\*!~]?=)([\\w\\\\]+)\\])?(?:\\:(.+))?
^([\\w\\-.:]++)\\s*+(.*)$
^([\\w\\.\\-\\_\\@]+)
^([\\w\\.\\_]{2,10})@(\\w{1,}).([a-z]{2,4})$
^([\\w\\.\\-_+\\/\\\\]+)$
^([\\w\\\\\\/.]+) (\\( ( (?>[^()]+) | (?2) )* \\)) 
^([\\w\\/\\_]+)$
^([\\w\\-\\_]+):(.*)$
^([\\w\\\\]+(?:->\\w++)*+)\\z
^([\\w\\\\]+)
^([\\w\\-]+)(\\Q$Postfix\\E)?(?:\\@.+)?$
^([\\w\\_\\.]+)(->'\\w+')?_(desc|asc)$
^([\\w\\_\\.]+)_(desc|asc)$
^([\\w\\_\\/\\-\\.\\+]+(\\.git)?)$
^([\\w\\_\\:]+)
^([\\w\\_\\-\\.]+)$
^'([\\w\\_\\-\\~\\.\\+\\/]+\\/)?([\\w\\_\\-\\.\\+]+(\\.git)?)'$
^([\\w\\_\\-]+)\\\\([0-9]+)\\\\([\\w\\_\\.]+)
^([\\w\\_\\\\]+)I18n$
^([\\w\\d\\-\\_]+)\\..+$
^([\\w\\d\\_\\-\\.\\/\\@]+)$
^([\\w\\d\\_\\-\\.\\@ \\/]+)$
^([\\w\\d\\_\\-\\.]+)$
^([\\w\\d\\_\\-]+)$
^([\\w\\d\\s\\_\\-]+):(.*)$
^([\\w]+)\\\\([\\w]+)\\\\([\\w]+)\\\\Finder$
^([\\x00-\\x7F\\x{0E01}-\\x{0E3A}\\x{0E3F}-\\x{0E5B}]+)
^([\\x00-\\x7F\\xA0\\x{0E01}-\\x{0E3A}\\x{0E3F}-\\x{0E5B}]+)
^([\\x26-\\x7f][\\x26-\\x61][\\x1c-\\x7f]{2})\\x20([\\x21-\\x7b\\x7d][\\/\\\\A-Z0-9])(.*)
^([^
^([^$r_t]*)?\\Q$a_t\\E
^([^$r_t]+?)\\Q$a_s\\E
^([^$self->{dlm}]+)$self->{dlm}(.+)$
^([^(]*?)          # return type\n        ([\\w:.]+)  \\s*     # thing name (colon allowed for C++)\n        (?: \\((.*)\\) )?    # optionally arguments\n        (\\s+const)? $      # const specifier\n    
^([^*\\\\/\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)*\\])([^\\\\/\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)*\\])*/[a-zA-Z0-9]*
^([^.[]+|\\[((?:.*?[^\\\\])?)\\])(\\.|\\[|$)
^([^.\\[]+|\\[((?:.*?[^\\\\])?)\\])(\\.|\\[|$)
^([^\\ ]+) ([^\\ ]+) \\[(
^([^\"\\@\u00ef\u00bc\u00a0]+|\"(?:(?:[^\"]|\\\\.)*[^\\\\])?\")(?:[\\@\u00ef\u00bc\u00a0]\n    (?:([^\\[\\]]*)|(\\[.*\\]))?)?$
^([^\"\\\\]*)(.*)
^([^\"\\\\]+)
^([^\\\\\"]*)\\\\(.)(.*)
^([^\\(]*+)\\((.*)\\)$
^([^\\\\\\/:*?\"<>|]{1,20}\\\\)?[^\\\\\\/:*?\"<>|]{1,20}[:]{2,3}([^\\\\\\/:*?\"<>|]{1,20}:)?[^\\\\\\/:*?\"<>|]{1,20}:[a-f0-9]{32}:[a-f0-9]+$
^([^\\@\\/'\"&:<>]*)\\@([A-Za-z0-9\\.\\-\\_]+)\\/?(.*?)$
^([^\\[]*+)\\[(.*)\\]$
^([^\\[]*+)\\[\\K.*(?=\\]$)
^([^'\\\\])\\'
^'''([^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*)'''
^'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'
^('[^'\\\\]*(?:\\\\.[^'\\\\]*)*'|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|\\w+)\\s*=>\\s*
^'([^'\\\\]*)'$
^([^\\\\]*)\\\\(.)
^([^\\\\]*)\\\\(.*)$
^([^\\]\\\\]|\\\\.)*\\]:
^([^\\]\\\\]|\\\\.)+
^'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}|u\\{[\\da-fA-F]{1,6}\\}))'
^([^\\\\]|\\\\[^0-7])*\\\\([0-3][0-7]{1,2}|[4-7][0-7]|[0-7])
^([^\\\\]|\\\\[^0-7])*\\\\([0-7]{1,3})
^([^\\\\]+)
^([^'\\\\]+)
^([^\\\\]+)(.*?)\\\\([^\\\\]+)$
^([^\\\\]+)(\\\\[^\\\\].*)?$
^([^\\\\]+)\\\\
^([^\\\\]+)\\\\(.*)$
^([^\\\\]+)\\\\(.+)
^([^\\\\]+)\\\\(.+)$
^([^\\_]+)\\_
^([^\\_]+)\\_(.*)$
^([^\\_]+)\\_(.+)$
^([^\\e]++|\\e([^_]|_([^E]|E[^s])))*
^([^\\p{Han}]+)
^([^\\p{Letter}_:])
^([^\\Q$delim\\E]+)
^([^\\w]?(?P<namespace>.*\\w+)(?P<separator>[^\\w]{1,2}))?(?P<name>[a-z]\\w+)$
^([^-]*)?([-]+BEGIN (?:\\w+\\s)?PRIVATE KEY[-]+[^-]+[-]+END (?:\\w+\\s)?PRIVATE KEY[-]+\\n)([^]*)$
^([^]*?)\\bthis\\.\\$\\s*=[^=>]
^([^]*?)\\bthis\\._\\$\\s*=[^=>]
^([^_]+)_(
^([^{]*+){(.*)}[^}]*+$
^([^<#'\" \\f\\n\\r\\t\\v\\\\]|\\\\.)+
^([^<]|\r|\n){,20}(?P<intro>\\<\\?xml[^>]*?\\>(.|\n){50})
^--([^=]+)(?:=([^]*))?$
^([^=]+)=([^]*)$
^([^=]+=\\s*)([^]*?)\\s*$
^([^0-9]+[a-z0-9\\_]{0,})\\.php$
^([^0-9A-Za-z\\s\\\\])\\1[A-Za-z]*u[A-Za-z]*\\z
^([^a-z\\s\\\\]).*\\1[a-z]*\\z
^([_*]){2}(?P<text>[\\s\\S]+?)\\1{2}(?!\\1)
^([-_~:|{}'\\\\])
^([|=#-\\p{L}*0-9_+!.,:\\/;\\?&\\(\\)\\[\\]\\{\\}'\\\"\\s])+$
^([+-]?+(?=\\.?[0-9])[0-9_]*+(?:\\.[0-9_]++)?(?:[Ee](?:[+-]?+[0-9_]+))?)\\z
^([<U0-9a-fA-F>+]+)\\s*([\\+0-9a-fA-Fx\\\\]+)\\s*\\|(\\d)
^([01]?[0-9])([ \\.\\-\\/\\\\])?([0-3][0-9])([ \\.\\-\\/\\\\])?(([0-9]{2})|([0-9]{4}))?$
^([0-7]{6}) (?:blob|tree|commit) (\\h{40})\\t(.+)$
^([0-9])+(\\.(([a-z]|[A-Z])|[0-9])(((([a-z]|[A-Z])|[0-9])|\\-|\\_))*)*$
^([0-9][0-9][0-9]:(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)| |\\/|\\*|\\.))*(,(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)| |\\/|\\*|\\.))*)*:(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)| |\\/|\\*|\\.))*|[0-9][0-9][0-9]::(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)| |\\/|\\*|\\.))*)$
^([0-9]{1,2})[-,/,\\\\]([0-9]{1,2})[-,/,\\\\]([0-9]{4})
^([0-9]{1,3}+)\\.([0-9]{1,3}+)\\.([0-9]{1,3}+)\\.([0-9]{1,3}+)$
^([0-9]{4})(-[0-9]{4})? (\\.*\\)$
^([0-9]+)(?: ([
^([0-9a-f-]
^([0-9a-f]{40})\\n(.*)\\n([^]*)$
^([0-9a-fA-F]{1,2}
^([0-9a-z\\-]|[\\_])*$
^([0-9a-zA-Z\\ \\_\\:\\.\\-]+)$
^([0-9A-Za-z\\_])$
^([0-9A-Za-z\\_][0-9A-Za-z\\-\\_]*[0-9A-Za-z])$
^([1-9]\\d*)(?:\\s+((?1))\\s*)?(.*)$
^([1-9]\\d*)\\s*(?:((?1))\\s+)?(.*)$
^([a-z\\.\\-\\_]+)(([\\.\\-\\_\\s])v?(([\\w\\d]{7})|(\\d[\\d\\w\\.]*)))?$
^([A-Z\\_]*)
^([a-z])(:(\\\\)?)?$
^([A-Z])(?=:[/\\\\])
^([A-Z]):[/\\\\]
^([A-Z]*[a-z0-9]*+)
^([a-z]:(/|\\\\)|\\\\\\\\|//)
^([a-z]:)?[/\\\\]
^([a-z]:)[\\\\]+(.+)$
^([a-z]:)[^\\\\+]\\\\
^([a-z]:[\\/\\\\]|\\\\\\\\)
^([a-z]:\\\\)
^([A-Z]:\\\\)(.*)$
^([a-z]{2})\\_content$
^([a-z]+)\\_(.*)$
^([a-z-]+)=(\"[^\"]+(?<!\\\\)\"|[^,]+)
^([a-z]+:\\/\\/[^\\/]*)\\Q$source\\E
^([a-z_]*\\\\)*
^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$
^([a-z0-9\\.\\-\\_]+)\\s*(?:\\:|=)(.+)
^([a-z0-9\\.\\_\\-\\/]+)
^([a-z0-9\\.\\_\\+\\/ ]+)_TD\\/
^([a-z0-9\\/\\_]+)
^([a-z0-9\\-\\_\\.]+)=(.*)
^([a-z0-9\\-\\_]+)$
^([a-z0-9\\_\\-\\.]+)\\@([a-z0-9\\_\\-\\.]+)$
^([a-z0-9\\_\\-\\.]+)\\@([a-z0-9\\_\\-]+)\\.([a-z0-9\\_\\-]+)$
^([a-z0-9\\_\\-])+$
^([a-z0-9\\_\\-]{1,30})[#:]
^([a-z0-9\\_\\-]{1,30})=
^([a-z0-9\\_\\-]+)$
^([a-z0-9\\_\\-]+)\\:([a-z\\_][a-z0-9\\_\\-]*)$
^([a-z0-9\\_\\-]+\\.)+[a-z0-9\\-]+\\.?$
^([a-z0-9\\_])+$
^([a-z0-9\\_]+)
^([a-z0-9\\_]+)$
^([a-z0-9\\_]+)\\:[^\\s]+$
^([a-z0-9\u0430-\u044f\u0410-\u042f\u0451\u0401\\.\\-\\_]+|[a-z0-9\u0430-\u044f\u0410-\u042f\u0451\u0401\\.\\-\\_]+\\+[a-z0-9\u0430-\u044f\u0410-\u042f\u0451\u0401\\.\\-\\_]+)\\@(([a-z0-9\u0430-\u044f\u0410-\u042f\u0451\u0401][a-z0-9\u0430-\u044f\u0410-\u042f\u0451\u0401\\-]*\\.)+[a-z\u0430-\u044f\u0410-\u042f\u0451\u0401]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})$
^([a-z0-9]+)\\-([a-z0-9\\-\\_]+)$
^([a-z0-9_]*\\\\)?(View_)?
^([a-z0-9_]+\\.){0,2}+([a-z0-9_]+?)$
^([a-zA-Z\\_\\-0-9\\/]+)#([a-zA-Z\\_\\-0-9\\/]+)$
^([a-zA-Z\\_]+)(=|$)$
^([a-zA-Z]):[/\\\\]
^([a-zA-Z]):\\\\
^([A-Za-z])\\.([A-Za-z])\\. (
^([A-Za-z])\\.? (
^([A-Za-z])\\.? ([
^([A-Za-z])\\.? ([A-Za-z])\\.? (
^([A-Za-z])\\.? ([A-Za-z])\\.? ([A-Za-z])\\.? (
^([A-Za-z]:(\\\\){1,2}|[A-Za-z]:((\\\\){1,2}[^\\\\]+)+)(\\\\)?$
^([a-zA-Z]:)?(\\/|\\\\)
^([A-Za-z]:)?(\\/|\\\\)
^([a-zA-Z]:)?[/\\\\]
^([A-Za-z]:)?[/\\\\\\\\]*
^([a-zA-Z]:)?\\\\
^([A-Za-z]:)?\\/|\\\\
^([A-Za-z]:[/\\\\])?(?:[\\x2D-9A-Z\\\\_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFF1]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])+$
^([a-zA-Z]:\\\\)?[\\w\\d _\\-\\\\\\(\\)]+$
^([a-zA-Z]:\\\\|\\\\\\\\)
^([a-zA-Z]:|\\\\\\\\)(.*)$
^([a-zA-Z]:|\\/\\/|\\\\\\\\)
^--([a-zA-Z][a-zA-Z0-9\\-\\_]+)\\s*
^([A-Za-z]\\:)?\\\\
^([a-zA-Z]\\\\:|\\\\\\\\)\\\\\\\\([^\\\\\\\\]+\\\\\\\\)*[^\\\\/:*?\\\"<>|]+\\\\.txt(l)?$
^([a-zA-Z]{2})(?:(?:_|-)((?1)))?$
^([A-Za-z]+:)?[\\/\\\\].+
^([a-zA-Z]+:\\/\\/|[a-zA-Z]:\\/|[a-zA-Z]:\\\\)
^([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*)(\\\\(?1))*$
^([a-zA-Z_][a-zA-Z0-9_]*)=([^\"']*?|'[^']*'|\"([^\"\\\\]|\\\\.)*\");?$
^([A-Za-z0-9\\.\\-\\_]+)\\/?(.*?)$
^([a-zA-Z0-9\\.\\_]+)\\: (.*)
^([a-zA-Z0-9\\.\\s\\-\\_\\/\\\\\\,\\=]+)*$
^([A-Za-z0-9\\-._~\\x{A0}-\\x{D7FF}\\x{F900}-\\x{FDCF}\\x{FDF0}-\\x{FFEF}\\x{10000}-\\x{1FFFD}\\x{20000}-\\x{2FFFD}\\x{30000}-\\x{3FFFD}\\x{40000}-\\x{4FFFD}\\x{50000}-\\x{5FFFD}\\x{60000}-\\x{6FFFD}\\x{70000}-\\x{7FFFD}\\x{80000}-\\x{8FFFD}\\x{90000}-\\x{9FFFD}\\x{A0000}-\\x{AFFFD}\\x{B0000}-\\x{BFFFD}\\x{C0000}-\\x{CFFFD}\\x{D0000}-\\x{DFFFD}\\x{E1000}-\\x{EFFFD}!$&'()*+,;=@]|(%[0-9ABCDEF]{2}))+$
^([a-zA-Z0-9\\-\\.\\_\\~]|\\%[0-9a-fA-F]{2}|[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\@])+$
^([A-Za-z0-9\\-\\[\\]\\\\\\`\\^\\|\\{\\}\\_]+)(\\!\\~?([^@]+))?(@(.*))?$
^([a-zA-Z0-9\\-\\_\\.]*)@([a-zA-Z0-9\\-\\_\\.]*)\\.([a-zA-Z]*)$
^([a-zA-Z0-9\\-\\_\\.]+)\\.php$
^([a-zA-Z0-9\\-\\_\\.]+\\.(html|js|css|png|jpg|gif|svg))$
^([a-zA-Z0-9\\\\-\\\\_]{11})$
^([a-zA-Z0-9\\-\\_]+)$
^([a-zA-Z0-9\\-\\_]+)\\_(admin)\\.php$
^([A-Za-z0-9\\-\\_]+,?\\s?)+$
^([a-zA-Z0-9\\_\\$]+):\\ 
^([A-Za-z0-9\\_\\-\\.]+)$
^([A-Za-z0-9\\_\\-\\.]+)\\@([A-Za-z0-9\\_\\-\\.]+)(?:\\.)?([A-Za-z0-9\\_\\-\\.]+)$
^([A-Za-z0-9\\_\\-\\.]+)\\@([A-Za-z0-9\\_\\-\\.]+)\\.([A-Za-z]{2,})$
^([A-Za-z0-9\\_\\-\\.]+)\\@([A-Za-z0-9\\_\\-\\.]+)\\.([A-Za-z0-9\\_\\-\\.]+)$
^([a-zA-Z0-9\\_\\-\\=\\*]+)\\.?(.*)$
^([a-zA-Z0-9\\\\_\\\\-]{22})$
^([a-zA-Z0-9\\_\\-]+)$
^([a-zA-Z0-9\\_\\-]+):
^([a-zA-Z0-9\\\\_]+):([a-zA-Z0-9_]+)$
^([a-zA-Z0-9]+)\\_([a-zA-Z0-9\\-\\_]+)\\.(sql|sql\\.gz)+$
^([A-Za-z0-9]+)\\_.*
^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[0-9a-zA-Z]{2,3}$
^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$
^([a-zA-Z0-9]+[_|\\_|\\.|\\-]?)*[_a-z\\-A-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.|\\-]?)*[a-zA-Z0-9\\-]+\\.[0-9a-zA-Z]{2,6}$
^([A-Za-z0-9_\\\\]+)\\s+as\\s+(.*)$
^([pq]|[1-
^([x|X][\\p{XDigit}]+)(;?)
^(\\!|,|;|[a-z][0-9a-zA-Z_]*|[#\\$\\&\\*\\+\\-\\.\\/\\:\\<\\=\\>\\?\\@\\^\\~\\\\]+|'(?:[^']*?(?:\\\\(?:x?\\d+)?\\\\)*(?:'')*(?:\\\\')*)*')
^(\"((?:[^\\x00-\\x1F\\\\\"]|\\\\(?:[\"\\\\/bfnrt]|u[[:xdigit:]]{4})){0,32766})*\")
^(\\\"(.*[^\\\\])\\\")
^(\"(?:[^\"\\\\]+|\\\\.)*\")\\s*
^(\"(?P<qkey>(?:\\\\.|[^\\\\\"])+)\"|(?P<key>#?[a-z0-9\\-\\_]+))([ \\t]*(\"(?P<qval>(?:\\\\.|[^\\\\\"])*)(?P<vq_end>\")?|(?P<val>[a-z0-9\\-\\_\\*\\.]+)))?
^(\"([ !#-[\\]-~]|\\\\[ -~])+\"|[-a-z0-9!#$%&'*+/=?^_`{|}~]+(\\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*)@([0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,61}[0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?\\.)+[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,17}[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?$
^(\"([ !#-[\\]-~]|\\\\[ -~])+\"|[-a-z0-9!#$%&'*+\\/=?^_`{|}~]+(\\.[-a-z0-9!#$%&'*+\\/=?^_`{|}~]+)*)@([0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,61}[0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?\\.)+[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,17}[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?$
^(\"([^\"\\\\]|\\\\.)*\")
^(\"(\\\\.|[^\"\\\\])*\")
^(\")([^]*)\"$
^(\"[^]*\")(?:|\\^\\^<?([^\"<>]+)>?|@[a-z0-9\\-]+)$
^(\"\"\"|''')((?:\\\\[\\s\\S]|[^\\\\])*?)(?:\\n[^\\n\\S]*)?\\1
^(\"|')([^\"]+)\\.(
^(\"|')([^]*)\\1$
^(\\$(?:\\_[\\w:]|::))
^(\\$|(?P<percent>%))(?P<var>\\w++)(?(percent)%)(?P<path>.*)
^(\\$this->initializer[a-zA-Z0-9]++) && .*;\\n\\nreturn (\\$this->valueHolder)
^(\\(([^\\(\\)\\\\]|\\\\.)*)
^(\\(.+\\))?\\s*(\\S*)\\s*->\\s*(\\S*?)(?:
^(\\\\([\\da-fA-F]{4})\\s*)+$
^(\\(\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$
^(\\\\)
^(\\\\\\\\)([^\\\\]+)?(\\\\[^\\\\]+)?
^(\\\\)(\\n)
^(\\\\\\\\)*\\}
^(\\\\\\\\)*{
^(\\\\)?$
^(\\\\)?(ifdef|ifndef|ifeval|endif)::(\\S*?(?:([,+])\\S*?)?)\\[(
^(\\\\)?\\+(\\S|\\S
^(\\\\)?include::([^\\[][^\\[]*)\\[(
^(\\\\)+\\$\\{.*}$
^(\\\\*)[^\\\\]+
^(\\*?[[:alnum:]]\\*?+\\|?)+$
^(\\*|\\+|\\?|\\d)\\s+(\\dc?|%|\\.)?\\s*(
^(\\.[/\\\\])?node_modules[/\\\\].bin[\\\\/]
^(\\.[\\/\\\\])?inc[\\/\\\\]?$
^(\\.[\\/\\\\])?node_modules[\\/\\\\].bin[\\\\\\/]
^(\\.\\./|\\.\\.\\\\)+?.*?(/|\\\\)*?(.*?)$
^(\\.\\.[/\\\\])+
^(\\.\\.[/\\\\]|[/\\\\])
^(\\.\\.[\\/\\\\])+
^(\\.\\.\\/|\\/|[a-zA-Z]:\\\\)
^(\\.|/|([A-Z]:\\\\))
^(\\\\.|[\\(\\)\"'\\\\])
^(\\\\.|[^\"\\\\])*?\"
^(\\\\.|[^\"\\\\]+)
^(\\.|\\/|\\w:\\\\)
^(\\.sq|
^(\\/(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)))+)*\\/\\*{1,2}$
^(\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/)([imgy]{0,4})(?!\\w)
^(\\/(?:[^\\n\\r\\u2028\\u2029/\\\\[]|\\\\.|\\[(?:[^\\n\\r\\u2028\\u2029\\]\\\\]|\\\\.)*])+\\/(?:([gimuy])(?![a-z]*\\2))*(?![a-zA-Z_$0-9]))
^(\\/)(\\d{4}-\\d{2}-\\d{2})(\\/)([^\\/]+)(\\/)(@\\S+)\\s++(.*)$
^(\\/\\*[^]*?(?:\\*\\/|$))
^(\\/\\/[^]+)\\r+$
^(\\/|([a-zA-Z]:)?\\\\)
^(\\/|[a-z]:\\\\\\\\)
^(\\/|[a-zA-z]:($|\\\\))
^(\\/|[a-zA-Z]:($|\\\\))
^(\\/|\\\\\\\\)
^(\\/|\\\\)
^(\\/|\\\\)+
^(\\/|\\\\)meta(\\/|\\\\).*json$
^(\\/Date\\((?P<timestamp>-?\\d+)((?P<offset_h>[-+]\\d\\d)(?P<offset_m>\\d\\d))?\\)\\/)|((?P<year>\\d{4})-(?P<month>[0-2]\\d)-0?(?P<day>[0-3]\\d)T(?P<hour>[0-5]\\d):(?P<minute>[0-5]\\d):(?P<second>[0-6]\\d))$
^(\\/zport\\/dmd\\/)?(
^(\\\\?.)\\\\(['\"])(.*?)\\\\\\2$
^(\\?:?|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/=?|[=!:\\?]?=|<=?|>=?|%=?|&&|\\|=?|\\~|!|\\^|\\\\)
^(\\?[^
^(\\[(?:(?:(?-1)*?)|[^\\[\\]\\\\]+|\\\\.|.)*?\\])$
^(\\[(?:[^\\]\\\\]+|\\\\.)*\\])\\s*
^(\\[[a-zA-Z\\.\\-!?]+\\][\\s_]*)?(?P<title>[\\w -]+)?\\s+-\\s+(?P<epno>\\d+)\\s*(\\[\\d+p\\])?$
^(\\[[a-zA-Z\\.\\-!?]+\\][\\s_]*)?(\\[BD\\])?(\\[\\d{3,4}[ip]\\])?(?P<title>[\\w\\s_.+!?'-\\(\\)]+)(New Edit|(Blu-?ray)?( ?Box)?( ?Set)?)?\\s*[\\(\\[](BD|\\d{3,4}[ipx])
^(\\\\\\\\[^\\\\]+\\\\)([^\\\\]+)(\\\\[^\\\\].*)?$
^(\\\\[_\\~\\.\\-\\!\\$&'()*+,;=\\/?#@%]|%[0-9A-Fa-f]{2}|[^ \\t\\r\\n;,\\[\\]()])+
^(\\-\\-)?\\Q$boundary\\E(\\-\\-)?$
^(\\_)
^(\\{(?P<vals>[\\d\\s,+\\-]*)\\})$
^(\\'|\")(?P<fname>.*?)\\1$
^(\\-|\\_|\\.)+
^(\\+)?(
^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?
^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?
^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})
^(\\+\\d{1,3})? ?([\\(-\\s])?\\d{1,3}?([\\s-\\)])[\\d\\s\\-]+$
^(\\015\\012--\\Q$bdry\\E--.*)
^(\\A|\\R)=(\\w+)(.*\\R(?:\\R|\\z))
^(\\C\\C)\\C
^(\\C{$itemlength})(\\C*)
^(\\C{4})(\\C*)
^(\\d
^(\\d)\\.(\\d)(?:\\.(\\d))?+.*
^(\\d*\\w*)\\s(0x\\d*\\w*)\\s_OBJC_CLASS_\\$_(
^(\\d.*|P[T0-9].*|(?:\\h*\\d+(?:\\.\\d+)?\\h*[a-z]+)+)$
^(\\d\\d-\\d\\d\\d\\d-\\d\\d)\\s+(
^(\\d{
^(\\d{1,4})([\\s/\\\\_.-])(\\d{1,2})([\\s/\\\\_.-])(\\d{1,4})$
^(\\d{1,4})([\\s/\\\\_.-])(\\d{1,2})\\2(\\d{1,4})$
^(\\d{1,4})([\\s\\/\\\\_.-])(\\d{1,2})\\2(\\d{1,4})$
^(\\d{8})_(\\d{4,}|
^(\\d+)(?:;\\d+ \\d+)?:([^]*)$
^(\\d+)([dwmy])?(?:,(
^(\\d+)(\\p{Letter})+$
^(\\d+)(\\p{Letter})+(\\d+)$
^(\\d+)(\\p{Letter})+(\\d+)\\.(\\d+)$
^(\\d+)(\\p{Letter})+(\\d+)\\.(\\d+)(E|e)(\\d+)$
^(\\d+)[\\.\\s]*(
^(\\d+)\\\\
^(\\d+)\\\\([acprux])$
^(\\d+)\\.(\\d+)\\\\([acprux])$
^(\\d+)\\_(.+)?$
^(\\d+)\\_?
^(\\d+)\\s+\\Q$Option{path}\\E$
^(\\d+|\\d+\\.\\d*|\\d*\\.\\d+)([
^(\\d++)([hms])$
^(\\h){8}-(\\h){4}-(\\h){4}-(\\h){4}-(\\h){12}\\:\\w+$
^(\\h\\h)[^\\h]*(\\h\\h)$
^(\\h\\h)[^\\h]*(\\h\\h)[^\\h]*(\\h\\h)[^\\h]*(\\h\\h)[^\\h]*(\\h\\h)[^\\h]*(\\h\\h)[^\\h]*(\\h\\h)[^\\h]*(\\h\\h)$
^(\\h{2}:){5}\\h{2}$
^(\\h{2}[-|\\.|\\s]){5}\\h{2}$
^(\\h{4}[-|\\.|\\s]){2}\\h{4}$
^(\\h{6}):\\h{6}$
^(\\h{6})[-|\\.]\\h{6}$
^(\\h++.+?)(#=> .*)
^(\n                (((ht|f)tp[s]?://)|([a-z0-9]+\\.))+\n                (?<!@)\n                ([a-z0-9\\_\\-]+)\n                (\\.[a-z]+)+\n                ([\\?/\\:][a-z0-9_=%&@\\?\\./\\-\\:\\#\\(\\)]+)?\n                /?\n              )$
^(\n            [^\\Q$delim\\E]* # any character from the start not including the delimiter (which might be \\t)\n            \\Q$delim\\E # now ending with the delimiter, perhaps as a quoted string \n            )\n            {$col_i,}? # as many times as necessary to get to the required field value\n            ([^\\Q$delim\\E]*) # which should be here\n            
^(\n        \\(\\?P\\<[a-zA-Z0-9_-]+\\>  | # Start of named group.\n        \\(\\?#[^)]*\\)             | # Comment\n        \\(\\?=                    | # Start of lookahead assertion\n        \\(\\?!                    | # Start of negative lookahead assertion\n        \\(\\?<=                   | # If preceded by.\n        \\(\\?<                    | # If not preceded by.\n        \\(?:                     | # Start of group. (non capturing.)\n        \\(                       | # Start of group.\n        \\(?[iLmsux]              | # Flags.\n        \\(?P=[a-zA-Z]+\\)         | # Back reference to named group\n        \\)                       | # End of group.\n        \\{[^{}]*\\}               | # Repetition\n        \\*\\? | \\+\\? | \\?\\?\\      | # Non greedy repetition.\n        \\* | \\+ | \\?             | # Repetition\n        \\#.*\\n                   | # Comment\n        \\\\. |\n\n        # Character group.\n        \\[\n            ( [^\\]\\\\]  |  \\\\.)*\n        \\]                  |\n\n        [^(){}]             |\n        .\n    )
^(\\n*)( *)[^]+?(\\n*)$
^(\n\t(?(?!\\p{IsIDNAAtsign}|\").|(?!))+\n\t|\n\t\"(?:(?:[^\"]|\\\\.)*[^\\\\])?\"\n      )\n      (?:\n\t(\\p{IsIDNAAtsign})\n   \t(?:([^\\[\\]]*)|(\\[.*\\]))?\n      )?$
^(\\n|\\r\\n)?# (?:
^(\\p{Han})
^(\\p{Han}+)
^(\\p{InCJKUnifiedIdeographs}|\\p{InKana})+$
^(\\p{InCJKUnifiedIdeographs}+)
^(\\p{InKana}+)
^(\\p{IsAlnum}+)
^(\\P{IsUpper})
^(\\p{IsWord})\\p{IsWord}*$
^(\\p{Letter}${chartypes{notcaron}}*)${chartypes{all}}+(${chartypes{notcaron}}*)$
^(\\p{Letter}${chartypes{notgrave}}*)\\x{0300}
^(\\p{Letter})+$
^(\\p{Letter})+(\\d+)$
^(\\p{Letter})+(\\d+)\\.(\\d+)$
^(\\p{Letter})+(\\d+)\\.(\\d+)(E|e)(\\d+)$
^(\\p{Letter}\\p{ModifierLetter}*)
^(\\p{Letter}\\p{NonspacingMark}*)[\\x{0301}\\x{030C}]+
^(\\p{Ll}[^\\p{Lu}\\s\\x85\\xa0\\x{1680}\\x{2000}-\\x{200a}\\x{2028}\\x{2029}\\x{202f}\\x{205f}\\x{3000}]*):(?:[ \\t]+(.*))?$
^(\\p{Lower}+)\\.(\\p{Lower}+)\\.(\\p{Lower}+)$
^(\\pL[\\pL']*) 
^(\\pL|\\pN)+([- _.]+|\\pN+|\\pL+)+$
^(\\pL+)(?:\\*\\*)?(\\d+)?(?:\\*)?(.*)$
^(\\pL+)[^\\pL]?$
^(\\PM)
^(\\pM)
^(\\Q$$block[-1]\\E\\S*?)\\s*:
^(\\Q${cd}\\E.*?(?=^\\Q${cd}\\E|\\z))
^(\\Q$alt_nick\\E)\\s*[:,-]?\\s*
^(--\\Q$bdry\\E\\015\\012Content-Disposition:[^\\015\\012]* name\\=\\\"([^\\\"]*)\\\"(?:[^\\015\\012]* filename\\=\\\"([^\\\"]*)\"[^\\015\\012]*|[^\\015\\012]*)\\015\\012([^\\015\\012]*)\\015\\012)
^(\\Q$bom\\E)
^(\\Q$common_prefix_path\\E)
^(\\Q$const\\E)(.*)
^(\\Q$ctag\\E)?\\s*
^(\\Q$dbd_name\\E is not yet supported)
^(\\Q$disk->{devpath}\\E|\\Q$dmpath\\E)\\s+
^(\\Q$exclude\\E)$
^(\\Q$fh\\E|\\Q$mt\\E)$
^(\\Q$filedir\\E)(.*)
^(\\Q$key\\E\\[(?:$lang)\\]|\\Q$key\\E)[^\\S\\n]*=[^\\S\\n]*(.*?)\\s*$
^(\\Q$location\\E)?
^(\\Q$name\\E|$num)$
^(\\Q$own_nick\\E)\\s*[:,-]?\\s*
^(\\Q$pkg\\E\\s+-+\\s+)(.*)
^(\\Q$prefix\\E)_
^(\\Q$saml_acs_art_url\\E|\\Q$saml_acs_post_url\\E|\\Q$saml_acs_get_url\\E)$
^(\\Q$saml_acs_art_url\\E|\\Q$saml_acs_post_url\\E|\\Q$saml_acs_get_url\\E|\\Q$saml_slo_soap_url\\E|\\Q$saml_slo_soap_url_ret\\E|\\Q$saml_slo_get_url\\E|\\Q$saml_slo_get_url_ret\\E|\\Q$saml_slo_post_url\\E|\\Q$saml_slo_post_url_ret\\E|\\Q$saml_ars_url\\E)$
^(\\Q$saml_ars_url\\E)$
^(\\Q$saml_att_soap_url\\E)$
^(\\Q$saml_slo_soap_url\\E|\\Q$saml_slo_soap_url_ret\\E|\\Q$saml_slo_get_url\\E|\\Q$saml_slo_get_url_ret\\E|\\Q$saml_slo_post_url\\E|\\Q$saml_slo_post_url_ret\\E)$
^(\\Q$saml_slo_soap_url\\E|\\Q$saml_slo_soap_url_ret\\E|\\Q$saml_slo_get_url\\E|\\Q$saml_slo_get_url_ret\\E|Q$saml_slo_post_url\\E|\\Q$saml_slo_post_url_ret\\E)$
^(\\Q$saml_slo_url_relay_post\\E)
^(\\Q$saml_slo_url_relay_soap\\E)
^(\\Q$saml_slo_url_relay_term\\E)
^(\\Q$saml_sso_soap_url\\E|\\Q$saml_sso_soap_url_ret\\E|\\Q$saml_sso_get_url\\E|\\Q$saml_sso_get_url_ret\\E|\\Q$saml_sso_post_url\\E|\\Q$saml_sso_post_url_ret\\E|\\Q$saml_sso_art_url\\E|\\Q$saml_sso_art_url_ret\\E)$
^(\\Q$sign_prefix\\E)(\\Q$pic_prefix\\E)(\\s*)
^(\\Q$start\\E.*?(?=\\Q$start\\E|\\z))
^-(\\Q?\\E)$
^(\\Q@{[$node->{operator}]}\\E)(.*)$
^(\\Q<IfModule mod_userdir.c>\\E)
^(\\S)\\s+\\Q$self\\E$
^(\\s*
^(\\s*(?:
^(\\s*)#(\\s*)(\\:
^(\\s*)#if\\s+os\\((iOS|macOS)\\)\\n([^]*?)(?:^\\1#else\\n([^]*?))?^\\1#endif\\b\\n?
^(\\s*)(
^(\\s*)(??|??|??|??|??|??|??|??|??|??|??|??|??|??|??|??)(.{1,10})$
^(\\s*)([;#])(.*?)\n                      (\\R?)\\z
^(\\s*)([^#|\\n]*
^(\\s*)([^]*?)(\\s*)$
^(\\s*)([^=]+?)(\\s*)=\n                      (\\s*)(.*?)\n                      (\\R?)\\z
^(\\s*)(\\Q$str\\E\\s*)
^(\\s*)(gem\\s*['\"]
^(\\s*)[^]*?(\\s*)$
^(\\s*)\\\\
^(\\s*)\\[(\\s*)(.+?)(\\s*)\\]\n                      (?: (\\s*)([;#])(.*))?\n                      (\\R?)\\z
^(\\s*)\\b\\Q$args{column}\\E\\b
^(\\s*)\\Q$args{column}\\E
^(\\s*)\\Q$hierend\\E\\s*$
^(\\S*?)\n\t    ((?<!\\\\)\\$.*)$               # The first non escaped $ character and anything beyond to end of sring\n\t    
^(\\s*[0-9a-zA-Z_]+\\s*=\\s*)?\\s*((
^(\\s*\"
^(\\s*\"(?:[^\"\\\\]|\\\\.)*)\"(?=\\n)
^(\\s*\\Q$op\\E\\s*\\Q$ld\\E)\\Q$pat\\E
^(\\s*|([\\\\][\\\\]))\\s*<indent.*?>.*?<\\/indent>\\s*$
^(\\s*+)def\\s+.*^\\1end\\s
^(\\s*gem\\s+['\"]
^(\\s\\s*)*\\\\
^(\\s{,
^(\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*\\(
^(\\s|\\d)*[^
^(\\s|\r|\n){,20}\\%pdf-(?P<version>.{5})
^(\\s+$key:\\s+)\\Q$old_value\\E[ \\t]*$
^(\\s+(?:[^\"]|(?:\"(?:[^\"\\\\]|\\\\.)*\"))+)(\\s+if\\s+)(.*?)(\\s*\\#.*)?$
^(\\S+)(?:/)(?P<registrationId>[^/]+)
^(\\s+)(?u)
^(\\s+)?(?P<src>\\S+)(\\s+)?((cells\\[)(?P<start>-?[0-9]*):(?P<end>-?[0-9]*)(\\]))?(\\s+)?((language\\[)(?P<language>-?[a-z0-9\\+\\-]*)(\\]))?(\\s+)?$
^(\\S+)\\/(\\d+(?:[\\.\\_]\\d+)+)
^(\\S+)\\_(\\d+)$
^(\\S+)\\_(\\d+)\\+1$
^(\\S+)\\s+      # domain name\n\t\t     (\\d+)\\/(\\d+)\\s+  # num/num (ie 1 of 2) \n\t\t     (\\d+)\\s+(\\d+).+? # sequence start and end\n\t\t     (\\d+)\\s+(\\d+)\\s+ # hmm start and end\n\t\t     \\S+\\s+           # []\n\t\t     (\\S+)\\s+         # score\n\t\t     (\\S+)            # evalue\n\t\t     \\s*$
^(\\S+)\\s+(\\S++)(?:\\s+HTTP\\/(\\d+\\.\\d+))?\\r?\\n
^(\\S+)=(.*+?)$
^(\\s+|[,:{}\\[\\]]|\"(\\\\[\"\\\\\\/bfnrtu]|[^\\x00-\\x1f\"\\\\]+)*\"|-?\\d+(\\.\\d*)?([eE][+-]?\\d+)?|true|false|null)+$
^(\\S++(?: \\S++){0,3}).*
^(\\s++)
^(\\t*+)\\ (?!\\*)\\s*
^(\\t| )+Author\\:(\\t| )+(.*+)
^(\\t| )+Class\\:(\\t| )+(.*+)
^(\\t| )+Has latency\\:(\\t| )+(.*+)
^(\\t| )+Name\\:(\\t| )+(.*+)
^(\\t|[ ]{1,
^(\\\\u[0-9A-F]{4}|\\\\U[0-9A-F]{8}|\\\\\\\\|[\\u0020-\\u0021\\u0023-\\u005B]|[\\u005D-\\u10FFFF]|\\\\t|\\\\n|\\\\r|\\\\\")*
^(\\\\u[0-9A-F]{4}|\\\\U[0-9A-F]{8}|\\\\\\\\|[\\u0020-\\u0021\\u0023-\\u005B]|[\\u005D-\\u10FFFF]|\\\\t|\\\\n|\\\\r|\\\\\"|\\u0009|\\u000A|\\u000D|\"[^\"]|\"\"[^\"])*
^(\\\\u[0-9A-F]{4}|\\\\U[0-9A-F]{8}|\\\\\\\\|\\\\>|[\\u0020-\\u003D\\u003F-\\u005B\\u005D-\\u10FFFF])*
^(\\w)+([\\.\\-\\_]\\w+)*@(\\w)+(([\\.\\-\\_]\\w+)+)$
^(\\w:)?[/\\\\]
^(\\w:)?[\\/\\\\]
^(\\w:[\\\\/]|\\\\\\\\)
^(\\w:[\\/|\\\\]|\\/)
^(\\w\\w)[\\-\\_](\\w\\w)$
^(\\w{40}) (\\d{3}) (\\*?) +(
^(\\w|\\-|\\_|\\&|\\+|\\.)+\\@((\\w|\\-|\\_)+\\.)+[a-zA-Z]{2,}$
^(\\w+(?:/[\\w<>]+)*)                     # the method name\n                     \\((                       # paren starts list of arg types\n                       (?:\\[*                  # [ starts an array\n                           (?:[BCDFIJSZ]|      # the native java types\n                              L\\w+(?:/\\w+)*;)  # a Java class type\n                        )*)\\)                  # paren, end of arg types\n                     ([BCDFIJSZV]|             # the return type, note that\n                        L\\w+(?:/\\w+)*;)        # V (void) is inculed\n         $
^(\\w+)-([
^(\\w+): ([ \\w]+):( +)(?P<file_path>\\S.*)$
^(\\w+)\\s*(\\w+)\\s*(\\(\\s*(\\d+|\\d+\\s*\\,\\s*\\d+)\\s*\\))?\\s*(?P<pk>primary\\s+key)?\\s*(not\\s+null|null)?\\s*((default)\\s+(\"|')?(null|false|true|\\d+\\.\\d+|\\d+|[\\w\\s]*)(\"|')?)?(\"|')?.*,
^(\\w+://[^/]+)/\\Q$tag\\E[^/]+
^(\\w+://[^/]+)/+\\Q$tag\\E[^/]+
^(\\w+[\\/\\\\])*\\w+(|\\.\\w+)$
^(\\w+[\\w\\s]+\\w+):\\s*([\\pL\\pN\\p{Latin}]+.+)$
^(\\\\\\\\\\w+\\\\\\w+\\$?)(\\\\)?$
^(\\w++)
^(\\w++)$
^(\\w++)(?:\\((\\d+|'[^']*(?:''[^']*)*'(?:,'[^']*(?:''[^']*)*')*)\\))?(?: (\\w++))?$
^(\\w++)(\\s++)(.*)$
^(\\w++):([^=]*=.++)$
^(\\\\x[0-9a-fA-F][0-9a-fA-F]?)
^(\\\\x[a-fA-F0-9]{2})+$
^(\\X{0,$width}+)(.*)
^(_)_((?:\\\\[\\s\\S]|[^\\\\])+?)__(?!_)|^(\\*)\\*((?:\\\\[\\s\\S]|[^\\\\])+?)\\*\\*(?!\\*)
^(_?
^(_|\\Q$prefix\\E)
^(`\\Q$dbname\\E`\\.)?`(.*)`$
^(-{3}\\n.*?\\n?)^(-{3}*$\\n?)
^(|.*[^\\\\])\\*(.*)$
^('|\")(.*?)(([^\\\\])(\\1))(.*)
^(---|\\+\\+\\+)$[^]*?^\\1$(\\r\\n|\\r|\\n)
^(---|\\+\\+\\+|@@|\\\\\\\\)
^(---|\\+\\+\\+|\\\\\\\\)
^(|latin|ascii|kanji)(
^(~|\\.\\.?)?[\\/\\\\]
^(<(?:\\\\\\\\|\\\\.|[^<>\\\\]){0,1024}>)
^(<[^>\\s]*+)\\s([^>]*+)(.*+)$
^(=={0,5})[ \\t]+(
^(=={0,5}|#\\#{0,5})[ \\t]+(
^(>.*?<\\s*\\/\\s*
^(9){1}[0-9]{9}+$
^(a
^(add|remove)\\_collaborator$
^(add|remove)\\_deploy\\_key$
^(add|remove)\\_label$
^(aff4:)?/?(?P<clientid>(c|C)\\.[0-9a-fA-F]{16})$
^(after|around|before)\\_
^(application|custom)(\\/|\\\\)
^(app-root\\/|\\.[^\\/]+|
^(array[\\s]*\\(|\\[)([\\sa-zA-Z0-9\\_\\$\\,'\\\"\\[\\]]+)(\\)\\)|\\]\\))\\;$
^(ascend|descend)_by_(
^(BASE_PATH|
^(begin|end|\\\\)$
^(bibliography)::(\\S+)?\\[(|.*?[^\\\\])\\]$
^(blib[/\\\\])?lib[/\\\\]
^(border|border
^(bot)?(?P<key>[0-9]+:[a-z0-9_-]+)/*$
^(cas|oauth)\\-([a-z0-9\\-\\_]+)\\.php$
^(create|drop|add)\\-([a-z0-9\\_]*)(\\-to\\-)?([a-z0-9\\_]*)?$
^(def\\s+)(?:[^\\.]+\\.)?(
^(define)\\s+((?:(?:sealed|open|inline[-a-z]*)\\s+)+)?(?:(domain)|(method|function|generic)\\s+)([\\\\_A-Za-z0-9/!?*%$\\-\\<\\>=]*)
^(DELETE FROM [\\w_]++ WHERE)((?:\\s*(?:AND|OR)?\\s*[\\w_]+\\s*(?:(?:=|<>)\\s*(?>'(?>[^']++|'')*+'|[\\d-.]+)|(?:NOT )?IN\\s*\\((?>'(?>[^']++|'')*+',? ?|[\\d-.]+,? ?)*+\\)))*+)$
^(dlr|req)\\\\:(/[\\\\w\\\\d\\\\-\\\\_]+(/[\\\\w\\\\d\\\\-\\\\_]+)*)\\\\:([\\\\d\\\\w]{40})\\\\:([\\\\d\\\\w\\\\-]{36})$
^(DQM|Playback)_V[0-9]{4}_(?P<subsys>.*)_R(?P<runnr>[0-9]{9})\\.root$
^(DQM|Playback)_V[0-9]{4}_(?P<subsys>.*)_R(?P<runnr>[0-9]{9})_T[0-9]{8}\\.root$
^(exi)|(qu)|(\\\\q)
^(File\\d)=(?P<stream_url>\\S+)
^(font|text-d|kerning|letter|word)[^\\_]*$
^-(full-help|\\Q???\\E)$
^(get|is)([^\\p{javaLowerCase}].*)
^(getIs|does)(?P<remainder>[A-Z].*)$
^(GIR *0AA|
^(git)@([\\w\\.\\d\\-\\_]+)(?:\\/|:)([\\w\\.\\d\\-\\_\\/]+)
^(git|https?):\\/\\/[a-z\\-\\.]+\\/[a-z\\-\\.]+\\/([A-z0-9.\\-\\_]+)$
^(gl\\_|texture)
^(global|module)\\.([a-zA-Z0-9\\_\\-]+)\\.php$
^(global|ref|names)?@?([\\w\\.\\-\\/\\\\]+?(?:\\.css|\\.less|\\.scss|\\.sass|\\.mx|\\.mmx|\\.style))$
^(good morning|morning|m0ink|hello|hi|hey|whassup|what's up|yo|hola|ola|'sup|sup)(,)*\\\\s*(
^(HEADER),([\\w\\_]+),
^(help|\\\\h)\\s+(\\w+)$
^(http(s?)://)?(www\\.)?(facebook\\.com/(.*)\\?v=)(?P<id_video>\\d+).*$
^(HTTP/)?(?P<version>[1-9]\\d*(?:\\.\\d)?)$
^(http://)?(www\\.)?(dailymotion\\.com/video/)(?P<id_video>[a-zA-Z0-9]+).*$
^(http://)?(www\\.)?(vimeo\\.com/)(?P<id_video>\\d+).*$
^(http://)?(www\\.)?(youtube\\.com/watch(.*)v=)(?P<id_video>[a-zA-Z0-9_-]+).*$
^(http:\\/\\/)(?P<hostname>([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])|(([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])\\.)+([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])):(?P<portnum>\\d+)\\/(?P<database>[A-Za-z][A-Za-z0-9\\_\\$\\(\\)\\+\\-\\/]+)$
^(http[s]?):([/\\\\]{1,2})
^(http|https|ftp):(\\/\\/|\\\\)(([\\w\\/\\\\+\\-~`@:%])+\\.)+([\\w\\/\\\\.\\=\\?\\+\\-~`@\\':!%#]|(&)|&)+
^(https://github.com/|\\w+@github\\.com:)(?P<repository>[a-zA-Z0-9_\\-]+/[a-zA-Z0-9_\\-]+)\\.git$
^(https://github.com/|git@github.com:)(?P<owner>.*?)/(?P<repo>.*?)(.git)?$
^(https?):\\\\
^(https?:)?\\/\\/(?!\\Q$my_host\\E)
^(https?:)?\\/\\/(docs\\.google\\.com)\\/(?<endpoint>(
^(https?:\\/\\/(?:www\\.|(?!www))[^\\s.#!:?+=&@!$'~*,;/()[\\]]+\\.[^\\s#!?+=&@!$'~*,;()[\\]\\\\]{2,}\\/?|www\\.[^\\s#!:.?+=&@!$'~*,;/()[\\]]+\\.[^\\s#!?+=&@!$'~*,;()[\\]\\\\]{2,}\\/?)
^(chr\\d+)\\_(\\d+)-(\\d+)
^(chr\\d+)\\_(\\d+)-(\\d+)\\.mappedSS\\.bed6
^(chr\\d+\\_\\d+-\\d+)
^(ie|safari|ios|ff|firefox|chrome|opera)\\_version$
^(image|video|audio)::(\\S|\\S
^(INSERT INTO[^(]++)\\(([^()]+)\\) VALUES[^(]++\\((.*?)\\)$
^(inspec|train)-[a-z0-9\\-\\_]+-\\d+\\.\\d+\\.\\d+$
^(Job Stats \\(time in seconds\\):.*+)
^(list|table\\d+)\\_(\\w+)$
^(M-\\\\C-|C-\\\\M-|M-\\\\c|c\\\\M-).$
^(N[CST]\\_\\d{6})$
^(N[CST]\\_\\d{6})\\.\\d+?$
^(N[CSTZ]\\_[A-Z]*\\d{6})$
^(N[CSTZ]\\_[A-Z]*\\d{6})\\.\\d+?$
^(ns=(?P<ns>[0-9]+);)?(?P<t>[isgb])=(?P<v>.+)$
^(ONBUILD)(\\s+)(
^(Overfull \\\\hbox|Underfull \\\\hbox)
^(PhpCsFixer)\\\\Tests(\\\\.+)Test$
^(pkg|doc|.yardoc)([/\\\\]|$)
^(pkg|doc|coverage|.yardoc)([/\\\\]|$)
^(qr|m)(.)(.+?)((??{$cl->($2)}))()($modre*)$
^(quit|exit|log ?out|\\\\q)$
^(RE)?(
^(refs/)?pull/(?P<pr>[0-9]+)/head$
^(result|proc_\\w+|proc|arg\\_\\w+)_size$
^(RVRNO |\n                             R(?P<name>\\d\\d(RR?|LL?|C)?)/\n                              (?P<low>(M|P)?\\d\\d\\d\\d)\n                            (V(?P<high>(M|P)?\\d\\d\\d\\d))?\n                              (?P<unit>FT)?[/NDU]*)\\s+
^(s)(.)(.+?)((??{$cl->($2)}))\\2?(.+?)\\4($modre*)$
^(s?(??{$any_re})*(?:(??{$block_re})|(?:;s?|\\z)))
^(snmp set-read-community \").*+?(\".*)$
^(SRID=(?P<srid>\\d+);)?(?P<wkt>(?P<type>POINT|LINESTRING|LINEARRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)[ACEGIMLONPSRUTYZ\\d,\\.\\-\\(\\) ]+)$
^(ssh://)?(?:(?P<user>[^@]+)(?:@))?(?P<host>[^:|/|.]+[.][^:|/|.]+)+(?::|/)+(?P<path>.+)$
^(sym\\_semi)$
^(T|V|G)_([0-9\\_]+)(_[spo])?\\.([a-z\\_]+)
^(TAO|App)\\\\Bundle\\\\([^\\\\]+)\\\\
^(this|is|a|[^tes.*\\|]t.\\.\\*\\/\\\\)$
^(true|
^(UPDATE [\\w_]++\\s+SET )([\\w_]++\\s*=\\s*(?:'(?:[^']++|'')*+'|[\\d-.]+)(?:,\\s*[\\w_]++\\s*=\\s*(?:'(?:[^']++|'')*+'|[\\d-.]+))*+)\\s+(WHERE.*)$
^(UPDATE [\\w_]++\\s+SET [\\w_]+\\s*=\\s*(?:'(?:[^']++|'')*+'|[\\d-.]++|:\\w++)(?:, [\\w_]+\\s*=\\s*(?:'(?:[^']++|'')*+'|[\\d-.]++|:\\w++))*+\\s+WHERE)(.*)$
^(UPDATE\\s+(?:(?:\"?\\w+\"?\\.)?\"?\\w+\"?\\.)?\"?\\w+\"?\\s+)(SET((?:(?:(?!\\bwhere\\b|\\breturning\\b)[^()])+|\\(((?:[^()]+|\\((?3)\\))*)\\))*))(.*)$
^-(usage-help|\\Q??\\E)$
^(use \\Q$class\\E\\b)
^(vi|vim([<>=]?\\d{3})?):\\s*set? (?P<rhs>.*?)(?<!\\\\):
^(VOTERLIST|IPCHART|COMMENT|\\Q$STARTGRAPHIC\\E|\\Q$STARTPC\\E)
^(WS\\s+)?(ALL\\s+RWY|RWY(?P<name>\\d\\d(RR?|L?|C)?))\\s+
^(Zend\\\\Log\\\\Logger|Zeus\\\\ServerService\\\\Shared\\\\Logger\\\\ExtraLogProcessor)
^,?((?![\"'])([^,]*)|([\"'])(.*?[^\\\\])\\3)(.*)
^.([\\w\\-]+\\.)*\\Q$options{zone}\\E:
^.(\\/|\\\\)
^.* connection accepted from [0-9\\.:]+ #(?P<conn>[0-9]+) 
^.*(
^.*(/categories/)(
^.*(?P<separator>[^.0-9])[0-9]+$
^.*([/\\\\].{1,70})$
^.*([/\\\\].{1,70})\\z
^.*([^\\\"\\\\\\\\]*)\\\"\\\"\\\"
^.*([a-z0-9\\-\\_]+)$
^.*(\\/|\\\\)
^.*(link/[a-z]*)\\s(?P<MAC>.*)\\sbrd\\s(?P<BRD>.*)$
^.*(tcl
^.*(tk
^.*/(?P<name>.*?)(\\..*)?$
^.*/|\\\\
^.*:..:.. (?P<pre_hostname>[a-zA-Z-.]+): 
^.*?(/|\\\\)([^/\\\\]+)(/|\\\\)[^/\\\\]+(/|\\\\)?$
^.*?(?<!\\\\),(.*)
^.*?(?P<ip>(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)).*?(?P<port>\\d{2,5}).*$
^.*?(?P<version>(\\d|\\.)+).*?$
^.*?([^\\/\\\\]+)$
^.*?([^\\\\]+$)
^.*?([^\\\\]+)$
^.*?(\\[Network Number\\])[^\\S\\n]+.+?>(?P<val>.+?)</A>$
^.*?[.](?P<ext>tar\\.gz|tar\\.bz2|\\w+)$
^'.*?[^\\\\]'
^.*?\\[.*?\\]\\s*(?P<vari>.+?)\\s*:\\s*(?P<varn>.+?)\\s*\\{(?P<vtype>[^\\[]+)}\\s*(?P<mod>\\[.*?\\]){0,1}
^.*?\\[.*?\\]\\s*(?P<vari>.+?)\\s*:\\s*(?P<viid>.+?)\\s*:\\s*(?P<varn>.+?)\\s*\\{(?P<vtype>[^\\[]+)}\\s*(?P<mod>\\[.*?\\]){0,1}
^.*?\\[.*?\\]\\s*(?P<vari>@.+?):(?P<varn>[^\\[]+)\\s*(?P<mod>\\[.*?\\]){0,1}
^.*?<p>(?P<para>.*?)</p>.*?
^.*?sub[ \\t]+compile\\_regex
^.*?sub[ \\t]+get\\_config[ \\t]*\\{.*?return[ \\t]*\\{[ \\t\\r\\n]*
^.*[ \\\\]1.*$
^.*[ \\\\]2.*$
^.*[/\\\\]
^.*[/\\\\]$
^.*[/\\\\](.*)$
^.*[/\\\\](.*?)$
^.*[/\\\\]([^/\\\\]*)$
^.*[/\\\\].+\\.json$
^.*[\\.\\/\\\\]
^.*[\\/\\\\]
^.*[\\/\\\\](bar|c)([\\/\\\\]|$)
^.*[\\\\_]([A-Za-z0-9]+)$
^.*[^\\\\]:\\s*$
^.*[^\\\\]\\\\$
^.*\\\\
^.*\\\\(.*)$
^.*\\\\(.*)\\\\(.*)\\..*$
^.*\\(.*?(?P<node_id>i-[0-9a-f]+).*\\).*bootstrap action (?P<action_num>\\d+).*non-zero return code.*$
^.*\\\\(.*?)$
^.*\\\\(.+)$
^.*\\\\(.+?)$
^.*\\\\(.+?)(Exception)?$
^.*\\\\([^\\\\/]+)$
^.*\\\\([^\\\\]+)Controller$
^.*\\(\\((?P<link>.*)\\)\\).*$
^.*\\\\(\\d+.*\\.c$)
^.*\\K/.*
^.*\\n__END__\\R\\R?
^.*\\p{Upper}.*$
^.*\\Q$namesep\\E
^.*\\Q[\\E.*\\Q]\\E$
^.*\\Q<!-- start doc -->\\E(.*)\\Q<!-- end doc -->
^.*\\Q<table border=0 cellspacing=0 cellpadding=0 width=556>\\E(.*?)<\\/table>.*$
^.*\\s*@(\\w+)\\s+(.*+)$
^.*\\s+mail exchanger = (?P<priority>\\d+) (?P<host>\\S+)\\s*$
^.*Drupal\\\\Core.*$
^.*id=(?P<id>\\d*) .*cardId=(?P<card_id>[a-zA-Z0-9_]*) .*player=(?P<player>\\d*)
^.*inet6\\s(?P<IP>.*)\\/(?P<MASK>\\d+)\\sscope\\s(\\S.*\\S)\\s?$
^.*node_modules(\\/|\\\\)
^.*node_modules[/\\\\]
^...\\n++([\\t ]*+)
^.:\\\\
^.:\\\\snapshot\\\\
^.[
^.[\\w.]+\\.in-addr.arpa:\\Q$options{zone}\\E:
^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\#\\\\]*
^.[^\\s\\w\\.$@\\'\\\"\\`\\/\\\\]*
^.\\\\
^.\\Q$label\\E$
^.\\Q$str\\E
^.{0,3}\\Q${filebase}\\E\\/?
^.{6}\\|([^\\\\]+)\\|([^\\\\]+)$
^.{8,}?(?P<tz>Z$| ?(?P<sign>\\+|-)(?P<hours>[0-9]{2}):?(?P<minutes>[0-9]{2})$)
^.+(
^.+(\\.[^./\\\\]+)$
^.+:\\s+(.*VBoxGuestAdditions(?:_
^.+?\\w(\\/|\\\\\\\\)
^.+\\\\
^.+\\\\([^\\\\]+)$
^.bundle([/\\\\]|$)
^/(
^/((
^/(.:(?:/|\\\\)?)
^/(.:[/\\\\])
^/(?<
^/(?<custom-page>(?-mix:[a-z0-9\\-_]+))$
^/(?P<a>.*?)/static/(?P<v>_\\d+\\.\\d+\\.\\d+/)?(?P<f>.*?)$
^/(?P<command>.*)
^/(?P<file>[^\\.]+(?:\\.html)?)$
^/(?P<id>\\d+)$
^/(?P<id>\\d+)/comment$
^/(?P<l>\\w+/)?static/(?P<v>_\\d+\\.\\d+\\.\\d+/)?(?P<f>.*?)$
^/(?P<namespace>[\\w\\-\\.]+)/(?P<name>[\\w\\-\\.]+)\\.git$
^/(?P<namespace>[^/]+)/1/$
^/(?P<pathComponents>\\d+)/(?P<vcs>git|hg)/(?P<scheme>http|https|git)/(?P<host>[a-zA-Z0-9.-]+)/(?P<path>.*)$
^/(?P<protocol>http|https):/
^/(?P<RE_LIKE>.+)/$
^/(?P<resource>.+?)/1/$
^/(?P<type>[a-z]+)/(?P<title>[^/]+)$
^/(?P<type>[a-z]+)/(?P<title>[^/]+)/(?P<id>[0-9a-f]{8})$
^/(?P<user>[\\w-]+)/(?P<slug>[\\w-]+)-(?P<post_id>\\d+)/?$
^/(?P<user>user/)?(?P<username>\\w+)(?:/videos)?/?$
^/(?P<video_id>[\\w-]+)/?$
^/([\\w]{2,4}/)?(
^/(\\w+)/:(
^/(api|katello/api)(/v[12])?/(?P<resource>\\w+).*
^'/*(?P<path>[a-zA-Z0-9][a-zA-Z0-9@._-]*(/[a-zA-Z0-9][a-zA-Z0-9@._-]*)*)'$
^//(\\s|\\t)+mojo( +\\#(?P<coll>[a-z]+)){0,1}( +\\+(?P<plural>[a-zA-Z]+)){0,1}
^//\\s*\\Q<![CDATA[\\E
^/:(
^/?(
^/?(?P<resource_name>([\\w\\-](?<!/))*)(?P<trailing_slash>/*)(?P<extended_path>.*)$
^/?(?P<username>[^/]+?)/(?P<repository>[^/#?&]+?)/?$
^/?\\Q$value\\E/?
^/?operators/(?P<operator_id>[0-9]+)/(preferences/|properties/)
^/@(?P<accountName>[a-zA-Z]+)$
^/[
^/[\\\\w\\\\d\\\\-\\\\_]+(/[\\\\w\\\\d\\\\-\\\\_]+)*$
^/\\*!40000 ALTER TABLE \\Q$name\\E DISABLE KEYS \\*/;
^/\\*\\s*\\Q<![CDATA[\\E\\s*\\*/
^/\\{http\\://www\\.alfresco\\.org/model/application/1\\.0\\}company\\_home/\\{http\\://www\\.alfresco\\.org/model/application/1\\.0\\}shared/.*
^/\\{http\\://www\\.alfresco\\.org/model/application/1\\.0\\}company\\_home/\\{http\\://www\\.alfresco\\.org/model/site/1\\.0\\}sites/\\{http\\://www\\.alfresco\\.org/model/content/1\\.0}([^/]*)/.*
^/\\Q$project_path\\E/
^/\\Q$self->{name}\\E/?
^/+\\Q$sprefix\\E[^/]+
^/+\\Q$tag\\E ( [^/]+ ) /
^/a(?P<a>\\d+)/b(?P<b>\\d+)/?$
^/assets/(?P<queryString>[a-zA-Z:0-9\\-]+)/(?P<filename>[a-zA-Z0-9\\-_\\./]+)$
^/audio/(?P<encrypted>([-_a-zA-Z0-9=]+))$
^/bonjour/(?P<name>[A-Za-z]+)$
^/builds/(?<project>
^/entries/(?P<id>\\d+)$
^/feeds/(?:base|api)/users/(?P<username>\\w+)/?
^/file/(?P<item_id>\\d+)/?$
^/functions/([0-9a-zA-Z\\:\\-\\_]+)(/.+)?$
^/greets/(?P<id>\\d+)$
^/hello/(?P<name>.+)$
^/hello/(?P<name>[^/]+)$
^/hello/(?P<name>[a-z]+)$
^/images/(?P<encrypted>([-_a-zA-Z0-9=]+))$
^/maps/place/(?P<name>[^/]+)/@(?P<coords>[0-9.-]+,[0-9.-]+),(?P<zoom>[0-9.]+)z
^/porady/[^/]+/(?P<playlist_id>\\d+)(-[^/]*)?/?$
^/private/tmp/[-:a-zA-Z0-9._]*:(?P<dno>[0-9]+)(\\.(?P<screen>[0-9]+))?$
^/quick/(Marshal.
^/sleep\\s+(?P<time>[\\d\\.]+)\\s*$
^/static/(?P<v>_\\d+\\.\\d+\\.\\d+/)?(?P<f>.*?)$
^/subscriptions/(?P<subscription>[^/]+)/resourceGroups/(?P<resourcegroup>[^/]+)/providers/[^/]+/[^/]+Accounts/(?P<account>[^/]+)$
^/trigger/(?<project>
^/usr/bin/(?!cygcrypt\\b)|^\\Q$system_root\\E/
^/v1/info/topics/(?P<topic>[A-Za-z0-9_-]+)/(?P<partition>[0-9]+)/?$
^/v1/info/topics/(?P<topic>[A-Za-z0-9_-]+)/?$
^/v1/jobs(/(?P<JobName>[^\\s\\/]+))?/(?P<id>job_[^\\s\\/]+)/replay$
^/v1/jobs/(?P<id>job_[^\\s\\/]+)$
^/v1/jobs/(?P<JobName>[^\\s\\/]+)$
^/v1/jobs/(?P<JobName>[^\\s\\/]+)/(?P<id>job_[^\\s\\/]+|random_id)$
^/v1/topics/(?P<topic>[A-Za-z0-9_-]+)/(?P<partition>[0-9]+)/?$
^/workers/(?P<id>\\d+)/logs/?$
^/workers/(?P<id>\\d+)/queue/?$
^/workers/(?P<id>\\d+)/status/?$
^:(
^:(!?
^:(?:[
^:(?:\\w+[\\!\\?\\@]?|\"(?:[^\"\\\\]|\\\\.)*\"?)
^:(?P<component>.+):$
^:(?P<full_tag>(?P<tag>[0-9]{2}|NS)(?P<sub_tag>[A-Z])?):
^:(?P<key>[\\w]+)(?:<(?P<regex>.+)>)?
^:(?P<nickname>.+?)\\!.+?\\s+PRIVMSG\\s+(?P<channel>#.+?)\\s+:\\s*(?P<message>.+?)\\s*$
^:(?P<port>[^:]+)$
^:(\\S+)!(\\S+)@(\\S+) MODE ((?:
^:(\\S+)!(\\S+)@(\\S+) PRIVMSG ((?:
^:[A-Za-z\\_\\-]+
^:\\S+ 311 \\S+ (
^:=|[-+*\\/%=<>&|!?\\\\]+
^:end(inline
^:param\\s+(?P<arg_name>[a-zA-Z0-9_]+):
^:raises\\s+(?P<name>[\\w\\d_]+)\\s*:\\s*(?P<description>.*)$
^:type\\s+(?P<arg_name>[a-zA-Z0-9_]+):
^;.+?[\\n\\z]
^-?(?:[_a-z]|(?:\\\\[\\da-f]+ ?))(?:[_a-z\\d\\-]|\\\\(?:\\\\[\\da-f]+ ?))*
^-?(?:\\d{1,3}+)?(?:(?:,\\d{3})++|\\d*+)(?:\\.\\d*+)?$
^-?(?:\\p{IsDigit}+(?:\\.\\p{IsDigit}*)?|\\.\\p{IsDigit}+)$
^-?([0-9]+)(\\Q$symbol\\E([0-9]+))?$
^???|??
^-?\n    (?:\n        (?P<hours>\\d+)h\n    )?\n    (?:\n        (?P<minutes>\\d+)m\n    )?\n    (?:\n        (?P<seconds>\\d+)s\n    )?$\n
^-?\\p{IsDigit}+\\p{IsWord}+$
^-?\\Q$Inf\\E$
^-?\\Q$key\\E$
^-?\\s*(?:(
^@(
^@(.?*)$|\\\\end\\{.*\\}
^@(?P<class>\\w+)\\(
^@(?P<class>\\w+)\\($
^@(?P<class>\\w+)\\(\"(?P<value>.*)\"\\)
^@(?P<code>.*?)@
^@([\\w\\\\]+)\\s*(.*?)\\s*$
^@(\\w+)(?:$|\\s((?:[^](?!^@\\w))*))
^@(\\w+)\\s+([\\w|\\\\]+)(?:\\s+(\\$\\S+))?(?:\\s+(.*))?
^@?(?P<username>(?:[a-z](?:[a-z0-9]|_(?!_)){3,}[a-z0-9])|(?:gif|vid|wiki|pic|bing|imdb|bold))$
^@?[\\d\\w\\_]+$
^@?\\p{Alnum}+(.\\p{Alnum}+)? != \\p{Alnum}+$
^@?\\p{Alnum}+(.\\p{Alnum}+)? == \\p{Alnum}+$
^@@ -(?P<beginOld>[0-9]+)(,(?P<endOld>[0-9]+))? \\+(?P<beginNew>[0-9]+)(,(?P<endNew>[0-9]+))? @@
^@@ -(\\d+)(?:,(\\d+))? \\+(?P<line_number>\\d+)(?:,(?P<line_count>\\d+))? @@
^@@ .+\\+(?P<line_number>\\d+),
^@@ [-+](?P<line>\\d+)(,\\d+)? [-+](\\d+)(,\\d+)? @@$
^@@\\s-(?P<beforestartline>\\d+)(,(\\d+))?\\s\\+(?P<afterstartline>\\d+)(,(\\d+))?\\s@@
^@@\\s+-(?P<start>\\d+)(?:,\\s*(?P<startrange>\\d+))?\\s+\\+(?P<end>\\d+)(?:,\\s*(?P<endrange>\\d+))?\\s+@@
^@[\\w\\\\]+\\z
^@[^]{0,2}
^@[a-zA-Z0-9\\.\\-\\_]*?
^@{[ $manager->config->ready_prefix ]}
^@{[ $options->{prefix} ]}
^@{[$t->{$method}]}$
^@domel\\.[a-zA-Z0-9\\-\\_]*$|^-@domel\\.[a-zA-Z0-9\\-\\_]*$|^-=@domel\\.[a-zA-Z0-9\\-\\_]*$|^\\+=@domel\\.[a-zA-Z0-9\\-\\_]*$|^@domel\\.[a-zA-Z0-9\\-\\_]*.%$|^-@domel\\.[a-zA-Z0-9\\-\\_]*.%$|^-=@domel\\.[a-zA-Z0-9\\-\\_]*.%$|^\\+=@domel\\.[a-zA-Z0-9\\-\\_]*.%$|^\\(@domel\\.[a-zA-Z0-9\\-\\_]*.\\)px$|^-\\(@domel\\.[a-zA-Z0-9\\-\\_]*.\\)px$|^-=\\(@domel\\.[a-zA-Z0-9\\-\\_]*.\\)px$|^\\+=\\(@domel\\.[a-zA-Z0-9\\-\\_]*.\\)px$
^@function\\s*(
^@globals\\.[a-zA-Z0-9\\-\\_]*$
^@header\\s+([\\w\\.\\\\]+(\\[\\s*\\])?)\\s*?(.*)$
^@index\\ *?\\<\\ *\\@params. ?[a-zA-Z0-9\\.\\-\\_]+$
^@index\\ *?\\<\\=\\ *\\@params. ?[a-zA-Z0-9\\.\\-\\_]+$
^@index\\ *?\\={2}\\ *\\@params. ?[a-zA-Z0-9\\.\\-\\_]+$
^@index\\ *?\\>\\ *\\@params. ?[a-zA-Z0-9\\.\\-\\_]+$
^@index\\ *?\\>\\=\\ *\\@params. ?[a-zA-Z0-9\\.\\-\\_]+$
^@param\\s+([\\w\\.\\\\]+(\\[\\s*\\])?)\\s*?(.*)$
^@params\\.[a-zA-Z0-9\\-\\_]*$|^-@params\\.[a-zA-Z0-9\\-\\_]*$|^-=@params\\.[a-zA-Z0-9\\-\\_]*$|^\\+=@params\\.[a-zA-Z0-9\\-\\_]*$|^@params\\.[a-zA-Z0-9\\-\\_]*.%$|-^@params\\.[a-zA-Z0-9\\-\\_]*.%$|^-=@params\\.[a-zA-Z0-9\\-\\_]*.%$|^\\+=@params\\.[a-zA-Z0-9\\-\\_]*.%$|^\\(@params\\.[a-zA-Z0-9\\-\\_]*.\\)px$|-^\\(@params\\.[a-zA-Z0-9\\-\\_]*.\\)px$|^-=\\(@params\\.[a-zA-Z0-9\\-\\_]*.\\)px$|^\\+=\\(@params\\.[a-zA-Z0-9\\-\\_]*.\\)px$
^@prefix\\s+(\\w+:\\s+
^@return\\s+([\\w\\.\\\\]+(\\[\\s*\\])?)\\s*?(.*)$
^[
^[ -!#-[\\]-\\u10FFFF]
^[ !#-[\\]-~]*\\z
^[- \\+\\\\]
^[ \\t\\*]*+([^\\s@].*)
^[ \\t\\n\\r\\\\]
^[ \\t\\v]*#.*?coding[:=][ \\t]*(?P<encoding>[-_.a-zA-Z0-9]+)
^[ \\t]*(
^[ \\t]*(#|)((?P<target>[^: ]*) *:|) *(?P<fullname>[a-zA-Z][^<]*) *<(?P<email>[^>]*)> *(\\\\(@(?P<username>[^\\\\)]+)\\\\)|).*$
^[ \\t]*(?:(?:<([^:]+:[^>]*)>)|(_:(?:[A-Za-z0-9]+)))[ \\t]+(?:<([^:]+:[^>]*)>)[ \\t]+(?:(?:<([^:]+:[^>]*)>)|(_:(?:[A-Za-z0-9]+))|(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"(?:(?:\\^\\^(?:<([^:]+:[^>]*)>))|(?:@([a-z]+(?:-[a-z0-9]+)*)))?))[ \\t]*(?:\\.|(?:(?:(?:<([^:]+:[^>]*)>)|(_:(?:[A-Za-z0-9]+)))[ \\t]*\\.))[ \\t]*(?:#.*)?$
^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[ =:]| )
^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )
^[ \\t]*(\\.\\.*|\\d+\\.|[a-zA-Z]\\.|[IVXivx]+\\))[ \\t]+(
^[ \\t]*(-|\\*\\**|\\u2022)[ \\t]+(
^[ \\t]*:(\\w+):[ \\t]+\n                            ($Org::Document::args_re)[ \\t]*(?:\\R|\\z)
^[ \\t]*^[ \\t]*[^#\\n]?[ \\t]*((?:source|\\.) .*Scripts[/\\\\]activate.*?)$
^[ \\t]*class[ \\t]+(
^[ \\t]*gemspec(?:\\(?[ \\t]*(?<opts>
^[ \\t]{4}*
^[ \\t]+(ib_)?outlet(_accessor)?[ \\t]+:(
^[ \\t]+(ib_)?outlet_collection(_accessor)?[ \\t]+:(
^[ \\t]+(ib_action)[ \\t]:(
^[ \\t]++$
^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~\\\"\\\\]*$
^[ ]*([0-9]{1,2})[-,/,\\\\]([0-9]{1,2})([-,/,\\\\]([0-9]{1,4}))?[ ]*$
^[ ]*([0-9]{1,2})[-,/,\\\\]([0-9]{1,2})([-,/,\\\\]([0-9]{1,4}))?[ ]*([0-9]{1,2})[:]([0-9]{1,2})([:][0-9]{1,2})?([ ]*((AM|PM)|(am|pm)))?[ ]*$
^[ ]*([0-9]{1,2})[-,/,\\\\]([0-9]{1,2})[-,/,\\\\]([0-9]{4})[ ]*([0-9]{1,2})[:]([0-9]{1,2})([:][0-9]{1,2})?([ ]*((AM|PM)|(am|pm)))?[ ]*$
^[ ]*:param([ ]+(?P<type>[\\w\\[\\]]+))?[ ]+(?P<name>\\w+):[ ]*(?P<doc>.*)$
^[ ]*:return([ ]+(?P<type>\\w+))?:[ ]*(?P<doc>.*)$
^[ ]{0,2}([ ]?\\_[ ]?){3,}[ \\t]*$
^[ ]{0,3}(
^[ ]{0,3}(?P<key>[A-Za-z0-9_-]+):\\s*(?P<value>.*)
^[ ]{0,3}\\_(.*?)$
^[ ]{4,}(?P<value>.*)
^[ ]{4}\\(from (?P<src>.+)\\)$
^[- A-Za-z0-9_()\\[\\]*+=,.:\\@\\\\]{8,}$
^[!#$%&*-[\\]-~]
^[-!#$%&*-[\\]-~]$
^[!#$&-;=?-[\\]_a-z~%]+$
^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+
^[#.](?:[\\w-]|\\\\(?:[a-fA-F0-9]{1,6} ?|[^a-fA-F0-9]))+
^[#-[]
^[#\\w\\d\\\\]+;
^[$_\\p{L}][$_\\p{L}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]*+$
^[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$
^[$from->[0]]+
^[$self->{first_unsupported_version}-Z]\\t
^[$self->{valid_filename_char}]*$
^[%+~A-Za-z0-9\\-\\_\\(\\)\\:\\\"\\'\\]\\=\\^\\.\\#\\[\\s]+$
^[&!#+][\\pL\\pN]{1,63}$
^[(]((?:[^ ()]++|[(][^ )]+[)])++)(?:[ ]+(\"[^\"]*\"|'[^']*'))?[)]
^[(]\\s*+((?:[^ ()]++|[(][^ )]+[)])++)(?:[ ]+(\"[^\"]*\"|'[^']*'))?\\s*[)]
^[(]\\s*+((?:[^ ()]++|[(][^ )]+[)])++)(?:[ ]+(\"[^\"]*+\"|'[^']*+'))?\\s*+[)]
^[*/\\\\]+
^[*-[]
^[*]?\\s+(?P<name>.+)$
^[.\\/\\\\]
^[-.]?(?P<name>(pre|rc|alpha|beta|))(?P<number>\\d+)$
^[.][.][/\\\\]
^[.]{0,2}[/\\\\]
^[/\\\\]
^[/\\\\]$name$
^[/\\\\]((?:@[^/\\\\]+[/\\\\])?[^/\\\\]+)([/\\\\]?(.*))
^[/\\\\]*$
^[/\\\\].*
^[/\\\\].+$
^[/\\\\]?(?:[^/\\\\]+[/\\\\])?Build\\.PL$
^[/\\\\]?(?:[^/\\\\]+[/\\\\])?Makefile\\.PL$
^[/\\\\]+
^[/^\\\\A]*(.*?)[/\\$\\?\\\\z]*$
^[/|\\\\].*?[/|\\\\]((src|node_modules)[/|\\\\].*)
^[@](?P<name>[A-Z0-9]{1,63})$
^[@]?(?:
^[@{}\"=,\\\\]$
^[[:alpha:]\\_][[:word:]\\-\\.]*$
^[[:alpha:]\\_]{1}[[:word:]]{0,$maxLength}$
^[[:alpha:]\\_]{1}[[:word:]]{0,15}$
^[[:lower:]0-9\\_]
^[\\\"\\\\]$
^[\"\\'](?P<noquotes>.+)[\"\\']$
^[\"\\n\\\\]
^[\\$@%\\\\]
^[\\$\\>\\:\\#\\%%]*\\s*(?P<cmd>(sudo\\s+|)[a-z0-9][a-z0-9\\-]*\\s.+$)
^[\\(\\\"]+(\\^)?([a-z0-9\\_\\-\\s]+)(\\$)?[\\)\\\"]+$
^[\\(\\)!@#$%^&*\\+\\=\\-\\_\\[\\]\\{\\}\\.\\,\\?\\/\\']+$
^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]
^[\\(\\|\\)\\*\\+\\?\\[\\]\\\\]$
^['\\.,/@%&;:(){}\\[\\]_\\-+\\\\]
^[\\.\\/\\\\]+
^[\\.\\/\\\\]+$
^[\\.\\-\\_\\/a-zA-Z0-9]+$
^[\\.\\_\\d]+
^[\\.\\_]
^[\\-.+*?()\\[\\]/\\\\]$
^[\\.a-z0-9:_\\-\\/-\\\\*]+$
^[\\/\\\\]
^[\\/\\\\]*
^[\\/\\\\]/([a-zA-Z]\\:)
^[\\/\\\\]?$
^[\\/\\\\][\\/\\\\]
^[\\/\\\\]\\.webpack($|[\\/\\\\]).*$
^[\\/\\\\]{2}
^[\\/\\\\]|^\\w:
^[\\/\\\\]+
^[\\/\\\\A-Z0-9]$
^[\\/\\\\A-Za-j]$
^[\\/\\\\A-Za-j][!-|]{8}[!-{}][ -|]{3}
^[\\/\\\\A-Za-j]{1}[\\x21-\\x7b]{8}[\\x21-\\x7b\\x7d]{1}[\\x20-\\x7b]{3}
^[\\\\\\/]?(config|upload|nodeLib\\/html)([\\/\\\\])*
^[\\\\/]\\Q$dv
^[\\/|\\\\]
^[\\/|\\\\]\\w*$
^[\\/a-z\\-\\_\\.]+
^[\\:\\.\\#]?([A-Za-z\\_][\\w\\-]*)(\\:[A-Za-z\\_][\\w\\-]*)?
^[\\?\\'\\:\\,\\\"\\.\\!\\(\\)\\-\\_]|[\\?\\'\\:\\,\\\"\\.\\!\\(\\)\\-\\_]$
^[\\@A-Za-z0-9\\!\\#\\$\\%\\^\\&\\*\\~\\{\\}\\[\\]\\.\\,\\<\\>\\(\\)\\_\\+\\=]{4,30}$
^[\\-\\;\\/\\?\\!\\:\\@\\&\\=\\+\\$\\,\\_\\.\\~\\*\\\\\\'\\(\\)\\[\\]]$
^[\\-\\;\\/\\?\\:\\@\\&\\=\\+\\$\\,\\_\\.\\~\\*\\\\\\'\\(\\)\\[\\]]$
^[\\-\\_]$
^[\\-\\_a-z0-9]*$
^[\\-\\~\\`\\!\\@\\#\\$\\%\\^\\&\\(\\)\\=\\+\\{\\}\\[\\]\\|\\'\\;\\?\\/\\>\\<\\.\\,A-Za-z0-9\\_]+$
^[\\\\]
^[\\\\]?#$
^[\\\\]?\\&
^[\\]\\\\]
^[\\\\]+
^[\\\\]+-.*$
^[\\_ ]*CR\\s*$
^[\\_$a-z][\\_$a-z0-9]*(\\[.*?\\])*(\\.[\\_$a-z][\\_$a-z0-9]*(\\[.*?\\])*)*$
^[\\_A-za-z]\\w*$
^[\\\\{0,1}\\/{0,1}]([^\\/^\\\\]+)
^[\\+\\-\\*/&|\\^~<>!@'\\\\]
^[\\8]*$
^[\\A-Z]
^[\\c$]$
^[\\c%]*$
^[\\c:]*$
^[\\c]$
^[\\c0]*$
^[\\c1]$
^[\\c1]*$
^[\\c11]*$
^[\\c2]*$
^[\\c3]*$
^[\\c4]*$
^[\\c5]*$
^[\\c6]*$
^[\\c7]*$
^[\\c8]*$
^[\\c9]*$
^[\\d\\.\\_]{1,10}$
^[\\d\\w\\.\\-\\@\\_]+$
^[\\\\d\\\\w\\\\.\\\\-\\\\_].+$
^[\\d\\w\\_\\/\\\\\\.\\-\\:]*$
^[\\d]{7,}(?:\\_[a-z0-9]+)*$
^[\\d]|[^a-zA-Z\\d\\_\\$\\xA0-\\uFFFF]+?
^[\\d]+[\\_\\-]
^[\\d]+\\.[\\d]+\\.[\\d]+([[:alnum:]\\.\\-\\_]+)?$
^[\\d]+\\_
^[\\da-z]+[\\da-z\\-\\_]*[\\da-z]+$
^['\\n\\\\]
^[\\N{SPACE}\\N{NUL}\\N{LINE FEED}\\N{CARRIAGE RETURN}\\N{SUB}]+
^[\\n|\\r\\n]*(?P<fence>---)?[\\n|\\r\\n]*(?P<metadata>.+?)[\\n|\\r\\n]*---[\\n|\\r\\n]*(?P<content>.*)[\\n|\\r\\n]*
^[\\p{Alnum}\\p{InGreek}\\,\\[\\]\\+\\-\\(\\)]+$
^[\\p{Alnum}\\s\\.]+$
^[\\p{Alnum}\\s]+$
^[\\p{Alpha}\\s]+$
^[\\p{ascii}\\w\\s]+$
^[\\p{Bc:R}\\p{Bc:AL}]
^[\\p{Cyrillic}\\s\\p{P}]*$
^[\\p{Digit}\\s\\.]+$
^[\\p{Han}\\-_]+$
^[\\p{Han}]+$
^[\\p{Han}a-zA-Z0-9_.-]+$
^[\\p{ID_Start}\\$_]\n\t            [\\p{ID_Continue}\\$_]*\n\t          \\z
^[\\p{InGreek}]+$
^[\\p{IsC} ]+
^[\\p{IsLower}]
^[\\p{IsPrint}\\n]*\\z
^[\\p{IsPrint}\\s]*$
^[\\p{javaWhitespace}\\p{gc=Cc}]+
^[\\p{L}\\d\\_\\-\\.\\:\\\\\\/]+$
^[\\p{L}]([0-9\\p{L}\\.\\-\\_]+)?$
^[\\p{Latin}\\p{Common}\\p{Inherited}]+
^[\\p{Latin}\\p{Greek}\\p{Cyrillic}\\p{Hebrew}\\p{Armenian}\\p{Georgian}\\p{Common}]*$
^[\\p{Latin}\\s\\p{P}]*$
^[\\p{Mn}\\p{Me}\\p{Cf}\\x{1160}-\\x{11ff}\\x{200b}]
^[\\p{Punct}\\p{Cyrillic}\\p{Latin}]*$
^[\\p{Punct}\\p{Space}\\p{Latin}]*$
^[\\p{Punct}]+$
^[\\p{Script=Common}\\p{Letter}\\s\\w\\@_:!-~]{0,300}$
^[\\p{Upper}]+$
^[\\p{Word}]
^[\\pC\\pZ]\\z
^[\\pL .-]+$
^[\\pL\\.\\-\\_\\d+]+$
^[\\pL\\d[:blank:]._-]*$
^[\\pL\\d\\s]+$
^[\\pL\\d]*$
^[\\pL\\pM\\pN]+$
^[\\pL\\pM\\pN_\\s-]+$
^[\\pL\\pM\\pN_-]+$
^[\\pL\\pM]+$
^[\\\\pL\\\\pN!//$%&'\\\\(\\\\)`\\\\-@^_\\\\{\\\\}~+,.;=\\\\[\\\\]]+$
^[\\pL\\pN\\-\\_]++$
^[\\pL\\pN\\p{Latin}]+.+
^[\\\\pL\\\\pN\\\\pP\\\\pS]{1,32}$
^[\\pL\\pN\\pP\\pS]{1,32}$
^[\\pL\\pN]+$
^[\\pL\\pN]++$
^[\\pL\\pN_\\?@$\\(\\)]+$
^[\\pL\\pN_-]+$
^[\\pL\\s\\d\\-\\/\\,\\\u060c\\.\\\\\\x{200c}\\x{064b}\\x{064d}\\x{064c}\\x{064e}\\x{064f}\\x{0650}\\x{0651}\\x{6F0}-\\x{6F9}]+$
^[\\pL\\s\\x{200c}\\x{064b}\\x{064d}\\x{064c}\\x{064e}\\x{064f}\\x{0650}\\x{0651}]+$
^[\\pL\\s]+$
^[\\pL]+$
^[\\pL_][\\d\\pL\\pM_.-]*$
^[\\pL_][\\pL_\\pN]+$
^[\\pL_][\\pL0-9._:-]*$
^[\\pL_][\\pL0-9._-]*$
^[\\pL0-9\\,\\s\\.\\-\\:\\=\\;\\?\\!\\%\\)\\(\\@\\/\\n\\r]{1,140}$
^[\\pL0-9\\,\\s\\.\\-\\:\\=\\;\\?\\!\\%\\)\\(\\@\\/\\n\\r]{1,20}$
^[\\\\pL0-9\\\\,\\\\s\\\\.\\\\-\\\\:\\\\=\\\\;\\\\?\\\\!\\\\%\\\\)\\\\(\\\\@\\\\/]{1,512}$
^[\\pL0-9]+$
^[\\pL0-9_-]+$
^[\\pN\\pL\\/\\._-]+$
^[\\pZ\\p{Cc}]+|[\\pZ\\p{Cc}]+$
^[\\pZ\\pC]+
^[\\pZ\\pC]+|[\\pZ\\pC]+$
^[\\pZ\\s]+$
^[\\Q[]{}\\E]$
^[\\Q}]\\E]$
^[\\s
^[\\s]*(?P<hint>([\\w\\|_\\\\]+)[\\s]+)*[\\s]*\\$(?P<name>[\\w\\|_\\\\]+)?(?:[\\s]*=[\\s]*)?(?P<default>.*)
^[\\s]*(?P<path>[^?\\s]+)(\\?(?P<kwargs>.+))?
^[\\s]*(?P<schema>[^:\\s]+):[/\\\\]*(?P<path>[^?]+)(\\?(?P<kwargs>.+))?[\\s]*$
^[\\s]*(\\[
^[\\s]*{{[\\s]*import[\\s]+\"(?P<file>[\\S]*)\"[\\s]*}}[\\s]*$
^[\\s_,:.;\\/\\\\]+
^[-\\s`'\")\\]}>/:.,;!?\\\\_]
^[\\\\\\s+|-]*(?P<group_id>[^:]+):(?P<artifact_id>[^:]+):[^:]+:(?P<version>[^:\\s]+)
^[\\t ]*ipfilter\\_([^ \\t]+)[ \\t][ \\t]*([^\\n]+)(?:\\n|$)
^[\u00010-9\\.a-zA-Z\\\\|\\s\\@\\_\\/\\?\\&\\=\\%\\+\\-,\\^\\:\\[\\]\\{\\}\\$\\\"\\;\\<\\>\\*\\~\\\u00c2\u00a3]+$
^[\\u0020\\t\\n\\r]*(?:([,:\\[\\]{}]|true|false|null)|(-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)|\"((?:[^\\r\\n\\t\\\\\\\"]|\\\\(?:[\"\\\\\\/trnfb]|u[0-9a-fA-F]{4}))*)\")
^[\\w
^[\\w\\$\\pL]$
^[\\w\\.\\_]+@honk\\.com$
^[\\w\\-.]++$
^[\\w\\-\\_\\.\\d]+$
^[\\w\\-\\_]+$
^[\\w\\\\]+$
^[\\w\\\\]+\\z
^[\\w\\_\\-\\ ]{1,32}$
^[\\w\\_\\-]{1,32}$
^[\\w\\_\\-]+
^[\\w\\\\_]*(::|->)[\\w\\d_]+
^[\\w\\_]+$
^[\\w\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\_\\=\\+\\[\\]\\{\\}\\|\\;\\:\\'\\\"\\,\\<\\.\\>\\/\\?]+$
^[\\w\\d:\\.\\_\\-]+$
^[\\w\\d\\.\\_\\%\\+\\-]+@([\\w\\d\\.\\-]+\\.\\w{2,5})$
^[\\\\w\\\\d\\\\_][\\\\w\\\\d\\\\-\\\\_\\\\.]*$
^[\\w\\d\\_]+$
^[\\w\\d\\_]+\\=('[^\\'\\r\\n]+'|\\d+)$
^[\\w\\d\\_]+\\s?\\=\\s?(.*)$
^[\\w\\p{ascii}\\s]*$
^[\\w\\s\\*\\.\\?\\+\\:\\_\\\\]+$
^[\\x0-\\x7f]*$
^[\\x00-\\x40\\xA8\\B8\\x80-\\xFF]+$
^[\\x{0600}-\\x{06FF}]
^[\\x09\\x0A\\x0D\\x20-\\x7E\\x80-\\xFF]*+\\z
^[\\x{9}\\x{A}\\x{D}\\x{20}-\\x{7E}\\x{A0}-\\x{D7FF}\\x{E000}-\\x{FFFD}\\x{10000}-\\x{10FFFF}]*$
^[\\x{10000}-\\x{10ffff}]$
^[\\x20\\t\\n\\r]*(?:([,:\\[\\]{}]|true|false|null)|(-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)|\"((?:[^\\r\\n\\t\\\\\\\"]|\\\\(?:[\"\\\\\\/trnfb]|u[0-9a-fA-F]{4}))*)\")
^[\\x20\\t\\r\\n\\f]+|((?:^|[^\\\\])(?:\\\\.)*)[\\x20\\t\\r\\n\\f]+$
^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]*+$
^[\\x26-\\x7f][\\x26-\\x61][\\x1c-\\x7f]{2}[\\x1c-\\x7d][\\x1c-\\x7f][\\x21-\\x7b\\x7d][\\/\\\\A-Z0-9]
^[\\x{4e00}-\\x{9fa5}A-Za-z0-9\\-\\_]+$
^[\\xd\\xa]+
^[]
^[]$
^[-]*[\\\\]+.
^[^
^[^ \\/\\\\]{1,20}$
^[^ +-\\\\]
^[^#\\\"\\\\]*(?:(?:\\\\.|#(?!\\{))[^#\\\"\\\\]*)*
^[^#\"\\\\]*(?:(?:\\\\\\\\.|#(?!{))[^#\"\\\\]*)*
^[^#]*\\b(
^[^#]*config\\.cache_classes\\s?*=\\s?*true
^[^#]*config\\.eager_load\\s?*=\\s?*true
^[^${}\\\\_^]
^[^$self->{dlm}]+$self->{dlm}
^[^%]*(?:\\\\include|\\\\input)\\s*\\{([^\\}]*)\\}
^[^%]*\\\\includegraphics[^%]*\\.(?:pdf|png|gif|jpg)\\s?\\}
^[^%]*\\\\label\\{([^\\}]*)\\}
^[^%]*\\\\pdfoutput(?:\\s+)?=(?:\\s+)?1
^[^()<>@,;:\\\\\"/[\\]?={}\\x01-\\x20\\x7F]*+$
^[^()<>@,;:\\\\\"/[\\]?={}\\x01-\\x20\\x7F]++$
^[^/\\\\.~][^/\\\\]*$
^[^/\\\\]*$
^[^/\\\\]+$
^[^/]|[^/]$|/\\.{1,2}|\\\\|\\||:|\\?|\\*|\\\"|<|>|\\p{Cntrl}
^[^/]+/\\Q$name\\E$
^[^:]+:\\\\
^[^@]++@
^[^\"\\\\]
^[^\"]*(\"[^\"]*\"[^\"]*;?)*\\K[\\t ]*$comment.*
^[^\"]*(\"[^\"]*\"[^\"]*;?)*\\K[\\t ]*$comment.*$escape
^[^\"]*(\"[^\"]*\"[^\"]*;?)*\\K[\\t ]*$comment.*[^$escape]
^[^\\.]+(?P<d1>\\.[[:alnum:]]+)(-in-[^\\.]+(?P<d2>\\.[[:alnum:]]+))?
^[^\\/?*:\";<>()|{}\\\\]+$
^[^\\/\\\\]*[\\/\\\\]?$
^[^\\/\\\\]+
^[^\\/]*(?P<path>(\\/[^\\/]*)+)$
^[^\\/]*\\/$|^[^\\\\]*\\\\$
^[^\\:]++(\\:[^\\:]++)*$
^[^\\-\\]\\-$mtest$
^[^\\\\]
^[^'\\\\]
^[^-\\\\]
^[^\\\\](\\]|\\|)$
^[^\\]\\\\]+
^[^\\\\]\\|$
^[^\\\\]\\=\\]$
^[^\\\\]+\\\\
^[^\\|\\p{Cntrl}]+$
^[^\\+\\-\\s@\\\\]
^[^\\0-\\x1F\"\\\\]
^[^\\0-\\x1F\"'\\\\]
^[^\\n]+ called at ${\\__FILE__} line [0-9]+\\n.*
^[^\\n]+\\K\\n\\n.*
^[^\\n}]*(?:#[^\\n]*)?(?:[\\n\\t ]+)*\\n(?P<body_indent>[ \\t]*)
^[^\\p{Alnum}\\'\\\"\\s]*
^[^\\p{Alpha}]*$
^[^\\pL\\d\\s#\"]+
^[^\\pL\\d\\s#]+
^[^\\pL]$
^[^\\s\\\\]$
^[^\\x00-\\x08\\x0B\\x0E-\\x1A\\x1C-\\x1F\\x7F]*+$
^[^\\x00-\\x20<>\"{}|^`\\\\]*$
^[^]
^[^]*$
^[^]*?var\\s+AnimEvent\\s*=\\s*([^]*)\\s*;\\s*$
^'[^']*+'$
^[^_\\-](?:[A-Za-z0-9\\-\\_]*)[_](.*)$
^[^<]*+(?:<[^>]*+>[^<]*+)*+$
^[^<>\"{} | ^\\\\]
^[^<>\"{}|\\^`\\\\]
^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>
^[^0-9]*(?P<coord>[0-9]+)[^0-9]*$
^[^a-zA-Z$\\_]
^[_\\p{XID_Start}]$
^[_\\p{XID_Start}]\\p{XID_Continue}*
^[_\\\\pL][_\\\\pL\\\\p{Nd}]*$
^[__]\\w{14}+[_ = ]+
^[~|\\.|\\/|\\\\]
^[+-\\d]+$
^[+]?(
^[+-]?[0-9]{2}\\.[0-9]{3}\\.[0-9]{3}\\/[0-9]{4}-[0-9]{2}+$
^[+-]?[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}+$
^[+-]?[0-9]++$
^[+-]?[0-9]++(?:[.][0-9]++)?$
^[+-]?0x\\h+$
^[+0]?(
^[0-
^[0-9 :-]++$
^[0-9\\.a-zA-Z\\\\|\\s\\@\\_\\/\\?\\&\\=\\%\\+\\-,\\^\\:\\[\\]\\{\\}\\$\\\"\\;\\<\\>\\*\\~\\\u00c2\u00a3]+$
^[0-9\\\\i\\0]$
^[0-9\\p{Punct}]+$
^[0-9\\u0430-\\u044f\\u0451\\u005c\\u005cs\\u005c\\u005c.,\\u005c\\u005c-;\\u005c\\u005c/\\u005c\\u005c(\\u005c\\u005c)]{1,255}$
^[0-9][0-9\\\\.e-+]*$
^[0-9]{10}+$
^[0-9]{11}+$
^[0-9]{201}+$
^[0-9]{3} (?P<datetime>[0-9]{14})$
^[0-9]{3} (?P<size>[0-9]+)$
^[0-9]{3}-[0-9]{4}+$
^[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}+$
^[0-9]{4}\\.[0-9]{4}\\.[0-9]{4}+$
^[0-9-]{454}+$
^[0-9]{7}+$
^[0-9]{9}+$
^[0-9]+ \\\\[(?P<Priority>[A-Z][a-z]+)\\\\] 
^[0-9]+ vCPUs?, [0-9]+ GB RAM, and (?P<gpu_cores>[0-9]+) dies? of (?P<gpu_type>.+) with (?P<gpu_ram>.+) of RAM
^[0-9]++%$
^[0-9a-f]{40} refs/remotes/(?P<git_remote_name>[^/]+)/(?P<git_tag>.+)$
^[0-9a-f]+@(?P<title>.+)$
^[0-9A-Fa-f]{8}{0,2}$
^[0-9a-z\\-\\_]+$
^[0-9a-z\\+\\-\\_\\/\\&\\=\\#\\.\\,\\;\\%\\s\\!]*$
^[0-9a-z\\+\\-\\_\\/\\?\\&\\=\\#\\.\\,\\;\\%\\s\\!]*$
^[0-9a-zA-Z \\.-\\_@]{1,30}
^[0-9a-zA-Z$\\.\\_]+
^[0-9a-zA-Z\\.\\-\\_]+$
^[0-9a-zA-Z\\.\\-\\_]+\\@[0-9a-zA-Z\\.\\-]+$
^[0-9a-zA-Z\\-\\.\\_\\~]{43,128}$
^[0-9a-zA-Z\\-\\.\\_]+$
^[0-9A-Za-z\\-\\;\\/\\?\\:\\@\\&\\=\\+\\$\\,\\_\\.\\!\\~\\*\\'\\(\\)\\[\\]\\%]$
^[0-9A-Za-z\\-\\_\\,\\ ]+$
^[0-9A-Za-z\\-\\_]$
^[0-9a-zA-Z\\-\\_]*\\.
^[0-9a-zA-Z\\\\-\\\\_]{0,500}$
^[0-9a-zA-Z\\-\\_]{1,30}$
^[0-9a-zA-Z\\-\\_]{3,}$
^[0-9a-zA-Z\\-\\_]+$
^[0-9A-Za-z\\_\\.]{0,50}$
^[0-9A-Za-z\\_\\-]{1,63}$
^[0-9a-zA-Z\\_]$
^[0-9A-Za-z\\_]$
^[0-9a-zA-Z\\_]*$
^[0-9a-zA-Z\\_]{1,64}$
^[0-9a-zA-Z\\_]+$
^--[0-9A-Za-z\\s'\\/\\+\\_\\,\\-\\.\\:\\=\\?]+
^[0-9A-Za-z\\u3400-\\u4DB5\\u4E00-\\u9FA5\\u9FA6-\\u9FBB\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFF00-\\uFFEF\\u2E80-\\u2EFF\\u3000-\\u303F\\u31C0-\\u31EF\\`\\ \\~\\!\\@\\$\\#\\%\\^\\&\\(\\)\\-\\_\\=\\+\\[\\{\\]\\}\\'\\,\\.\\\u00b7\\\u2026\\\u201c\\\u2018\\\u2019\\\u201d\\\u00d7\\\u2014]+$
^[0-9a-zA-Z]([0-9a-zA-Z.\\_-]{0,}[0-9a-zA-Z_])?$
^[0-9a-zA-Z]+\\.$fmnem\\_
^[0-9a-zA-Z_\\$\\\\]$
^[2-9][0-9]{7}+$
^[A-$self->{last_supported_version}]\\t
^[abfrntv'\"\\\\]
^[AM]+\\s+(?P<name>.*\\.py)
^[a-z\\$\\_]
^[a-z\\_]
^[a-z\\_][a-z0-9\\_^\\n\\r]*$
^[a-z\\_]+$
^[A-Z\\_]+$
^[a-z\\_0-9]+$
^[A-Z\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+]$
^[a-z\\d\\-\\_]+$
^[a-z]*://(?:[^/]*(?:
^[a-z]*://.*\\b(?:
^[a-z]*://[^/]*(?:
^[a-z]*://[^/]*\\b(?:
^[a-z]*://[^/]+\\.(?!(?:
^[a-z]:(?![/\\\\])
^[A-Z]:(?![^/\\\\])
^[a-z]:(?:[\\/\\\\][-.~\\w]+)+$
^[a-z]:[/\\\\]
^[A-Z]:[/\\\\]|^\\\\\\\\
^[A-Z]:[/\\\\]+
^[A-Z]:[\\/\\\\]
^[A-Z]:[\\/\\\\]|^\\\\\\\\
^[a-z]:[\\/|\\\\]{1}.+
^[a-z]:\\\\
^[A-Z]:\\\\
^[A-Z]:\\\\?[^\\\\]+$
^[a-z][\\w\\\\]*$
^[a-z][a-z\\-\\_\\d\\.]*$
^[a-z][a-z0-9\\$\\#\\_\\.]*$
^[a-z][a-z0-9\\-\\_:\\.]*$
^[A-Z][a-zA-Z0-9\\_]*$
^[a-z][a-zA-Z0-9\\_]*$
^[A-Z][A-Za-z0-9\\_]+$
^[A-Z]\\:[/\\\\]
^[a-z]\\:[\\/\\\\]
^[a-z]\\:\\\\
^[A-Z]{1,2}:[\\/\\\\]([\\w]+)
^[a-z]{2}([\\-\\_][a-z]+)?$
^[a-z]+:[/\\\\]?$
^[a-z]+\\:\\\\
^[a-z]++(-[A-Z][a-z]{3})?(-([A-Z]{2}|[0-9]{3}))?$
^[a-z]++:
^[A-Z_][A-Z\\d\\_]*$
^[a-z0-9!
^[A-Z0-9._%+-]++@(?:[A-Z0-9-]++\\.)++[A-Z]{2,}+$
^[a-z0-9\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+(?:\\.[a-z0-9\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+)*@(?:[a-z0-9](?:[a-z0-9\\-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9\\-]*[a-z0-9])?$
^[a-z0-9\\%\\.\\-\\_]+$
^[a-z0-9\\.\\/\\-\\_]*$
^[a-z0-9\\.\\-\\_\\s\\/]+$
^[a-z0-9\\-\\.\\_\\~\\:\\/\\?\\#\\[\\]\\@\\!\\$\\&'\\(\\)\\*\\+\\,\\;\\=\\%]+$
^[a-z0-9\\-\\.\\_]+$
^[a-z0-9\\-\\_\\.\\,\\;\\:\\@\\/\\s]+$
^[a-z0-9\\-\\_\\.\\+\\@]+$
^[a-z0-9\\-\\_\\.]
^[a-z0-9\\-\\_\\/\\+]+$
^[a-z0-9\\-\\_\\/]+$
^[a-z0-9\\-\\_\\+\\=\\#\\,\\s]+$
^[a-z0-9\\-\\_]{1,64}$
^[a-z0-9\\-\\_]+$
^[a-z0-9\\\\]+$
^[a-z0-9\\_\\.]+$
^[a-z0-9\\_\\-\\$]+$
^[a-z0-9\\_\\-\\.\\/]+$
^[a-z0-9\\_\\-\\.]+$
^[a-z0-9\\_\\]+$
^[a-z0-9\\_\\-]+$
^[a-z0-9\\_]+$
^[a-z0-9\\_]+(\\.[a-z0-9\\_]+)*$
^[a-z0-9\\_]+\\:
^[a-z0-9\\_]+\\:[^\\s]+$
^[a-z0-9][a-z0-9\\_\\-]*$
^[a-z0-9][a-z0-9\\_]*$
^[a-z0-9][a-z0-9_\\\\]+$
^[A-Z0-9-]{118}+$
^[a-z0-9-]{118}+$
^[a-z0-9]{200}+$
^[A-Z0-9]{200}+$
^[a-z0-9]{50}+$
^[A-Z0-9-]{50}+$
^[a-z0-9]+([a-z\\-\\_0-9]+|(__)?)[a-z0-9]+$
^[a-z0-9]+[a-z0-9\\-\\_\\.]*([\\/\\\\]{1}[a-z0-9]+[a-z0-9\\-\\_\\.]*)*$
^[a-z0-9]+[a-z0-9\\-\\_]*$
^[a-z0-9-_[^\\p{ASCII}]]{2,100}$
^[a-z0-9_\\\\]+$
^[-a-z0-9_\\\\]+$
^[-a-z0-9_]++$
^[A-Z0-9|]{21}+$
^[-a-z0-9+.]++://[^/]++/?
^[a-z0-9A-Z\\p{Han}]+(_[a-z0-9A-Z\\p{Han}]+)*$
^[a-z0-9A-Z_\\$\\\\]$
^[A-Za-z \\-\\,\\.\\'\\?\\!\\:\\%\\+\\=\\_\\@\\;\\#\\*\\(\\)<>\\[\\]\\/\\\"]*$
^[a-zA-Z\\$\\_]+[\\d\\w\\$\\_]*$
^[a-zA-Z\\:\\_][\\w\\d\\_\\-\\:\\.]$
^[A-Za-z\\-\\_\\.\\~]{3,25}$
^[a-zA-Z\\-\\_]{1}[a-zA-Z0-9\\-\\_]*$
^[a-zA-Z\\-\\_]+$
^[A-Za-z\\_\\.]{0,50}$
^[A-Za-z\\_\\:]$
^[a-zA-Z\\_\\-\\.]+\\*?$
^[A-Za-z\\_]$
^[a-zA-Z\\_][\\w\\.\\-_]+$
^[A-Za-z\\_][A-Za-z\\-\\_\\d]*\\b
^[a-zA-Z\\_]+(\\.[a-zA-Z\\_]+)*$
^[a-zA-Z\\p{Cyrillic}0-9]+$
^[a-zA-Z\\p{Han}\\-_]+$
^[a-zA-Z\\p{Han}]+$
^[A-Za-z\u00c0-\u00df\u00e0-\u00ff0-9\\$\\(\\)\\-\\;\\ \\_\\,\\+\\*\\[\\]\\{\\}\\'\\\"\\;\\:\\%\\@\\!\\#\\~\\.\\,\\`\\\\\\/]+$
^[a-zA-Z\\u{C0}-\\u{FF}\\u{D8}-\\u{F6}\\u{F8}-\\u{2C6}\\u{2C8}-\\u{2D7}\\u{2DE}-\\u{2FF}\\u{1E00}-\\u{1EFF}]+$
^[A-Za-z\\w\\d\\-\\_]+$
^[a-zA-Z]:([^\\\\].*)?$
^[A-Za-z]:?(/|\\\\).*
^[a-zA-Z]:[/\\\\]
^[A-Za-z]:[/\\\\]
^[a-zA-Z]:[/\\\\].*
^[A-Za-z]:[\\/\\\\]
^[a-zA-Z]:[\\/\\\\]
^[a-zA-Z]:[\\/\\\\]+
^[a-zA-Z]:\\\\
^[A-Za-z]:\\\\
^[a-zA-Z]:\\\\\\\\
^[a-zA-Z]:\\\\[\\\\\\S|*\\S]?.*$
^[a-zA-Z]:\\\\|^\\\\\\\\
^[a-zA-Z][\\w\\.\\_\\-]*\\@[\\w\\.\\-]+\\.[a-zA-Z]{2,4}$
^[a-zA-Z][\\w\\_\\-]+[a-zA-Z]$
^[a-zA-Z][A-Za-z0-9-\\\\.\\\\_]{0,61}[a-zA-Z]$
^[a-zA-Z][a-zA-Z0-9\\-\\.\\:\\_]*$
^[A-Za-z][A-Za-z0-9\\-\\_\\:\\.]*$
^[a-zA-Z][a-zA-Z0-9\\-\\_]*$
^[A-Za-z][A-Za-z0-9\\_\\$]*$
^[A-Za-z][A-Za-z0-9\\_\\:\\.\\-]*$
^[a-zA-Z]\\:(?!\\\\)
^[a-zA-Z]\\:\\\\
^[a-zA-Z]{1,1}:(/|\\\\).*
^[a-zA-Z]{2}(\\_[a-zA-Z]{2})?\\.txt$
^[A-Za-z]{201}+$
^[a-zA-Z]+(\\_*[a-zA-Z0-9]+)*
^[a-zA-Z]+[0-9a-z\\_]*$
^[a-zA-Z]+[a-zA-Z0-9\\_]{0,}$
^[a-zA-Z_\\x7f-\\xff\\\\][a-zA-Z0-9_\\x7f-\\xff\\\\]*$
^[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff\\\\]*$
^[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*+(?:\\\\[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*+)*+$
^[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*+(?:\\\\[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*+)++$
^[A-Za-z_][0-9A-Za-z_\\Q$more\\E]*$
^[a-zA-Z_]+[a-zA-Z0-9\\-\\_]*$
^[a-zA-Z0-9 ;:,+&\\?\\-\\.\\*\\/\\\\]*$
^[a-zA-Z0-9$\\_]+$
^[a-zA-Z0-9.!
^[a-zA-Z0-9\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\.]+@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]{2,4}$
^[a-zA-Z0-9\\#\\-\\_\\.\\[\\]\\\"\\'\\=\\,\\s]+$
^[a-zA-Z0-9\\.\\-\\_]+$
^[a-zA-Z0-9\\.\\-\\_]+:?[0-9]*$
^[a-zA-Z0-9\\.\\-\\_]+\\:callback$
^[a-zA-Z0-9\\.\\_\\%\\+\\-]+@[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,8}$
^[a-zA-Z0-9\\.\\_\\:\\-]+$
^[a-zA-Z0-9\\.\\_\\[\\]]+$
^[a-zA-Z0-9\\.\\_\\-]+$
^[A-Za-z0-9\\.\\_]+$
^[-a-zA-Z0-9\\.\\_]+$
^[A-Za-z0-9\\-.\\_~:\\/?#&=,]{1,512}$
^[A-Za-z0-9\\@\\.\\_]+$
^[a-zA-Z0-9\\\\-\\\\.\\\\_\\\\~]{5,20}$
^[a-zA-Z0-9\\-\\_\\.:]
^[a-zA-z0-9\\-\\_\\.:]
^[A-Za-z0-9\\-\\_\\.\\/]*$
^[A-Za-z0-9\\-\\_\\.\\/]+$
^[A-Za-z0-9\\-\\_\\.\\:]+$
^[a-zA-Z0-9\\-\\_\\.\\:]+$
^[a-zA-Z0-9\\-\\_\\.\\+]+@[a-zA-Z0-9\\-\\_\\.]+\\.[a-zA-Z0-9\\-\\_]+$
^[a-zA-Z0-9\\-\\_\\.]*$
^[a-zA-Z0-9\\\\-\\\\_\\\\.]+$
^[A-Za-z0-9\\-\\_\\.]+$
^[a-zA-Z0-9\\-\\_\\/]{3,}$
^[a-zA-Z0-9\\-\\_\\/]+
^[a-zA-Z0-9\\-\\_]*$
^[A-Za-z0-9\\-\\_][A-Za-z0-9\\/\\-\\_\\.]+$
^[a-zA-Z0-9\\-\\_]{3,20}$
^[A-Za-z0-9\\-\\_]+$
^[a-zA-Z0-9\\-\\_]+$
^[a-zA-Z0-9\\_.-]+:[0-9]+$
^[a-zA-Z0-9\\_\\$]+
^[a-zA-Z0-9\\_\\.]+$
^[a-zA-Z0-9\\_\\:]+$
^[A-Za-z0-9\\_\\-\\.\\@]+$
^[A-Za-z0-9\\_\\-\\.]+$
^[a-zA-Z0-9\\_]*$
^[a-zA-Z0-9\\_]{3,}$
^[A-Za-z0-9\\_]+$
^[a-zA-Z0-9\\\\_]+$
^[a-zA-Z0-9\\_]+$
^[a-zA-Z0-9\\_]+\\.[a-zA-Z0-9\\_]+$
^[a-zA-Z0-9\\p{Han}\\-_]+$
^[a-zA-Z0-9\\p{Han}]+$
^[A-Za-z0-9\\p{Han}-_.]{1,63}$
^[A-Za-z0-9\\p{Han}-_]{6,63}$
^[a-zA-Z0-9\\pL]+$
^[A-Za-z0-9\\Q<>/.:;-_$+*&!%?@\\E]+$
^[a-zA-Z0-9\\s<>;'\\\\]+$
^[A-Za-z0-9][\\w\\(\\)\\+\\,\\-\\.\\=\\@\\;\\$\\\"\\_\\!\\*\\']*$
^[A-Za-z0-9][A-Za-z0-9\\.\\-\\_\\:]{1,61}[A-Za-z0-9]$
^[a-zA-Z0-9][a-zA-Z0-9\\-\\_]*$
^[a-zA-Z0-9][a-zA-Z0-9\\_\\.\\-]*$
^[A-Za-z0-9][A-Za-z0-9\\_\\-]*$
^[a-zA-Z0-9-]{118}+$
^[a-zA-Z0-9]{200}+$
^[a-zA-Z0-9]{201}+$
^[a-zA-Z0-9-]{21}+$
^[a-zA-Z0-9-]{454}+$
^[A-Za-z0-9_\\\\]+$
^[a-zA-Z0-9|]{21}+$
^[bB]?'[^'\\\\]*(?:\\\\[\\s\\S][^'\\\\]*)*'
^[btnfr?\"'\\\\]
^[btnfr\"'\\\\]
^[ds].*\\sfrom\\s+\\Q$word\\E$
^[D-Zd-z]:[\\/\\\\]?$
^[hH][tT][tT][pP][sS]?://(?:[fF][iI][lL][eE][sS]\\.[iI][cC][qQ]\\.[nN][eE][tT]/get|(?:[wW][wW][wW]\\.)?[iI][cC][qQ]\\.[cC][oO][mM]/files|[cC][hH][aA][tT]\\.[mM][yY]\\.[cC][oO][mM]/files)/(?P<file_id>[a-zA-Z0-9]{32,})(?:\\?.*)?$
^[Q\\\\]$
^[SHD](
^[SMTWHFA]*+$
^[Z-\\c-e]*$
^\\\\\\\\
^\\\\
^\\!([\\w\\.\\_]+)(.*)
^\"((?:[^\"\\\\]+|\\\\.)*)\"
^\\\"((?:\\\\.|[^\\\"\\\\])*)\\\"$
^\"((?:\\\\.|[^\"\\\\])*)\"([,}])\\s*
^\"(([^\"\\\\]|\\\\.)*)\"
^\"(([^\"\\\\]+|\\\\([\\\\\"nt]))+)\"
^\"(.*)(?<!\\\\)\",?
^\"(.*)\"\\s*(\\\\)?$
^\"(.*?)\\s*(?<!\\\\)\"
^\"(?:[^\"\\\\]*(?:\\\\.)?)*\"
^\"(?:[^\"\\\\]*|\\\\(?:.|\\n)|\"\")*(?:\"|\\z)
^\"(?:[^\"\\\\]|(?:\\\\.)|(?:\\\\\\((?:[^\"\\\\)]|\\\\.)*\\)))*\"
^\"(?:[^\"\\\\]|\\\\(?:.|\\n|\\r))*\"?(?!\")
^\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?
^\"(?:[^\"\\\\]|\\\\(?:b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?
^\"(?:[^\"\\\\]|\\\\.)*(?:\"|$)
^\"(?:[^\"\\\\]|\\\\.)*\"
^\"(?:[^\"\\\\]|\\\\.)*\"$
^\"(?:[^\"\\\\]|\\\\.)*\"$|^'(?:[^'\\\\]|\\\\.)*'$
^\"(?:[^\\\\\"\\r\\n]++|\\\\(?:.|\\r?\\n))*\"
^\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}|u\\{\\[\\da-fA-F]{1,6}\\}))*?\"
^\"(?:[^\\n\\r\"\\\\]|\\\\.)*(?:\"|$)
^\\\"(?:[^\\n\\r\\f\\\\\\\"]|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\\"
^\"(?:\"\"(?:\"\"?(?!\")|[^\"\\\\]|\\\\.)*\"{0,3}|(?:[^\\n\\r\"\\\\]|\\\\.)*\"?)
^\"(?<class>[\\w\\\\]+)\"\\.\"(?<field>\\w+)\"$
^\"(?=
^\"(?P<attribution>.*)$\"
^\"(?P<id>[^\"]+)\" (?P<props>\\[.*\\]);$
^\"(?P<id1>[^\"]+)\" -> \"(?P<id2>[^\"]+)\"
^\"(?P<series_name>.*)\" (?P<series_title>.*)$
^\"(?P<string>.+?)\":(?P<href>[^ \\\\(\\\\)]+)
^\\\"([^#\\\"\\\\]*(?:\\\\.[^#\\\"\\\\]*)*)\\\"|'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'
^\"([^#\"\\\\]*(?:\\\\.[^#\"\\\\]*)*)\"|^'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)'
^\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"
^\"([^\"\\\\]*)\"$
^\"([^\"\\\\]|\\\\.)*\"
^\"([^\\\"\\\\]|\\\\.)*\"$
^\"([^\\\\\"]|\\\\[\\\\\"nrt]|\\\\x[[:xdigit:]]{2}|\\\\u\\{[[:xdigit:]]+\\})*\"
^\"([^]*)\"
^\"([^]*)\"(?:(@.+)|\\^\\^(.+))?$
^\"([^]*)\"(?:(@[^\"]+)|\\^\\^([^\"]+))?$
^\"([^]*)\"(?:\\^\\^(.+)|@([\\-a-z]+))?$
^\\\"(\\\\(.|$)|[^\\\"\\\\])*\\\"?$
^\".*?[^\\\\]\"
^\"?(//[\\w\\d\\_\\/\\.\\s]+)\"?\\s
^\"?(?P<value>.+?)\"?,$
^\"?(\\w+
^\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"(?=[^\"\\\\])|^'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'(?=[^'\\\\])
^\\\"[^\\\"\\\\]*(?:\\\\[\\s\\S][^\\\"\\\\]*)*(?:\\\"|$)
^\"[^\"\\\\]+\"(?=[^\"\\\\])
^\"[^\"]*+\"$
^\"[^]*\"(?:@([^@\"]+)|\\^\\^[^\"]+)?$
^\"[^]*\"(?:\\^\\^([^\"]+)|(@)[^@\"]+)?$
^\"\"(\"[^\"\\\\]*(?:(?:\\\\.|\"(?!\"\"))[^\"\\\\]*)*\")\"\"|^''('[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*')''
^\"\"\"(?:[^\"\\\\]|\\\\.)*\"\"\"
^\"\"\"([^\"\\\\]*(?:(?:\\\\.|\"(?!\"\"))[^\"\\\\]*)*)\"\"\"
^\"\"\"\\s*(\\r|\\n)+(?:\"\"?(?!\")|[^\\\\\"]|\\\\(?:.|\\n|\\r))*\"{0,3}
^\\\"\\\"|^\\'\\'|^\\\".*?[^\\\\]\\\"|^\\'.*?[^\\\\]\\'|^\\`[\\s\\S]*?[^\\\\]\\`
^\"\\s*\\\\(\\$\\w+)\\s*=
^\\\"{3}(.*?[^\\\\])\\\"{3}
^\"{3}[\\s\\S]*?[^\\\\]\"{3}
^\"|([^\\\\])\"$
^\\\"|\\\\(.|$)|\\\"$
^\"|\\\\(?=\")|\"$
^\\#?(\\Q<Directory /home/*/public_html>\\E)
^\\#\\!(\\N+)
^\\#\\#\\# <a name=\"(?P<name>[a-z_0-9]+)\"></a>
^\\#\\s*define\\s*(?P<keep>\\w*)VERSION\\s+(.+)
^\\#define[ \\t]+([A-Z0-9\\_]+)[ \\t]+('(.){1}')
^\\#define[ \\t]+([A-Z0-9\\_]+)[ \\t]+([0-9]+)
^\\#define\\s+RUBY_PATCHLEVEL_STR\\s+\"\\K.+?(?=\")
^\\#include\\s+[\\<\\\"]([\\w\\.\\_\\/\\\\]+?\\.h\\w*)[\\\"\\>]
^\\$(
^\\$(?:\\[(?:\\d+|\"(?:[^\\\\\"\\u0000-\\u001f]|\\\\(?:[\\\\\"\\/bfnrt]|u[0-9a-zA-Z]{4}))*\")\\])*$
^\\$(?:\\[(?:\\d+|\"(?:[^\\\\\"\\u0000-\\u001f]|\\\\([\\\\\"/bfnrt]|u[0-9a-zA-Z]{4}))*\")])*$
^\\$(?:\\[(?:\\d+|\\\"(?:[^\\\\\\\"\\u0000-\\u001f]|\\\\([\\\\\\\"\\/bfnrt]|u[0-9a-zA-Z]{4}))*\\\")\\])*$
^\\$(?:\\[(?:\\d+|\"(?:[^\\\\\"\\u0000-\\u001f]|\\\\([\\\\\"\\/bfnrt]|u[0-9a-zA-Z]{4}))*\")])*$
^\\$(?P<var>\\S+) *= *(?P<val>.*?) *$
^\\$([a-zA-Z0-9\\-\\_]+)
^\\$([a-zA-Z0-9\\\\]*?)\\$
^\\$(\\w+)((?:\\s+\\w+\\=(?:\\S*|([\\\"\\'])((?:(?!\\\\|\\g{-2}).|\\\\.)*)\\g{-2}))*)\\s*$
^\\$\\{(?<id>\\d+):(?<nested>((?<pg>\\$\\{(?:\\\\\\$\\{|\\\\\\}|[^\\\\}$]|\\g<pg>)*\\})|(?:\\\\\\}|\\\\\\$\\{|[^$}]))+)\\}
^\\$\\{\\{([a-zA-Z0-9\\_]+)\\}\\}$
^\\$\\w+\\s+<<\\s*(?P<end>\\w+)$
^\\${(?P<environment_key_name>\\w+)*}$
^\\$1\\$\\Q$salt\\E\\$
^\\\\$del\\\\(['\"])(.*?)\\\\\\1$
^\\$ORIGIN (?P<zone>.*)\\.
^\\$pbkdf2(?:-(?P<digest>sha256|sha512))?\\$(?P<rounds>\\d+)\\$(?P<salt>[\\.\\/0-9A-Za-z]{0,1366})\\$(?P<checksum>[\\.\\/0-9A-Za-z]{27,86})$
^\\$pbkdf2(?:-(?P<digest>sha256|sha512))?\\$(?P<rounds>\\d+)\\$(?P<salt>[\\.\\/0-9A-Za-z]{0,1366})\\$?
^\\$VAR\\d+ = \\\\
^\\%([a-zA-Z0-9\\_\\-\\.]+);?
^\\%\\%\\+ procset \\Q$name\\E 
^\\%inputhash\\_([A-Z0-9]+?)\\_([A-Z0-9_]+)$
^\\&(\\#[0-9]+|\\#x[A-Fa-f0-9]+|[A-Fa-z][A-Fa-f0-9\\-\\_\\:\\.]*|[a-z]+);(.*)$
^\\\\($CONTROL_SYMBOLS)
^\\\\($CONTROL_WORD)($CONTROL_ARG)?$END_OF_CONTROL
^\\\\($identifier_regex)
^\\\\($identifier_regex)=
^\\($WS)(.*)\\)$
^\\\\\\((.*)\\\\\\)\\\\\\.\\\\(['\"])(.*?)\\\\\\2$
^\\((?P<f0>[0-9.e+-]+),(?P<Delta>[0-9.e+-]+),(?P<gamma>[0-9.e+-]+)\\),(?P<Error>\\d+)%$
^\\((?P<h>[0-9.e+-]+),(?P<s>[+-]?1)\\)$
^\\-((?P<leadspaces>\\s+)(?P<value>.+?))?\\s*$
^\\((?P<uri>.+)\\)$
^\\(([^]*)\\n\\)$
^\\\\\\((\\\\?.)\\\\\\)\\\\\\.\\\\(['\"])(.*?)\\\\\\2$
^\\((\\w++)\\)
^\\\\(.)
^\\\\(.)(.*)$
^\\\\(.)[ \\t]*
^\\\\\\\\(.*)
^\\\\(.*)$
^\\\\(.*?)$
^\\\\(.*?)\\\\([^\\\\]+)$
^\\\\(.+)
^\\\\(.+)$
^\\\\(?!($lexerPatterns{namedVarKernel})|($lexerPatterns{symVarKernel}))
^\\\\(?![*+?(){}[\\]'\"])
^\\(?(?P<re>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?)??(?P<im>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?j)?\\)?$
^\\\\(?:([0-9A-Fa-f]+)|([\\r\\n\\f]+))
^\\\\(?:(u)\\d{0,4}|(x)\\d{0,2})
^\\\\(?:['\"\\\\bfnrt]|0(?![0-9])|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|(?=.)[^ux0-9])
^\\'(?:[^\\n\\r\\f\\\\\\']|\\\\(?:\\r\\n?|\\n|\\f)|\\\\[\\s\\S])*\\'
^\\\\(?:[`'\"\\\\bfnrt]|0(?![0-9])|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|(?=.)[^ux0-9])
^\\\\(?:[0btnvfr\\/\\\\]|x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|c[a-zA-Z])$
^\\\\(?:\\r\\n|[\\u000A\\u000D\\u2028\\u2029])
^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))
^\\\\(?:cr|l?dots|R|tab)\\b
^\\\\(?=[a-zA-Z_])
^\\\\([ ]*-[-|+|#])
^\\\\\\\\([!-/:-@\\\\[-`\\\\{-~aftnrv]|[0-7]{1,3}|x[0-9a-fA-F]{2}|x\\\\{[0-9a-fA-F]{1,6}\\\\})
^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])
^\\\\([[:alpha:]]+)
^\\\\(['\"\\\\\\/])
^\\\\(['\"\\\\bfnrtv])
^\\\\([\"'])(.*?)\\\\\\1$
^\\\\([\\?'\"])
^\\\\([\\?'\"])\\'
^\\\\([\\'\\\"\\\\])(.*)$
^\\\\([\\\\'])
^\\\\([\\\\`*{}[\\]()#$+\\-.!_>|])
^\\\\([\\\\`*{}[\\]()#+\\-.!_>])
^\\\\([\\\\`*{}\\[\\]()#$+\\-.!_>])
^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])
^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>|])
^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>~|])
^\\\\\\\\([\\\\`*{}\\\\[\\\\]()#+\\\\-.!_>~|])
^\\\\([\\w_\\\\]*)(?:[:]{2}\\$?([\\w_]+))?(?:\\(\\))?$
^\\\\([^\\/]+)(.*)
^\\\\\\\\([^\\\\]+)
^\\\\([^\\s\\(\\)\\[\\]\\{\\}<>,;:=\"]*)
^\\\\([^-\\w$()*+.\\/?@\\[\\\\\\]^{|}])$
^\\\\([^0-9A-Za-z\\s])
^\\\\([_^]?)(.+)$
^\\\\([{}])$
^\\\\([0-3][0-7]{2})
^\\\\([0-7]{1,2})
^\\\\([0-7]{1,3})
^\\\\([0-7]{1,3})(.*)
^\\\\([0-7]{1,3})\\'
^\\\\([0-7]{1,3}|[rfntvsSbBwWdD\\\\*+()$\\{\\}|[\\]\\/.^?]|c[A-Z]|x[0-9A-F]{2}|u[a-fA-F0-9]{4})
^\\\\([0-7]{3})
^\\\\([0-9]{1,3})
^\\\\([0-9a-fA-F]{1,6})[ \\t\\r\\n\\f]?
^\\\\([0-9A-Fa-f]+)
^\\\\([afnrtv])
^\\\\\\\\([A-Z])\\|
^\\\\([a-z]+|.)$
^\\\\([A-Za-z])
^\\\\([a-zA-Z])[:|]
^\\\\([a-zA-Z]+|[^a-zA-Z])$
^\\\\([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff\\\\]*)?(?:[:]{2}\\$?([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*))?(?:\\(\\))?$
^\\\\([eEnlrtbfs\\^\\\\,:0]|.)
^'\\\\([nrtbf\">\\\\'\\.])'$
^\\\\([nrtbf\\\\\\(\\)])(.*)
^\\\\([tbnrf\"'uU])
^\\\\(\\/)|\\\\(\\/)$
^\\(\\?<([\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\})+>
^\\\\(\\[)|\\\\(\\])$
^\\(\\[[^\\]]++\\]\\+\\+\\)$
^\\\\(\\\\[^\\\\]+\\\\[^\\\\]+)(.*)
^\\\\(\\{)|\\\\(\\})$
^\\\\(\\d{1,3})$
^\\\\(\\d+)
^\\\\(\\d+)-grams:$
^\\\\(\\n|[\\\\`*{}\\[\\]()#+\\-.!_>\"$%&',\\/:;<=?@^~|])
^\\\\(\\Q$prefix\\E)
^\\\\(\\S)
^\\\\(\\S*)\\s*(.*?)\\s*$
^\\-(\\s+(?P<value>.+?))?\\s*$
^\\\\(\\S+)
^\\\\(\\S+)(\\s+(.*))?$
^\\\\(\\S+)(\\s+|$)
^\\\\(\\S+)\\s
^\\\\(\\S+)\\s*(.*?)\\s*$
^\\\\(\\S+)\\s+(.*?)\\s*$
^\\(\\u(\\w)\\|\\u(\\w)\\W
^\\(\\u(\\w)\\W
^\\\\(\\w)\\\\(.*)$
^\\\\(\\w*)$
^\\\\(\\w+)
^\\\\(\\w+)\\s+(.+)
^\\\\(\\w+\\*?)\\s*(?:\\[(.*?)\\])?$
^\\(_nZEDb_\\)(?P<site>.+?)_(?P<guid>[a-f0-9]{40}) - \\[1\\/1\\] \"(?P<sid>[a-f0-9]{40})\" yEnc \\(1\\/1\\)$
^\\\\(B)
^\\\\(b)
^\\\\(b|B)
^\\\\(cygwin|msys)-[a-z0-9]+-pty[0-9]+-(from|to)-master$
^\\\\(letrec|let\\*?)(?![A-Za-z0-9_])
^\\\\(M-|e)
^\\* (\\d+): examples(?:\\/|\\\\)three-lines.js
^\\* \\d+: examples(?:\\/|\\\\)three-lines\\.js
^\\*(?P<text>(?:\\*\\*|[^\\*])+?)\\*(?!\\*)
^\\*(?P<text>.+?)\\*
^\\*(\\p{Any})
^\\*/(?P<step>\\d{1,2})$
^\\*:(
^\\*?i?-?(?P<id>[0-9a-f]{17}|[0-9a-f]{8})\\*?$
^\\\\\\\\\\*\\(GR\\s+\\\\\\\\\\$1\\s+\\\\\\\\\\$2\\s+(.*?)\\\\
^\\*\\*((?:\\\\[\\s\\S]|[^\\\\])+?)\\*\\*(?!\\*)
^\\*\\*(?P<text>.+?)\\*\\*
^\\*\\h*(?:\\[\\[(?:d:)?Property:)?(P\\d+\\b)
^\\*\\s[\\`[:upper:]].*[^.,] \\- \\[\\@[\\w\\d\\-\\_]+\\]\\(https:\\/\\/github\\.com\\/.*[\\w\\d\\-\\_]+\\).$
^\\*\\s\\[\\#\\d+\\]\\(https:\\/\\/github\\.com\\/.*\\d+\\)\\: [\\`[:upper:]].*[^.,] \\- \\[\\@[\\w\\d\\-\\_]+\\]\\(https:\\/\\/github\\.com\\/.*[\\w\\d\\-\\_]+\\).$
^\\*{2}(?P<text>[\\s\\S]+?)\\*{2}(?!\\*)
^\\*|(?<!\\\\)\\*$
^\\.(.*)[^\\/\\\\]
^\\\\\\.(.*?)\\\\=\\\\(['\"])(.*?)\\\\\\2((?:\\\\,.*)?)$
^\\\\\\.(.+?)\\\\=\\\\(['\"])(.*)\\\\\\2$
^\\\\\\.(.+?)\\\\=\\\\(['\"])(.*?)\\\\\\2$
^\\.(?:
^\\.(?P<key>[A-Z])\\s?(?P<val>.*)
^\\.([\\w\\-\\\\]+)
^\\\\\\.([DF])\\\\\\.(.+?)\\\\=\\\\(['\"])(.*)\\\\\\3$
^\\.(\\.?[^ \\t.]
^\\.?\\Q$baseoid.\\E(.+)$
^\\.[/\\\\]
^\\.[/\\\\]+
^\\.[\\/\\\\]
^\\.[\\/\\\\]?$
^\\.[\\/\\\\]tests[\\/\\\\]
^\\.[^./\\\\]
^\\.[^\\.\\/\\\\]
^\\.\\\\
^\\\\\\.\\\\([\"'])(.*)\\\\\\1$
^\\\\\\.\\\\(['\"])(.*)\\\\\\1$
^\\\\\\.\\\\(['\"])(.*)\\\\\\1\\\\\\,\\\\(['\"])(.*)\\\\\\3\\\\,\\\\(['\"])(.*)\\\\\\5\\\\,\\\\(['\"])(.*)\\\\\\7$
^\\\\\\.\\\\([\"'])(.*?)\\\\\\1$
^\\\\\\.\\\\(['\"])(.*?)\\\\\\1$
^\\\\\\.\\\\(['\"])(.*?)\\\\\\1\\\\([\\.,])\\\\(['\"])(.*?)\\\\\\4(.*)$
^\\\\\\.\\\\(['\"])(.*?)\\\\\\1\\\\\\?\\\\(['\"])(.*?)\\\\\\3\\\\\\:\\\\(['\"])(.*?)\\\\\\5$
^\\.\\. _(?P<identifier>[^:]*): (?P<url>\\./.*)
^\\.\\. image:: (?P<url>\\./.*)
^\\.\\. include:: (?P<filename>.*)$
^\\.\\./(?P<name>[A-Za-z0-9]+)$
^\\.\\./(?P<path>[A-Za-z0-9/]+)$
^\\.\\./\\.\\./main/(?P<path>[A-Za-z0-9/\\-]+)$
^\\.\\.?($|
^\\.\\.?(\\/|\\\\)
^\\.\\.?[/\\\\]
^\\.\\.?[/\\\\]?
^\\.\\.?[\\/\\\\]
^\\.\\.?|^\\/|^\\\\
^\\.\\.[\\/\\\\]?$
^\\.\\.[\\/\\\\]\\.\\.[\\/\\\\]lib[\\/\\\\](?:Storable|POSIX).pm$
^\\.\\.\\\\
^\\.\\.\\/|\\\\
^\\.\\/(
^\\.\\/([\\w\\_]+)\\/index\\.js
^\\.\\d+_[^~]++~[._a-zA-Z\\d]{7}$
^\\\\\\\\\\.\\\\pipe\\\\
^\\\\\\\\\\.\\\\pipe\\\\.+
^\\.{0,2}[\\/\\\\]
^\\.{1,2}[/\\\\]?
^\\.{1,2}\\\\
^\\.|[/\\\\]
^\\.class (?:
^\\.field (?:
^\\.method (?:
^\\/(
^\\/(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)))+(\\/(((([a-z]|[A-Z])|[0-9])|(\\-|\\_|\\!|\\~|\\(|\\)|\\$|\\@)))+)*$
^\\/((?:\\\\.|[^\\/\\\\])*)\\/$
^\\/(?![\\s=])[^[\\/\\n\\\\]*(?:(?:\\\\[\\s\\S]|\\[[^\\]\\n\\\\]*(?:\\\\[\\s\\S][^\\]\\n\\\\]*)*])[^[\\/\\n\\\\]*)*\\/[imgy]{0,4}(?!\\w)
^\\/(?!\\/)((?:[^[\\/\\n\\\\]|\\\\[^\\n]|\\[(?:\\\\[^\\n]|[^\\]\\n\\\\])*\\])*)(\\/)?
^\\/(?!\\/)((?:[^[\\/\\n\\\\]|\\\\[^\\n]|\\[(?:\\\\[^\\n]|[^\\]\\n\\\\])*])*)(\\/)?
^\\/(?=[^*>/])[^[/\\\\]*(?:(?:\\\\.|\\[(?:\\\\.|[^\\]\\\\]*)*\\])[^[\\\\/]*)*?\\/[gimuy]*
^\\/(?=[^*>\\/])[^[\\/\\\\]*(?:(?:\\\\.|\\[(?:\\\\.|[^\\]\\\\]*)*\\])[^[\\\\\\/]*)*?\\/[gimuy]*
^\\/(?P<COMMAND>[^\\040\\n]*)(\\040?)(?P<PARAMS>.*)$
^\\/([a-z0-9\\%\\.\\-\\_]+\\/?)*$
^\\/([a-z0-9\\-\\_]+)$
^\\/([a-zA-Z0-9\\.\\-\\_]+\\/)+([a-zA-Z0-9\\.\\-\\_]+)$
^\\/.+?[\\n\\z]
^\\/?(
^\\/?(.*)\\/(?!\\\\)(.*)\\/(?!\\\\)([\\w_]+)$
^\\/[a-z0-9]+([\\-\\_]{1}[a-z0-9]+)*|\\/[a-z0-9]+([\\-\\_]{1}[a-z0-9]+)?$
^\\/\\*[^]*?\\*\\/\\s*\\n
^\\/\\/.+?[\\n\\z]
^\\/\\^\\s*(.+?)(
^\\/\\_ruote
^\\/\\Q$sitename\\E(\\/.+)?\\Q$uri\\E
^\\/|.:\\/|.:\\\\
^\\/|\\\\
^\\/|^[A-Z]:[/\\\\]|^\\\\\\\\
^\\/|^[A-Z]:[\\/\\\\]|^\\\\\\\\
^\\/|^[A-Za-z]:\\\\
^\\/+(\\w):[\\/\\\\]*
^\\/api\\/(?P<function>\\w+)\\/?(?P<arg>[0-9-]+)?\\/$
^\\/app\\/([\\d\\w\\-\\_]+)
^\\/Date\\((d|-|.*)\\)[\\/|\\\\]$
^\\/groups\\/([0-9a-z\\@\\-\\_]+)\\/videos\\/([0-9]+)\\/?$
^\\/oauth\\/\\_callback*
^\\/p\\/([a-z0-9\\-\\_]+)
^\\/photos\\/([a-z0-9\\-\\_\\@]+?)\\/(sets\\/)?([0-9]+)
^\\/record\\/(?P<recid>\\d+)(?:\\/files\\/(?P<filename>.+)$)?
^\\/subscriptions\\/(?P<subscription>.*)\\/resourceGroups\\/(?P<resourceGroup>.*)\\/providers\\/Microsoft.Compute\\/snapshots\\/(?P<snapshotName>.*)$
^\\/upload\\/mock_user_id\\/\\d+\\_tmp_test_file\\.png$
^\\/view\\_play\\_list\\/?$
^\\?([
^\\\\?([\\w_]+\\\\)+m(\\d{6}_?\\d{6})(\\D.*)?$
^\\??[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*+(?:\\\\[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*+)*+$
^\\??\\\\
^\\\\?[
^\\?[
^\\\\\\\\\\?\\\\
^\\\\\\\\?\\\\
^\\?\\?(?P<string>.+?)\\?\\?
^\\\\\\?\\?\\\\
^\\\\\\\\\\?\\\\UNC
^\\\\\\\\\\?\\\\Volume\\{[\\w-]+\\}\\\\$
^\\\\\\\\\\?\\\\Volume{[a-z0-9-]+}$
^\\?\\x07\\s(?P<name>.*)$
^\\\\?assegai\\\\(.+)$
^\\?OTR(?:\\|(?P<sender_tag>[0-9a-fA-F]{1,8})\\|(?P<recipient_tag>[0-9a-fA-F]{1,8}))?,(?P<k>\\d{1,5}),(?P<n>\\d{1,5}),(?P<message>.*),$
^\\\\?test\\\\
^\\@([\\w\\.\\_]+)
^\\@([^\\/\\\\]+)(.*)$
^\\@[\\w\\d\\-\\_\\.]+\\/[\\w\\d\\-\\_\\.]+$
^\\[!!\\]\\s*+(.+?)(?=\\n{2,}|$)
^\\[(
^\\[((?:\"(?:[^\"\\\\]|\\\\.)*\")|(?:'(?:[^'\\\\]|\\\\.)*'))?(\\s*,\\s*((?:\"(?:[^\"\\\\]|\\\\.)*\")|(?:'(?:[^'\\\\]|\\\\.)*')))*\\]$
^\\[((?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*)\\]\\(\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*\\)
^\\[(. .)\\]\\[(. .)\\] to (?P<hero_name>.*)$
^\\[(.+?)\\]:[ ]*+<?(\\S+?)>?(?:[ ]+[\"'(](.+)[\"')])?[ ]*+$
^\\[(?:|[
^\\[(?P<begin>.*),(?P<end>.*)\\]$
^\\[(?P<dt>.*?), (?P<lvl>.*?)\\] (?P<msg>.*)$
^\\[(?P<groupName>[^\\]]+)\\]$
^\\[(?P<chr>[^:]+):(?P<pos>\\d+)\\[(?P<useq>\\w*)(?P<ref>\\w)$
^\\[(?P<index>\\d+)\\]$
^\\[(?P<key>[^!].*?)\\]:\\s*(?P<url>.*)$
^\\[(?P<key>[^\\]]+)\\](?P<file>.+)$
^\\[(?P<name>[A-Za-z]+)\\]$
^\\[(?P<segment>.*?)\\](?P<extra>.*)$
^\\\\[(?P<text>.*?)\\\\]\\\\((?P<url>.*?)(?:\\\\s\"(?P<title>.*?)\")?\\\\)
^\\[(?P<timestamp>[^\\]]+)\\]\\s(?P<ip>\\S+)\\s+(?P<remainder>.+)$
^\\[(?P<valueList>[^\\[\\]]*)\\]$
^\\[(['\"])(.*?[^\\\\])\\1\\]?\\.?(.*)$
^\\[([\\w\\-\\_]+?)]: \\s*(.+?)\\s*$
^\\[([\\w\\_\\-]+)(\\$=|\\~=|\\^=|\\*=|\\|=|=|\\!=)
^\\[([^!^\\\\])\\]
^\\[([a-zA-Z][a-zA-Z0-9\\-\\_]*)\\]\\s*
^\\[([a-zA-Z0-9\\:\\_\\-\\=\\*]*)\\]\\.?(.*)$
^\\[(|[
^\\[*                       # [ starts an array\n                        (?:[BCDFIJSZ]|          # the native java types\n                              L?\\w+(?:/\\w+)*;?) # a Java class type\n                    
^\\\\[*?+\\[()\\\\|]
^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?
^\\[?(?P<host>[0-9A-Fa-f:]+(?:%[a-z]+\\d+)?)\\]?(:(?P<port>\\d+))?$
^\\[?\\Q$rly->{ip}\\E\\]?$
^\\[[^ ]* (?P<time>[^\\]]*)\\] \\[(?P<level>[^\\]]*)\\](?: \\[pid (?P<pid>[^\\]]*)\\])?( \\[client (?P<client>[^\\]]*)\\])? (?P<message>.*)$
^\\[[^]*\\]$
^\\[[^]]+\\]\\s+-?\\Q$REDIS_ERROR_CODE $ERROR{ $E_MAXMEMORY_LIMIT }\\E
^\\[[^]]+\\]\\s+-?\\Q$REDIS_MEMORY_ERROR_MSG\\E
^\\\\[[0-9A-Z]{5}\\\\] [0-2][0-9]:[0-5][0-9]:[0-5][0-9] (?P<Priority>INFO): 
^\\[[A-Za-z0-9]*\\](?P<content>.*)\\[/[A-Za-z0-9]*\\]
^\\[\\!\\[(?P<text>.*?)\\]\\[(?P<badge>.*?)\\]\\]\\[(?P<target>.*?)\\]$
^\\[\\!\\[(?P<text>[^\\]]+)\\]\\[(?P<badge>[^\\]]+)\\]\\]\\[(?P<target>[^\\]]+)\\]$
^\\\\[\\.=]\\\\(['\"])(.*)\\\\\\1$
^\\\\[\\.=]\\\\(['\"])(.*?)\\\\\\1$
^\\\\[\\.=]\\\\(['\"])(.*?)\\\\\\1\\\\\\,\\\\(['\"])(.*?)\\\\\\3$
^\\[\\[(?:|([
^\\[\\[([
^\\[\\[\\[([
^\\[\\d+\\][-_\\s]{0,3}(\\[(reup|full|repost.+?|part|re-repost|xtr|sample)(\\])?[-_\\s]{0,3}\\[[- #@\\.\\w]+\\][-_\\s]{0,3}|\\[[- #@\\.\\w]+\\][-_\\s]{0,3}\\[(reup|full|repost.+?|part|re-repost|xtr|sample)(\\])?[-_\\s]{0,3}|\\[.+?efnet\\][-_\\s]{0,3}|\\[(reup|full|repost.+?|part|re-repost|xtr|sample)(\\])?[-_\\s]{0,3})(\\[FULL\\])?[-_\\s]{0,3}(\\[ )?(\\[)? ?(\\/sz\\/)?(F: - )?(?P<title>[- _!@\\.'\\w\\(\\)~]{10,}) ?(\\])?[-_\\s]{0,3}(\\[)? ?(REPOST|REPACK|SCENE|EXTRA PARS|REAL)? ?(\\])?[-_\\s]{0,3}?(\\[\\d+[-\\/~]\\d+\\])?[-_\\s]{0,3}[\"|#34;]*.+[\"|#34;]* ?[yEnc]{0,4}
^\\[\\d+\\]\\s+(?:\\p{Initial_Punctuation})(.+)(?:\\p{Final_Punctuation})$
^\\[\\p{Word}+(?:\\s*[\\'\\-\\+\\s]\\s*\\p{Word}+)*\\]$
^\\[\\Q$1\\E\\]
^\\[\\Q$group\\E\\]
^\\[\\Q\u00b4\u00a3\u00ae\u00d7\\E\\]
^\\[\\s*([\\/\\\\].*)\\]
^\\[\\s*\"(?P<event>[^\"]+)\"\\s*,?
^\\\\[^*?+\\[()\\\\|]
^\\'[^\\'\\\\]*(?:\\\\[\\s\\S][^\\'\\\\]*)*(?:\\'|$)
^\\\\[=\\.]([UG])\\\\\\.\\\\(['\"])(.*?)\\\\\\2\\\\\\,\\\\(['\"])(.*?)\\\\\\4$
^\\\\[=\\.]\\\\(['\"])(.*)\\\\\\1$
^\\\\[=\\.]\\\\(['\"])(.*?)\\\\\\1$
^\\\\[=\\.]\\\\(['\"])(.*?)\\\\\\1\\\\\\,\\\\(['\"])(.*?)\\\\\\3$
^\\\\[dDwWsS]$|^\\\\p\\{[A-Za-z0-9 \\-\\._]+\\}$
^\\[if [^]*?<!\\[endif\\]$
^\\-\\-([a-z0-9\\-\\_A-Z]+)$
^\\-\\-\\d+\\-\\- (realloc\\(0x0,\\d+\\))?malloc\\((?P<size>\\d+)\\) = 0x(?P<ptr>\\w+)$
^\\-\\-\\d+\\-\\- calloc\\((?P<num>\\d+),(?P<size>\\d+)\\) = 0x(?P<ptr>\\w+)$
^\\-\\-\\d+\\-\\- free\\(0x(?P<ptr>\\w+)\\)$
^\\-\\-\\d+\\-\\- realloc\\(0x(?P<orig>\\w+),(?P<size>\\d+)\\) = 0x(?P<new>\\w+)$
^\\](?P<chr>[^:]+):(?P<pos>\\d+)\\](?P<useq>\\w*)(?P<ref>\\w)$
^\\^(?:\\d{1,3}\\.){4}in-addr.arpa:(?:[\\w\\-]+\\.)*\\Q$zone\\E
^\\^([0-9]+|[^\\\\_])
^\\^?(
^\\^B \\Q$oidbr\\E (\\w+) 0 0$
^\\^V \\Q$oidprv\\E (\\w+ \\w+) \\w+$
^\\_
^\\\\_$
^\\_(.*)
^\\_(.*)\\_$
^\\_(.+)$
^\\_([0-9]+)$
^\\_.*
^\\_.*\\.scss
^\\_.+
^\\_.+\\_$
^\\_[^\\_]
^\\_[^\\s\\_]
^\\_[a-zA-Z]
^\\_\\:
^\\_\\:(.*)$
^\\_\\_
^\\_\\_(.+)\\_\\_$
^\\_\\_(END|DATA)\\_\\_
^\\_\\_.*\\_\\_$
^\\_\\_[^\\s\\_]
^\\_\\_\\_[^\\s\\_]
^\\_\\_END\\_\\_
^\\_\\_papi|^\\_papi
^\\_\\_papi|^\\_papi|^papi\\_
^\\_\\<(.*)$
^\\_\\w+
^\\__(.+?)\\__$
^\\__APP_(.*)\\__$
^\\_|.html.*
^\\_+
^\\_+$
^\\_block
^\\_block$
^\\_date\\#([\\d\\-\\/\\.]+)[^\\r\\n]*[\\r\\n]+
^\\\\_DateStampHasFourDigitYear
^\\_design\\/
^\\_NAMESPACE\\_::data\\(\\)
^\\_posts\\/
^\\_rot[ate]*\\_left\\#[ \\t]*[\\r\\n]+
^\\_rot[ate]*\\_none\\#[ \\t]*[\\r\\n]+
^\\_rot[ate]*\\_right\\#[ \\t]*[\\r\\n]+
^\\\\_sh\\s+
^\\\\_sh\\s+(\\S+)\\s+(\\S+)\\s+(.*?)\\s*$
^\\\\_sh\\s+(\\S+)\\s+(\\S+)\\s+(.*?)\\s+$
^\\\\_SH\\s+(v[0-9]\\.[0-9]+)\\s+([0-9]+)\\s+(.*?)\\s*$
^\\_Toc\\d+$
^\\_up[ld]+only\\#[ \\t]*[\\r\\n]+
^\\_usrp$
^\\`[0-9a-zA-Z\\_]+\\`\\.\\`[0-9a-zA-Z\\_]+\\`
^\\{% (?P<command>\\w+)\\s+(?P<filename>[^\\s]+)\\s*\\n(?P<content>.*?)%}\\s*$
^\\{(((?![\"'])[^,}]*|([\"']).*?[^\\\\]\\2)(,((?![\"'])[^,}]*|([\"']).*?[^\\\\]\\6))*)\\}\\.?(.*)$
^\\{(.*?[^\\\\])\\}.*
^\\{(?P<condition>and|or):\\[(?P<values>.+,.+)\\]\\}$
^\\{(?P<left>-?\\d*)?\\.\\.(?P<right>-?\\d*)?(?::(?P<sep>.*))?\\}$
^\\{(?P<name>[a-zA-Z_][a-zA-Z0-9_]*)\\}$
^\\{(?P<parameter>\\w+)\\}$
^\\{(?P<placeholder>\\w+)\\}(?P<delimiter>.)?$
^\\{(?P<var>[a-zA-Z][_a-zA-Z0-9]*)(?::(?P<re>.+))*\\}$
^\\{([\\/@\\\\]?\\w*)
^\\{([^]*?)\\}$
^\\{.*?\\n(.*(?{ $regex ? '\\}' : '\\]' }))\\s+\\}\\s+$
^\\{[[:space:]]*(?P<name>[[:word:]]*)[[:space:]]*\\}$
^\\{[[:space:]]*(?P<num>-?\\d+)[[:space:]]*\\}$
^\\{[^]+\\}$
^\\{\\\"DATA\\\":.+{20}],\\\"DEEPDATA\\\":.+{16}\\}\\}$
^\\{\\\"DEEPDATA\\\":.+{16}\\},\\\"DATA\\\":.+{21}\\}$
^\\{\\\\$DESTINATION\\\\($CONTROL_WORD)($CONTROL_ARG)?$END_OF_CONTROL
^\\{\\`\\s*([^]*?)\\s*\\`\\}
^\\{\\{(?P<name>(__|\\+)?[a-zA-Z][a-zA-Z0-9_\\-]+):\\s*(?P<value>.*)\\}\\}\\s*$
^\\{\\{(?P<name>(__|\\+)?[a-zA-Z][a-zA-Z0-9_\\-]+):\\s*(?P<value>.*?)^[ \\t]*\\}\\}\\s*$
^\\| ((?:  )*)(?:<([^!?>][^>]*)>|([^=\"\\n][^=\\n]*)=\"([^\"]*)\"|\"((?:[^\"]|\"(?!\\n))*)\"|<!-- ((?:[^](?!-->))*) -->|<!DOCTYPE ([^>]*)>|<\\?([^>]+)>|(content))\\n
^\\|[\\s|\\_](?P<script>.*)$
^\\|-\\.*.^\\| \\[\\[Postal codes in [^\\|]*\\|(?P<country>[^$]*)\\]\\]$.^\\| *(?P<since>[^$]*)$.^\\| *\\[\\[ISO 3166-1:[A-Z]*\\|(?P<iso>[^$]*)\\]\\]$.^\\| *(?P<area>[^$]*)$.^\\| *(?P<street>[^$]*)$.^\\| (?P<notes>[^$]*)$
^\\|++$
^\\~(?:
^\\+?(?P<prefix>\\d+)\\|(?P<stringdata>.*)$
^\\+?(\\d+(\\.\\d+)?)\\s*([
^\\\\\\\\+[^\\\\]
^\\+\\+(
^\\+\\+\\+ (?P<file_path>.+)
^\\+\\+\\+ (?P<filename>[^\\t\\n]+)(?:\\t(?P<timestamp>[^\\n]+))?
^\\+\\+\\+ b/(?P<file_name>.+)
^\\+\\+\\+\\s+(?P<file>.+)
^\\+\\+\\+\\s+(?P<file>\\S+)
^\\+{3}\t# +++\n\t\t\t\t\t\t\\s\n\t\t\t\t\t\t(\\S+)
^\\+-o\\s(?P<name>.*)\\s+<class (?P<ioclass>[\\w]+),(?P<flags>[^>]*)
^\\<!--\\[if(\\X+)\\<!\\[endif\\]--\\>(\\X+)\\<head\\>$
^\\<\\<\\\\(\\w+)$
^\\<h1>(.+?)</h1>
^\\<head>$
^\\<html>$
^\\0(?:${\\(RE_EOL)})*
^\\033](\\d+);([^\\033]+)\\033\\\\
^\\\\1cw
^\\\\1cw\\ 
^\\\\a\\\\b\\\\c.txt.chef-\\d{14}.\\d{6}$
^\\\\App\\\\
^\\b(_)((?:__|\\\\[\\s\\S]|[^\\\\])+?)_\\b|^(\\*)((?:\\*\\*|\\\\[\\s\\S]|[^\\\\])+?)\\*(?!\\*)
^\\b\\Q$id\\E\\b$
^\\b_((?:__|[^_])+?)_\\b|^\\*(?P<text>(?:\\*\\*|[^\\*])+?)\\*(?!\\*)
^\\b_((?:__|\\\\[\\s\\S]|[^\\\\_])+?)_\\b|^\\*(?=\\S)((?:\\*\\*|\\\\[\\s\\S]|\\s+(?:\\\\[\\s\\S]|[^\\s\\*\\\\]|\\*\\*)|[^\\s\\*\\\\])+?)\\*(?!\\*)
^\\\\c
^\\C
^\\c$
^\\c%$
^\\\\C-(.)
^\\\\c(ommit)?\\s*$
^\\\\C-\\\\M-(.)
^\\c9$
^\\D*(?P<seed>\\d+(?:[,.]\\d+)?)\\D+(?P<score>\\d+(?:[,.]\\d+)?)(\\D+(?P<time>\\d+(?:[,.]\\d+)?))?\\D*$
^\\d*+(\\.\\d{1,2})?$
^\\d*+\\.\\d*+% 
^\\d{4}\\_\\d{2}\\_\\d{2}\\_\\d{6}\\_(update_)?
^\\d+(?:,\\d+)?([acd]|s\\Q/^\\.\\././\\E)$
^\\d+(?:\\.\\d+){3}\\/(?:
^\\d+(?:_\\d+)*(?:#[\\w.\\\\]+#(?:[+-]?\\d+(?:_\\d+)*)?|(?:\\.\\d+(?:_\\d+)*)?(?:e[+-]?\\d+(?:_\\d+)*)?)
^\\d+-(?P<comment_index>\\d+)\\.
^\\d+(\\.\\d{0,
^\\d+:\\s(?P<INTERFACE>[a-z\\d.]+):.*$
^\\d+;([^\\007]*)(?:\\007|\\033\\\\)
^\\d+[.]{0,1}\\d*[E][+-]{0,1}\\d*|^\\.\\d+[E][+-]{0,1}\\d*|^0x\\d+|^\\d+[.]{0,1}\\d*|^\\.\\d+|^\\(\\/.*[^\\\\]\\/\\)
^\\d+[\\_\\-\\s]
^\\d+[\\_\\-\\s]+
^\\d+\\s?+
^\\d+_[^~]++~[._a-zA-Z\\d]{7}$
^\\d++$
^\\d++\\.\\d++$
^\\\\end\\\\
^\\\\g$
^\\\\h(\\s+(.+))?$
^\\\\h(elp)?\\s*$
^\\h*
^\\h*#?\\h+(.*?)\\h*$
^\\h*$
^\\h*([*#]+)\\h*(.*)$
^\\h*(\\*|[\\|\\w]*)\\h*(\\H+)
^\\h*(\\w+[._\\-\\w]*)(?:\\h+((?:ASC|DESC)[\\w\\h]*))?\\h*$
^\\h*(={1,6})(.*)$
^\\h*(method|func)\\s+(\\w+)([^\\{]+)\\{
^\\h*[*-](?:\\h?[*-]){2,}(?:\\n+|$)
^\\h*\"environment\"\\s*:\\s*\"(\\w+)\"
^\\h*\\*\\h*\\*\\h*\\*.*\\n+
^\\h*\\v+
^\\h{12}$
^\\h{128}$
^\\h{24}$
^\\h{32}$
^\\h{40}$
^\\h{56}$
^\\h{64}$
^\\h{8}-\\h{4}-\\h{4}-\\h{4}-\\h{12}$
^\\h{96}$
^\\h+
^\\h+$
^\\h+(.+)
^\\h+(?:use|no) (?:strict|warnings|feature|integer|utf8|bytes|re)\\b[^\\n]*\\n
^\\h+{20}$
^\\h+|\\h+$
^\\h+package [^\\n]*;\\n
^\\http:\\/\\/
^\\https:\\/\\/
^\\\\i(nput)?
^\\\\if(?![A-Za-z0-9_])
^\\\\import[^\\S\\n]
^\\\\indexentry{(.*)}{(.*)}{([\\dA-Z]*)}{([a-zA-Z0-9]+)}$
^\\\\irb
^\\\\item(?=((?!\\\\begin\\{itemize\\}).)*\\\\end\\{itemize\\})
^\\\\k<([\\w$]|\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\})+>
^\\\\l
^\\L\\Q$perllibdir
^\\\\l\\s+
^\\\\lambda(?![A-Za-z0-9_])
^\\\\left\\((.+)\\\\right\\)$
^\\\\left\\(.+\\\\right\\)$
^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$
^\\\\line\\s+([0-9.]+)(?:\\s+(.*?)\\s*$)?
^\\\\lms
^\\\\math.+
^\n                               # name should always match something\n                               (?P<name>.+?)\n                               # comment *optionally* matches text in parens following name\n                               # this should never come after email and must be followed immediately by\n                               # either the email field, or the end of the packet.\n                               (\\ \\((?P<comment>.+?)\\)(?=(\\ <|$)))?\n                               # email *optionally* matches text in angle brackets following name or comment\n                               # this should never come before a comment, if comment exists,\n                               # but can immediately follow name if comment does not exist\n                               (\\ <(?P<email>.+)>)?\n                               $\n                            
^\n                            (?P<protocol>[a-zA-Z]+)\n                            ://\n                            ((?P<identity>[^@]*)@)?\n                            (?P<endpoint>[^\\#]+)\n                            (\\#(?P<mode>[a-zA-Z]*))?\n                            $\n                         
^\n                          # Match the vendor-model combination (this goes into $1)....\n                          (\n\n                            # Match known vendor names (this goes into $2)...\n                            (ACER|Alcatel|AUDIOVOX|BlackBerry|CDM|Ericsson|LG\\b|LGE|Motorola|MOT|NEC|Nokia|Panasonic|PANTECH|PT|QCI|SAGEM|SAMSUNG|SEC|Sanyo|Sendo|SHARP|SIE|SonyEricsson|Telit|Telit_Mobile_Terminals|TSM)\n\n                            # optionally followed by an irrelevant space or '-' character...\n                            [- ]?\n\n                            # followed by the model name (this goes into $3)...\n                            ([^\\/\\s\\_]+)\n                          )\n\n                          # Match possible version information after the slash seperator (this goes into $5)...\n                          (\\/(\\S+))?\n\n                        
^\n                      \\s*                  # trim space\n                      (?:([\\w+-]+)://)?+   # scheme\n                      (?:\n                          (?:([^\\@:;]+))?+ # username\n                          (?::([^\\@;]*))?+ # : password\n                          (?:;([^\\@]*))?+  # c-params\n                          \\@               # @\n                      )?+\n                      (?>                  # host\n                          (                #   IPv6...\n                              \\[$IPv6_re\\] #     [IPv6]\n                          |                #     or\n                              $IPv6_re     #     IPv6\n                          )\n                      |                    #   or\n                          ([^\\[\\]\\@:/]+)   #   hostname / ipv4\n                      )\n                      (?::([\\w\\%]+))?+     # port\n                      (/.*)?+              # path\n                      \\s*                  # trim space\n                      $
^\n                # Starting line\n                ([1-9]\\d*)\n                \\s*\n                # Number of lines\n                (?:\n                    ((?1))\n                    \\s+\n                )?\n                # Description\n                (.*)\n            $
^\n                # Static keyword\n                # Declares a static method ONLY if type is also present\n                (?:\n                    (static)\n                    \\s+\n                )?\n                # Return type\n                (?:\n                    (\n                        (?:[\\w\\|_\\\\]*\\$this[\\w\\|_\\\\]*)\n                        |\n                        (?:\n                            (?:[\\w\\|_\\\\]+)\n                            # array notation\n                            (?:\\[\\])*\n                        )*\n                    )\n                    \\s+\n                )?\n                # Legacy method name (not captured)\n                (?:\n                    [\\w_]+\\(\\)\\s+\n                )?\n                # Method name\n                ([\\w\\|_\\\\]+)\n                # Arguments\n                (?:\n                    \\(([^\\)]*)\\)\n                )?\n                \\s*\n                # Description\n                (.*)\n            $
^\n                # Static keyword\n                # Declares a static method ONLY if type is also present\n                (?:\n                    (static)\n                    \\s+\n                )?\n                # Return type\n                (?:\n                    (\n                        (?:[\\w\\|_\\\\]+)\n                        # array notation           \n                        (?:\\[\\])*\n                    )?\n                    \\s+\n                )?\n                # Legacy method name (not captured)\n                (?:\n                    [\\w_]+\\(\\)\\s+\n                )?\n                # Method name\n                ([\\w\\|_\\\\]+)\n                # Arguments\n                (?:\n                    \\(([^\\)]*)\\)\n                )?\n                \\s*\n                # Description\n                (.*)\n            $
^\n                # Static keyword\n                # Declates a static method ONLY if type is also present\n                (?:\n                    (static)\n                    \\s+\n                )?\n                # Return type\n                (?:\n                    ([\\w\\|_\\\\]+)\n                    \\s+\n                )?\n                # Legacy method name (not captured)\n                (?:\n                    [\\w_]+\\(\\)\\s+\n                )?\n                # Method name\n                ([\\w\\|_\\\\]+)\n                # Arguments\n                \\(([^\\)]*)\\)\n                \\s*\n                # Description\n                (.*)\n            $
^\n                (?:(\\d+)w)?\n                (?:(\\d+)d)?\n                (?:(\\d+)(?:\\:|h))?\n                (?|\n                    (\\d+)\\:\n                    (\\d*(?:\\.\\d{1,9})?)\n                |\n                    (?:(\\d+)m)?\n                    (?:(\\d+|\\d*\\.\\d{1,9})s)?\n                    (?:((?5))ms)?\n                    (?:((?5))us)?\n                    (?:((?5))ns)?\n                )\n            $
^\n                (?P<year>\\d{4})                                  # YYYY (four digit year)\n                (?:\n                    -(?P<mon>\\d\\d?)                              # -M or -MM (1 or 2 digit month)\n                    (?:\n                        -(?P<day>\\d\\d?)                          # -D or -DD (1 or 2 digit day)\n                        (?:\n                            [T\\ ](?P<hour>\\d\\d?)\\:(?P<min>\\d\\d)  # [T or space]hh:mm (1 or 2 digit hour and 2 digit minute)\n                            (?:\n                                \\:(?P<sec>\\d\\d)                  # :ss (two digit second)\n                                (?:\\.\\d+)?                       # .s (decimal fraction of a second -- not supported)\n                            )?\n                            (?:[ ]?(?P<ampm>(AM|PM|am|pm))?)?    # An optional space and AM or PM\n                            (?P<tz>Z|(?P<tzd>[+\\-]\\d\\d\\:?\\d\\d))? # Z or [+ or -]hh(:)ss (UTC or a timezone offset)\n                        )?\n                    )?\n                )?$
^\n                ([^\\[]+)?     # - look for an optional type\n                              #   by matching anything but '['\n                (?:           # - don't backreference the literals\n                  \\[          # - literal '['\n                    ([^\\]]+)  # - index, any non-']' chars\n                  \\]          # - literal ']'\n                )?            # - the whole index is optional\n               
^\n                [-_a-z0-9'+*$^&%=~!?{}]++\n                (?:\\.[-_a-z0-9'+*$^&%=~!?{}]+)*+\n                @(?:(?![-.])[-a-z0-9.]+(?<![-.])\\.\n                [a-z]{2,6}|\\d{1,3}(?:\\.\\d{1,3}){3})\n                (?::\\d++)?\n            $
^\n                [-a-z0-9+.]++://\n                (?!-)[-a-z0-9]{1,63}+(?<!-)\n                (?:\\.(?!-)[-a-z0-9]{1,63}+(?<!-)){0,126}+\n                (?::\\d{1,5}+)?\n                (?:/.*)?\n            $
^\n          ((\\d+)\\.(\\d+)\\.(\\d+)((?:dev|rc|beta|alpha)\\d*)?)\n          -CAPI-\n          ((\\d+)\\.(\\d+)\\.(\\d+))\n          (?:\\s+r?(\\h+))?\n        $
^\n          (?:                                # Header lookbehind\n            [\\#=]+\\s
^\n          (\\s*) # leading whitespace\n          (\\[) (
^\n        (  [a-zA-Z_]\n         | \\\\\\\\u[0-9a-fA-F]{4}\n        )\n        (  [0-9a-zA-Z_\\.-/]\n         | \\\\\\\\u([0-9a-fA-F]{4})\n        )*\n      $
^\n        (?!\\\\\\\\u0301)             # &#x301; is a non-spacing acute accent.\n                                  # It is legal within an XML Name, but not as the first character.\n        (  [a-zA-Z_]\n         | \\\\\\\\u[0-9a-fA-F]\n        )\n        (  [0-9a-zA-Z_\\.-]\n         | \\\\\\\\u([0-9a-fA-F]{4})\n        )*\n      $
^\n        (?!\\\\\\\\u0301)             # &#x301; is a non-spacing acute accent.\n                                  # It is legal within an XML Name, but not as the first character.\n        (  [a-zA-Z_]\n         | \\\\\\\\u[0-9a-fA-F]{4}\n        )\n        (  [0-9a-zA-Z_\\.-]\n         | \\\\\\\\u([0-9a-fA-F]{4})\n        )*\n      $
^\n        (?!\\\\\\\\u0301)             # &#x301; is a non-spacing acute accent.\n                                  # It is legal within an XML Name, but not as the first character.\n        (  [a-zA-Z_]\n         | \\\\\\\\u[0-9a-fA-F]{4}\n        )\n        (  [-0-9a-zA-Z_\\.\\/]\n         | \\\\\\\\u([0-9a-fA-F]{4})\n        )*\n      $
^\n        (?<severity>.+?):\\s\n        (?<message>.+?)\n        (?:\n          \\s\\(
^\n        (?P<prefix>(?:[^\\r\\n|\\n|\\r])*?)\n        [\\ \\t]*Local\\ Variables:[\\ \\t]*\n        (?P<suffix>.*?)(?:\\r\\n|\\n|\\r)\n        (?P<content>.*?\\1End:)\n        
^\n        ([+-]?\n         [\\d
^\n      (:\n        (?<prefix>\n          (\n            (?<servername>(?<nick>[a-z
^\n      (?!\\\\\\\\u0301)             # &#x301; is a non-spacing acute accent.\n                                # It is legal within an XML Name, but not as the first character.\n      (  [a-zA-Z_]\n       | \\\\\\\\u[0-9a-fA-F]\n      )\n      (  [0-9a-zA-Z_\\.-]\n       | \\\\\\\\u([0-9a-fA-F]{4})\n      )*\n    $
^\n      (?: 
^\n      (?:\n        
^\n      (?<target>.*)\n      \\s+\n      (?: 
^\n    v?\n    (?:\n        (?:(?P<epoch>[0-9]+)!)?                           # epoch\n        (?P<release>[0-9]+(?:\\.[0-9]+)*)                  # release segment\n        (?P<pre>                                          # pre-release\n            [-_\\.]?\n            (?P<pre_l>(a|b|c|rc|alpha|beta|pre|preview))\n            [-_\\.]?\n            (?P<pre_n>[0-9]+)?\n        )?\n        (?P<post>                                         # post release\n            (?:-(?P<post_n1>[0-9]+))\n            |\n            (?:\n                [-_\\.]?\n                (?P<post_l>post|rev|r)\n                [-_\\.]?\n                (?P<post_n2>[0-9]+)?\n            )\n        )?\n        (?P<dev>                                          # dev release\n            [-_\\.]?\n            (?P<dev_l>dev)\n            [-_\\.]?\n            (?P<dev_n>[0-9]+)?\n        )?\n    )\n    (?:\\+(?P<local>[a-z0-9]+(?:[-_\\.][a-z0-9]+)*))?       # local version\n$
^\n(?P<method>OPTIONS|GET|HEAD|POST|PUT|DELETE|TRACE|CONNECT)   # Request Method\n\\                                                            # (single space)\n(\n    (?P<scheme>[^:/]+)                                       # Scheme\n    (://)  #\n    (?P<host>[^/]+)                                          # Host\n)? #\n(?P<path>(\\*|/[^ \\?]*))                                      # Path\n(\\? (?P<query_string>[^ ]*))?                                # Query String\n\\                                                            # (single space)\n(?P<protocol>HTTPS?/1\\.[01])                                 # Protocol\n$\n
^\n(\\d\\d/\\d\\d|\\s?PEND|\\s?NEXT) # 1) date\n  (?:\\s*\\t\\s*|\\n)+\n((?:[^\\t]|\\n)*?) # 2) description\n  (?:\\s*\\t\\s*|\\n)+\n(\\d{4}) # 3) branch code\n  (?:\\s*\\t\\s*|\\n)+\n([0-9,]+)\\.(\\d\\d) # 4+5) amount\n  (?:\\s*\\t?\\s*|\\n)+\n(CR|DB) # 6)\n  (?:\\s*\\t\\s*|\\n)+\n([0-9,]+)\\.(\\d\\d) # 7+8) balance\n    
^\n\n\t\t\t# scheme\n\t\t\t[-a-z0-9+.]++://\n\n\t\t\t# username:password (optional)\n\t\t\t(?:\n\t\t\t\t    [-a-z0-9$_.+!*'(),;?&=%]++   # username\n\t\t\t\t(?::[-a-z0-9$_.+!*'(),;?&=%]++)? # password (optional)\n\t\t\t\t@\n\t\t\t)?\n\n\t\t\t(?:\n\t\t\t\t# ip address\n\t\t\t\t\\d{1,3}+(?:\\.\\d{1,3}+){3}+\n\n\t\t\t\t| # or\n\n\t\t\t\t# hostname (captured)\n\t\t\t\t(\n\t\t\t\t\t     (?!-)[-a-z0-9]{1,63}+(?<!-)\n\t\t\t\t\t(?:\\.(?!-)[-a-z0-9]{1,63}+(?<!-)){0,126}+\n\t\t\t\t)\n\t\t\t)\n\n\t\t\t# port (optional)\n\t\t\t(?::\\d{1,5}+)?\n\n\t\t\t# path (optional)\n\t\t\t(?:/.*)?\n\n\t\t\t$
^\n\t\t(.*) (?<!\\\\) $delim\n\t\t(.*) (?<!\\\\) $delim\n\t\t(.*)$
^\n\t\t\t---SUMMARY---\\s*\n\t\t\t(?P<summary>.*?)\\s*\n\t\t\t---COMMAND---\\s*\n\t\t\t(?P<command>.*?)\\s*\n\t\t\t---EXPECTED---\\s*\n\t\t\t(?P<expected>.*?)\\s*\n\t\t\t---END---\n\t\t\t
^\\\\N{(.+)}$
^\\n|\\n[\\t ]*+\\z
^\\\\o(utput)?
^\\\\option\\{(\\w+)\\}\\{(\\w+)\\}\\{(\\w+)\\}
^\\\\or(?![A-Za-z0-9_])
^\\\\over
^\\\\p
^\\\\p\\s+
^\\p{Alnum}
^\\p{Alpha}{3}
^\\p{Alpha}+$
^\\p{Arabic}
^\\p{ASCII}*$
^\\p{ASCII}+$
^\\p{BidiClass:R}
^\\p{Cyrillic}$
^\\p{Digit}+
^\\p{HexDigit}+$
^\\p{Hiragana}*$
^\\p{ID_Start}\\p{ID_Continue}*$
^\\p{InHiragana}+$
^\\p{InKatakana}+$
^\\p{InKDDICP932Pictograms}$
^\\p{InKDDISoftBankConflicts}$
^\\p{InMobileJPPictograms}$
^\\p{IsAlpha}
^\\p{IsAlphabetic}$
^\\p{IsASCII}*$
^\\p{IsDigit}+[\\p{IsDigit}\\/:-]+\\p{IsDigit}
^\\p{IsDigit}+[\\p{IsDigit}\\/:-]+\\p{IsDigit}$
^\\p{IsLower}$
^\\p{IsLower}(?:\\.\\p{IsLower})+$
^\\p{IsMark}
^\\p{IsPrint}
^\\p{IsPrint}*\\z
^\\p{IsSpacePerl}*([A-Za-z0-9-]*)
^\\P{IsUpper}
^\\p{IsUpper}[\\p{IsUpper}\\.-]*$
^\\p{IsWideAmbiguousSpacing}
^\\p{IsWideSpacing}
^\\p{IsWord}+$
^\\p{Latin}$
^\\p{Latin}+$
^\\p{Letter}
^\\p{Letter}\\p{NonspacingMark}*$
^\\p{Letter}+$
^\\p{Lower}+
^\\p{Lu}+(?:\\N{APOSTROPHE})?$
^\\p{Print}{1,200}$
^\\p{Punct}*
^\\p{Punct}\\s+
^\\p{Punct}+$
^\\p{Space}?$pathch_target[0]
^\\p{Space}{1}
^\\p{Space}+
^\\p{Upper}
^\\p{Upper}[\\p{Alpha}\\-]+(\\s+\\p{Alpha}[\\p{Alpha}\\-]+)?$
^\\p{Upper}[\\p{Alpha}\\-]+\\s+\\p{Lower}[\\p{Lower}\\-]+(\\s+\\p{Lower}[\\p{Lower}\\-]+)?$
^\\p{upper}+$
^\\p{Uppercase}+$
^\\p{XDigit}{8}-\\p{XDigit}{4}-[1-5]\\p{XDigit}{3}-[89abAB]\\p{XDigit}{3}-\\p{XDigit}{12}$
^\\p{XID_Continue}$
^\\\\par
^\\\\paste(\\s+(.*))?$
^\\\\pl
^\\pL
^\\pL$
^\\pL{4,}$
^\\pL+$
^\\pL+([- _./]+|\\pN+|\\pL+)+$
^\\pL+([- _.]+|\\pN+|\\pL+)+$
^\\pL++$
^\\pM
^\\\\pN
^\\pN++$
^\\Q
^\\\\q
^\\Q$$block[-1]\\E
^\\Q$&#
^\\Q$_
^\\Q$_[0]
^\\Q$_[0]\\E$
^\\Q$_[0]\\E\\t(.*)$
^\\Q$_[0]\\E\\t[^\\t]*\\t(.*)$
^\\Q$_[1]
^\\Q$_[1]\\E
^\\Q$_[1]\\E$
^\\Q$_[1]\\E(?:/|$)
^\\Q$_\\E
^\\Q$_\\E(.*)
^\\Q$_\\E(.+)$
^\\Q$_\\E\\s+(\\d+(?:\\.\\d+)?)
^\\Q$_->{id}\\E
^\\Q$_lang\\E$
^\\Q$_template_config{template_root}/\\E
^\\Q$_template_path\\E/?
^\\Q${\\__PACKAGE__}::
^\\Q${alias}.\\E(.+)$
^\\Q${axpart}\\E
^\\Q${BACKEND_NAMESPACE}\\E::
^\\Q${boundary}\\E$
^--\\Q${boundary}\\E--\\s*$
^\\Q${conf}\\E: [^\\n]*$
^\\Q${cur}.\\E
^\\Q${dd}\\E +(\\w+) *(.*)?\\n
^\\Q${dd}\\E +\\(?(\\w+)\\)? *(.*)?\\n
^\\Q${dotdots}\\E[\\/\\\\]
^\\Q${ex_class}=HASH(0x\\E[[:xdigit:]]+\\Q)BEGIN failed--compilation aborted\\E
^\\Q${fq_hostname}.\\E
^\\Q${listview_location}\\E
^\\Q${mailaddr}\\E\\|
^\\Q${mailaddr}\\E\\|ip=(?:\\d+\\.\\d+|none)$
^\\Q${node}\\E
^\\Q${ns_cdao}\\Ehas_(?:Int|Float)_Value
^\\Q${nsprefix}\\E:
^\\Q${prefix}.\\E(.+)$
^\\Q${stem}\\E[^A-Za-z0-9]+
^\\Q${templates_root}\\E\\/(.+)\\.(${types})$
^\\Q${tmp_base}$tmp_prefix\\E(\\d*)\\.(\\d*)
^\\Q${tz_candidate}\\E$
^\\Q$1
^\\Q$1\\E
^\\Q$1\\E$
^\\Q$a
^\\Q$a\\E
^\\Q$abs_app_path
^\\Q$abs_base_path\\E
^\\Q$abs_inc\\E$
^\\Q$action{text}
^\\Q$action{what}
^\\Q$addr\\E\\|ip=
^\\Q$address\\E
^\\Q$alias.\\E(.+)$
^\\Q$answer
^\\Q$answer\\E
^\\Q$any\\E
^\\Q$APIBase\\E
^\\Q$app
^\\Q$app_class\\E::Bot::
^\\Q$app_class\\E::Server::
^\\Q$apr
^\\Q$arg
^\\Q$arg\\E
^\\Q$arg\\E$
^\\Q$arg\\E(?:-|\\z)
^\\Q$args{_dbname}\\E\\.
^\\Q$args{'alias'}.
^\\Q$args{function}\\E:
^\\Q$args{OLD}\\E\\.
^\\Q$args{prefix}\\E::
^\\Q$argv{$key}
^\\Q$assertion\\E$
^\\Q$attr\\E
^\\Q$attr->{name}\\E\\s*=
^\\Q$AttributePrefix\\E(.+)
^\\Q$avail_lang\\E(_[A-Z]+)?$
^\\Q$aza\\E
^\\Q$aza_kana\\E
^\\Q$b\\E
^\\Q$base/
^\\Q$base\\E
^\\Q$base\\E#?
^\\Q$base\\E\\:\\:
^\\Q$base\\Es?
^\\Q$base_class\\E
^\\Q$base_lang\\E_
^\\Q$base_path\\E
^\\Q$base_path\\E/?
^\\Q$base_path\\E::
^\\Q$baseclass\\E::Model::
^\\Q$basename\\E\\.orig(-[[:alnum:]-]+)?\\.tar\\.$ext$
^\\Q$basename\\E\\.orig-([[:alnum:]-]+)\\.tar\\.$re_ext$
^\\Q$basename\\E\\.orig-([[:alnum:]-]+)\\.tar\\.$re_ext\\.asc$
^\\Q$basename\\E\\.orig-[[:alnum:]-]+\\.tar\\.$opts{extension}$
^\\Q$basename\\E\\.orig\\.tar\\.$opts{extension}$
^\\Q$basename\\E\\.orig\\.tar\\.$re_ext$
^\\Q$basename\\E\\.orig\\.tar\\.$re_ext\\.asc$
^\\Q$basenamerev\\E\\.debian\\.tar\\.$re_ext$
^\\Q$basenamerev\\E\\.tar\\.$comp_ext_regex$
^\\Q$basepackage\\E$
^\\Q$basepath\\E\\\\
^\\Q$BASEVERSION\\E(?:_(?:svn|git)[0-9]+)?$
^\\Q$block->[-1]\\E
^\\Q$bom
^--\\Q$bound\\E
^--\\Q$boundary\\E
^--\\Q$boundary\\E$
^--\\Q$boundary\\E--$
^--\\Q$boundary\\E(?:--)?\\s*$
^--\\Q$boundary\\E\\s*
^--\\Q$boundary\\E\\s*$
^--\\Q$boundary\\E--\\s*$
^\\Q$build_src\\E/.*?(im|cd|iup).*$
^\\Q$build_town\\E(.+)\u00ef\u00bc\u0088(.+)\u00ef\u00bc\u0089$
^\\Q$build_town_kana\\E(.+)\\(.+$
^\\Q$c\\E
^\\Q$caller*\\E
^\\Q$caller\\E::([^:]+)$
^\\Q$candidate\\E
^\\Q$canon_url\\E
^\\Q$cap\\E
^\\Q$cf->{location}->[0]\\E
^\\Q$cfgFile\\E$
^\\Q$class
^\\Q$class\\E$
^\\Q$class\\E\\:\\:
^\\Q$clause\\E(\\.|\\z)
^\\Q$close
^\\Q$cmd\\E
^\\Q$cmd\\E \\b @?
^\\Q$cmdstr\\E
^\\Q$cmdstr\\E\\s*(?:($cmds))?\\s*(.*)
^\\Q$cmdstr\\E\\s+
^\\Q$codeblock_marker\\E\\s*$
^\\Q$command_name\\E\\s(.+)
^\\Q$commodity
^\\Q$common_prefix\\E
^\\Q$cookie[3]\\E
^\\Q$cookie_path\\E
^\\Q$country\\E$
^\\Q$CPAN::Config->{build_dir}\\E
^\\Q$creator\\E$
^\\Q$ctag\\E
^\\Q$cur
^\\Q$curdir\\E
^\\Q$current\\E/*(([^/]+)/?)
^\\Q$cvs_base\\E/(.*?)(/.*)?
^\\Q$cwd\\E
^\\Q$cwd\\E\\/(.+)$
^\\Q$d\\E
^\\Q$d\\E[\\\\](.*)$
^\\Q$data{'seq1'}->{'name'}
^\\Q$data->{path_col_sep}\\E
^\\Q$date\\E(.*)$
^\\Q$dav\\E
^\\Q$dbase\\E/(.*)$
^\\Q$dbase\\E[/\\\\]*(.+)$
^\\Q$dbase\\E\\W?
^\\Q$Dec_char\\E(.+)$
^\\Q$delim$nested$eledelim\\E\\s*
^\\Q$dir
^\\Q$dir\\/\\E
^\\Q$dir\\E
^\\Q$dir\\E([/\\\\]?.*)
^\\Q$dir\\E([/\\\\]?.*)$
^\\Q$Dir\\E/
^\\Q$dir\\E[\\/\\\\]
^\\Q$dir\\E\\\\(blib\\\\.+)$
^\\Q$dir\\E\\/?
^\\Q$dir->{'dir'}\\E(\\/.*)$
^\\Q$directive
^\\Q$directory\\E.|\\.pm$
^\\Q$dirname\\E\\/
^\\Q$disk->{devpath}\\E|\\Q$dmpath\\E$
^\\Q$distdir\\E(?:/|$)
^\\Q$distribution-\\E[\\d.]+
^\\Q$doc\\E$
^\\Q$docroot\\E
^\\Q$domain
^\\Q$domain\\E$
^\\Q$dotslash
^\\Q$DRefPrefix\\E(.*)
^\\Q$dstpath/
^\\Q$e\\E$
^\\Q$el\\E$
^\\Q$eledelim\\E
^\\Q$en\\E\\s*([,-:]*)\\s*(.*)
^\\Q$end
^\\Q$end_marker\\E\\s*$
^\\Q$env_base\\E_
^\\Q$env_base\\E_[_0-9A-Za-z]+$
^\\Q$ENV{PWD}\\E/?
^\\Q$ENV{'SCRIPT_NAME'}
^\\Q$ENV{'SCRIPT_NAME'}\\E
^\\Q$env->{SCRIPT_NAME}\\E
^\\Q$enviroment->{SCRIPT_NAME}\\E
^\\Q$environment{SCRIPT_NAME}\\E
^\\Q$environment->{SCRIPT_NAME}\\E
^\\Q$exclude\\E(::|$)
^\\Q$exp_msg\\E at .+ line \\d+\\.?$
^\\Q$exp_msg\\E at \\S+ line \\d+\\.?$
^\\Q$exp_path\\E
^\\Q$expected
^\\Q$expected\\E
^\\Q$exportfile\\E$
^\\Q$f\\E$
^\\Q$family_bits$device_bits\\E
^\\Q$family_bits\\E
^\\Q$field\\E$
^\\Q$field\\E\\:([^\\n]*)
^\\Q$field\\E\\:[^\\n]*\\n?
^\\Q$field\\E\\:\\s*([^\\n]*?)\\;?\\s*$
^\\Q$File::Find::name
^\\Q$file_ext\\E$
^\\Q$filePath\\E
^\\Q$fileSecurePath\\E
^\\Q$fio->{localDir}
^\\Q$first_dir\\E
^\\Q$fmt\\E\\s*-\\s*(.+)\\z
^\\Q$fname\\E: 
^\\Q$fname\\E\\/
^\\Q$folder
^\\Q$folder\\E\\/?
^\\Q$freq\\E\\*
^\\Q$from\\E
^\\Q$from\\E$
^\\Q$from\\E(?:_\\d+)$
^\\Q$full_dbgp_prefix/\\E(\\d+)/(.*)$
^\\Q$fullpath\\E\\/?
^\\Q$fworkprefix\\E
^\\Q$h{$cf}{id}\\E
^\\Q$hate_path/
^\\Q$hdr\\E:[ \\t]+(.*?\\n(?![ \\t]))
^\\Q$hdr\\E[ \\t]*:[ \\t]*(.*?\\n(?![ \\t]))
^\\Q$header
^\\Q$header\\E
^\\Q$header\\E(.*?)$CRLF(?=$boundary)
^\\Q$hear_me
^\\Q$holname\\E
^\\Q$HOSTNAME\\E (-?\\d+) 
^\\Q$hyp\\E
^\\Q$char\\E
^\\Q$check\\E
^\\Q$checking\\E$
^\\Q$child\\E/?$
^\\Q$choice\\E$
^\\Q$i\\E$
^\\Q$id\\E
^\\Q$ID\\E/bin:
^\\Q$id\\E\\b
^\\Q$in
^\\Q$in\\E
^\\Q$inc\\E/
^\\Q$inc_base$dir\\E
^\\Q$inc_base\\E(.*)
^\\Q$inc_path\\E(.*)\\.pm$
^\\Q$incomplete
^\\Q$indent
^\\Q$index\\E
^\\Q$index\\E$
^\\Q$index_dir\\E\\/?
^\\Q$index_name
^\\Q$input\\E
^\\Q$input\\E$
^\\Q$inst_root\\E$
^\\Q$internal\\E
^\\Q$k\\E$
^\\Q$k\\E=.*$
^\\Q$key$self->{sep}\\E
^\\Q$key\\E
^\\Q$Key\\E
^\\Q$key\\E$
^\\Q$key\\E(.+)
^\\Q$key\\E=
^\\Q$KEY_SEPARATOR\\E(.+)
^\\Q$key1\\E \\Q$key2\\E
^\\Q$l\\E.
^\\Q$lastkey\\E=
^\\Q$lib_path\\E\\/
^\\Q$LIBS_IDX{libs}{$Key}[0]\\E
^\\Q$line
^\\Q$Lingua::Wordnet::SUBDELIM
^\\Q$link\\E$
^\\Q$lnk\\E
^\\Q$location
^\\Q$location\\E
^\\Q$location\\E(/|$)
^\\Q$lop\\E(?:/|$)
^\\Q$lower_lang\\E$
^\\Q$m_path\\E
^\\Q$Magic
^\\Q$MAGIC\\E(\\S+)
^\\Q$main_module_path\\/\\E([^\\/]+)\\.pm
^\\Q$marker\\E(\\S+)(?:\\h+([^\\n]+))?\\n
^\\Q$mask\\E
^\\Q$mask\\E[\\\\\\/]*(.+)
^\\Q$masterPageGUID
^\\Q$maybe_stem
^\\Q$mbase
^\\Q$md5
^\\Q$MD5Magic
^\\Q$me\\E!
^\\Q$meas\\E[ ]
^\\Q$method
^\\Q$method\\E$
^\\Q$mimetype\\E=
^\\Q$mimetype\\E=(.*)$
^\\Q$mod\\E::
^\\Q$modbase\\E::
^\\Q$module\\E version \\Q$version\\E required
^\\Q$mpath\\E
^\\Q$mutants_dir\\E/(.*?)/(.*$)
^\\Q$my_home
^\\Q$my_nick\\E:\\s*
^\\Q$n\\E$
^\\Q$name
^\\Q$name\\E
^\\Q$name\\E:
^\\Q$name\\E_
^\\Q$name\\E=(.*)$
^\\Q$name_wanted\\E-\\d+\\.\\d+\\.gir$
^\\Q$namespace:
^\\Q$namespace\\E(?:::|$)
^\\Q$namespace\\E::
^\\Q$namespace_dir\\E
^\\Q$newquoter
^\\Q$nick
^\\Q$nick\\E$
^\\Q$node->{quoter}
^\\Q$now1\\E$
^\\Q$object_prefix\\E
^\\Q$objectHeaderGUID
^\\Q$objectTrailerGUID
^\\Q$old\\E
^\\Q$oldname\\E
^\\Q$oPps->{Name}\\E$
^\\Q$opt{sbase}\\E
^\\Q$options->{strip_leading}\\E
^\\Q$Opts{Masquerade_From}\\E
^\\Q$orig_server
^\\Q$original_nonce\\E.
^\\Q$origpath\\E
^\\Q$out_prefix\\E
^\\Q$p$self->{path_col_sep}\\E
^\\Q$p\\E
^\\Q$p\\E$
^\\Q$p\\E(.*)
^\\Q$p\\E\\_?(\\w+?)_(.*)$
^\\Q$p{type}\\E::
^\\Q$pack\\E::
^\\Q$package\\E$
^\\Q$PACKAGE\\E::
^\\Q$param\\E$
^\\Q$parm\\E$
^\\Q$parser_libdir\\E\\/(.+)\\.pm$
^\\Q$part\\E
^\\Q$part\\E$
^\\Q$partial\\E
^\\Q$parts[0]\\E
^\\Q$parts[1].$parts[0]\\E$
^\\Q$pat\\E
^\\Q$path
^\\Q$path\\E$
^\\Q$path\\E/
^\\Q$path\\E/(.+)\\.pm\\Z
^\\Q$path\\E:
^\\Q$path\\E\\/?
^\\Q$path_lop\\E(?:/|$)
^\\Q$pb_open\\E(\\d+(.)?)\\Q$pb_close\\E\\s*$
^\\Q$perllibdir\\E[\\'/]
^\\Q$phyml_result_file_prefix\\E
^\\Q$place_holder\\E:
^\\Q$plugin\\E
^\\Q$plugin_class\\E::Model::
^\\Q$pod_dir
^\\Q$podRoot\\E.
^\\Q$prd\\E
^\\Q$pre\\E(.*)$
^\\Q$pre\\E(.+?)?
^\\Q$pre\\E(?:::|$)
^\\Q$prefix
^\\Q$PREFIX
^\\Q$prefix$nextchar\\E.
^\\Q$prefix:
^\\Q$PREFIX\\E
^\\Q$prefix\\E
^\\Q$prefix\\E(.*)
^\\Q$prefix\\E(.+)$
^\\Q$prefix\\E::
^\\Q$prefix\\E\\/
^\\Q$prefix\\E\\b
^\\Q$prefix\\t
^\\Q$prefs->{'rootdir'}\\E
^\\Q$prefSep
^\\Q$prev_indent\\E(.+)$
^\\Q$printed\\E(\\s.*)?\\n
^\\Q$project\\E/
^\\Q$project_dir\\E
^\\Q$project_path\\E(/rev/|/log[{/])
^\\Q$project_root\\E
^\\Q$prop\\E$
^\\Q$proto
^\\Q$q\\E
^\\Q$qn\\E$
^\\Q$r_con->{dira}
^\\Q$r_con->{dirb}
^\\Q$r_t\\E
^\\Q$r->
^\\Q$ra->{repos_root}\\E(/|$)
^\\Q$re\\E\\s*$
^\\Q$ref\\E\\=([A-Z]+)\\(0x[0-9a-fA-Z]+\\)$
^\\Q$ref_A\\E\\=([A-Z]+)\\(0x[0-9a-f]+\\)$
^\\Q$ref_B\\E\\=([A-Z]+)\\(0x[0-9a-f]+\\)$
^\\Q$ref_type\\E\\=([A-Z]+)\\(0x[0-9a-f]+\\)$
^\\Q$regex\\E$
^\\Q$REGEX_TO_STRING_PREFIX\\E
^\\Q$region\\E-
^\\Q$relalias.\\E.+
^\\Q$remote_base\\E/?
^\\Q$remove
^\\Q$removed\\E$
^\\Q$repository\\E$
^\\Q$repospath_start
^\\Q$return
^\\Q$return\\E
^\\Q$rolename\\E$
^\\Q$root
^\\Q$root\\E
^\\Q$root\\E$
^\\Q$root\\E(.*)
^\\Q$root\\E[\\\\/]
^\\Q$root_dir
^\\Q$rr\\E
^\\Q$RT::rtname\\E\\b
^\\Q$ru_path\\E
^\\Q$s\\E
^\\Q$scope\\E
^\\Q$scope\\E$
^\\Q$script_name\\E
^\\Q$search_string\\E
^\\Q$searchStr\\E
^\\Q$sect\\E$
^\\Q$section\\E$
^\\Q$select\\E$
^\\Q$self->
^\\Q$self->{ strict_root }\\E
^\\Q$self->{\"-\"}\\E
^\\Q$self->{\"+\"}\\E
^\\Q$self->{_script_url}?\\E
^\\Q$self->{_syndicator}{prefix}
^\\Q$Self->{basepath}\\E/?
^\\Q$self->{conf}{RequireRealm}\\E$
^\\Q$self->{dataroot}/\\E
^\\Q$self->{depotbase}\\E/
^\\Q$self->{incopy}[-1]{src_frompath}/
^\\Q$self->{'key'}
^\\Q$self->{multiValuesSeparator}\\E
^\\Q$self->{name}::$self->{dispatch}::
^\\Q$self->{path_col_sep}\\E(.*)
^\\Q$self->{prefix}\\E
^\\Q$self->{Prefix}\\E
^\\Q$self->{'prefix'}\\E
^\\Q$self->{quote_char}\\E
^\\Q$self->{repos_root}\\E(/|$)
^\\Q$self->{root_schema_url}\\E\\#
^\\Q$self->{strip_path}\\E
^\\Q$self->{trigger}
^\\Q$Self->{url}\\E/?
^\\Q$self->{'workspace'}\\E
^\\Q$self->namespace\\E::
^\\Q$sent\\E
^\\Q$sep\\E+
^\\Q$server_admin\\E$
^\\Q$scheme\\E:
^\\Q$sigil
^\\Q$site\\E
^\\Q$sname\\E$
^\\Q$sName\\E$
^\\Q$sName\\E_(\\d+)_$
^\\Q$snip\\E
^\\Q$snips[0]
^\\Q$source_dir
^\\Q$sr\\E/(.*)
^\\Q$src\\E[\\(\\)\\d\\s:]*
^\\Q$src\\E[\\d\\s:]*
^\\Q$src_path\\E(\\/|$)
^\\Q$src_target
^\\Q$srcdir\\E
^\\Q$srcpath
^\\Q$srcpath/
^\\Q$srcrootdir\\E
^\\Q$srfs\\E/
^\\Q$srchval\\E
^\\Q$srchval\\E$
^\\Q$stacktop\\E$
^\\Q$start\\E::
^\\Q$stash\\E::(?!\\z|.*::)
^\\Q$state\\E\\s+(.+)
^\\Q$steal_from
^\\Q$string
^\\Q$strip
^\\Q$strip_root\\E
^\\Q$SUBDELIM
^\\Q$SUBSTITUTION_TAG\\E\\s*(.+?)\\s*$
^\\Q$substring
^\\Q$svn_base\\E(\\w+)
^\\Q$svn_dir\\E/
^\\Q$SWITCH_PREFIX_STR\\E
^\\Q$sym\\E::
^\\Q$symbol$;\\E(.*)
^\\Q$system_root\\E/
^\\Q$t2\\E$
^\\Q$table\\E$
^\\Q$tag\\E$
^\\Q$Tag\\E$
^\\Q$tag\\E$sep(.*?)$sep?$
^\\Q$tag\\E(?: \\(\\d+\\))?$
^\\Q$tag_prefix\\E(.*)
^\\Q$tag_prefix\\E(?<tag>.*)
^\\Q$tagname\\E$
^\\Q$tar\\E[^/]*/
^\\Q$target\\E
^\\Q$target_dir\\E
^\\Q$target{ $ident }\\E$
^\\Q$template_name\\E$
^\\Q$TERMINATOR\\E$
^\\Q$terminator\\E\\n
^\\Q$text
^\\Q$text\\E
^\\Q$textval\\E
^\\Q$tftp_prefix\\E
^\\Q$this->{_co}\\E\\/
^\\Q$this->{ROOT}\\E::
^\\Q$tie\\E
^\\Q$tmp\\E$
^\\Q$tmp_prefix\\E(\\d*)\\.(\\d*)
^\\Q$to\\E$
^\\Q$to\\E(?:_\\d+)$
^\\Q$to_constraint\\E$
^\\Q$token
^\\Q$token\\E.*
^\\Q$top_level\\E.
^\\Q$topath\\E
^\\Q$TopClass\\E/?$
^\\Q$topdir\\E(.)(?:\\1)*
^\\Q$topdir\\E[\\\\/]
^\\Q$topdir\\E\\\\
^\\Q$topdir\\E\\/
^\\Q$topic
^\\Q$TR{$tar}\\E
^\\Q$type
^\\Q$type$str\\E
^\\Q$type\\E
^\\Q$type\\E$
^\\Q$type\\E((?:;.*)?)$
^\\Q$type\\E(\\w+)\\s*(.*)$
^\\Q$type\\E[ ]
^\\Q$updir_str\\E
^\\Q$uri\\E \\Q$alg\\E=([a-f0-9]{32,128})\\r\\n
^\\Q$uri\\E \\Q$alg\\E=-1\\r\\n
^\\Q$user\\E$
^\\Q$username\\E:
^\\Q$v\\E$
^\\Q$v\\E/
^\\Q$val\\E$
^\\Q$value\\E
^\\Q$var\\E$
^\\Q$version\\E 
^\\Q$version\\E$
^\\Q$w\\E=
^\\Q$want\\E
^\\Q$warn_0\\E # (.*)$
^\\Q$warn_0\\E # no warnings\\b
^\\Q$warn_1\\E # (.*)$
^\\Q$warn_1\\E # use warnings\\b
^\\Q$warning\\E\\b.*\\n
^\\Q$web_root\\E\\/
^\\Q$webmaster_email\\E$
^\\Q$webpath
^\\Q$WebURL
^\\Q$word
^\\Q$word\\E
^\\Q$ws\\E(.+)$
^\\Q$x_traversal_path\\E
^\\Q$y\\E ?
^\\Q%\\^
^\\\\Q((\\\\E\\\\s*append\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*delete\\\\s+(-?\\\\d+)\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*delete\\\\s+([^ ]+)?\\\\s*(.+)\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*delete\\\\s+([^ ]+)?\\\\s*\\\"(.+)\\\"\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*inline\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*insert\\\\s+(after|before)\\\\s+([^ ]+)?\\\\s*\\\"(.+)\\\"\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*insert\\\\s+(after|before)\\\\s+(\\\\d+)\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*merge(?:\\\\s+on\\\\s+(.*?))?\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*merge\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*merge\\\\s+(on)\\\\s+(.+)\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*prepend\\\\s*\\\\Q))\\\\E$
^\\\\Q((\\\\E\\\\s*replace\\\\s*\\\\Q))\\\\E$
^\\\\Q(/.*?)\\\\E.*
^\\\\q(uit)?\\s*$
^\\Q***************\\E$
^\\Q../
^\\Q.1.3.6.1.4.1.9.1.\\E\\d+$
^\\Q.1.3.6.1.4.1.9.9.368.4.\\E\\d+
^\\Q@{[ $self->req->base ]}\\E
^\\Q\u00a5\u00a2\u00a5\u00af\u00a5\u00bb\u00a5\u00b9\u00a4\u00c7\u00a4\u00ad\u00a4\u00de\u00a4\u00bb\u00a4\u00f3\\E<html>
^\\Q\u00a5\u00c7\u00a1\u00bc\u00a5\u00bf\u00a4\u00cf\u00a4\u00a2\u00a4\u00ea\u00a4\u00de\u00a4\u00bb\u00a4\u00f3\u00a1\u00a3\\E<html>
^\\Q\u00b4\u00d6\u00b3\u00d6\u00a4\u00f2\u00b6\u00f5\u00a4\u00b1\u00a4\u00ca\u00a4\u00a4\u00cf\u00a2\u00c2\u00b3\u00c5\u00aa\u00a4\u00ca\u00a5\u00da\u00a1\u00bc\u00a5\u00b8\u00a4\u00ce\u00c1\u00ab\u00b0\u00dc\u00a1\u00a6\u00b9\u00b9\u00bf\u00b7\u00a4\u00f2\u00c9\u00d1\u00c8\u00cb\u00a4\u00cb\u00a4\u00aa\u00a4\u00b3\u00a4\u00ca\u00a4\u00ef\u00a4\u00ec\u00a4\u00c6\u00a4\u00a4\u00a4\u00eb\\E
^\\Q^^\\E
^\\Q</IfModule>\\E
^\\QApp::GitHooks::Plugin::Test::\\E
^\\Qapplication/json\\E
^\\QC::DynaLib::__ANON__
^\\QDBIx::Class::
^\\QDEVNAME=\\E(.*)
^\\QDEVTYPE=\\E(.*)
^\\Qhttp://rt.cpan.org/NoAuth/Bugs.html?Dist=\\E(\\w+)
^\\Qhttp://rt.cpan.org/NoAuth/ReportBug.html?Queue=\\E(\\w+)
^\\Qif (typeof A4J != 'undefined') { if (A4J.AJAX) { with (A4J.AJAX) {\\E|\\Q}}};\\E$
^\\Qinc\\E::
^\\Qmain.*\\E$
^\\QMAJOR=\\E(.*)
^\\QMINOR=\\E(.*)
^\\QMultiple values
^\\Qname: DBIx-Class\\E$
^\\Qno such column:
^\\Qno such table:
^\\QNote: including file:
^\\QNote: including file:\\E(\\s+)(.*)
^\\QNote: including file:\\E\\s+\\Q$include
^\\Qone\\E
^\\Qp5-$name-\\E[\\d.]+
^\\QTemplate::Plugin
^\\QTests were run but no plan was declared and done_testing() was not seen.\\E$
^\\Qthree\\E
^\\Qtwo\\E
^\\QUsage: ->coderef2text(CODEREF)\\E
^\r\n                      ([#]{2,4}\\s+(
^\\R+|^[\t\\s]*\\R+
^\\Recursive\\(var(\\d+)=\\{\\}, \\-\\[\\(?var\\1\\)?(\\.-|-1)\\]\\)$
^\\Recursive\\(var(\\d+)=\\{\\}, \\+\\[var\\1\\]\\)$
^\\s((
^\\s*                                        # INITIAL WHITESPACE\n    (\n        (                                           # NOTE\n            (\n                (?P<note>[abcdefg])                     # NOTE NAME\n                ((?P<sharp>(is)+)|(?P<flat>(es)+)) ?    # ACCIDENTALS ?\n                (?P<octave>'+|,+) ?                     # OCTAVE ?\n                (=(?P<octave_check>'+|,+)) ?            # OCTAVE CHECK ?\n                |                                       # or\n                (?P<rest>r)                             # REST\n            )\n            (?P<duration>\\d+\\.*) ?                      # DURATION ?\n            (\\s*(?P<tie>~)) ?                           # TIE ?\n        )\n        |                                           # or\n        \\\\(?P<command>(                             # COMMANDS\n            relative | acciaccatura\n        ))\n        |                                           # or\n        (?P<open_brace>{) | (?P<close_brace>})      # { or }\n    )\n    
^\\s*         # ignore insignificant leading spaces\n                 (.*[^|\\s])   # any non-empty string, not ending with ' ' or '|'\n                 \\|           # followed by a literal '|'\n                 (\\w+)        # followed by a word (the alias))\n                 \\s*          # ignore insignificant trailing spaces\n                 $
^\\s* / ((?:(?:(?:\\\\\\\\)*\\\\/) | [^/] )*) / (.*?)\\s*$
^\\s*#([\\w$]+)(?:=([^\"]\\S*|\"(?:[^\"\\\\]|\\\\.)*\"))?\\s*
^\\s*#:include\\s*([\"\\'])(?P<incfile>.+?)\\1
^\\s*#\\s*(pragma\\s*)?include\\s+[<\"](?P<file>.*)[>\"]
^\\s*#\\s*END\\s+\\Q$type\\E\\s*$
^\\s*#\\s*endif\\b.*?(?<!\\\\)\\n
^\\s*#\\s*if\\s+0\\s*$[^]*?^\\s*#\\s*endif\\s*$
^\\s*#\\s*include\\s*(<(?P<brackets>\\S+?)>|\"(?P<quotes>\\S+?)\")
^\\s*#\\s+(?P<colnumber>[0-9]+)\\s+-\\s+(?P<colname>(.*))
^\\s*$LABEL\\s*=\\s*(.*?)(\\\\)?\\s*$
^\\s*$LABEL\\s*=\\s*\"(.*)\"\\s*(\\\\)?${TRAILING_WHITESPACE}$
^\\s*%\\s+(?P<colname>\\w+)
^\\s*(
^\\s*('
^\\s*(%?[\\\"\\']((([^\\\"\\'\\\\\\n\\r])|(\\\\([ntbrf\\\\'\\\"])|([0-7][0-7?)|([0-3][0-7][0-7])))*)[\\\"\\'](\\@([a-z0-9]+(-[a-z0-9]+)?))?%?)\\s*
^\\s*((
^\\s*(((
^\\s*((?:\\\\.|[\\w\\u00c0-\\uFFFF\\-])+)\\s*(?:(\\S?)=\\s*(?:(['\"])([^]*?)\\3|(#?(?:\\\\.|[\\w\\u00c0-\\uFFFF\\-])*)|)|)\\s*(i)?\\]
^\\s*((?:W/)?\"(?:[^\"\\\\]|\\\\.)*\")\\s*\\]
^\\s*((@)\\S++\\n)
^\\s*((@)\\S++\\s)
^\\s*(.*?)(\\\\)?\\s*$
^\\s*(.*?)\\s*(\\\\)?\\s*$
^\\s*(.*?[^\\\\]+?(?:\\\\\\\\)*)=(.*)$
^\\s*(:(?P<role>\\w+):`(?P<name>[a-zA-Z0-9_.-]+)`| (?P<name2>[a-zA-Z0-9_.-]+))\\s*
^\\s*(?!#)(?P<name>.+)=(['\"]?)(?P<value>.+)\\2
^\\s*(?:#\\s*+(.*?)\\s*)?$
^\\s*(?:(?P<scope>my|our)\\s+)?(?:module|class|role|enum|grammar)
^\\s*(?:(?P<true>y|true|yes|on)|(n|false|no|off|))\\s*$
^\\s*(?:([\\w\\\\]+|\\?)::)?([\\w\\\\]+)\\s*\\((.*)\\)\\s*$
^\\s*(?:'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|[^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*)\\s*(?:,\\s*(?:'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|[^,'\"\\s\\\\]*(?:\\s+[^,'\"\\s\\\\]+)*)\\s*)*$
^\\s*(?:\\[(?:\\s?)(?P<source>[^,\\]]*)(?:,\\s(?P<category>[^,\\]]*))?(?:,\\s?(?P<level>[a-zA-Z_]*))?\\s?\\])?\\s*(?P<message>.*)$
^\\s*(?:\\{:(?!(?:
^\\s*(?:<\\?xml[^>]*>\\s*)?(?:<!doctype svg[^>]*\\s*(?:\\[?(?:\\s*<![^>]*>\\s*)*\\]?)*[^>]*>\\s*)?<svg[^>]*>[^]*<\\/svg>\\s*$
^\\s*(?:<\\?xml[^>]*>\\s*)?(?:<!doctype svg[^>]*\\s*(?:<![^>]*>)*[^>]*>\\s*)?<svg[^>]*>[^]*<\\/svg>\\s*$
^\\s*(?:array(?P<dim>\\d)d\\s*\\(\\s*(?P<indices>([\\d\\.+\\-]+|\\{\\})(?:\\s*,\\s*([\\d\\.+\\-]+|\\{\\}))*)\\s*,\\s*)?\\[(?P<vals>[\\w\\s\\.,+\\-\\\\/\\*^|\\(\\)\\{\\}]*)\\]\\)?$
^\\s*(?:url|local)\\s*\\(\\s*(?P<url>\\S+)\\s*\\)\\s*$
^\\s*(?<!\\\\)([%*])
^\\s*(?<_1>(?<_2>@)\\S++\\n)
^\\s*(?<_1>(?<_2>@)\\S++\\s)
^\\s*(?<fn>(?:[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}']*|\\((?!--+\\))[\\p{S}\\p{P}&&[^(),;\\[\\]`{}_\"']]+\\))(?:\\s*,\\s*\\g<fn>)?)\\s*(::)
^\\s*(?<pre-tag-text>[[:alnum:]]+[[:alnum:][:space:][:punct:]]*?)<
^\\s*(?P<ADDRESS>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+proto\\s+(?P<PROTO>\\S+)\\s+scope\\s+(?P<SCOPE>\\S+)\\s+src\\s+(?P<SRC>\\S+)\\s*$
^\\s*(?P<ADDRESS>\\S+)\\s+via\\s+(?P<VIA>\\S+)\\s+dev\\s+(?P<DEV>\\S+).*$
^\\s*(?P<ADDRESS>\\S+)\\s+via\\s+(?P<VIA>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+metric\\s+(?P<METRIC>\\S+)\\s*$
^\\s*(?P<ADDRESS>\\S+)\\s+via\\s+(?P<VIA>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+metric\\s+(?P<METRIC>\\S+)\\s+mtu\\s+(?P<MTU>\\S+)\\s*$
^\\s*(?P<ADDRESS>\\S+)\\s+via\\s+(?P<VIA>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+proto\\s+(?P<PROTO>\\S+)\\s+metric\\s+(?P<METRIC>\\S+)\\s*$
^\\s*(?P<ADDRESS>\\S+)\\s+via\\s+(?P<VIA>\\S+)\\s+dev\\s+(?P<DEV>\\S+)\\s+proto\\s+(?P<PROTO>\\S+)\\s+metric\\s+(?P<METRIC>\\S+)\\s+expires\\s+(?P<EXPIRES>\\S+)\\s+mtu\\s+(?P<MTU>\\S+)\\s+hoplimit\\s+(?P<HOPLIMIT>\\S+)$
^\\s*(?P<basefile>\\d{4}:\\d+)
^\\s*(?P<body>.*?)(?P<backslashes>\\\\*)$
^\\s*(?P<closing>/)?amp-source-stack\\s+(?P<args>{.+})\\s*$
^\\s*(?P<comm>.+)-(?P<thread>[0-9]+)\\s+\\(\\s*(?P<tgid>\\S+)\\)\\s+\\[(?P<core>[0-9]+)\\]\\s+(?P<time>\\S+):\\s+(?P<func>.+):(?P<etc>.+)
^\\s*(?P<comm>.+)-(?P<thread>[0-9]+)\\s+\\(\\s*(?P<tgid>\\S+)\\)\\s+\\[(?P<core>[0-9]+)\\]\\s+(?P<time>\\S+):\\s+(?P<func>\\S+)(?P<etc>.+)
^\\s*(?P<comm>.+)-(?P<thread>[0-9]+)\\s+\\(\\s*(?P<tgid>\\S+)\\)\\s+\\[(?P<core>[0-9]+)\\]\\s+(?P<time>\\S+):\\s+(?P<func>\\S+):(?P<etc>.+)
^\\s*(?P<comm>.+)-(?P<thread>[0-9]+)\\s+\\[(?P<core>[0-9]+)\\]\\s+(?P<time>\\S+):\\s+(?P<func>.+):(?P<etc>.+)
^\\s*(?P<comm>.+)-(?P<thread>[0-9]+)\\s+\\[(?P<core>[0-9]+)\\]\\s+(?P<time>\\S+):\\s+(?P<func>\\S+)(?P<etc>.+)
^\\s*(?P<comm>.+)-(?P<thread>[0-9]+)\\s+\\[(?P<core>[0-9]+)\\]\\s+(?P<time>\\S+):\\s+(?P<func>\\S+):(?P<etc>.+)
^\\s*(?P<comm>\\S+)-(?P<thread>[0-9]+)\\s+\\(\\s*(?P<tgid>\\S+)\\)\\s+\\[(?P<core>[0-9]+)\\]\\s+(?P<time>\\S+):\\s+(?P<func>\\S+):(?P<etc>.+)
^\\s*(?P<comm>\\S+)-(?P<thread>[0-9]+)\\s+\\[(?P<core>[0-9]+)\\]\\s+(?P<time>\\S+):\\s+(?P<func>\\S+):(?P<etc>.+)
^\\s*(?P<comm>\\S+)-(?P<thread>[0-9]+)\\s+\\[(?P<core>[0-9]+)\\]\\s+\\(\\s*(?P<tgid>.+)\\)\\s+(?P<time>\\S+):\\s+(?P<func>.+):(?P<etc>.+)
^\\s*(?P<comm>\\S+)-(?P<thread>[0-9]+)\\s+\\[(?P<core>[0-9]+)\\]\\s+\\(\\s*(?P<tgid>.+)\\)\\s+(?P<time>\\S+):\\s+(?P<func>\\S+)(?P<etc>.+)
^\\s*(?P<comm>\\S+)-(?P<thread>[0-9]+)\\s+\\[(?P<core>[0-9]+)\\]\\s+\\(\\s*(?P<tgid>.+)\\)\\s+(?P<time>\\S+):\\s+(?P<func>\\S+):(?P<etc>.+)
^\\s*(?P<data>([0-9\\.\\-]+\\s*?)+)\\s+(?P<id>[A-Z]{1,3})\\s*
^\\s*(?P<diagram>\\w+).*$
^\\s*(?P<filename>.*):(?P<line>\\d+)\\s*$
^\\s*(?P<id>[0-9]+\\s+[0-9]+\\s+R)
^\\s*(?P<id>[a-f\\d]{32})(?:v\\d+)?\\s*$
^\\s*(?P<integer>[\\+\\-]?\\d+)?(?P<fraction>.\\d+)?\\s*([eE]\\s*(?P<expof10>[\\+\\-]?\\d+))?$
^\\s*(?P<key>\\w+)\\s*=\\s*(?P<value>\\S.*)$
^\\s*(?P<long>-)?-(?P<key>[a-z]+)\\s+(?:(?P<optional>\\[[a-z]+\\])|(?P<required><[a-z]+>))?\\s+(?P<msg>.*)
^\\s*(?P<lower>\\d+)\\s*,\\s*(?P<upper>\\d+)\\s*$
^\\s*(?P<major>[0-9]+),(?P<minor>[0-9]+)\\s*(?P<operation>\\S+)\\s*(?P<address>\\S+)\\s+\\+\\s+(?P<size>[0-9]+)
^\\s*(?P<major>[0-9]+),(?P<minor>[0-9]+)\\s*(?P<operation>\\S+)\\s*\\(.*\\)\\s*(?P<address>\\S+)\\s+\\+\\s+(?P<size>[0-9]+)
^\\s*(?P<module>.*)
^\\s*(?P<module>.*)\\s+(?P<address>.*)
^\\s*(?P<module>.*)\\s+call_site=(?P<site>.*)\\s+refcnt=(?P<refcnt>[0-9]+)
^\\s*(?P<month>\\d{1,2})\\s*\\/\\s*(?P<year>\\d{2}|\\d{4})\\s*$
^\\s*(?P<name>.+?)\\s+\\((?P<provider>[^)]+)\\)\\s*$
^\\s*(?P<name>[\\S/]+)(?:\\s+(?P<version>\\S+))?\\s*$
^\\s*(?P<name>[\\w.-]+)\\s+(?P<count>[\\d]+)\\s+(?P<frequency>[\\d.]+)/h\\s+(?P<percentage>[\\d.]+) %\\s\\([\\w]+\\)\\s*$
^\\s*(?P<name>[\\w.-]+)\\s+(?P<size>[\\d]+)MB\\s+(?P<frequency>[\\d.]+)MB/h\\s+(?P<percentage>[\\d.]+) %\\s\\([\\w]+\\)\\s*$
^\\s*(?P<name>[\\w]+)\\s+(?P<time>[\\d]+) s\\s+(?P<frequency>[\\d.]+) s/msg\\s+\\([\\w]+\\)\\s*$
^\\s*(?P<name>[a-zA-Z0-9.+\\-]{1,})(\\s*\\(\\s*(?P<relop>[>=<]+)\\s*(?P<version>[0-9a-zA-Z:\\-+~.]+)\\s*\\))?(\\s*\\[(?P<archs>[\\s!\\w\\-]+)\\])?\\s*$
^\\s*(?P<name>[A-Za-z0-9_]*?)(?:\\s*?=\\s*?(?P<value>[0-9]*?)(?P<percent>\\%?))?\\s*?$
^\\s*(?P<name>\\/[A-Z0-9\\._]+)(?P<value>.*)
^\\s*(?P<num>[\\d.]+)\\s*(?P<unit>[a-zA-Z]+)?\\s*$
^\\s*(?P<num>\\d+)\\s*\\[(?P<id>\\w+)\\s*\\]:.*-\\s(?P<name>.*)$
^\\s*(?P<numerator>\\d+)/(?P<denominator>\\d+)$
^\\s*(?P<part_prefix>\\D+)(?P<range_start>\\d+)\\s*[-:]\\s*\\1(?P<range_end>\\d+)\\s*$
^\\s*(?P<path>.+?\\.\\w+):(?P<line>\\d+:)(?P<column>\\d+:?)?(?:(?P<tag>warning|error)[:])?(?P<message>.+?)(?: [(](?P<label>[-\\w]+)[)])?$
^\\s*(?P<path>.+?\\.\\w+):(?P<line>\\d+:)(?P<column>\\d+:?)?(?P<message>.+)$
^\\s*(?P<path>.+?\\.\\w+)\\((?P<line>\\d+)(?:,(?P<column>\\d+))?\\):(?P<message>.+)$
^\\s*(?P<pkg>(\\w|-)+)(?P<verspec>\\S*)\\s+\\(\\s*wheel from \\s*(?P<wheel_src_name>\\S+)\\)$
^\\s*(?P<prefix>Feature:|Scenario[^:]*:|Given|Then|And|But|When)(?<context>.*)$
^\\s*(?P<program>\\w+)\\s*\\{\\s*(?P<code>.*\\})\\s*\\}$
^\\s*(?P<proto>TCP6?) \\s+\n                       (?P<local_host>\\S+?):(?P<local_port>\\w+)\\s+\n                       (?P<foreign_host>\\S+?):(?P<foreign_port>\\w+|\\*)\\s+\n                       (?P<state>\\S+) (?: \\s+ (?:\n                               (?P<pid>\\d+)\n                       ))? \\s*$
^\\s*(?P<proto>UDP6?) \\s+\n                       (?P<local_host>\\S+?):(?P<local_port>\\w+)\\s+\n                       (?P<foreign_host>\\S+?):(?P<foreign_port>\\w+|\\*)\\s+\n                       (?: \\s+ (?:\n                               (?P<pid>\\d+)\n                       ))? \\s*$
^\\s*(?P<seek>[^\\s].*)\\s*---\\s*(?P<repl>[^\\s].*)\\s*$
^\\s*(?P<start>[\\d]+)?\\s*\\-\\s*(?P<end>[\\d]+)?\\s*$
^\\s*(?P<start>\\-?\\d+)?\\s*(?P<separator>:|(\\.{2,}))?\\s*(?P<end>\\-?\\d+)?\\s*$
^\\s*(?P<start>\\d*).*(?P<stop>\\d*)\\s*$
^\\s*(?P<start>\\d+)\\-(?P<end>\\d+)\\s*$
^\\s*(?P<timestamp>.*?)\\s+(?P<level>[A-Z]+)(\\s+\\[(?P<thread>.*?)\\])\\s+(?P<logger>\\S+)(\\s+\\((?P<caller_location>\\S+)\\))?( - |: )(?P<message>.*?)$
^\\s*(?P<timestamp>.*?)\\s+(?P<level>[A-Z]+)\\s+(?P<logger>\\S+)(\\s+\\((?P<thread>.*?)\\))?( - |: )(?P<message>.*?)$
^\\s*(?P<title>.*)\\s*\\(Group (?P<group>\\d+)\\)\\s*(?P<words>.*)$
^\\s*(?P<type>\\w+) (?P<name>\\w+);$
^\\s*(?P<uaddr>\\S+), (?P<op>\\S+), (?P<val>\\S+), (?P<timer>\\S+),
^\\s*(?P<unit_type>module(?!\\s+procedure)|program)\\s*(?P<modname>\\w*)
^\\s*(?P<upper>\\d+)\\s*$
^\\s*(?P<value>[+-]?\\s*(?:\\d*\\.)?\\d+)(?P<unit>[A-Za-z]+)?\\s*$
^\\s*(?P<value>\\-?[0-9\\.]+)
^\\s*(?P<value>\\d+)\\s*$
^\\s*(?P<value>\\d+)\\s*(?P<units>[a-zA-Z]+)\\s*$
^\\s*(?P<value>true|false)
^\\s*(?P<var>[\\w]+)\\s*=\\s*(?P<val>.+)$
^\\s*([
^\\s*([$@][-\\w]++|-?\\.\\d++|-?\\d++(?:\\.\\d++)?)(?>\\s*(?>[-+*]|div)\\s*(?1))++\\s*$
^\\s*([\":\\w.]+|\\(((?:[^()]+|\\((?2)\\))*)\\))(?:\\s+(?:as\\s+)?((?!ON|USING)[\"\\w.]+))?\\s*(?:(?:ON|USING)\\s+(.*))?\\s*$
^\\s*([\\pL\\p{Pc}\\pM][\\w.]*)\\s*(.*?)\\s*$
^\\s*([\\w\\.\\-\\_]+)\\s*[=:]\\s*(.*?)\\s*([#;].*)?$
^\\s*([\\w\\.\\-\\_]+)\\s*=\\s*(.*?)\\s*$
^\\s*([\\w\\d\\-\\_\\.\\:]+)\\s*$
^\\s*([\\w\\d\\_]+)\\s+=\\s*(.*)
^\\s*([\\w\\d\\_]+)\\s+=\\s*'([^']*)'\\s*$
^\\s*([\\w-]+)(?=\\s*[+-\\\\]?=)
^\\s*([\\w-]+)[.#-\\w]*\\(
^\\s*([^
^\\s*([^$tagDelim]+?)\\s*\\Q$tagDelim\\E\\s*(.*)$
^\\s*([^:]+)\\s*:\\s*(.*+)$
^\\s*([^=\\s\\pC][^=\\pC]*?)\\s*=\\s*(.*?)\\s*$
^\\s*([A-z0-9-_.]+)\\s+([[A-z0-9-_.\\?\\[\\]\\*\\+\\\\]+)\\s*=\\s*(.*)$
^\\s*([a-zA-Z0-9\\_\\.]+)\\s*$
^\\s*(\\\"[^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*\\\")
^\\s*(\\#[^\\xd\\xa]*)(.*)$
^\\s*(\\/\\*.*?\\*\\/)\\s*\\Q$end_value\\E\\s*
^\\s*(\\[|\\{)[ \\t\\r]*([\\+\\.]*)[ \\t\\r]*([^
^\\s*(\\}?\\s*(else|do|try)|(class|function)\\s*[a-zA-Z_0-9]+*)$
^\\s*(\\}?\\s*(else|try|do)|(class|struct|enum|namespace)\\s*[a-zA-Z_0-9]+*)$
^\\s*(\\}?\\s*(else|try|do|finally)|(class|package|enum)\\s*[a-zA-Z_0-9]+*)$
^\\s*(\\d*)\\s+\\Q$redis_server\\E\\ (\\S+)
^\\s*(\\d+)((?:\\s+\\|)?(?:\\s+\\\\_)?)\\s+.+?(\\d+)\\s+(\\d+)$
^\\s*(\\d+).*? \\Q$chunk\\E$
^\\s*(\\d+).+mongod .+--port (\\d+) --dbpath (.+(?:\\/|\\\\)db)
^\\s*(\\d+):((?:\\s+\\S+){
^\\s*(\\\\i\\s+|@)
^\\s*(\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)(?:\\s((?:\\n|.)*))?
^\\\\s*(\\\\S+)\\\\s*(\\\\d+)?\\\\s*(
^\\s*(\\S+)\\s*\\Q${app_sym}\\E?\\s*\\Q${aff_sym}\\E\\s*(.*)$
^\\s*(\\S+)\\s*\\Q${app_sym}\\E\\s*\\Q${aff_sym}\\E\\s*(.*)$
^\\s*(\\S+)\\s*\\Q${list}\\E\\s*$
^\\s*(\\S+)\\s+'((?:[^'\\\\]|\\\\.)*)'\\s+(.+)
^\\s*(\\S+?)\\Q$end_value\\E\\s*
^\\s*(\\w+) (
^\\s*(\\w+)=(\\S+|\"(?:[^\\\\\"]+|\\\\\"|\\\\)*\")
^\\s*(<(?P<a>.*)>|\"(?P<b>.*)\")
^\\s*(abstract)*\\s*(class|interface) ([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9\\\\_\\x7f-\\xff]*)
^\\s*(from +[^#\"'()]*(\\\\|import\\b)|import +[^#\"'()]*\\\\)
^\\s*(include|includeoptional)\\s*([\"'])(.*?)(?<!\\\\)\\2$
^\\s*(INSERT|EXEC sp_executesql N'INSERT)[^(]+\\([^)]*\\b(
^\\s*(null|\\\\N)?\\s*$
^\\s*(W/)?(\"(?:[^\"\\\\]|\\\\.)*\")\\s*
^\\s*.. :quickref:\\s*(?P<quick>.*)$
^\\s*/([^/\\\\]*(\\\\.[^\\//]*)*)/\\s*$
^\\s*?([*]|/\\*\\*)(?P<line>.*?)
^\\s*@\\s*0x(?P<addr>[A-Fa-f0-9]+)\\s*\\+\\s*(?P<len>\\d+)\\s*$
^\\s*@method\\s+((?P<citdl>[\\w\\\\]+)\\s+)?(?P<name>\\w+)(\\(\\))?(?P<doc>.*?)$
^\\s*@param\\s+(?P<type>[\\w\\\\]+)\\s+\\$(?P<name>\\w+)(?:\\s+?(?P<doc>.*?))?
^\\s*@property(-(?P<type>read|write))?\\s+((?P<citdl>[\\w\\\\]+)\\s+)?(?P<name>\\$\\w+)(?:\\s+(?P<doc>.*?))?
^\\s*@return\\s+(?P<type>[\\w\\\\]+)(?:\\s+(?P<doc>.*))?
^\\s*@var\\s+(\\$(?P<variable>\\w+)\\s+)?(?P<type>[\\w\\\\]+)(\\s+\\$(?P<variable2>\\w+)\\s+)?(?:\\s+(?P<doc>.*?))?
^\\s*[
^\\s*[@%]?\\Q$me\\E[:,;.!?~]?\\s*(.*)$
^\\s*[[
^\\s*[\\*\\-\\_]
^\\s*[\\-\\*\\+]\\s*([\\'\\\"\\w\\|\\=\\%\\@\\+\\{\\:\\,\\}\\-\\_\\>\\<\\*]+)\\s+(.*?)\\s*(\\[default=([^\\]]+)\\]){0,1}\\s*$
^\\s*[\\\\]{2}s*
^\\s*[\\w.0-9$\\/\\-:\\\\]+\\s*$
^---\\s*[^]*?(-{3}|\\.{3})\\s*
^\\s*[0-9\\.]+\\s+[a-zA-Z0-9\\.\\?\\:]+\\s+(?P<cls_value>[a-zA-Z0-9_\\.\\?\\:]+)\\s+\\+?\\s+(?P<prob>[a-zA-Z0-9\\.\\?\\,\\*]+)
^\\s*[a-z]:[/\\\\]
^\\s*[a-z0-9-\\_]+\\s*$
^\\s*[A-Za-z0-9\\_\\:]+\\s*$
^\\s*\\\\
^\\s*\\!\\s*\\[\\s*CDATA\\s*\\[([^]*)\\]\\]
^\\s*\\\" ((?:[^\"\\r\\n\\\\]*|\\\\.)*) (?:\\\"|\\s*$)
^\\s*\"$QUOTED_LABEL\"\\s*=\\s*(.*?)(\\\\)?\\s*$
^\\s*\"$QUOTED_LABEL\"\\s*=\\s*\"(.*)\"\\s*(\\\\)?${TRAILING_WHITESPACE}$
^\\s*\\\"(([^\\\"\\\\]|\\\\.)*)\\\"\\Q$end_value\\E\\s*
^\\s*\\\"(([^\\\"\\\\]|\\\\.)+)\\\"
^\\s*\"(.*)\"\\s*(\\\\)?${TRAILING_WHITESPACE}$
^\\s*\"(.*?)\"\\s*(\\\\)?\\s*$
^\\s*\"(?P<env>[^=]+?)\"\\s*\\,\\s*\"(?P<default>.*?)\"\\s*$
^\\s*\\#\\s*x\\.render\\_file\\(\\'hello.pdf\\'\\)
^\\s*\\$(?P<name>\\S+)\\s+(?P<value>.*?)(?:\\s+#.*)?$
^\\s*\\$(\\w+)\\s*(?:=\\s*(\\-?\\d+|NULL|(['\"]).*?(?<!\\\\)\\3))?$
^\\s*\\$branch\\s*=\\s*(?P<brackets>[\\'\"])?([0-9]+)(?P=brackets)\\s*;
^\\s*\\$CFG->([a-z_]+)\\s*=\\s*((?P<brackets>[\\'\"])?(.+)(?P=brackets)|([0-9.]+)|(true|false|null))\\s*;$
^\\s*\\$release\\s*=\\s*(?P<brackets>[\\'\"])?(.+)(?P=brackets)\\s*;
^\\s*\\$VERSION\\s*=\\s*['\"]?([\\d\\.\\_]+)['\"]?;\\s*$
^\\s*\\(((?:[^)\\\\]+|\\\\.)*)\\)
^\\s*\\((?P<caller>.+)\\+(?P<offset>.+) <- (?P<name>.+)\\)(?P<args>.*)
^\\s*\\((?P<caller>.+)\\+(?P<offset>.+) <(?P<caddr>.+)> <- (?P<name>.+) <(?P<addr>.+)>\\)(?P<args>.*)
^\\s*\\((?P<name>.*)
^\\s*\\((?P<name>.+)\\+(?P<offset>.+) <(?P<addr>.+)>\\)(?P<args>.*)
^\\s*\\((?P<name>.+)\\+(?P<offset>.+)\\)(?P<args>.*)
^\\s*\\((?P<versions>.*)\\)\\s*$|^\\s*(?P<versions2>.*)\\s*$
^\\s*\\\\(.*)$
^\\s*\\\\(?:\\w+\\*?)
^\\s*\\\\(?:copy|unioncopy|paste)\\s*\\(.+?\\)\\s+(.*)$
^\\s*\\\\(['\"])(.*?)\\\\\\1\\s*\\\\=\\s*\\\\(['\"])(.*?)\\\\\\3\\s*
^\\s*\\\\([\\@%\\$\\&])
^\\s*\\\\([a-z]+)
^\\s*\\\\(\\S+)\\s*$
^\\s*\\\\(\\w+\\*?)
^\\s*\\\\(begin)|(section|subsection)\\b|{\\s*$
^\\s*\\\\(begin)|(section|subsection|paragraph)\\b|{\\s*$
^\\s*\\\\(begin)|\\s*\\\\(part|chapter|(?:sub)*(?:section|paragraph))\\b|{\\s*$
^\\s*\\(D\\:(?P<name>.*?)\\)
^\\s*\\\\(end)\\b|^\\s*}
^\\s*\\**\\s*@(\\p{Alpha}+)\\s
^\\s*\\\\\\*\\\\([a-z]+)
^\\s*\\*\\h?
^\\s*\\/(?P<name>[A-Z0-9\\-\\+,#\\.]+)
^\\s*\\[(?P<array>.*)
^\\s*\\[(?P<section>.+)\\]\\s*$
^\\s*\\[(?P<section>\\w+)\\]\\s*
^\\s*\\[\\s*(?P<time>\\S+)\\s*\\]\\s+CPU(?P<core>[0-9]+)\\: shutdown
^\\s*\\[\\s*(?P<time>\\S+)\\s*\\]\\s+EVENT_(?P<event>\\S+)
^\\s*\\{\\s*(?P<code>.*\\})\\s*\\}$
^\\s*\\<(?P<name>[A-F0-9]+)\\>
^\\s*\\<\\!DOCTYPE\\s+[a-z0-9\\_\\-]\\:RDF\\s
^\\s*\\<\\<(\\w+)(?:\\Q$end_value\\E)?
^\\s*\\d+\\.\\d+\\.\\d+\\.\\d+\\s.+\\s(?P<address>\\d+\\.\\d+\\.\\d+\\.\\d+)\\s+(?P<metric>\\d+)\\s*$
^\\s*\\d+\\s*(?P<free>\\d+)\\s*\\d+\\s*\\d+\\s*\\d+\\s*(?P<ce>[^:/\\s]+uk:\\d+/cream.*)$
^\\s*\\\\def\\\\(\\w+)#1\\s*\\{([^\\}]*)\\}\\s*$
^\\s*\\\\edef\\\\(\\w+)#1\\s*\\{(.*)\\}\\s*$
^\\s*\\\\group
^\\s*\\\\group\\w*([a-zA-Z0-9 ]*[a-zA-Z0-9])
^\\s*\\\\h\\s+[A-Z]*$
^\\s*\\\\hyphenation\\s*{\\s*(.*)$
^\\s*\\\\input\\{(?P<filename>.+?)\\}
^\\s*\\\\l
^\\s*\\\\l\\s+(.*)$
^\\s*\\\\mbox{(.*)}
^\\s*\n    (?P<id>\\d+)\\s+\n    (?P<name>[\\w_]+)\\s+\n    .+$
^\\s*\\\\p\\s+(.*)$
^\\s*\\\\patterns\\s*\\{\\s*(.*)$
^\\s*\\Q$_[0]\\E\\s*$
^\\s*\\Q${array_end}\\E\\s*$
^\\s*\\Q${array}\\E\\s*$
^\\s*\\Q${include}\\E\\s+(\\S+)\\s*$
^\\s*\\Q${list_end}\\E\\s*$
^\\s*\\Q${multi_end}\\E\\s*$
^\\s*\\Q${multiline}\\E\\s*$
^\\s*\\Q$arg\\E\\s*=
^\\s*\\Q$arg\\E\\s*=\\s*NULL\\s*;\\s*$
^\\s*\\Q$bar\\E<?\\s*
^\\s*\\Q$base\\E(.+?)\\s*$
^\\s*\\Q$bot\\E[:,;.!?~]?\\s
^\\s*\\Q$comment\\E
^\\s*\\Q$crf\\E\\s*([0-9.]+)$
^\\s*\\Q$end_tag
^\\s*\\Q$ender\\E[\\;\\,]?\\s*$
^\\s*\\Q$leader\\E ?
^\\s*\\Q$lit\\E\\s*
^\\s*\\Q$me\\E[:,;.!?~]?\\s*(.*)$
^\\s*\\Q$my_nick\\E[\\:\\,\\;\\.]?\\s*(.*)$
^\\s*\\Q$mynick\\E:\\s+(.*?)\\s*$
^\\s*\\Q$mynick\\E[:,;.~]?\\s*(.*)$
^\\s*\\Q$mynick\\E[\\:\\,\\;\\.]?\\s*(.*)$
^\\s*\\Q$nick\\E[:,;.!?~]?\\s
^\\s*\\Q$nme\\E\\s*$
^\\s*\\Q$nme\\E\\s*=
^\\s*\\Q$op\\E
^\\s*\\Q$sct\\E\\s*$
^\\s*\\Q$snapshot\\E\\s*$
^\\s*\\Q$to\\E,
^\\s*\\Q$to\\E,\\s
^\\s*\\Q$to\\E,\\S
^\\s*\\Q((\\E\\s*merge\\s*.*\\Q))\\E
^\\s*\\Q((\\E\\s*prune\\s*\\Q))\\E
^\\s*\\Q((\\E\\s*sort(?:\\s+by\\s+(.*?))?\\s*\\Q))\\E$
^\\s*\\Q@{[ $settings->hereDoc ]}\\E\\s*$
^\\s*\\S*: EVENT_(?P<event>\\S+)
^\\s*+ @[\\w\\.]++ .*+ [\n\r]++ \\s*+ def\\b
^\\s*+ class \\s++ \\w++ \\s*+ \\( \\s*+ object \\s*+ \\)
^\\s*+ for \\s++ \\w++ \\s++ in \\s++ \\w++ \\s*+ :
^\\s*+ from \\s++ (?:\\w++(?:\\.\\w++)*+) \\s++ import \\s
^\\s*+#\\s*+(include\\s++[<\"]|ifdef|endif|define)\\b
^\\s*+$
^\\s*+(-)\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(\\()
^\\s*+(-)\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(\\(?)
^\\s*+(-)\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(\\.)
^\\s*+(-)\\s*+(behaviour)\\s*+(\\()\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(\\))\\s*+(\\.)
^\\s*+(-)\\s*+(define)\\s*+(\\()\\s*+([a-zA-Z\\d@_]++)\\s*+(,)
^\\s*+(-)\\s*+(define)\\s*+(\\()\\s*+([a-zA-Z\\d@_]++)\\s*+(\\()
^\\s*+(-)\\s*+(export)\\s*+(\\()
^\\s*+(-)\\s*+(ifdef)\\s*+(\\()\\s*+([a-zA-z\\d@_]++)\\s*+(\\))\\s*+(\\.)
^\\s*+(-)\\s*+(ifdef)\\s*+(\\()\\s*+([a-zA-Z\\d@_]++)\\s*+(\\))\\s*+(\\.)
^\\s*+(-)\\s*+(ifndef)\\s*+(\\()\\s*+([a-zA-z\\d@_]++)\\s*+(\\))\\s*+(\\.)
^\\s*+(-)\\s*+(ifndef)\\s*+(\\()\\s*+([a-zA-Z\\d@_]++)\\s*+(\\))\\s*+(\\.)
^\\s*+(-)\\s*+(import)\\s*+(\\()\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(,)
^\\s*+(-)\\s*+(import)\\s*+(\\()\\s*+([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(,)
^\\s*+(-)\\s*+(module)\\s*+(\\()\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(\\))\\s*+(\\.)
^\\s*+(-)\\s*+(record)\\s*+(\\()\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(,)
^\\s*+(-)\\s*+(record)\\s*+(\\()\\s*+([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(,)
^\\s*+(-)\\s*+(undef)\\s*+(\\()\\s*+([a-zA-Z\\d@_]++)\\s*+(\\))\\s*+(\\.)
^\\s*+(-)\\s*+(undef)\\s*+(\\()\\s*+([a-zA-z\\d@_]++)\\s*+(\\))\\s*+(\\.)
^\\s*+(?<_1>-)\\s*+(?<_2>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_3>\\()
^\\s*+(?<_1>-)\\s*+(?<_2>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_3>\\.)
^\\s*+(?<_1>-)\\s*+(?<_2>define)\\s*+(?<_3>\\()\\s*+(?<_4>[a-zA-Z\\d@_]++)\\s*+(?<_5>,)
^\\s*+(?<_1>-)\\s*+(?<_2>define)\\s*+(?<_3>\\()\\s*+(?<_4>[a-zA-Z\\d@_]++)\\s*+(?<_5>\\()
^\\s*+(?<_1>-)\\s*+(?<_2>export)\\s*+(?<_3>\\()
^\\s*+(?<_1>-)\\s*+(?<_2>ifdef)\\s*+(?<_3>\\()\\s*+(?<_4>[a-zA-z\\d@_]++)\\s*+(?<_5>\\))\\s*+(?<_6>\\.)
^\\s*+(?<_1>-)\\s*+(?<_2>ifndef)\\s*+(?<_3>\\()\\s*+(?<_4>[a-zA-z\\d@_]++)\\s*+(?<_5>\\))\\s*+(?<_6>\\.)
^\\s*+(?<_1>-)\\s*+(?<_2>import)\\s*+(?<_3>\\()\\s*+(?<_4>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_5>,)
^\\s*+(?<_1>-)\\s*+(?<_2>module)\\s*+(?<_3>\\()\\s*+(?<_4>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_5>\\))\\s*+(?<_6>\\.)
^\\s*+(?<_1>-)\\s*+(?<_2>record)\\s*+(?<_3>\\()\\s*+(?<_4>[a-z][a-zA-Z\\d@_]*+)\\s*+(?<_5>,)
^\\s*+(?<_1>-)\\s*+(?<_2>undef)\\s*+(?<_3>\\()\\s*+(?<_4>[a-zA-z\\d@_]++)\\s*+(?<_5>\\))\\s*+(?<_6>\\.)
^\\s*+(?<_1>[a-z][a-zA-Z\\d@_]*+)\\s*+(?=\\()
^\\s*+([a-z][a-zA-Z\\d@_]*+)\\s*+(?=\\()
^\\s*+([a-z][a-zA-Z\\d@_]*+|'[^']*+')\\s*+(?=\\()
^\\s*+(\\d*+)\\s*+-\\s*+(\\d*+)\\s*+$
^\\s*+(\\d++)\\s*+%?+\\s*+$
^\\s*+Content-Length\\s*+:\\s*+(\\d++)\\s*+$
^\\s*+Content-Type\\s*+:\\s*+image\\/(.++)$
^\\s*+def\\s++[a-zA-Z_]\\w*+[ \t]*+[\n\r]
^\\s*<(?P<type>[a-zA-Z]+)(?:\\s+(?P<params>[^>]+))?>(?P<content>.*?)\\s*</\\1>\\s*
^\\s*<\\/(
^\\s*<<(?P<struct>.*)
^\\s*<video\\s+id=\"html5player-video\"\\s+src=\"(?P<url>[^\"]+)\"
^\\s*=\\s(?P<variable>[a-zA-Z_][a-zA-Z0-9._-]*)\\s*$
^\\s*=\\s*\\\"([^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*)\\\"
^\\s*0\\s*;\\s*URL\\s*=\\s*(?|'([^']++)|\"([^\"]++)|([^'\"].*))
^\\s*0x(?P<start>[A-Fa-f0-9]+)\\s*-\\s*0x(?P<end>[A-Fa-f0-9]+)\\s*$
^\\s*alias\\s*([\\w\\.\\-\\_]*)\\s*([\\w\\d\\s\\+]*)\\s*$
^\\s*alias\\s*([\\w\\.\\-\\_]*)\\s*(\\+?\\d*)\\s*$
^\\s*arg:([\\w\\d\\.\\-\\_]+)\\s*$
^\\s*bdi\\s+(?P<major>[0-9]+):(?P<minor>[0-9]+):\\s*ino=(?P<ino>\\S+)\\s+index=(?P<index>\\S+)
^\\s*bdi\\s+(?P<major>[0-9]+):(?P<minor>[0-9]+):\\s*towrt=(?P<towrt>\\S+)\\s+skip=(?P<skip>\\S+)
^\\s*Bundle!\\s*(
^\\s*Bundle\\s*(
^\\s*BundleCommand\\s*(
^\\s*C[Cc]:\\s*(?P<to>[^#]+@[^\\s#]*)\\s*(#.*)?$
^\\s*c\\s*/(?P<regex>.*?)/\\s*(?P<destination>.+?)\\s*$
^\\s*call_site=(?P<caller>\\S+)\\s+ptr=(?P<ptr>\\S+)\\s+bytes_req=(?P<req>[0-9]+)\\s+bytes_alloc=(?P<alloc>[0-9]+)\\s+gfp_flags=(?P<flags>\\S+)
^\\s*call_site=(?P<caller>\\S+)\\s+ptr=\\s*(?P<ptr>\\S+)
^\\s*comm=(?P<comm>.*)\\s+pid=(?P<pid>[0-9]+)
^\\s*comm=(?P<comm>.*)\\s+pid=(?P<pid>[0-9]+)\\s+child_comm=(?P<child_comm>.*)\\s+child_pid=(?P<child_pid>[0-9]+)
^\\s*comm=(?P<comm>.*)\\s+pid=(?P<pid>[0-9]+)\\s+prio=(?P<prio>[0-9]+)\\s+
^\\s*comm=(?P<comm>.*)\\s+pid=(?P<pid>[0-9]+)\\s+prio=(?P<prio>[0-9]+)\\s+orig_cpu=(?P<orig_cpu>[0-9]+)\\s+dest_cpu=(?P<dest_cpu>[0-9]+)
^\\s*CREATE SEQUENCE\\s+(?P<schema>.*?)\\.(?P<seq>.*?)\\s*$
^\\s*CREATE TABLE\\s+(?P<schema>.*?)\\.(?P<table>.*?)\\s+.*^\\s*(?P<col>.*?)\\s+IDENTITY\\s*,\\s*$
^\\s*create\\s*.*\\s*function\\s*{0,1}(?:[`\\\"]*([a-zA-Z0-9_]+)[`\\\"]*\\.){0,1}[`\\\"]*([a-zA-Z0-9_]+)
^\\s*create\\s*.*\\s*procedure\\s*{0,1}(?:[`\\\"]*([a-zA-Z0-9_]+)[`\\\"]*\\.){0,1}[`\\\"]*([a-zA-Z0-9_]+)
^\\s*create\\s+database\\s+test_env\\_
^\\s*CREATE\\s+TABLE\\s+(?:\\Q$sf->{d}{table}\\E|\\Q$qt_table\\E)\\s+\\(\n                                \\s*(?:\\Q$sf->{d}{cols}[0]\\E|\\Q$qt_col\\E)\\s+INTEGER\\s+PRIMARY\\s+KEY\\s*,
^\\s*create\\s+table\\s+if\\s+not\\s+exists\\s+some\\_schema\\.some\\_table\\s+\\(\\s*some\\_column\\s+integer\\s+(not|default)\\s+null\\s*,\\s*some\\_other\\_column\\s+character\\s+varying\\(255\\)\\s+(not|default)\\s+null\\s*,\\s*yet\\_another\\_column\\s+character\\(5\\)\\s+(not|default)\\s+null\\)\\s+distkey\\s*\\(\\s*some\\_column\\s*\\)\\s+sortkey\\s*\\(\\s*some\\_column\\s*,\\s*yet\\_another\\_column\\s*\\)\\s*;\\s*$
^\\s*create\\s+table\\s+if\\s+not\\s+exists\\s+some\\_schema\\.some\\_table\\s+\\(\\s*some\\_column\\s+integer\\s+default\\s+null\\s*,\\s*some\\_other\\_column\\s+character\\s+varying\\(255\\)\\s+default\\s+null\\s*,\\s*yet\\_another\\_column\\s+character\\(5\\)\\s+default\\s+null\\)\\s+distkey\\s*\\(\\s*some\\_column\\s*\\)\\s+sortkey\\s*\\(\\s*some\\_column\\s*,\\s*yet\\_another\\_column\\s*\\)\\s*;\\s*$
^\\s*D/WebViewClassic.loadDataWithBaseURL\\(\\s*\\d+\\s*\\)\\s*:\\s*(?P<content>\\<.*)\\s*$
^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$
^\\s*data:([a-z]+\\/[a-z0-9\\-\\+]+(;[a-z\\-]+\\=[a-z0-9\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$
^\\s*DELIMITER\\s+(?P<delimiter>.+)\\s*$
^\\s*dev (?P<major>[0-9]+):(?P<minor>[0-9]+) .+page=(?P<page>\\S+)\\s+pfn=(?P<pfn>[0-9]+)
^\\s*dev=(?P<dev>.+)\\s+ino=(?P<ino>.+)\\s+type=(?P<type>.+)\\s+ctx=(?P<ctx>.+)
^\\s*drop\\s+table\\s*(|if\\s+exists)\\s+(?P<table_name>[^\\s;]+)
^\\s*echo\\s+((?:[^;]+|\"[^\"\\\\]*\"|'[^'\\\\]*'|\\/\\*.*?\\*\\/)+);*\\s*$
^\\s*end\\s*(?P<unit_type>module|program)\\s*(?P<modname>\\w*)?
^\\s*EVENT_(?P<event>\\S+)
^\\s*Explicit\\s*?\\n(?P<explicit>.+)^\\s*End Explicit\\s*Implicit\\s*\\n(?P<implicit>.+)^\\s*End Implicit
^\\s*File \"(?P<co_filename>.+)\", line (?P<tb_lineno>\\d+)(, in (?P<co_name>.+))?$
^\\s*gem '(
^\\s*GROUP\\s*:\\s*([\\_A-Z0-9\\,\\;\\s]+)$
^\\s*header:([\\w\\d\\-\\_]+)\\s*$
^\\s*HTTP/1\\.1 (?P<code>\\d{3})
^\\s*Chain\\s\\Q$chain\\E\\s\\(
^\\s*Chain\\s+\\Q$start_chain\\E\\s+\\(
^\\s*import\\s*(?P<moduleA>[\\w+\\.]+)|^\\s*from\\s*(?P<moduleB>[\\w+\\.]+)\\s+import
^\\s*inet [a-zA-Z]*:?(?P<address>\\d+\\.\\d+\\.\\d+\\.\\d+)[\\s/].+$
^\\s*inet\\s+(?P<IP>\\d+\\.\\d+\\.\\d+\\.\\d+)\\/(?P<MASK>\\d+)\\sscope\\s(\\S.*\\S)\\s(\\S.*\\S)$
^\\s*insert\\s+into\\s+some\\_schema\\.some\\_table\\s+\\(some\\_column,some\\_other\\_column\\)\\s+values\\s*\\('some\\_value',1234\\)\\s*;?\\s*$
^\\s*interface ([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9\\\\_\\x7f-\\xff]*)
^\\s*irq=(?P<irq>[0-9]+)\\s+name=(?P<name>\\S+)
^\\s*irq=(?P<irq>[0-9]+)\\s+ret=(?P<return>\\S+)
^\\s*m\\s*/(?P<regex>.*?)/\\s*(?P<destination>.+?)\\s*$
^\\s*map\\s+(?P<map>\\d+)%\\s+reduce\\s+(?P<reduce>\\d+)%\\s*$
^\\s*msgid\\s*\"(.*?[^\\\\])\"
^\\s*msgstr\\[(\\d+)\\]\\s*\"(.*?[^\\\\])\"
^\\s*msgstr\\s*\"(.*?[^\\\\])\"
^\\s*Node\\s+(?P<node>\\d+),\\s+zone\\s+(?P<zone>\\S+),\\s+type\\s+(?P<mtype>\\S+)\\s+(?P<counts>.*)$
^\\s*Node\\s+(?P<node>\\d+),\\s+zone\\s+(?P<zone>\\S+)\\s+(?P<counts>.*)$
^\\s*not\\(\\s*([a-zA-Z0-9\\_\\.]+)\\s*\\)\\s*$
^\\s*NR (?P<nr>[0-9]+) (?P<args>.+)
^\\s*NR (?P<nr>\\S+) = (?P<ret>.+)
^\\s*nr_reclaimed=(?P<nr>[0-9]+)
^\\s*package\\s+(?P<package_name>[^\\s]+)\\s*;\\s*$
^\\s*page=(?P<page>\\S+)\\s+pfn=(?P<pfn>[0-9]+)\\s+order=(?P<order>[0-9]+)
^\\s*page=\\s*(?P<page>\\S+)\\s+pfn=(?P<pfn>[0-9]+)\\s+order=(?P<order>[0-9]+)\\s+migratetype=(?P<mt>[0-9]+)\\s+gfp_flags=(?P<flags>\\S+)
^\\s*Photolysis\\s*\\n(?P<photolysis>.+)^\\s*End Photolysis
^\\s*pid=(?P<pid>[0-9]+)\\s+comm=(?P<comm>\\S+)
^\\s*pid=(?P<pid>[0-9]+)\\s+oldcomm=(?P<oldcomm>.*)\\s+newcomm=(?P<newcomm>.*)\\s+oom_score_adj
^\\s*pl2bat\\.bat [\\w\\\\]+
^\\s*prev_comm=(?P<prev_comm>.*)\\s+prev_pid=(?P<prev_pid>[0-9]+)\\s+prev_prio=(?P<prev_prio>\\S+)\\s+prev_state=(?P<prev_state>\\S+)\\s+==>\\s+next_comm=(?P<next_comm>.*)\\s+next_pid=(?P<next_pid>[0-9]+)\\s+next_prio=(?P<next_prio>\\S+)
^\\s*qw\\s*\\Q$d_left\\E\\s*
^\\s*-r\\s*(?P<filename>.*)$
^\\s*rb_define_(singleton_)?(?:private_)?method\\(rb_.(.*?),\\s*\"(.*?)\",\\s*(\\w+),(?#\\))
^\\s*Reactions\\s*\\n(?P<kinetic>.+)^\\s*End Reactions
^\\s*s/(.*?)(?<!\\\\)/(.*)/\\s*
^\\s*select\\s+\\*\\s+from\\s+pg\\_table\\_def\\s+where\\s+schemaname\\s*=\\s*'some\\_schema'\\s+and\\s+tablename\\s*=\\s*'some\\_table'\\s*;\\s*$
^\\s*select\\s+schemaname\\s+\\|\\|\\s+'\\.'\\s+\\|\\|\\s+tablename\\s+as schema\\_and\\_table\\s+from\\s+pg_tables\\s+where\\s+tableowner\\s*=\\s*'some_user'\\s*;?\\s*$
^\\s*set search\\_path\\s+to\\s+'\\$user',\\s*some\\_schema\\s*;\\s*$
^\\s*sig=(?P<sig>[0-9]+) errno=(?P<err>[0-9]+) code=(?P<code>.*) comm=(?P<comm>.*) pid=(?P<pid>[0-9]+)
^\\s*sig=(?P<sig>[0-9]+) errno=(?P<err>[0-9]+) code=(?P<code>.*) sa_handler=(?P<handler>.*) sa_flags=(?P<flags>.*)
^\\s*state=(?P<state>[0-9]+)\\s+cpu_id=(?P<cpu_id>[0-9]+)
^\\s*truncate\\s+table\\s+some\\_other\\_schema\\.some\\_other\\_table\\s*;?\\s*$
^\\s*truncate\\s+table\\s+some\\_schema\\.some\\_table\\s*;?\\s*$
^\\s*use \\Q$pname\\E *\\(? *sub *\\{(.*)
^\\s*use\n(\\s*,\\s*intrinsic\\s*)?(\\s*::\\s*|\\s+)  # Valid separators between \"use\" and module name\n(?P<moduse>\\w*)                       # The module name\n\\s*(, )?\\s*(only)?\\s*(:)?.*?$         # Stuff that might follow the name\n
^\\s*var\\s*feed\\s*=\\s*(?P<feed>{.*})\\s*;
^\\s*vec=(?P<vector>[0-9]+)\\s+\\[action=(?P<action>\\S+)\\]
^\\s*xref:\\s*(?P<xref_file>[^#]+)(?P<xref_frag>#\\S+)?\\s*?$
^\\s\\s(?P<key>\\S*)\\s*(?P<value>.*)
^\\s{24,25}(?P<_>(\"(<|:).*|\\S.*\"$))
^\\\\s|^\"|^'''|^#|^/\\\\*|^//|^\\\\{|^\\\\}|^\\\\[|^\\\\]|^:|^,|\\\\s$|[\\x00-\\x1f\\x7f-\\u{9f}\\u{00ad}\\u{0600}-\\u{0604}\\u{070f}\\u{17b4}\\u{17b5}\\u{200c}-\\u{200f}\\u{2028}-\\u{202f}\\u{2060}-\\u{206f}\\u{feff}\\u{fff0}-\\u{ffff}]
^\\s|^\"|^'|^#|^/\\*|^//|^\\{|^\\}|^\\[|^\\]|^:|^,|\\s$|[\\x00-\\x1f\\x7f-\\x9f\\x{00ad}\\x{0600}-\\x{0604}\\x{070f}\\x{17b4}\\x{17b5}\\x{200c}-\\x{200f}\\x{2028}-\\x{202f}\\x{2060}-\\x{206f}\\x{feff}\\x{fff0}-\\x{ffff}]
^\\s|^\"|^'''|^#|^/\\*|^//|^\\{|^\\}|^\\[|^\\]|^:|^,|\\s$|[\\x00-\\x1f\\x7f-\\x9f\\x{00ad}\\x{0600}-\\x{0604}\\x{070f}\\x{17b4}\\x{17b5}\\x{200c}-\\x{200f}\\x{2028}-\\x{202f}\\x{2060}-\\x{206f}\\x{feff}\\x{fff0}-\\x{ffff}]
^\\s+- (?P<item>[^,]+),\\s+(?P<value>(True|False))(, (?P<description>.+)$)?
^\\s+(
^\\s+(?:\\*\\s+)?(?P<name>.+?)\\s+(?P<rev>[-]?\\d+):(?P<nodeid>[0-9a-f]+)
^\\s+(?P<addr>[0-9a-f]+)\\s+[0-9a-f]+\\s+\\S+\\s+[01]\\s+[0-9]+\\s+[0-9]+\\s+(?P<lib>\\S+)$
^\\s+(?P<address>[0-9a-fA-F]+)\\s+(?P<symbol>.*)\\s+\\((?P<module>.*)\\)$
^\\s+(?P<address>[0-9a-fA-F]+)\\s+(?P<symbol>.*)\\s+\\((?P<module>[^)]*)\\)$
^\\s+(?P<ARR_NAME>.*\\s+modes):\\s*(?P<VALUE>\\S.*\\S)\\s*$
^\\s+(?P<CONN>\\w[\\w\\s]*\\w)\\s*:\\s+(?P<KEY>\\S+):\\s+(?P<VALUE>\\S.*\\S)$
^\\s+(?P<CONN>\\w[\\w\\s]*\\w)\\s*:\\s+(?P<VALUE>\\d+.\\d+.\\d+.\\d+...\\d+.\\d+.\\d+.\\d+)\\s+(?P<KEY>\\S+),\\s+(?P<KEY_2>\\S+)=(?P<VALUE_2>\\S+)$
^\\s+(?P<CONTENT>\\w+.*)
^\\s+(?P<field_name>[^\\ ]*)\\s+(?P<field_type>[^\\ ]*)(\\s+`mapstructure:\"(?P<ms_field_name>[^\"]*)\"`)?
^---\\s+(?P<file>.+)
^---\\s+(?P<file>\\S+)
^\\s+(?P<IP_ADDR>\\S.*\\S)$
^\\s+(?P<KEY>\\w[\\w\\s]*\\w)\\s*:\\s+(?P<VALUE>\\S.*\\S)$
^\\s+(?P<ncalls>\\d+)\\s+(?P<tottime>\\d+\\.\\d+)\\s+(?P<tpercall>\\d+\\.\\d+)\\s+(?P<cumtime>\\d+\\.\\d+)\\s+(?P<cpercall>\\d+\\.\\d+)\\s+(?P<filename>.*):(?P<lineno>\\d+)\\((?P<function>.*)\\)$
^\\s+(?P<PARAM>\\S+)\\s+(?P<MODE>\\S+)$
^\\s+(?P<thread>\\S+.*?\\S+)\\s+\\[(?P<cpu_id>\\d+)\\]\\s+(?P<ts>[\\d.]+):\\s+(?P<name>[^:]+):\\s+(?P<body>.*?)\\s*$
^\\s+(?P<total_calls>\\d+) function calls \\((?P<primitive_calls>\\d+) primitive calls\\) in (?P<total_time>\\d+\\.\\d+) seconds$
^\\s+(?P<VALUE>\\S.*\\S|\\S)\\s*$
^\\s+(?P<value>\\w.*)$
^\\s+(?P<vendor>\\w+): (?P<status>UP|DOWN) (?P<version>v[\\d\\.]+)$
^\\s+([123ABDEGHILMPST\\.gu]+)\\s+\\d+\\s+[$out->{SPIN}]*\\s+(\\d+\\.\\d+)\\s+(\\-*\\d\\.\\d+E\\-*\\+*\\d+)\\s+(\\-*\\d+\\.\\d+)\\s+
^\\s+(\\d+):\\s+([a-zA-Z0-9\\_]+)\\s+([\\s\\w]*) \\*?(\\d+(?:\\.\\d+)? [A-Z])B\\s+([a-z0-9]+)
^\\s+\\\\
^\\S+\\/(\\d+(?:[\\.\\_]\\d+)+)
^\\s+\\[([\\w\\\\]+\\\\)?(\\w+)\\]\\s+(.+)\\r?\\n\\r?\\n\\S
^\\S+\\s+(?P<mac_address>[0-9A-Fa-f\\:]+)\\s+\\S+\\s+(?P<interface>\\d+)\\s+\\S+
^\\S+\\s++(?:(?:\\.{3}\\s*)?(\\$\\S+)\\s+)?[^$]
^\\s++|\\s++$
^\\s+BGP state = (?P<state>\\w+)
^\\s+def \\K\\w+
^\\s+Description: (?P<description>.+)
^\\s+For address family: (?P<afi>\\S+) 
^\\s+inet\\s+(?P<address>[0-9.]+)\\s+netmask\\s+(?P<netmask>[.x0-9a-f]+)$
^\\s+inet\\s+(?P<address>[0-9.]+)\\s+netmask\\s+(?P<netmask>[.x0-9a-f]+)\\s+broadcast\\s+(?P<broadcast>[0-9.]+)$
^\\s+inet6\\s+(?P<address>[0-9:a-f]+)%(?P<scope>[^s]+)\\s+prefixlen\\s+(?P<prefix>\\d+)\\s+scopeid\\s+(?P<scope_id>[x0-9a-f]+)$
^\\s+inet6\\s+(?P<address>[0-9:a-f]+)\\s+prefixlen\\s+(?P<prefix>\\d+)$
^\\s+Prefixes Current:\\s+(?P<sent_prefixes>\\d+)\\s+(?P<accepted_prefixes>\\d+).*
^\\s+Saved (soft-reconfig):.+(?P<received_prefixes>\\d+).*
^\\s+VERSION = ['\"](
^\\t([0-9A-Za-z:-]+)\\s+=\\s+[\"]?([A-Za-z0-9=\\\\\\.-\\_\\s]*)[\"]?.*\\n
^\\t\\$\\(FIXIN\\) .*\\Q$exe\\E$
^\\t\\Q$arg\\E = new
^\\t\\Q$arg\\E\\s*=\\s*(boolSV\\(|(&PL_sv_yes|&PL_sv_no|&PL_sv_undef)\\s*;)
^\t\t  # Method parsing regex\n\t     (\\+|-|)\t  # $1 => method-diffs. Defaults to \"+\" if unspecified\n\t     (\\*|\\^|\\&|)  # $2 => purpose. Defaults to \"*\"\n\t     (.*?)\t  # $3 => protection? attribute? return-type?\n\t     \\s*\t  # C++ type voodoo =~ m!type\\s*(\\**\\s*)*&?\\s*!\n\t     (\\w+)::\t  # $4 => class-name\n\t     (operator\\s*\\S+  # allow \"operator ()\" without choking the regex\n\t      |~?\\w+)\t  # $5 => method-name, allow \"~destructor\"\n\t     \\s*\t  # allow \"type class::method ()\"\n\t     \\((.*?)\\)\t  # $6 => end this argument-list with a space or a ;\n\t     (?:\\s+([:\\w].*))? # $7 => post-arg modifiers and colon-substitutes\n\t     ;\t\t  # EVERY method must be terminated with a semi-colon!\n\t     (?:\\s*\\#.*)? # toss any comments at the end of the line\n\t    $
^\\tpath\\s*=\\s*\\K(.+)$
^\\\\u
^\\U$shortname\\E$
^\\\\u([0-9A-F]{4})
^'\\\\u([0-9A-F]{4})'$
^\\\\U([0-9A-F]{8})
^\\\\u([0-9A-Fa-f]{1,4})
^\\\\u([0-9A-Fa-f]{1,4})\\'
^\\\\u([0-9a-fA-F]{4})
^\\\\u([0-9A-Fa-f]{4})
^\\\\U([0-9A-Fa-f]{8})
^\\u(\\w)\\|\\u(\\w)$
^\\\\u[0-9A-F]
^\\\\\\\\u[0-9A-F]{4}$
^\\\\u[0-9a-fA-F]{4}
^\\\\u[dD][89abAB][0-9a-fA-F]{2}\\\\u[dD][c-fC-F][0-9a-fA-F]{2}
^\\\\u\\{[0-9a-fA-F]{1,}\\}
^\\\\u\\{[0-9a-fA-F]+\\}
^\\U\\Q$part
^\\u\\w$
^\\\\unioncopy\\s+
^\\\\Users\\\\
^\\\\\\\\VED\\\\\\\\Policy
^\\w(:)(\\\\)
^\\w:[/\\\\]
^\\w:[/\\\\]*$
^\\w:[\\/\\\\]
^\\w:\\\\
^\\w\\:\\\\
^\\w{1,5}:\\/\\/|^\\w{0,3}:?\\\\\\\\
^\\w{2}(?:\\_|\\-)\\w{2,3}$
^\\w{4}(\\d{2,}|(?:\\(([^()]*(?:\\([^()]+\\)[^()]*)*)\\))?(?:\\[(\\\\.|[^]\\\\]*)\\])?)$
^\\w+:\\\\
^\\w+\\:[\\/\\\\]
^\\w+\\s+(
^\\w++$
^\\w++://[^/]++
^\\Wurfl\\Handlers\\(.+)Handler$
^\\\\x
^\\X$
^\\\\x([\\da-fA-F]{2})
^\\\\x([0-9,A-F,a-f]{1,2})
^\\\\x([0-9a-f]{2})$
^\\\\x([0-9A-Fa-f]{1,2})
^\\\\x([0-9A-Fa-f]{1,2})\\'
^\\\\x([0-9A-Fa-f]{2})
^\\\\x([0-9a-fA-F]{2})
^\\\\x[0-9A-F]
^\\\\x[0-9a-fA-F]{1,2}
^\\\\x[0-9a-fA-F]{2}
^\\\\x\\{
^\\x0([^\\x0]+)\\x0(.*)$
^\\x01\\x02([^\\x01]*+)\\x01$
^\\x1b\\](\\d+);([^\\x07\\x1b]+)(?:\\x07|\\x1b\\\\)
^\\x1b\\](l|L)([^\\x07\\x1b]*)(?:\\x07|\\x1b\\\\)
^\\x1bP([0-9;@A-Za-z`]*)\\x1b\\\\
^-\\x20\n              (?# Type of statement )\n                (?P<type>Refs|Fixed|Closed|Implemented|Documented|Tested)\n              (?# Match optional bug number )\n                (?:\\x20\\#(?P<bug>[1-9]+[0-9]*))?\n              (?# Match required text line )\n                (?::\\x20(?P<text>[\\x20-\\x7E]+))?\n            $
^^(.*?)[\\\\/]*([^/\\\\]*?)[\\\\/\\.]*$
^^[\\p{Print}]*$
^_(
^_((?>\\\\_|[^_]|__[^_]*__)+?)_(?!_[^_])\\b
^_(.*?)\\_$
^_(?P<Service>\\w+)\\.\\_(?P<Protocol>\\w+)$
^_(?P<text>.+?)_
^_([+\\-]?[0-9]+|[^\\\\])
^_([0-9\\_]*Hz)
^_\\\\([A-Z])_
^__ (?P<url>\\./.*)
^__((?:\\\\[\\s\\S]|[^\\\\])+?)__(?!_)
^__((?>\\\\_|[^_]|_[^_]*_)+?)__
^__(?P<container_identifier>.+?)__\\.(?P<service_identifier>.++)$
^__(?P<text>.+?)__
^__(?P<type>collection|entity)__$
^__(?P<type>collection|entity|resource)__$
^__\\Q$name\\E__
^__\\U$sec\\E__$
^__app_name__ += (?P<q>['\"])(.+?)(?P=q)$
^__EMU__([A-Z]++)__(?:([A-Za-z0-9]++)__)?$
^__keyspace.*__:(?P<queue_name>.*)$
^__version__ = '(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?P<tag>.*)?'$
^__version__ = (?P<quote>[\\'\"])(?P<version>[0-9]+\\.[0-9]+\\.[0-9]+(?:\\.dev[0-9]+)?)(?P=quote)$
^__version__ = '(?P<version>[^']+)'$
^__version__ = ([\\'\"])(?P<version>.*)\\1$
^__version__ = [\"\\'](?P<version>[^\"\\']*)[\"\\']
^__version__ = \\\"(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?P<tag>.*)?\\\"$
^__version__\\s*=\\s*(?P<quote>['\"])(?P<version>[^'\"]+)(?P=quote)\\s*(?:#.*)?$
^_<.*\\/\\Q$file\\E$
^_unmemoized_(
^`(?P<name>.*)`$
^`(?P<name>[^`]+)`
^`(?P<text>.+?)`
^`\\p{Letter}${chartypes{notcaron}}*\\x{030C}${chartypes{notcaron}}*\u00c2\u00b4$
^`\\p{Letter}${chartypes{notgrave}}*\\x{0300}
^``(?:[^'\\\\]|\\\\.)*''
^``(?P<text>.+?)``
^```+\\N*\\n(.*?)\\n```+
^{(?P<namespace>.+)}-(?P<operation>.+)$
^{(?P<type>[a-zA-Z]+)(?::(?P<params>[^}]+))?}(?:(?P<text>.*){\\1})?$
^{(?P<w>[^()[\\]][^()[\\]]*?)\\((?P<n>[^()\\[\\]]+)\\)}$
^{(?P<w>[^[\\]()]+)(?:\\[(?P<i>\\d+)\\])?}$
^{\\\\([`'^\"~])([\\w])}$
^{\\\\([vc])(\\w)}$
^{\\\\([vc]){(\\w)}}$
^{{(?P<symbol>.+)}}$
^{{(\\\\[A-Z][\\\\A-Za-z\\d_]+::[A-Z\\d_]+)}}$
^-{3} (.+) -{3}\\R?$
^-{3}.*+[\n\r]++\\+{3}
^~($|\\/|\\\\)
^~(?= [/\\\\] | $ )
^~(?=$|\\/|\\\\)
^~(\\/|\\\\)
^~(\\w*)((?:[/\\\\]).+)?$
^~[/\\\\]
^~[\\/\\\\]
^~[^/\\\\]+$
^~[A-Z](?:\\((?:[^\\)\\r\\n\\\\]|\\\\.)+\\)|\\[(?:[^\\]\\r\\n\\\\]|\\\\.)+\\]|\\{(?:[^\\}\\r\\n\\\\]|\\\\.)+\\}|\\<(?:[^\\>\\r\\n\\\\]|\\\\.)+\\>)[A-Z]*
^~[A-Z](?:\\/(?:[^\\/\\r\\n\\\\]|\\\\.)+\\/|\\|(?:[^\\|\\r\\n\\\\]|\\\\.)+\\||\"(?:[^\"\\r\\n\\\\]|\\\\.)+\"|'(?:[^'\\r\\n\\\\]|\\\\.)+')[A-Z]*
^~~~+\\N*\\n(.*?)\\n~~~+
^<!-- aliasbegin -->\\R.*?^<!-- aliasend -->\\R
^<!---?[^>-](?:-?+[^-])*-->
^<!DOCTYPE[^>]*+>
^<((?>
^<(?P<nick>.*?)>\\s*(?P<quote>.*)\\s*$
^<(?P<pri>\\d+)>(?P<date>\\w{3} [ 0-9][0-9] \\d\\d:\\d\\d:\\d\\d) (?:(?P<host>[^ :\\[]+) )?(?P<tag>[^ :\\[]+)(?P<rest>[:\\[ ].+?)\\s*$
^<(?P<prio>\\d{1,3})>\n                                (?P<content>.*)
^<(?P<prio>\\d{1,3})>\n                               (?:(?P<rfc5424>1\\ )?\n                                  (?P<timestamp>\\S{20,38}|...\\ ..\\ ..:..:..(\\ 20\\d\\d)?|-))\\ ?\n                                  (?P<hostname>\\S+)*\\ ?\n                                  (?P<content>.*)
^<(?P<tag_name>\\w+)
^<(?P<url>https?:\\/\\/[^>]+)>;\\s+rel=\"(?P<rel>next|last|first|prev)\"$
^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$
^<([a-zA-Z][a-zA-Z0-9\\-\\_]*)>\\s*
^<([a-zA-Z0-9.!
^<(\\d+|\\.)>[ \\t]+(
^<(\\w++:\\/{2}[^ >]++)>
^<.+>(?P<message_without_path>:\\d+:\\d+.+)
^<[^>]*rel\\s*=\\s*(?|\"\\s*nofollow\\s*\"|'\\s*nofollow\\s*'|\\s*nofollow\\s*)[^>]*>
^<\\/\\w[\\w-]*+[ ]*+>
^<\n        (?:\n            (?P<converter>[a-zA-Z_][a-zA-Z0-9_]+)   # converter name\n            (?:\\((?P<args>.*?)\\))?                  # converter args\n            \\:                                      # delimiter\n        )?\n        (?P<variable>[a-zA-Z_][a-zA-Z0-9_]*)        # variable name\n        >$
^<\\s*[\\w]{1,20}+://
^<<(.?*)>>=|\\\\begin\\{.*\\}
^<<(?:['\"`\\-]|
^<<-?(?:[\"'`]|
^<<-?(?:['\"`]|
^<div class=\"wiki-(?P<name>[a-z]+)\"(?P<opts>( data-wiki-([a-z]+)=\"([^\"]+)\")*)>(?P<value>.*)</div>$
^<ol[^>]*>(.*?(?R)?.*?)<\\/ol>
^<p>(
^<p>hmm<\\/p>\\n\\n<pre>\\nthis is `a\\\\_test` and this\\\\_too and finally_this_is\\n<\\/pre>$
^<pre[ >][^]*<\\/pre>$
^<pre>\\nthis is `a\\\\_test` and this\\\\_too and finally_this_is\\n<\\/pre>$
^<string>:(?P<line>(?:\\d+)?): \\((?P<level>DEBUG|INFO|WARNING|ERROR|SEVERE)/(\\d+)?\\) (?P<message>.*)
^<table>[^]*?\\n<\\/table>
^<template>[^]+<\\/script>
^<U(....)> \\\\x(..)\\\\x(..) \\|\\d
^<U(....)> \\\\x(..)\\\\x(..) \\|0
^<U(....)> \\\\x(..)\\\\x(..)( \\|(.)|)
^<U([0-9a-fA-F]+)>\\s*([\\+0-9a-fA-Fx\\\\]+)\\s*\\|(\\d)
^<ul[^>]*>(.*?(?R)?.*?)<\\/ul>
^=*(?:[ \\t]|<\\!--(?:(?!-->)[^])*-->)*(?:[\\r\\n]|$)
^=\"(([^\\\\\"]|\\\\\"|\\\\)*)\"
^=\\s*([\\'\\\"])(([^\\\\]|\\\\.)*?)\\1
^={2}(?P<string>.*?)={2}
^==== (?P<depotpath>.*?)#\\d+ (- (?P<path>.*?)|\\(.*?\\)) ====$
^=encoding\\s+(?P<encoding>[-\\w.]+)
^=for pod2wp CATEGOR(?:Y|IES):\\s*(.+)\\R\\R
^=for pod2wp POSTID:\\s*(\\d+)\\R\\R
^=for pod2wp TAGS?:\\s*(.+)\\R\\R
^=for pod2wp TITLE:\\s*(.+)\\R\\R
^=head1 \\s+ NAME\\s*\\R\n                \\s*\\R\n                \\S+ \\s+ - \\s+ ([^\\r\\n]+)\n               
^=item\\s+\\Q$function\\E\\b
^>*\\s*[Cc]opyright\\s(\\([Cc]\\)|\u00a9)*(?P<CLINE>.*)
^>.*\\R
^>[ \\t]*[
^>[ ]?+(.*+)
^>>>\\Q$data{'qname'}
^0 (?P<partsize>\\d+) linear (?P<major>\\d+):(?P<minor>\\d+) (?P<offset>\\d+)\n\\Z
^0 (?P<plainsize>\\d+) crypt (?P<cipher>[a-z0-9:-]+) 0+ 0 (?P<major>\\d+):(?P<minor>\\d+) (?P<offset>\\d+)(?P<options> [^\n]*)?\n\\Z
^0(
^0*([x|X][\\p{XDigit}]+)(;?)
^0;([^\\007]*)(?:\\007|\\033\\\\)
^0?(
^0\\_0|\\d+|\\d+_\\d+$
^0+(?:\\Q$thousands_sep\\E)?
^0x[0-9a-f]++$
^1;([^\\007]*)(?:\\007|\\033\\\\)
^1?$|^(11+?)\\1++$
^2;([^\\007]*)(?:\\007|\\033\\\\)
^4(?P<smaxt>0|1)\n                                (?P<maxt>\\d\\d\\d)\n                                (?P<smint>0|1)\n                                (?P<mint>\\d\\d\\d)\\s+
^4/(?P<snowdepth>\\d\\d\\d)\\s+
^5(?P<tend>[0-8])\n                                (?P<press>\\d\\d\\d)\\s+
^a migration named \"([^\"]*)\" (
^a page exists at (
^a score=(?P<score>.+)$
^a.c+[^one]{2,3}\\b\\d\\\\\\C-C$
^Access to undeclared static property: ([\\w\\\\]+)::\\$(\\w+)
^Action\\_
^Active connections: (?P<conn>\\d+)
^active:(?P<bool>\\w+)$
^ACTUALCE: (?P<actualCE>\\S+)
^ajax_(?<action>[a-z0-9]+)_(?<function>[a-z0-9\\_]+)$
^ajax_(?<function>[a-z0-9\\_]+)$
^alias\\_for\\_.*
^alloy[\\/\\\\]backbone([\\/\\\\]|$)
^AlphaLemon\\\\Theme\\\\[\\w]+ThemeBundle
^AO(?P<type>\\d)\\s+
^app/(views/.+/[^/]*\\.(?:
^app/layouts/(.+)/[^/]*\\.(?:
^app/views/(.+)/[^/]*\\.(?:
^App\\\\(.+)$
^App\\\\(?P<module>\\w+)\\\\Controllers\\\\(?P<controller>\\w+)@(?P<action>\\w+)
^App\\\\Bundle\\\\([^\\\\]+)\\\\(.+)$
^App\\\\Forms\\\\([^\\\\]+)$
^AppSamurai\\/([\\w\\d\\_]+?)\\s*$
^Assert\\\\(.+)
^Asterisk *Call *Manager/(?P<version>([0-9]+\\.)*[0-9]+)
^attachment; filename=(?P<filename>.*)$
^attributes\\.entry\\.(?P<index>\\d+)\\.(?P<type>key|value)$
^authorize_(\\w+)(?:\\|([\\w\\\\]+))?$
^available on (?:
^a-zA-Z-0-9\\_
^b'([^\\\\]|\\\\(.|x[\\da-fA-F]{2}))'
^b\"(?:[^\\\\]|\\\\(?:.|x[\\da-fA-F]{2}))*?\"
^backup-([\\w\\-]+)-(\\d\\d\\d\\d)(\\d\\d)(\\d\\d)_(\\d\\d)(\\d\\d)(\\d\\d)-(\\w+)\\.(.*?)(?:\\.(
^bc(?P<attributes>.*?)(?P<mode>\\\\.{1,2}) 
^beConstructed(?P<method>[0-9A-Z]+)
^beConstructedThrough(?P<method>[0-9A-Z]+)
^Berkeley DB \\(.*, version (?P<version>[0-9]+),.*\\)$
^bitbucket:(?P<owner>[^/]+)/(?P<code>.+)$
^bitbucket\\.org/(?P<owner>[a-z0-9A-Z_.\\-]+)/(?P<repo>[a-z0-9A-Z_.\\-]+)(?P<dir>/[a-z0-9A-Z_.\\-/]*)?$
^bitbucket-snippet:(?P<owner>[^/]+)/(?P<code>.+)$
^bitcoinrpc://(?P<user>\\S*):(?P<password>\\S*)\\@(?P<hostname>\\S*)(:(?P<port>\\d*))
^block\\.([a-zA-Z0-9\\-\\_]+)\\.tpl$
^BO\\_ (\\w+) (\\w+) *: (\\w+) (\\w+)
^BOARD\\s*=(?P<value>[^#]*).*$
^bodyhtml\\_([0-9]+)$
^BolCom\\\\(\\w+)
^bootstrap\\((\\{[^]+})\\);$
^bq(?P<attributes>.*?)(?P<mode>\\\\.{1,2})(?::(?P<cite>.+?))? 
^Build settings for action (?P<action>.+) and target \"?(?P<target>.+)\"?:$
^build-(([0-9]+)\\.([0-9]+)\\.([0-9]+))(\\/|\\\\)index\\.html$
^build-([0-9]+)\\.([0-9]+)\\.([0-9]+)(\\/|\\\\)index\\.html$
^bytes (?P<start>\\d+)-(?P<end>\\d+)/(?P<total>\\d+)$
^c#([\\p{PerlWord}-]+)\\z
^c:[/\\\\]
^c:\\\\backupdir[\\\\/]+a\\\\b\\\\c.txt.chef-\\d{14}.\\d{6}$
^C:\\\\fakepath\\\\
^c\\_
^Call to undefined function (\\S+\\\\)?(\\w+)\\(
^Call to undefined method ([\\w\\\\]+)::(\\w+)
^camlistore\\.org/r/p/(?P<repo>[^/]+)$
^Can't exec \"\\Q$prog\\E\":
^Can't locate \\Q$file\\E in \\@INC
^Can't locate \\Q$fn\\E .*? at .* line [0-9]+(?:, <[^>]*> (?:line|chunk) [0-9]+)?\\.\\n\\z
^Can't locate \\Q$load_module\\E\\.pm 
^Can't locate \\Q$module.pm\\E
^Can't locate \\Q@{[class_to_path $class]}\\E in \\@INC
^Can't locate \\Q@{[class_to_path $module]}\\E in \\@INC
^cdxj?\\+(?P<url>https?\\:.*)
^CFe(?P<campos>\\d{44})$
^Civi\\\\
^Class ([A-Za-z0-9_\\\\]+) does not exist$
^Class 'OxidEsales\\\\Eshop\\\\.*' not found
^class\\s+(
^cleartool: Error: Unable to perform operation.*\"\\Q$lrep\\E\"
^cmd \\\\c
^CMSSW_(?P<one>[0-9]+)_(?P<two>[0-9]+)_(?P<three>[0-9]+)(?:_pre(?P<four>[0-9]+))?
^cobc: (?P<error>.*)$
^code\\.google\\.com/(?P<pr>[pr])/(?P<repo>[a-z0-9\\-]+)(:?\\.(?P<subrepo>[a-z0-9\\-]+))?(?P<dir>/[a-z0-9A-Z_.\\-/]+)?$
^code\\.google\\.com/p/(?P<repo>[a-z0-9\\-]+)(:?\\.(?P<subrepo>[a-z0-9\\-]+))?(?P<dir>/[a-z0-9A-Z_.\\-/]+)?$
^col(?P<index>\\d+)$
^COLLATE (?P<collate>[^ ]+)($| )
^column\\_([0-9])+$
^CommandHandler::process [a-z0-9_\\\\]+ \\d+\\.\\d+
^Compilation\\ failed\\ in\\ require\n\t\t\t \\ at\\ \\Q@{[__FILE__]}\\E\\ line
^composer\\s+(?P<url>\\S+)
^Configuration contains key \\\\[(?P<key>\\\\S+)\\\\]
^Content-Length: (?P<length>\\d+)
^content-length:(\\d++)$
^content-length[:]\\s*(?P<value>[0-9]+)
^Content-Type:\\s+(?P<type>[a-z*][a-z0-9_/*+.-]*)(;\\s*(?P<options>.*))?$
^convert (?P<from>.*) (?P<to>.*)$
^convert (?P<from>.*) to (?P<to>.*)$
^convert (?P<from>.*)$
^convert (?P<notional>\\d+) (?P<from>.*) (?P<to>.*)$
^convert (?P<notional>\\d+) (?P<from>.*) to (?P<to>.*)$
^convert (?P<notional>\\d+) (?P<from>.*)$
^Counters: (?P<amount>\\d+)\\s*$
^Counters: (?P<num_counters>\\d+)\\s*$
^create(?P<channel>.+)Message$
^create([A-Za-z0-9\\_]+)(Model|Collection)
^create_(
^curl\\_
^CURLOPT\\_
^Current Power\\s*:\\s*(?P<value>[0-9.]*)\\s*Watts.*
^CUTYPE=(?:INDIVIDUAL|GROUP|RESOURCE|ROOM|UNKNOWN|(?:
^CX\\_?
^d = \\d+ 0x\\h+$
^Dat0r\\\\Core\\\\Field\\\\(.*)Field$
^data:(?P<mime>[a-z]+/[a-z]+);base64,(?P<data>.*)$
^data:(?P<mime>[a-z0-9\\/+-.]+)(;charset=(?P<charset>[a-z0-9-])+)?(?P<base64>;base64)?\\,(?P<data>.*)?
^data:([a-z0-9][a-z0-9\\!\\#\\$\\&\\-\\^\\_\\+\\.]{0,126}\\/[a-z0-9][a-z0-9\\!\\#\\$\\&\\-\\^\\_\\+\\.]{0,126}(;[a-z0-9\\-]+\\=[a-z0-9\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$
^DATA\\s+(?P<Nsec>\\d+)\\s+(?P<Kinsns>\\d+)\\s+(?P<Uinsns>\\d+)\\s+(?P<Udud>\\d+)\\s+(?P<Idle>\\d+)\\s+(?P<IRQs>\\d+)\\s+(?P<Exns>\\d+)\\s+(?P<Disk>\\d+)\\s+(?P<Con>\\d+)\\s+(?P<Emu>\\d+)\\s+(?P<Net>\\d+)
^db\\\\([a-zA-Z0-9_\\-]+)$
^db\\-v[^_]+_(?P<dtm>[\\d\\-_]+).*\\.dump$
^Dealt to (?P<hero_name>.*) \\[(..) (..)\\]$
^Dealt to (?P<hero_name>.+?) \\[(..) (..)\\]
^def\\s+(
^define (?P<thing>(.*))
^Degami\\\\PHPFormsApi\\\\(.*?)$
^DELETE FROM (
^describe\\((?P<name>(\"[^\"]+\"|'[^']+'))[^{]+\\{
^DetInfo\\((?P<det>\\S+)\\.(?P<det_id>\\d+)\\:(?P<dev>\\S+)\\.(?P<dev_id>\\d+)\\)$
^diff --git \"?a\\/(.+?)(?<!\\\\)\"? \"?b\\/(.+?)(?<!\\\\)\"?$
^directions (?P<start>.*) to (?P<end>.*)$
^directions to (?P<end>.*)$
^Directory: (?P<version>\\d.\\d)$
^do((?!
^docs[\\/\\\\]
^DomainEventHandler::process [a-z0-9_\\\\]+ \\d+\\.\\d+
^DQM_V[0-9]{4}_(?P<subsys>.*)_R(?P<runnr>[0-9]{9})(|_T[0-9]*)\\.root$
^Drupal\\\\(?<provider>[\\w]+)\\\\
^Drupal\\\\Tests\\\\Listeners\\\\
^ds\\[([[A-Za-z0-9\\_]+)?\\]\\.([a-z_]+)
^DUMP\\s+OF\\s+SERVICE\\s+(?P<service>\\S+):
^duplicity-full\\.(?P<time>.*?)\\.manifest(?P<partial>(\\.part))?($|\\.)
^duplicity-full\\.(?P<time>.*?)\\.vol(?P<num>[0-9]+)\\.difftar(?P<partial>(\\.part))?($|\\.)
^duplicity-full-signatures\\.(?P<time>.*?)\\.sigtar(?P<partial>(\\.part))?(\\.|$)
^duplicity-inc\\.(?P<start_time>.*?)\\.to\\.(?P<end_time>.*?)\\.manifest(?P<partial>(\\.part))?(\\.|$)
^duplicity-inc\\.(?P<start_time>.*?)\\.to\\.(?P<end_time>.*?)\\.vol(?P<num>[0-9]+)\\.difftar($|\\.)
^duplicity-new-signatures\\.(?P<start_time>.*?)\\.to\\.(?P<end_time>.*?)\\.sigtar(?P<partial>(\\.part))?(\\.|$)
^Duration: (?P<duration>\\d{2}:\\d{2}:\\d{2}).\\d{2}(.*)$
^-e (?P<link>(?P<vcs>git|svn|hg|bzr).+#egg=(?P<package>.+)-(?P<version>\\d(?:\\.\\d)*))$
^-e (?P<link>.*).+#(?P<package>.+)-(?P<version>\\d(?:\\.\\d)*)$
^Elastica\\\\Test
^else \\\\
^en\\_?
^ENGINE=(?P<engine>[^ ]+) (AUTO_INCREMENT=\\d+ )?DEFAULT CHARSET=(?P<defaultCharset>[^ ]+) COLLATE=(?P<collate>[^ ]+)$
^entry.([a-zA-Z\\_]+)
^entry.([a-zA-Z\\_]+).
^enum\\('(?P<matches>.*)'\\)$
^error (.*)(
^Error: .*[\\/\\\\]node_modules[\\/\\\\]~ is already being used$
^Error: throwing fn\\s+at sum.+\\\\__tests__\\\\test_root\\\\sourcemaps\\\\(out\\\\)?throwing-mapped-fn.js:\\d+:\\d+
^Error: throwing fn\\s+at sum.+\\\\__tests__\\\\test_root\\\\throwing_fn.js:11:9
^ERROR:\\s+duplicate key violates unique constraint \"$tableName\\_(.+?)\\_key\"$
^Errors: (?P<errors>[0-9]+)[ ]+Warnings: (?P<warnings>[0-9]+)[ ]+Total checks: (?P<total>[0-9]+)$
^event:(?P<event>[^/]+)
^EXITCODE: (?P<exitcode>-?\\d*)
^EXITCODE: (?P<exitcode>\\d+)
^ext:(?P<ext>\\d+):sticker:(?P<sticker>\\d+)$
^external:\\\\
^FACTFinder\\\\
^FAILED \\((?:failures=(?P<f>\\d+))?,? ?(?:errors=(?P<e>\\d+))?\\)$
^Faker\\\\Provider.*
^Faker\\\\Provider\\\\(?P<locale>[a-z]{2}_[A-Z]{2})\\\\
^farm([1-3])\\.static.?flickr.com\\/([0-9]+?)\\/([0-9]+?)\\_([a-z0-9]+?)((?:\\_[a-z]){1,2}){0,1}\\.([a-z]+)
^fast\\_send\\.
^fields\\[(?P<resource>\\w+)\\]$
^File \"(?P<filepath>.+)\", line (?P<lineno>\\d+)
^File \"(?P<filepath>.+)\", line (?P<lineno>\\d+), in (?P<funcname>.+)$
^file://(?P<computer>[^/]+)(?P<path>.*)$
^filename[*]=UTF-8''(?P<name>[-_.~A-Za-z0-9%]+)$
^filter(?P<ldelim>\\[?)(?P<assoc>[\\w\\.\\-]*)(?P<rdelim>\\]?$)
^filter_(?P<filter>[\\w\\d]+)_for_(?P<backend>[\\w\\d]+)$
^Firmware Revision\\s*:\\s*(?P<value>[0-9.]*).*
^Flash Lite\\N{TRADE MARK SIGN}
^Floxim\\\\Floxim\\\\Component\\\\([\\w]+)\\\\Finder$
^foo[/\\\\]_cacache$
^For address family: (?P<afi>\\S+) 
^form\\_([a-zA-Z0-9\\_\\-]+)\\.php$
^form_cgroup (?P<field_variables>[^\"']*)(?: (?:[\"'](?P<classes>.*)[\"']))?$
^freetds v(?P<major>[\\d]+)\\.(?P<minor>[\\d]+)(?:\\.(?P<patch>[\\d]+))?$
^from \\. import (?P<name>.+)$
^func\\({1}(?P<args>.*?)?\\){1}\\s*\\(?(?P<rets>.*?)\\)??$
^function (?P<output>\\S+)\\s*=\\s*gsw_(?P<funcname>\\S+)\\((?P<input>.*)\\)
^function \\[(?P<output>.*)\\]\\s*=\\s*gsw_(?P<funcname>\\S+)\\((?P<input>.*)\\)
^function[\\s\\r\\n]*[^\\(]*\\(([^\\)]*)\\)[\\s\\r\\n]*\\{([^]*?)\\}$
^function\\(\"([^\"\\\\]+)\"\\)$
^function\\s*\\w*\\s*\\(([^]*?)\\)
^fzf-(?P<ver>\\d+\\.\\d+\\.\\d+)-(?P<plat>[^-]+)_(?P<arch>[^.]+).(?P<ext>tgz|tar\\.gz|tar\\.bz2|zip)$
^get(?P<name>.+)$
^get([\\p{Upper}]{1}.*)$|^is([\\p{Upper}]{1}.*)$
^get[\\p{Upper}]{1}.*$|^is[\\p{Upper}]{1}.*$
^gi[\\_]*([0-9]*)
^Giosh94mhz\\\\GeonamesBundle\\\\Import\\\\StepBuilder\\\\(\\w+)ImportStepBuilder$
^gist\\.github\\.com/(?P<gist>[a-z0-9A-Z_.\\-]+)\\.git$
^git://((?P<user>[^@]+)@)?(?P<repository1>(?P<host>[^:]+):(?P<path>.*))$|^(?P<protocol>https)://(?P<repository2>.*\\.git)$
^git@(
^git\\.gitorious\\.org/(?P<repo>[^/]+/[^/]+)$
^git\\.oschina\\.net/(?P<repo>[^/]+/[^/]+)$
^gitcafe.com/(?P<repo>[^/]+/.[^/]+)$
^github:(?P<owner>[^/]+)/(?P<project>.+)$
^github\\.com/(?P<owner>[a-z0-9A-Z_.\\-]+)/(?P<repo>[a-z0-9A-Z_.\\-]+)(?P<dir>/.*)?$
^github\\.com/(?P<owner>[a-z0-9A-Z_.\\-]+)/(?P<repo>[a-z0-9A-Z_.\\-]+)(?P<dir>/[a-z0-9A-Z_.\\-/]*)?$
^github-gist:([^/]+/)?(?P<code>.+)$
^gitlab:(?P<owner>[^/]+)/(?P<project>.+)$
^gitlab-snippet:(?P<code>.+)$
^global\\.([a-zA-Z0-9\\-\\_\\.]+)\\.php$
^global\\s+(?P<parameters>.*)?
^GLS\\/1.0 (\\d+) (\\w+).*?\\r\\n\\r\\n([^]*)$
^Going to sign-off the following commits:\\n\\* \\h{7} Alan Smithee <asmithee@example\\.com> first branch commit$
^Going to sign-off the following commits:\\n\\* \\h{7} Alan Smithee <asmithee@example\\.com> second branch commit$
^Going to sign-off the following commits:\\n\\* \\h{7} Alan Smithee <asmithee@example\\.com> second branch commit\\n\\* \\h{7} Alan Smithee <asmithee@example\\.com> first branch commit$
^Going to sign-off the following commits:\\n\\* \\h{7} Alan Smithee <asmithee@example\\.com> second branch commit\\n\\* \\h{7} Alan Smithee <asmithee@example\\.com> Merge branch 'master' into mybranch\\n\\* \\h{7} Alan Smithee <asmithee@example\\.com> first branch commit$
^golang\\.org/x/(?P<repo>[a-z0-9\\-]+)?(?P<dir>/[a-z0-9A-Z_.\\-/]+)?$
^goog.addDependency\\(['\"]([^/]+[a-zA-Z0-9\\-\\_/\\.]*\\.js)['\"], \\[((['\"][\\w\\.]+['\"])+(, ['\"][\\w\\.]+['\"])*)\\], \\[((['\"][\\w\\.]+['\"])+(, ['\"][\\w\\.]+['\"])*)?\\](, {((['\"][\\w]+['\"]: ['\"][\\w]+['\"])+(, ['\"][\\w]+['\"]: ['\"][\\w]+['\"])*)?})?\\);
^gramps://(?P<object_class>[A-Z][a-z]+)/handle/(?P<handle>\\w+)$
^h(?P<level>[1-6])(?P<attributes>.*)\\\\. 
^H\\[(?P<bucket>[^\\]]+)\\]=(?P<count>[0-9]+)$
^Has been clicked at (?P<x>[\\d\\.-]+),(?P<y>[\\d\\.-]+)$
^Has been double clicked at (?P<x>[\\d\\.-]+),(?P<y>[\\d\\.-]+)$
^Has been right clicked at (?P<x>[\\d\\.-]+),(?P<y>[\\d\\.-]+)$
^hdbobj__$class_obj\\__
^HELO\\_
^help|\\\\h|\\/\\?$
^HH\\\\
^host(?P<index>\\d+)-(?P<build>\\d+)-(?P<shard>\\d+)$
^Host: \\Q$ServerName\\E$
^HTC[\\w\\-\\.\\_\\ ]*
^http(?:s)?://(?:www\\.)?twitter\\.com/(?P<handle>[A-Za-z0-9_]{1,25})/?$
^HTTP/(?P<version>[^ ]+) 
^HTTP/(?P<version>[1-9]\\d*\\.\\d) (?P<status>[1-5]\\d{2})(\\s+(?P<reason>.+))?$
^HTTP/(?P<version>\\d+\\.\\d+)\\s+(?P<status>\\d+)
^HTTP/(\\d(?:\\.\\d)?)\\s+(\\d{3})\\s?+(.+)?$
^HTTP/\\S+ (?P<status>\\d+) 
^http://(?:[a-zA-Z0-9\\-]+\\.)?jimaku\\.in/w/([a-zA-Z0-9\\_][^/]+)/([a-zA-Z0-9\\_][^/]+)
^http://testserver/posted/\\?c=(?P<pk>\\d+$)
^http://www.acme.com/items/(?P<item_id>\\d+)/$
^http://www.fanfiction.net/s(?P<id>\\d+)//$
^http://www.youtube.com/v/([0-9A-Za-z\\-\\_]+)\\&.*$
^HTTP\\/(\\d\\.\\d) (\\d++) (.*)
^HTTP\\/[^ ]+ \\d+\\s+(?P<reason>.+)\\s*\\r
^HTTP\\/[0-9]{1}\\.[0-9]{1} (?P<code>[0-9]+) (?P<message>.*)$
^http\\+unix://(?P<sockfile>.+)/write/(?P<id>.+)$
^https://github.com/([^/]++)
^https://github.com/([^/]++)/(.*?)(?:\\.git)?$
^https:\\/\\/(d-\\d+\\.ampproject\\.net)\\/\\$\\internal\\w+\\$\\/frame\\.html$
^https:\\/\\/(d-\\d+\\.ampproject\\.net)\\/\\$\\internal\\w+\\$\\/frame2\\.html$
^https:\\/\\/d-\\d+\\.ampproject\\.net\\/\\$\\internal\\w+\\$\\/frame\\.html$
^https:\\/\\/raw.githubusercontent.com\\/(?P<orga>[\\w-_]+)\\/(?P<repo>[\\w-_]+)\\/.*$
^https?://([^/:\\?]+).+?(https?:/
^https?://(s3[-\\.](?P<region1>.+)\\.amazonaws\\.com/(.+)|(.+)\\.s3-(?P<region2>.+)\\.amazonaws\\.com)/?
^https?://[^/]+?\\Q$_\\E.*
^https?://[^/]++(.*)$
^https?://\n    (?:\\w*.)?\n    showroom-live.com/\n    (?:\n        (?P<room_title>[\\w-]+$)\n        |\n        room/profile\\?room_id=(?P<room_id>\\d+)$\n    )\n
^https?://archiveofourown.org/works/(?P<work_id>[0-9]+)
^https?:\\\\
^https?:\\/\\/(?:(?:(?<subsubdomain>\\w*)\\.)?(?<subdomain>\\w*)\\.)?(?<domain>
^https?:\\/\\/([0-9a-z\\_\\.\\-:]+)\\/
^https?:\\/\\/([0-9a-z\\_\\.\\-:]+)\\/?
^https?:\\/\\/([a-z]+\\.)?([a-z]+\\.)?\\w+(\\/sharing)?\\/watch\\/[a-zA-Z0-9\\-\\_]+\\/?(?:\\?[^\\/]+)?$
^https?:\\/\\/(www|m).facebook.com\\/login.php\\?next=\\Q$e\\E
^https?:\\/\\/[^\\/]+\\/\\.well-known\\/genid\\/([^]+)$
^https?:\\/\\/[0-9a-z\\_\\.\\-\\/:]{1,100}[\\/]$
^https?:\\/\\/asciinema\\.org\\/a\\/[\\p{Alnum}_\\-]+$
^https?:\\/\\/slides\\.com\\/[\\p{Alnum}_\\-]+\\/[\\p{Alnum}_\\-]+$
^https?:\\/\\/www\\.([a-z\\-]+)\\.com\\/media\\/cinematic\\/video\\/(\\d{7,9})\\/[a-zA-Z0-9\\-\\_:\\.]+\\/?(?:[^\\/]+)?$
^https?:\\/\\/www\\.([a-z\\-]+)\\.com\\/videos\\/\\w+\\/(?:[a-z0-9\\-\\/]+)?\\d{4}\\/\\d{2}\\/\\d{2}\\/[a-zA-Z0-9\\-\\_\\.:]+\\/(\\d{7,9})\\/?(?:[^\\/]+)?$
^https?:|^\\s*+[a-z0-9+.-]*+[^:]
^https\\:\\/\\/w\\.soundcloud\\.com\\/player\\/\\?url\\=\\https\\:\\/\\/api\\.soundcloud\\.com\\/tracks\\/([0-9]+)
^https\\:\\/\\/w\\.soundcloud\\.com\\/player\\/\\?url\\=\\https\\:\\/\\/api\\.soundcloud\\.com\\/tracks\\/[0-9]+?
^I (
^I (?:request|visit) (
^I am editing the page at (
^I have a paypal account(?: with 
^I have a(?:n)? (
^I have a(?:n)? unestimated \\s?Pivotal Tracker (
^I time the cucumber suite with (
^i.*\\sinto\\s+\\Q$word\\E$
^image/([a-z0-9\\_\\-\\+]+)
^import +[\"\\'](?P<contract>[^\"\\']+.sol)[\"\\'];$
^import\\s++(os|sys|re)\\b
^inc[\\/\\\\]
^Index:\\s+(?P<path>.*?)\\s*$
^inet6?\\s+(alias\\s+)?(?P<ip>[\\da-f.:]+)\\s+(?:netmask 0x(?P<netmask>[0-9a-f]+)|prefixlen (?P<mask>\\d+)).*
^info\\s+([\\w\\-\\_]+)$
^INSERT INTO (
^INSERT[\\t\\n ]+INTO[\\t\\n ]+([a-z0-9\\_\\-]+)
^INSERT[\t\n ]+INTO[\t\n ]+([a-z0-9\\_\\-]+)
^INSERT[\t\n ]+INTO[\t\n ]+\"?([a-z0-9\\_\\-]+)\"?
^insert\\h+(?:INTO)?\\h*(\\w+?)\\h*\\(.*\\b(?:row)?id\\b.*\\)\\h+VALUES
^insert\\s.*into\\s+\\Q$word\\E$
^insight:(?P<url>\\S*)$
^interface (?P<intf>\\S+)$
^Iop_(?P<generic_name>\\D+?)??(?P<from_type>[IFDV])??(?P<from_signed>[US])??(?P<from_size>\\d+)??(?P<from_signed_back>[US])??((?P<from_side>HL|HI|L|LO)??(?P<conversion>to|as)(?P<to_type>Int|I|F|D|V)??(?P<to_size>\\d+)??(?P<to_signed>[US])??)??(?P<vector_info>\\d+U?S?F?0?x\\d+)??(?P<rounding_mode>_R([ZPNM]))?$
^Ip-admin-([a-z\\_A-Z]+)\\.json$
^is\\_a\\:
^is\\_a\\:\\s+
^isReachable\\(\\p{Alnum}+,\\p{Space}*\\p{Alnum}+,\\p{Space}*\\[(\\p{Alnum}+,\\p{Space})*\\p{Alnum}+\\]+\\)$
^isReachable\\(\\p{Space}*\\p{Alnum}+,\\p{Space}*\\p{Alnum}+\\)$
^ITEM (?P<key>\\S+) \\[(?P<size>\\d+) b; (?P<expires>\\d+) s\\]
^java version \"(?P<major1>\\d+)\\.(?P<major2>\\d+)\\.[^\"]+\"$
^job (?P<job_id>\\d+) at (?P<timespec>.*)$
^JOINED\\_$rel_name\\_
^juju-(?P<storageName>\\D+)-\\d+$
^k-(
^k8s_(?P<kubernetes_container_name>[^_\\.]+)[^_]+_(?P<kubernetes_pod_name>[^_]+)_(?P<kubernetes_namespace>[^_]+)
^L\\(\\p{Space}*\\p{Alnum}+\\p{Space}*\\)$
^label-(?P<locale>.*)$
^label-(?P<locale>[\\w_]+)$
^LastPassPrivateKey<(?P<hex_key>.*)>LastPassPrivateKey$
^launchpad\\.net/(?P<repo>(?P<project>[a-z0-9A-Z_.\\-]+)(?P<series>/[a-z0-9A-Z_.\\-]+)?|~[a-z0-9A-Z_.\\-]+/(\\+junk|[a-z0-9A-Z_.\\-]+)/[a-z0-9A-Z_.\\-]+)(?P<dir>/[a-z0-9A-Z_.\\-/]+)*$
^lib(?P<libname>.*)
^lib/\\Q$ARCH\\E/.*\\.pm$
^lib/\\Q$ARCH\\E/.*\\.so$
^lib/auto/(?:.+/)?([^\\/]+)/\\1(?:\\Q$Config{_a}\\E|\\.pdb|\\.exp)$
^LIBRARIES\\s*=(?P<value>[^#]*).*$
^License server status: (?P<servers>[\\w\\,\\.\\@\\-]+)
^line.*(?:Error|Warning):.* attribute \\\"(?:
^line.*(?:Error|Warning):.*<\\/?(?:
^Linux (?P<name>.+?) (?P<version>[0-9.]+).*$
^Linux (?P<name>.+?) (?P<version>[0-9.]+)\\b
^Linux (?P<name>Ubuntu|Debian) (?P<version>[0-9.]+).*$
^lithium\\\\tests\\\\cases\\\\
^lmstat (?P<version>v[\\d\\.]+) build (?P<build>\\d+) (?P<arch>[\\w\\_]+)
^local:(?P<database>[A-Za-z][A-Za-z0-9\\_\\$\\(\\)\\+\\-\\/]+)$
^localstorage\\_\\_\\_(.*)+\\_\\_\\_\\d*$
^lxc\\.network\\.hwaddr\\s*+=\\s*+(.+)$
^M \\h{7} Alan Smithee <asmithee@example.com> first branch commit$
^m(\\d+)_(\\d+)\\_(.*)\\.[jt]s$
^m(\\d+)_(\\d+)\\_(.*)\\.js$
^Magento\\\\([^\\\\]+)\\\\Test
^Manufacturer ID\\s*:\\s*(?P<value>.*)
^memcached:(//)?(?:([^@]*+)@)?
^Merge pull request #(?P<number>\\d+)
^module\\s+(
^mov (?P<a>e..), (?P<b>(?P=a))$
^mov (?P<a>e..), (?P<b>0?x?([0-7][0-9A-Fa-f]|[0-9A-Fa-f]))$
^mov (?P<a>e..), (?P<b>0?x?0)$
^mov (?P<a>e..), (?P<b>0?x?1)$
^mov (?P<a>e..), (?P<b>e..)$
^mov (?P<a>r.(i|x|p)), (?P<b>r.(i|x|p))$
^Mozilla[0-9\\-\\.\\_\\ ]*
^MSG\\s+(?P<subject>[^\\s\r\n]+)\\s+(?P<sid>[^\\s\r\n]+)\\s+(?P<reply>([^\\s\r\n]+)[^\\S\r\n]+)?(?P<size>\\d+)\r\n
^multipart/mixed; boundary=\"(?P<boundary>[a-f0-9]+)\"$
^N \\h{7} Alan Smithee <asmithee@example.com> first branch commit$
^N \\h{7} Alan Smithee <asmithee@example.com> second branch commit$
^N \\h{7} Alan Smithee <asmithee@example.com> third commit$
^N\\d+\\_CA\\d+\\_\\w\\d+
^Name: (?P<name>.*), value: (?P<value>.*), timestamp: (?P<timestamp>.*), flags: ?(?P<flags>.*)$
^namespace:[\\s]*(?P<alias>[\\w\\.]+)[\\s]*\\=[\\s]*(?P<packageKey>[\\w\\.]+)[\\s]*$
^nav_menu\\[(?P<nav_menu_id>-?\\d+)\\]$
^node\\.(?P<id>.*?)\\.
^node_modules[/\\\\]
^Nokia[\\w\\.\\_\\ ]*
^notextile(?P<mode>\\\\.{1,2}) 
^not-matched(?P<Match>.+)$
^NT\\_.*\\s
^numeric\\((?P<precision>\\d+), *(?P<scale>\\d+)\\)$
^O:[0-9]+:\"(?P<classname>.+?)\"
^O:\\d+:\"[^\"]++\"
^oa-(?P<major>\\d)\\.(?P<minor>\\d+)-
^obo\\\\
^one (
^Opening '(?P<path>.*?)' for reading$
^openrtb\\\\models\\\\
^or (?P<a>e..), (?P<b>(?P=a))$
^or (?P<a>r..), (?P<b>(?P=a))$
^origin\\s+(?P<url>\\S+)
^ORM\\\\(.+)
^orm\\\\(.+)
^OS Name:\\s+(?P<osname>.*)
^OS Version:\\s+(?P<osversion>.*)
^osu file format v(?P<version>\\d+)$
^other\\_(.+)$
^Output( directory)?:\\s+(?P<output_dir>\\S+://\\S+)\\s*$
^p#(?:[FP]L)?([\\p{PerlWord}-]+)\\z
^P((?P<year>\\d+)Y)?((?P<month>\\d+)M)?((?P<week>\\d+)W)?((?P<day>\\d+)D)?(T((?P<hour>\\d+)H)?((?P<minute>\\d+)M)?((?P<second>\\d+)S)?)?$
^P(?:(?P<days>\\d+(.\\d+)?)D)?(?:T(?:(?P<hours>\\d+(.\\d+)?)H)?(?:(?P<minutes>\\d+(.\\d+)?)M)?(?:(?P<seconds>\\d+(.\\d+)?)S)?)?$
^P(?P<manufacturer>\\w{3})$
^P(?P<precip>\\d\\d\\d\\d)\\s+
^P[A-Z]\\s+WND\\s+\n                               (?P<dir>\\d\\d\\d)\n                               (?P<speed>P?\\d\\d\\d?)/\n                               (?P<hour>\\d\\d)?\n                               (?P<min>\\d\\d)\\s+
^pa\\_
^pam_unix\\(sshd\\:session\\)\\: session (opened|closed) for user (?P<username>[a-zA-Z0-9\\@._-]+)(?: by \\(uid\\=\\d*\\))?$
^pam_unix\\(su(?:-l)?\\:session\\)\\: session (?P<status>\\w+) for user (?P<username>\\w+)(?: (?:by (?:(?P<originuser>\\w+))?\\(uid\\=(?P<uid>[0-9]+)\\)?)?)?$
^papi\\_
^papi\\_\\w+\\_store$
^papi\\_\\w+\\_type
^Parser Error: | at column \\d+ in [^]*$
^pastebin:(?P<code>.+)$
^perl\\Q$exe\\E$
^PHALCON_DOC_METHOD\\(([a-zA-Z0-9\\_]+), (.*)\\)
^PHALCON_INIT_CLASS\\(([a-zA-Z0-9\\_]+)\\)
^PhlytyTest\\\\
^PHP Fatal error: Call to undefined function Test\\\\Creator\\\\Stuff\\\\doSomething\\(\\)$
^PHP Fatal error: Call to undefined method MyStuff\\\\Test::iDontExist\\(\\)$
^PHP Fatal error: Cannot use Uniter\\\\Tool\\\\Stuff as Stuff because the name is already in use$
^PHP Fatal error: Class 'Creator\\\\Autoload\\\\ClassLoader' not found$
^PHP Fatal error: Class 'My\\\\Library\\\\TeSt' not found$
^PHP Fatal error: Undefined constant 'Fun\\\\My\\\\Stuff\\\\NAME'$
^PHP_METHOD\\(([a-zA-Z0-9\\_]+), (.*)\\)
^PHP_METHOD\\(([a-zA-Z0-9\\_]+), ([a-zA-Z0-9\\_]+)\\)
^phpbb\\\\avatar\\\\driver\\\\
^PhpCsFixer\\\\Tests
^PID: (?P<pid>\\d*)
^PID: (?P<pid>\\d+)
^PING (?P<payload>.*)
^PL([a-zA-Z0-9\\\\_\\\\-]{32})$
^Playback_V[0-9]{4}_(?P<subsys>.*)_R(?P<runnr>[0-9]{9})(|_T[0-9]*)\\.root$
^Plugin\\\\.*\\\\Entity$
^POE\\-([\\d\\.\\_]+)\\-(\\w+?)\\-(LITE|HEAVY)\\-(noassert|assert)\\-(noxsqueue|xsqueue)\\.yml$
^pop (?P<a>e..)$
^population (?P<country>.*)$
^population of (?P<country>.*)$
^PORT=(?P<port>\\d+$)
^Postmark\\\\
^Postponed (?P<authmethod>\\w+) for (?P<username>[a-zA-Z0-9\\@._-]+) from (?P<sourceipaddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) port (?P<sourceport>\\d{1,5}) ssh2(?: \\[preauth\\])?$
^pre(?P<attributes>.*?)(?P<mode>\\\\.{1,2}) 
^prefix=(?P<prefix>.*)
^prettier-ignore-attribute(?:\\s+([^]+))?$
^Processing split:\\s+(?P<path>.*):(?P<start_line>\\d+)\\+(?P<num_lines>\\d+)$
^PROGRAM_VERSION = \"(?P<version>[0-9.]+)\"
^ptui_checkVC\\('(?P<status>\\d+)','(?P<content>\\S+)'\\);$
^ptuiCB\\('(?P<one>\\d+)','(?P<two>\\d+)','(?P<url>\\S+)','(?P<three>\\d+)','(?P<status>\\S+)'\\);
^pug\\_
^push (?P<b>e..)$
^q=\\Q$qid\\E\\|f=
^qr(.)(.*)\\g{1}
^que (?:el|la) (.+) ['\"](.+)[\"'] tiene (
^que dich[oa]s? (.+) tienen? (
^QUEUE: (?P<queue>\\S+)
^quit|\\\\q|q$
^r/(?P<RE_REGEXP>.+)/$
^r?'('|[^\\n\\f\\r]*?[^\\\\]')
^r?'''[\\S\\s]*?[^\\\\]'''
^r?\\\"(\\\"|(?:[^\\n\\r\\f])*?[^\\\\]\\\")
^r?\"(\"|[^\\n\\f\\r]*?[^\\\\]\")
^r?\"\"\"[\\S\\s]*?[^\\\\]\"\"\"
^r?\\'(\\'|(?:[^\\n\\r\\f])*?[^\\\\]\\')
^r\\w+\\s+\\Q$word\\E$
^r\\w+\\s+\\w+\\s+\\Q$word\\E$
^raise[\\(\\s]*(
^rake (
^random (?P<fact_type>(.*)) fact
^RCS file: $RCS_Root[/\\\\](.*),v$
^RE(?P<desc>MI|PR|BC|DR|BL|SH|TS|FZ)?\n                              (?P<prec>(DZ|RA|SN|SG|IC|PL|GR|GS|UP)*)?\n                              (?P<obsc>BR|FG|FU|VA|DU|SA|HZ|PY)?\n                              (?P<other>PO|SQ|FC|SS|DS)?\\s+
^recaptcha\\_(challenge|response)\\_field$
^Received request: GET (?P<url>.+)\nHeaders: (?P<headers>\\{.+\\})\n\\s*$
^RedKiteCms\\\\Theme\\\\[\\w]+ThemeBundle
^ref: refs/heads/(?P<branch>.+)\\n$
^Referer:\\s*\\Q$base
^refs/\\Q$type\\E/
^refs\\/(?P<area>[^\\/]+)\\/(?P<shortname>.*)$
^refs\\/(?P<key>\\S+)\\/(?P<value>\\S+)
^refs\\/changes\\/[0-9]*\\/[0-9]*\\/(?P<patchset>.+)$
^region-\\Q$self->{region_name}\\E\\.
^remote:(?P<hostname>([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])|(([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])\\.)+([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9])):(?P<portnum>\\d+):(?P<database>[A-Za-z][A-Za-z0-9\\_\\$\\(\\)\\+\\-\\/]+)$
^remove\\s+([\\w\\-\\_]+)$
^requirements-(?P<channel>.*)$
^requirements(?P<suffix>.*).txt$
^Resource id #(?P<id>\\d+)$
^Responding with 200 for: GET (?P<url>.+)\nHeaders: (?P<headers>\\{.+\\})\n\nresponse\\!\n\\s*$
^Revision history for Acme-Version-Hex\\n\\n\\K$orig_version(\\s+)
^rinohtype-(?P<version>\\d+\\.\\d+\\.\\d+(\\.dev\\d+)?(\\+[a-z0-9]+(\\.dirty\\d{8})?)?)\\.zip$
^RSpec.describe \"(.*)\\/edit\
^RSpec.describe \"(.*)\\/index\
^RSpec.describe \"(.*)\\/new\
^RSpec.describe \"(.*)\\/show\
^RSpec.describe \\\"admin\\/posts\\/index\\\
^RSpec.describe \\\"Posts\\\
^RSpec.describe \"posts\\/index.html.erb\
^RSpec.describe \"posts\\/index.html.haml\
^RSpec.describe \\\"posts\\/index\\\
^RSpec.describe \"posts\\/show.html.erb\
^RSpec.feature \\\"Folder::Posts\\\
^RSpec.feature \\\"Post\\\
^RSpec.feature \\\"Posts\\\
^rtmp://[^/]+/(?P<app>.+)/?$
^ruby-1\\.0\\.\\d+(-[\\w\\.]+)?+$
^Running job: (?P<job_id>job_\\d+_\\d{4})\\s*$
^s(hift)?[\\_\\-]?jis
^s/(.+)(?!\\\\)/
^s/\\^?(.+?)\\$?(?!\\\\)/
^s?([0-9]+)\\_
^s?\\/(.*)(?<!\\\\)\\/(.*)(?<!\\\\)\\/.*$
^s?\\/(.*?(?:(?!\\\\).))\\/(.*)\\/$
^S\\[\"(\\w+)\"\\]\\s*=\\s*\"(.*)\"\\s*(\\\\)?$
^s\\_
^S-1-5-21-[0-9]+-[0-9]+-[0-9]+-[0-9]{3,}\\\\Software\\\\Policies\\\\Microsoft\\\\Windows\\\\Installer
^s3://(?P<bucket_name>[^/]+)(?P<key>.*)$
^s3://(?P<bucket>[a-zA-Z0-9.\\-_]+)/(?P<key>.+)$
^s3-website-(?P<region>.*?)?\\.amazonaws.com
^Samsung[\\w\\.\\_\\-]*
^screenshot_(?P<width>\\d+)x(?P<height>\\d+)$
^Seat (?P<seat>\\d): (?P<name>.*?) .*collected \\((\\d*)\\),
^Seat (?P<seat>\\d+): (?P<name>.+?) \\(\\$?(?P<stack>\\d+(\\.\\d+)?) in chips\\)
^SELECT .* FROM (
^select\\s+((?:`|\")
^SERVICE\\s(?P<service>\\S+)\\s\\w+\\spid=\\d+$
^session \\Q$kernel_id\\E \\(alias-1\\)$
^SESSION\\s+WHERE\\s+VERSION\\s*\\=\\s*(((:\\$*)?\\w+)|\\d+))?(\\s+AND\\s+(HOSTID|SESSIONNO|USER)\\s*=\\s*((:\\$*)?\\w+))*$
^SET timestamp=(?P<unixTime>[0-9]+);$
^SET\\s|^BEGIN;|^COPY\\s|^END;|^\\\\
^setIs(?P<remainder>[A-Z].*)$
^SG\\_ (\\w+) (\\w+) *: (\\d+)\\|(\\d+)@(\\d+)([\\+|\\-]) \\(([0-9.+\\-eE]+),([0-9.+\\-eE]+)\\) \\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] \\\"(.*)\\\" (.*)
^SG\\_ (\\w+) : (\\d+)\\|(\\d+)@(\\d+)([\\+|\\-]) \\(([0-9.+\\-eE]+),([0-9.+\\-eE]+)\\) \\[([0-9.+\\-eE]+)\\|([0-9.+\\-eE]+)\\] \\\"(.*)\\\" (.*)
^sg-\\h{8}$
^shared\\_
^shared\\_backend\\.(.*)
^SID:(?P<type>(?:ANON|AUTH)):(?P<realm>.*?):(?P<session_id>.+?)(?:[-:][0-9a-fA-F]+){0,2}$
^SKIP\\S*\n            (?P<whitespace>\\s*) # Optional whitespace.\n            (?P<reason>.*)      # Slurp up the rest.
^SLP(?P<press>\\d\\d\\d)\\s+
^Smart\\\\Controllers\\\\(?P<module>\\w+)\\\\(?P<controller>\\w+)@(?P<action>\\w+)
^smtp://(?P<host>[^:]+):(?P<port>\\d+)$
^snap-\\h{8}$
^snmp-server\\s+community\\s+(?P<community>\\S+)\n                                (\\s+view\\s+(?P<view>\\S+))?(\\s+(?P<access>ro|rw)?)\n                                (\\s+ipv6\\s+(?P<v6_acl>\\S+))?(\\s+(?P<v4_acl>\\S+))?$
^snort\\\\.raw\\\\[(?P<bytes>\\\\d+)\\\\]:\\n
^SonyEricsson[\\w\\.\\_]*
^soyfile://(
^SparkAPI\\_
^SPF\\_
^Spryker.*\\\\
^Spryker.*\\\\Shared\\\\
^Spryker[a-zA-Z]*\\\\[a-zA-Z]+\\\\[a-zA-Z]+\\\\Communication\\\\Plugin\\b
^Spryker[a-zA-Z]*\\\\[a-zA-Z]+\\\\[a-zA-Z]+\\\\Dependency\\\\Plugin\\b
^Spryker[a-zA-Z]*\\\\Client\\\\[a-zA-Z]+$
^Spryker[a-zA-Z]*\\\\Zed\\\\(.*?)\\\\Persistence$
^Spryker\\\\Zed\\\\(.*?)\\\\Business$
^Spryker\\\\Zed\\\\(.+?)\\\\Business$
^SQL\\s+WHERE\\s+VERSION\\s*\\=\\s*(((:\\$*)?\\w+)|\\d+))?(\\s+AND\\s+(HOSTID|SESSIONNO)\\s*=\\s*((:\\$*)?\\w+))*$
^SRC:.*[/\\\\].original.js:1$
^SRC:.*[/\\\\]\\.original\\.js:1$
^src[\\/\\\\]dev[\\/\\\\]build
^ssh://(?P<hostname>[^/]+)?(?P<filesystem_path>/.*)$
^Stability:[^\\\\]*(\\\\n[^\\\\]*)?
^start\\s+([\\w\\-\\_]+)$
^Starting session: (?P<sessiontype>\\w+)(?: on )?(?P<device>pts/0)? for (?P<username>[a-zA-Z0-9\\@._-]+) from (?P<sourceipaddress>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}) port (?P<sourceport>\\d{1,5})$
^STAT queue_(\\S+?)_(
^static[/\\\\][^/\\\\]+[/\\\\]pages.*\\.js$
^static[/\\\\][^/\\\\]+[/\\\\]pages[/\\\\](.*)\\.js$
^status\\s+([\\w\\-\\_]+)$
^STEAM_(?P<universe>\\d+):(?P<reminder>[0-1]):(?P<id>\\d+)$
^STEAM_(?P<X>\\d+):(?P<Y>\\d+):(?P<Z>\\d+)$
^sticker: \\Q$name\\E=(.*)$
^stock (?P<symbol>[\\w=]{,10})$
^stop\\s+([\\w\\-\\_]+)$
^sub (?P<a>e..), (?P<b>(?P=a))$
^sub (?P<a>r..), (?P<b>(?P=a))$
^sub-(?P<subject_id>[a-zA-Z0-9]+)(_ses-(?P<session_id>[a-zA-Z0-9]+))?(_task-(?P<task_id>[a-zA-Z0-9]+))?(_acq-(?P<acq_id>[a-zA-Z0-9]+))?(_rec-(?P<rec_id>[a-zA-Z0-9]+))?(_run-(?P<run_id>[a-zA-Z0-9]+))?
^Subject: \\Q${tag}\\E 
^Submitted application (?P<application_id>application_\\d+_\\d{4})\\s*$
^subtitle_(?P<lang>[^_]+)_(?P<ext>(vtt|srt))
^Successfully built\\s+(?P<id>\\S+)\n?$
^SUTURE\\_
^SvKFS (?P<basefile>\\d{4}:\\d{1,3})
^Symfony\\\\Component\\\\([a-z]+\\\\)+[a-z]+Interface$
^sys\\_
^System Locale:\\s+(?P<syslocale>.*)
^T(?P<tsign>0|1)\n                               (?P<temp>\\d\\d\\d)\n                               ((?P<dsign>0|1)\n                               (?P<dewpt>\\d\\d\\d))?\\s+
^t/\\Q$_
^T_([0-9\\_]+)\\.[spo]+
^Table '(.*)' (\\d+)-max Seat #(?P<button>\\d+) is the button
^tag matching (
^tag:(?P<name>.*),(?P<date>\\d{4}-?\\d{0,2}-?\\d{0,2}):(?P<specific>.*)(.*:)*$
^TAO\\\\([^\\\\]+)$
^TAO\\\\Bundle\\\\([^\\\\]+)\\\\(.+)$
^TAO\\\\CachedInfoblock\\\\([^\\\\]+)$
^TAO\\\\CLI\\\\([^\\\\]+)$
^TAO\\\\PropertyContainer\\\\([^\\\\]+)$
^TAO\\\\UField\\\\([^\\\\]+)$
^TAP version (?P<version>\\d+)$
^Task Id *: (?P<attempt_id>attempt_\\d+_\\d{4}_[mr]_\\d+_\\d+), Status *: FAILED$
^task=\\s?([A-Za-z\\d\\_]+)\\s?
^Tdt[\\\\](?!Core)
^Teardown GRE connection (?P<connection>\\d+) from (?P<src_iface>\\w+):(?P<src>[\\d.]+)\\s*\\/(?P<srcport>\\d+) \\([\\d./]*\\) (?P<idw_user1>\\(\\w+\\)\\s)?to (?P<dst_iface>\\w+):(?P<dst>[\\d.]+)\\s*\\/(?P<dstport>\\d+) \\([\\d./]*\\) (?P<idw_user2>\\(\\w+\\)\\s)?duration (?P<duration>[\\d:\\s]+) bytes (?P<bytes>\\d+).*$
^Teardown ICMP connection for faddr (?P<faddr>[\\d.]+)\\s*\\/(?P<faddrport>\\d+) (?P<idw_user1>\\(\\w+\\)\\s)?gaddr (?P<gaddr>[\\d.]+)\\s*\\/(?P<gaddrport>\\d+) laddr (?P<laddr>[\\d.]+)\\s*\\/(?P<laddrport>\\d+)(?P<idw_user2>\\s?\\(\\w+\\)\\s)?.*$
^Teardown TCP connection (?P<connection>\\d+) for (?P<dst_interface>\\w+)\\s*:(?P<dst>[\\d\\.]+)\\s*\\/(?P<dstport>\\d+) (?:\\(\\w+\\)\\s)?to (?P<src_interface>\\w+)\\s*:(?P<src>[\\d\\.]+)\\s*\\/(?P<srcport>\\d+) (?:\\(\\w+\\)\\s)?duration (?P<duration>[\\d:\\s]+) bytes (?P<bytes>\\d+).*$
^Teardown UDP connection (?P<connection>\\d+) for (?P<dst_interface>\\w+)\\s*:(?P<dst>[\\d\\.]+)\\s*\\/(?P<dstport>\\d+) (?:\\(\\w+\\)\\s)?to (?P<src_interface>\\w+)\\s*:(?P<src>[\\d\\.]+)\\s*\\/(?P<srcport>\\d+) (?:\\(\\w+\\)\\s)?duration (?P<duration>[\\d:\\s]+) bytes (?P<bytes>\\d+).*$
^templates(?:\\/|\\\\)
^test (?P<a>e..), (?P<b>(?P=a))$
^test (?P<a>r..), (?P<b>(?P=a))$
^test-(?P<build>\\d+)-(?P<shard>\\d+)-(?P<index>\\d+)$
^test(\\/|\\\\)(?!bower_components)
^test(\\/|\\\\)(?=bower_components)
^test/(
^testing .*Error.*foo.* function \\(\\) {[^]*} \\/bar\\/ 5$
^tests\\_[a-z]+\\.php$
^that (
^that the uploader class has a version named '([^\\']+)' which process '([a-zA-Z0-9\\_\\?!]*)'$
^the (
^the class will process '([a-zA-Z0-9\\_\\?!]*)'$
^the file at ([a-zA-Z0-9/\\\\_.]+) contains:$
^the last output should match (
^the last output should not match (
^the last vendor output should match (
^the last vendor output should not match (
^the migration (
^theme\\_(.*?)$
^this (scenario|background|
^tmutil version (?P<version>[^ ]+) \\(built (?P<builddate>[^)]+)\\)$
^to\\_.*
^to_(
^toc::\\[(
^TODO\\b             # The directive name\n            (?P<whitespace>\\s*) # Immediately following must be whitespace.\n            (?P<reason>.*)      # Slurp up the rest.
^traefik\\.(?P<segment_name>.+?)\\.(?P<property_name>port|portIndex|portName|weight|protocol|backend|frontend\\.(.+))$
^traefik\\.(?P<segment_name>.+?)\\.port$
^traefik\\.(?P<service_name>.+?)\\.(?P<property_name>port|portIndex|weight|protocol|backend|frontend\\.(.*))$
^traefik\\.(?P<service_name>.+?)\\.(?P<property_name>port|weight|protocol|frontend\\.(.*))$
^traefik\\.frontend\\.errors\\.(?P<name>[^ .]+)\\.(?P<field>[^ .]+)$
^traefik\\.frontend\\.rateLimit\\.rateSet\\.(?P<name>[^ .]+)\\.(?P<field>[^ .]+)$
^trimElement\\_
^Trismegiste\\\\Mondrian\\\\(.+)$
^tss~v1~*[a-zA-Z0-9\\.\\-\\_]{0,16}~[0-9]{1,3}~([a-zA-Z0-9\\-\\_]+\\={0,2})$
^Tx_(?P<extensionName>[^_]+)_.*$
^type (?P<struct_name>[^\\ ]*) struct {$
^u#([\\p{PerlWord}-]+)\\z
^u(
^u(\\h{,4})$
^U(\\h{,8})$
^u\\w+\\s+\\Q$word\\E$
^UC([a-zA-Z0-9\\\\-\\\\_]{22})$
^Uid\\s+(?P<uid>\\S+):
^Undefined property: ([\\w\\\\]+)::\\$(\\w+)
^Unit\\\\
^UNKNOWN\\K$
^Unrecognized option: (?P<option>.*)$
^UPDATE (
^update\\s+([\\w\\-\\_]+)\\s+(\\{.*\\})$
^update\\s+\\Q$word\\E$
^URL: \\Q$url\\E$
^url\\($_optspace(?:\n\t\t\t\t(')[^'\\\\]*(?:\\\\.[^'\\\\]*)*\n\t\t\t \t  |\n\t\t\t\t(\")[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\n\t\t\t\t  |\n\t\t\t\t[^)\\\\]*(?:\\\\.[^)\\\\]*)*\n\t\t\t)
^urn:[a-zA-Z0-9][a-zA-Z0-9\\-]{1,31}:([a-zA-Z0-9\\(\\)\\+\\,\\.\\:\\=\\@\\;$\\_\\!\\*\\-]|%[0-9a-fA-F]{2})*
^Usage: screw.js [^]*\\n$
^use (?:([^ ]+ as )|(.*\\\\))?(.*);$
^use (?P<class>[^\\s;]+)(?:\\s+as\\s+(?P<alias>.*))?;
^User #: (?P<usernum>\\d+)\\s+(?P<callerid>.+)\\s+Channel: (?P<channel>\\S+)\\s+\\((?P<monitor>.+)\\)\\s+(?P<duration>\\S+)
^User (?P<user>[^\\s]+) marked read (?P<outbox>\\d+) outbox and (?P<inbox>\\d+) inbox messages$
^user\\_.+$
^userId=(?P<uid>\\d+)(\\s+gids.*)?
^username\\s+(?<user>
^User's \\(AFS ID \\d*\\) tokens for (?P<id>\\w*@\\S*) \\[Expires (?P<expires>.*)\\]$
^v(?P<maj>\\d+)\\.(?P<min>\\d+)(?P<suffix>[a-zA-Z][a-zA-Z0-9]*)?(-(?P<gitsuffix>\\d+-?g?[a-fA-F0-9]*))?$
^v(?P<major>\\d+)\\.(?P<minor>\\d+)
^v(?P<version>\\d+\\.\\d+\\.\\d+)(?P<dirty>\\+dirty)?$
^v(?P<version>\\d+\\.\\d+\\.\\d+)-dev\\.(?P<time>\\d+)\\+(?P<gitInfo>g[a-z0-9]+)(?P<dirty>.dirty)?$
^v(?P<version>\\d+\\.\\d+\\.\\d+)-rc\\.(?P<rcN>\\d+)(?P<dirty>\\+dirty)?$
^v?(
^v\\s+(
^Vagrant (?P<version>.+)$
^values\\[(?P<attribute>[a-z0-9-_\\<\\>]+)
^varchar\\((?P<length>\\d+)\\)
^varchar\\((?P<max_length>\\d+)\\)$
^variant-attributes_(?P<level>.*)$
^variant-axes_(?P<level>.*)$
^vendor/bundle([/\\\\]|$)
^Version \\Q$v\\E$
^version\\s+(['\"])(
^VERSION\\s+WHERE\\s+VERSION\\s*\\=\\s*(((:\\$*)?\\w+)|\\d+))$
^version_info\\s*=\\s*\\(\\s*(?P<v0>\\d+)\\s*,\\s*(?P<v1>\\d+)\\s*,\\s*(?P<v2>\\d+)\\s*\\)\\s*$
^video_urls\\]\\[(?P<resolution>[0-9]+)p
^VIDEOOT-[A-Z0-9]+\\\\([\\w!.,& ()\\[\\]'\\`-]{8,}?\\b.?)([-_](proof|sample|thumbs?))*(\\.part\\d*(\\.rar)?|\\.rar|\\.7z)?(\\d{1,3}\\.rev|\\.vol.+?|\\.mp4)
^visited\\(\\p{Alnum}+\\)$
^vmlinuz-(?P<version>.+)$
^vn = \\d+ 0x\\h+$
^vn\\s+(
^vt\\s+(
^we have (
^widget\\[(?P<widget_id>.+)\\]$
^Wikimedia\\\\Rdbms\\\\
^Wikimedia\\\\Rdbms\\\\Database::query \\((.+)\\)$
^WSHFT\\s+\n                                (?P<hour>\\d\\d)?\n                                (?P<min>\\d\\d)\n                                (\\s+(?P<front>FROPA))?\\s+
^x(\\h{,2})$
^X[SBC]*-\\Q$name\\E$
^X-Bitrix-Posting:\\s*(?P<id>[0-9]+)\\s*$
^Xcode (?P<version>.+)\\nBuild version (?P<build>.+)
^xmlns(:[
^xn--([a-z0-9](-?[a-z0-9]+)){2,}*\\.((xn--[a-z0-9](-?[a-z0-9]+)*)|([a-z]{2,}))?\\.?$
^xor (?P<a>e..), (?P<b>(?P=a))$
^xor (?P<a>r..), (?P<b>(?P=a))$
^X-Pingback:\\h*(.+)
^YAML error: (?P<msg>.*)$
^YAML error: line (?P<line>[[:digit:]]+): (?P<msg>.*)$
^year:(?P<year>\\d{4})$
^Your vendor has not defined constants macro \\Q$const
^zdp\\_
_$self->{memory}{ \"$key\\_num\" }$
_(
_(?!\\\\)((_\\\\|[^_])*)_(?=$|[^\\\\])
_(?P<base_code>[a-z]{2,7})(_(?P<ext_code>[a-z]{2,7})){0,1}$
_(?P<height>\\d+)p_(?P<tbr>\\d+)\\.mp4
_(?P<version>[0-9][0-9][0-9])_syn
_(?P<width>\\d+)x(?P<height>\\d+)\\.mp4$
_(?P<width>\\d+)X(?P<height>\\d+)\\.mp4$
_(?P<width>\\d+)x(?P<height>\\d+)_(?P<vbr>\\d+)k\\.mp4$
_(?P<width>\\d+|AUTO)x(?P<height>\\d+|AUTO)_(?P<mode>[a-z]+)(?:_(?P<position>[a-z\\-]+))?(?:_(?P<quality>\\d+))?(?:_(?P<interlace>[a-z]+))?
_([^ _\\\\]|\\\\.)+_[a-z](_([^ _\\\\]|\\\\.)+)?(_rel)?$|[^_]([^ \\\\]|\\\\.)+(_rel)?$
-_.~!#$&*+,/:;=?@[]
_:((?:[0-9]|
_:(?:[0-9]|
_?(?P<lemma>.*?)_((?P<pos>[a-z])_)?((?P<sense>([^_\\\\]|(?:\\\\.))+)_)?(?P<end>rel)$
_[\\h]{8}-[\\h]{4}-4[\\h]{3}-[\\h]{4}-[\\h]{12}
_\\((?<!\\\\)'(.*?)(?<!\\\\)'
_\\((?<!\\\\)\"(.*?)(?<!\\\\)\"
_\\@\\_
_\\K
_\\Q$value\\E$
__(?P<name>[a-z_]+)__ = (?P<expr>.*)
__([^_\\\\]+)__
__\\((?:'|\")(?P<matches>.*?)(?:'|\")*\\)
__\\(('|\")(.+?)(?<!\\\\)\\1
___(
___YUICSSMIN_PRESERVE_CANDIDATE_COMMENT_(?P<num>\\d+)___
__alarm__ignore__\\Q($id)\\E
__fixtures__(\\/|\\\\)svgr(\\/|\\\\)\\.svgrrc$
__MSG_(?P<value>.+)__
__version__ = \\\"(?P<version>[0-9.a-zA-Z-]+)\\\"
__version__\\s*=\\s*(?P<q>['\"])(?P<version>\\d+(\\.\\d+)*(-(alpha|beta|rc)(\\.\\d+)?)?)(?P=q)
__version__\\s*=\\s*\"(?P<version>.*)\"\n
__version__\\s+=\\s+(?P<q>[\"\\'])(?P<ver>\\d+(?:\\.\\d+)*)(?P=q)
__version__\\s+=\\s+(?P<quote>['\"])(?P<version>.+?)(?P=quote)
__version__\\s+=\\s+(?P<quote>[\\'\"])(?P<version>.*)(?P=quote)
__version__\\s+=\\s+(?P<version>.*)
__version__\\s+=\\s+(['\"])(?P<version>.+?)\\1
__version_date_info__ = (
__version_info__ = (
_{2,}+
_|(?!\\p{Mc})\\p{Alpha}|[^\\u0000-\\uFFFF]
_|\\P{Word}
_ac__(?P<confkey>.*)
_B(?P<num_band>\\d+).tif
_default([\\/\\\\index])?\\.html$
_design\\/[a-zA-Z0-9\\_\\-]+
_EMO_([^_]+?)_([^]*?)_EMO_
_MAT(?P<dimensions>[\\dx]+)
_py(?P<version>\\d)
_reverse($text);\n        $x -= length($text);\n        $y += length($text);\n        $x++;\n        $y--;\n        while ($text =~ 
_reverse($text);\n        push(@matches, [length($1),$x, length($text)-_start(\\$text, $1)-1,\n            0, -1, \\$_]) while ($text =~ 
_reverse($text);\n        while ($text =~ 
_reverse($text);\n        while ($text =~
_user_(.*?)\\\\
_VEC(?P<dimensions>\\d)
_widest(\\@text);\n    }\n    elsif (defined $text) {\n        my @text = split(
_x(\\h\\h\\h\\h)_
_x\\p{XDigit}{4}_
`((?:\\\\`|[^`\\\\]+)*)`
`((?s).*?)[^\\\\\\\\]`
`((\\\\.|[^])*?)`
`(.*?[^\\\\])`
`(?!`)(?=.*\\p{IsWord})
`(?:
`(?:[^`\\\\]*(?:\\\\.[^`\\\\]*)*)`
`(?:\\\\.|[^`])*`|'(?:\\\\.|[^'])*'|\"(?:\\\\.|[^\"])*\"|\\/\\*[^]*?\\*\\/|\\/\\/.*\\n?
`(?:\\\\['\\\\bfnrtv0]|[^'\\\\])*?`
`(?:\\\\\\\\|\\\\?[^\\\\])*?`
`(?P<name>[^`]+)`
`(?P<path>[^\\']+)\\', file type (?P<target>\\S+).
`(?P<subargs>.+)`
`([^`\\\\]*(?:\\\\.[^`\\\\]*)*)`
`(`?
`?(
`[^`]*+`|([^`\\.]++)
`[^`]*+`|\"(?:[^\"\\\\]++|\\\\.)*+\"|'(?:[^'\\\\]++|\\\\.)*+'|(%?)(?:(\\?)|:(\\w++))(%?)
`[^`]*+`|\"(?:[^\"\\\\]++|\\\\.)*+\"|'(?:[^'\\\\]++|\\\\.)*+'|(\\?)|:(\\w++)
`[^`]*+`|\"(?:[^\"\\\\]++|\\\\.)*+\"|'(?:[^'\\\\]++|\\\\.)*+'|(\\?|:\\w++)
`` (.+?) ``|(?<!\\\\)`(.+?)(?!\\\\)`
```(?P<inline>.*?)```(?P<rest>.*)
```(?P<language>\\w+)?\\n(?P<lines>.*?)```
```([\\w ]*)\\R(.*)```
```php(?P<code>.+?)```.+?```(?P<output>.+?)```.+?
```python(?P<code>.*?)```
`people`.`name` LIKE '%\\\\\\\\%\\\\\\\\.\\\\\\\\_\\\\\\\\\\\\\\\\%'
`people`.`name` NOT LIKE '%\\\\\\\\%\\\\\\\\.\\\\\\\\_\\\\\\\\\\\\\\\\%'
`TEST_CASE\\s*\\(\\s*\"(?P<name>.*?)\"\\s*\\)
{ *name: *((?:'(?:(?:(?:\\\\(?=')')|[^'])*?)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*?)\")) *, *module: *require\\(((?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*?)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*?)\")))\\) *}
{ *name: *((?:'(?:(?:(?:\\\\(?=')')|[^'])*?)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*?)\")) *, *module: *require\\(((?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*?)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*?)\")))\\) *} *,? *
{ _id: \"(?P<replSet>\\S+)\", members: (?P<replSetMembers>[^]]+ ])
{ _id: \"(?P<replSet>\\S+)\", version: (?P<replSetVersion>\\d+), (protocolVersion: (?P<replSetProtocol>\\d+), )?members: (?P<replSetMembers>[^]]+ ])
{#(?P<identifier>[^}]+)}
{#([a-zA-Z][a-zA-Z0-9\\_\\-]+)}([\\s\\S]*){\\/\\1}\\n?
{% block (?P<block_name>(.*)) %}(?P<block_content>(.*)){% endblock %}
{%\\\\include\\\\\\s*?([\\w\\-\\.\\/~]+)(?:\\:[A-Za-z0-9-_|]+)?(?:(?:| )\\(.*)?(?:\\s*)?%}
{(([^{}]*|(?R))*)}
{(?=\\s*
{(?P<alts>[^}]+,[^}]+)}
{(?P<param>\\w+)}
{(?P<parameter>[^{}]+)}
{(?P<parameter>\\w+)}
{(?P<protocol>\\\\d+|\\\\w+)}\\\\s([\\\\d\\\\.]+):?(\\\\d+)?\\\\s..\\\\s([\\\\d\\\\.]+):?(\\\\d+)?
{(?P<var>[\\w][\\w\\d_]*)}
{(?P<varname>[a-zA-Z0-9_]+)(:(?P<converter>[a-zA-Z0-9_]+))?}
{([^{}]|
{(\\PM\\pM+)}
{[^]*
{\\$(?P<name>\\w+)}
{\\((?P<group_id>(\\\\.|[^)}\\\\])*)\\)\\((?P<group_name>(\\\\.|[^)}\\\\])*)\\)(?P<counter_list_str>\\[(\\\\.|[^}\\\\])*\\])}
{\\\\([`'^\"~vc])( ?)([\\w])}
{\\\\([`'^\"~vc]){([\\w])}}
{\\\\(\\\\*[a-z][a-z0-9-]+(?:\\|[a-z][a-z0-9-]+)*)}
{\\\\i0}
{\\\\i1}
{\\\\l}
{\\s*([^]*?)\\s*}\\s*$
{\\s*@link[plain]*\\s+([^]+?)\\s*}
{\\s*@link\\s+([^]+?)\\s*}
{\\\\u0}
{\\\\u1}
{{ *?(?:(?:(?:(?:([\\w$]+ *?(?:[^\\s\\w($][^\\n]*?)*?))|(?:@(?:([\\w$]+:|(?:\\.\\.\\/)+))? *(.+?) *))(?: *?(\\| *?[\\w$]+? *?)+?)?)|(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?([\\w$]*))|(?:\\/ *?([\\w$]+))|(?:# *?([\\w$]+))|(?:([\\w$]+) *?\\(([^\\n]*?)\\) *?\\/)|(?:!--[^]+?--)) *?}}\\n?
{{(([^{}]*|(?R))*)}}
{{(?P<count>[#]+)}}
{{([^\\s{}]++)}}
{{[\\s]?#mf (.*?)}}\\s*([^]*?)\\s*{{\\/mf}}
{{\\s([\\w\\d\\.\\_\\-]*?)\\s}}
{{\\s*(?P<method>.+)\\s*\\((?P<arguments>.*)\\)\\s*}}
{{\\s*([^}])++\\s*}}
{{\\s*\\$(?P<block>\\w*)\\s*}}
{{i18n\\s+(\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')?([^}]*)}}
{APP_BUNDLE:\"(?P<live_player_url>.+?/app.js)\"
{color:([^}]+)}([^]*?){color}
'|(?<! \\\\) \\\\{2}* \\\\ (?![\\\\\"])
'|.*?[^\\\\]'
'''|[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f\\x7f-\\u{9f}\\u{00ad}\\u{0600}-\\u{0604}\\u{070f}\\u{17b4}\\u{17b5}\\u{200c}-\\u{200f}\\u{2028}-\\u{202f}\\u{2060}-\\u{206f}\\u{feff}\\u{fff0}-\\u{ffff}]
'''|[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f\\x7f-\\x9f\\x{00ad}\\x{0600}-\\x{0604}\\x{070f}\\x{17b4}\\x{17b5}\\x{200c}-\\x{200f}\\x{2028}-\\x{202f}\\x{2060}-\\x{206f}\\x{feff}\\x{fff0}-\\x{ffff}]
'|\\\\
'|\"|\\\\
'|\\\\(?=[\\\\']|$)
'|\\\\(?=['\\\\]|\\z)
|q| \\\\gt 1
|q| \\\\lt 1
} *(?P<id>[A-Z][A-Za-z0-9_]+)_(?P<global>([A-Za-z0-9_]+)?)TypeDef;$
} if shift =~ $rx;\n    return undef;\n}\n\n1;\n\n__END__\n\n=pod\n\n=encoding UTF-8\n\n=head1 NAME\n\nCSS::Selector::Grammar - Generate parse trees for CSS3 selectors.\n\n=head1 VERSION\n\nversion 0.002\n\n=head1 SYNOPSIS\n\n  use CSS::Selector::Grammar;\n\n  my $ast = parse_selector('html|*:not(:link):not(:visited)');\n\n=head1 DESCRIPTION\n\nL<CSS::Selector::Grammar> translates the grammar defined in\nL<http:
}(\\pM+\\pL){(?!\\pL+\\\\)
}\\ \\[(?P<datetime>.*?)\\]\\ (?P<request_method>POST|GET|DELETE|PUT|PATCH)\\s\n        (?P<request_uri>[^ ]*?)\\ =>\\ generated\\ (?:.*?)\\ in\\ (?P<resp_msecs>\\d+)\\ msecs\\s\n        \\(HTTP/[\\d.]+\\ (?P<resp_status>\\d+)\\)
}{\\\\};\n    $path ~~ s:perl5:g{([^\\\\])\\\\+}{$0\\\\};                                                 # xx\\\\\\\\xx  -> xx\\xx\n    $path ~~ s:perl5:g{(\\\\\\.)+\\\\}{\\\\};                                           # xx\\.\\.\\xx -> xx\\xx\n    $path ~~ s:perl5{^(\\.\\\\)+}{} unless $path eq \".\\\\\";                             # .\\xx      -> xx\n    $path ~~ s:perl5{\\\\\\Z(?!\\n)}{} unless $path ~~ rx:perl5{^([A-Z]:)?\\\\\\Z(?!\\n)};  # xx\\       -> xx\n    # xx1
~([A-Za-z])?(
~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?
~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*
~\\\\\\\\([\\\\\\\\$nrtfve]|[xX][0-9a-fA-F]{1,2}|[0-7]{1,3})~
~\\Q$word\\E~
~__EMU__([A-Z]++)__(?:([A-Za-z0-9]++)__)?~
~|-|?|??|?
+
+):)? (-?\\d+) (?:-|\\.\\.) (-?\\d+) /x 
+[^+]*$
+}{
#NÁZEV?
-+BEGIN\\ \\Q$marker\\E-+$\n                           (.*?)\n                           ^-+END\\ \\Q$marker\\E-+$
#NÁZEV?
<!-- BEGIN-ASIDE (\\S+) -->([^]*?)<!-- END-ASIDE -->
<!-- BUGCATEGORY (?P<bug_category>.*) -->$
<!-- BUGDESC (?P<bug_description>.*) -->$
<!-- BUGFILE (?P<bug_file>.*) -->$
<!-- BUGLINE (?P<bug_line>.*) -->$
<!-- BUGPATHLENGTH (?P<bug_path_length>.*) -->$
<!-- BUGTYPE (?P<bug_type>.*) -->$
<!-- FUNCTIONNAME (?P<bug_function>.*) -->$
<!-- TOC -->([^]*)<!-- TOC -->
<!--#[\\s.]+include[\\s.]+virtual=[\"\\'](?P<path>.+)[\"\\'][\\s.]+-->
<!(?P<special>[^<>]*)>
<!--([^]*?)-->
<!--[^]*?(?=-->)-->|<(\\/?)([a-z\\-\\_][a-z0-9\\-\\_]*)\\s*([^>]*?)(\\/?)>
<!--[^]*?(?=-->)-->|<(\\/?)([a-z][a-z0-9]*)\\s*([^>]*?)(\\/?)>
<!\\[CDATA\\[([^]*?)]]>
<!--\\s*(
<!--\\s*@(ifn?def)\\s+(\\w+)\\s*-->([^]*?)<!--\\s*@endif\\s*-->
<!--\\s*@@var\\s*[= ]\\s*(\\S+?)\\s*(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"\\s*)?-->
<!--\\s*@vuese:([a-zA-Z_][\\w\\-\\.]*):(\\w+):start\\s*-->[^]*<!--\\s*@vuese:\\1:\\2:end\\s*-->
<!--\\s*yaspeller\\s+ignore:start\\s*-->[^]*?<!--\\s*yaspeller\\s+ignore:end\\s*-->
<!DOCTYPE\\s+(?P<name>[a-zA-Z][a-zA-Z-]*)\\s+PUBLIC\\s+\"(?P<public_id>.+)\"
<$td>$s\\Q\u00a5\u00bf\u00a5\u00a4\u00a5\u00c8\u00a5\u00eb\\E$s<\\/$td>$s<$td>$s($str)<\\/$td>
<$td>$s\\Q\u00b3\u00ab\u00ba\u00c5\u00be\u00ec\u00bd\u00ea\\E$s<\\/$td>$s<$td>$s($str)<\\/$td>
<$td>$s\\Q\u00b3\u00ab\u00ba\u00c5\u00c6\u00fc\u00bb\u00fe\\E$s<\\/$td>$s<$td>$s($str)<\\/$td>
<$td>$s\\Q\u00b4\u00d8\u00cf\u00a2\u00a5\u00b3\u00a5\u00df\u00a5\u00e5\u00a5\u00cb\u00a5\u00c6\u00a5\u00a3\\E$s<\\/$td>$s<$td>$s($str)<\\/$td>
<$td>$s\\Q\u00b4\u00eb\u00b2\u00e8\u00bc\u00d4\\E$s<\\/$td>$s<$td>$s($str)<\\/$td>
<$td>$s\\Q\u00bb\u00b2\u00b2\u00c3\u00bc\u00d4\\E$s<\\/$td>$s<$td>$s<$table>$s<$tr>$s<$td>$s($str)<\\/$td>$s<$td>$s($str)<\\/$td>
<$td>$s\\Q\u00be\u00dc\u00ba\u00d9\\E$s<\\/$td>$s<$td><$table>$s<$tr>$s<$td>($str)<\\/$td>$s<\\/$tr>$s<\\/$table>$s<\\/$td>
<$td>$s\\Q\u00ca\u00e7\u00bd\u00b8\u00b4\u00fc\u00b8\u00c2\\E$s<\\/$td>$s<$td>$s($str)<\\/$td>
<% emojiSequence %>|\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F?|\\p{Emoji_Modifier_Base}
<% emojiSequence %>|\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F|\\p{Emoji_Modifier_Base}
<%# REPLACE %>([^]*?)<%# END_REPLACE %>
<%(?P<type>[^ ]*) (?P<expr>[^ ].*) %>
<%([0-9.\\-+
<%@\\s*(
<%\\s*#\\s*(
<%\\s*karma:formatter\\s*=\\s*(?P<formatterName>[^%]+)%>
<%=.*label(_tag)?.*?,\\s*(?<label-title>(['\"].+?['\"]|:[[:alnum:]_]+))
<%=.*label(_tag)?[^,]+?(?<label-title>(['\"].+?['\"]|:[[:alnum:]_]+))[^,]+%>.*$
<%=.*submit(_tag)?\\s+(?<submit-text>(['\"].+?['\"]|:[[:alnum:]_]+))
<%=[ \\t]*(
<(
<(!--)?\\s*PKIT_ERROR(?:FONT|SPAN)$key_value_pattern?\\s*(?(1)--)>(.*?)<(!--)?\\s*/PKIT_ERROR(?:FONT|SPAN)\\s*(?(8)--)>
<((?:
<((?>
<((?P<type>.+?):)?(?P<name>.+?)>
<(.+?)(\\s.*?)?>.*?</.+?>(?uism)
<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>
<(?!(?:
<(?!(\\\\s|\\\\/)*(
<(?:
<(?:!--\\s*)?tmpl_var\\s*(?:name\\s*=\\s*)?\n                 (?:\"(
<(?:(?:embed|iframe)[^>]+?src=|input[^>]+id=[\\'\"]dmcloudUrlEmissionSelect[\\'\"][^>]+value=)([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?dailymotion\\.com/(?:embed|swf)/video/.+?)\\1
<(?:(?P<converter>[^>:]+):)?(?P<parameter>\\w+)>
<(?:amp-)?iframe[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//video\\.foxnews\\.com/v/video-embed\\.html?.*?\\bvideo_id=\\d+.*?)\\1
<(?:iframe[^>]+?src|param[^>]+?value)=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?viddler\\.com/(?:embed|player)/.+?)\\1
<(?:iframe[^>]+src|param[^>]+value)=([\"\\'])(?P<url>(?:https?:)?//embed\\.crooksandliars\\.com/(?:embed|v)/.+?)\\1
<(?:iframe|script)[^>]+src=[\"\\'](?P<url>(?:https?:)?//(?:www\\.)?ultimedia\\.com/deliver/(?:generic|musique)(?:/[^/]+)*/(?:src|article)/[\\d+a-z]+)
<(?:meta[^>]+?content|iframe[^>]+?src)=([\"\\'])(?P<url>(?:https?:)?//(?:fast\\.)?wistia\\.net/embed/iframe/.+?)\\1
<(?:object|a[^>]+class=[\"\\']webcaster-player[\"\\'])[^>]+data(?:-config)?=([\"\\']).*?config=(?P<url>https?://bl\\.webcaster\\.pro/feed/start/free_.*?)(?:[?&]|\\1)
<(?:pre|h1)>([^<]++)</(?:pre|h1)>
<(?:script|iframe) [^>]*?src=\"(?P<url>http://www\\.arte\\.tv/(?:playerv2/embed|arte_vp/index)[^\"]+)\"
<(?>(?!(?:
<(?P<id>[^@]+)@(?P<host>[^>+]+)>
<(?P<link>[^>]+)>\\; rel=\\\"(?P<rel>[^\\\"]+)\\\"
<(?P<n>[^>]+)>.+
<(?P<name>[A-Za-z_]\\w*)(?P<op>\\W*)(?P<type>\\w+)*>
<(?P<name>[a-zA-Z0-9_\\-]+)(?P<attrs>\\s[^>]+\\]=[^>]+)>
<(?P<num>[0-7])>
<(?P<pattern>\\w+?:*[\\w|\\*]+?)>
<(?P<placeholder>\\w+)>
<(?P<prio>\\d+)>(?P<timestamp>.+?) (?P<host>\\S*) (?P<program>\\S+?)(\\[(?P<pid>\\d+)\\])?: (?P<message>.+)
<(?P<string>[0-9A-F]+)> *
<(?P<tag>[A-Z0-9./ ]+?)>\n                            (?P<text>[^<]+)?\n                            (</(?P<closetag>(?P=tag))>)?\n                            (?P<tail>[^<]+)?\n                            
<(?P<tag>[a-z0-9-_]+)>(?P<text>.*?)<\\/(\\1)>
<(?P<tag>p|h[1-6])(?P<atts>[^>]*?)>(?P<content>.*)(?P<closetag></\\1>)
<(?P<type>\\w+) \\'(?P<name>\\S+)\\'>
<(?P<url>.*)>; rel=\"next\"
<(?P<url>[^>]+)>; rel=\"(?P<rel>[^\"]+)\"
<([^ />]++)[^>]*></\\1>
<([^<\\/>]*)>([\\s]*?|(?R))<\\/\\1>
<([^>]*)>;\\s*rel=\"\\Q$rel\\E\"
<([a-z\\_]+)>
<([a-z]+) +(?:(?:lang|title)=\"
<([a-z0-9\\-\\_]+[^>]+?)([a-z0-9\\-\\_]+=\"[^\"]*?\\{\\{.+?\\}\\}.*?\".*?)>
<([A-Z0-9]+) \\K(.*?)>
<([a-zA-Z\\_]+)>
<([A-Za-z0-9.]+)>([\\w\u00e0-\u00fa\u00c0-\u00da0-9\\.\\-\\_\\+\\, ;:\\[\\]\\'\\&\\/\\\\*\\(\\)\\+\\{\\|\\}\\!\\\u00a3$\\?=@\u20ac\u00a3#%\u00b1\u00a7~`\"]+)$
<([a-zA-Z0-9_]++)>
<(\\/)?(pre|code|tt)|(\\\\)?\\{(?!\\})(\\S+?)(?:\\s([^\\}]*?\\S))?\\}(?=[\\W<]|.+<\\/|$)
<(\\p{Alpha}\\w*) (?: [^\\/>]*\\/> | .*?<\\/\\1>)
<(attribution)>[^]*<\\/\\1>
<(include|require) tpl=\"(.+?)(?=(?<!\\\\)\")\"(?: once=\"(true|false)\")? />
<(keygen|source|track|wbr)(?=\\s|>)((?:\"[^\"]*\"|'[^']*'|[^\"'>])*+)(?<!/)>
<(rt-.*?-\\d+-\\d+)\\.(\\d+)-\\d+-\\d+\\@\\QRT->Config->Get('Organization')\\E>$
<(script|style)([^>]*)>((\\\\.|[^\\\\])*)<\\/\\1>
<.+>f=(?P<n>-{,1}[0-9\\.]+)</.+>
</%\\Q$type\\E>\\n?
</(?:div|li|html)>\\n\\K\\n
</*(?:applet|b(?:ase|gsound|link)|!--\\#exec|style|form|embed|frame(?:set)?|i(?:frame|layer)|l(?:ayer|ink)|meta|object|s(?:cript)|title|xml|\\?xml)[^>]*+>
</*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|i(?:frame|layer)\n                |l(?:ayer|ink)|meta|object|s(?:cript|tyle)|title|xml)[^>]*+>
</*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|i(?:frame|layer)|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|title|xml)[^>]*+>
</*\\w+:\\w[^>]*+>
</\\w+\\p{Punct}?\\w*>
</label>Comments \\((?P<commentcount>\\d+)\\)</div>
</select> of (?P<count>\\d*)(\\s)*</div>
</x:xmpmeta>\n                           (?P<whitespace>\\s*)\n                           <\\?xpacket\\s\n                           end=\"w\"\\?>
<[!\\/?\\[]?(
<[:_-\\w\\s\\!\\/\\=\\\"\\']+>
<[^\\s\\>]*script[^\\S\\>]*language=\"javascript\"[^\\S\\>]*src=\"\\/\\/ad\\.jp\\.ap\\.valuecommerce\\.com\\/servlet\\/jsbanner\\?sid=([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)(&|\\&amp\\;)pid=([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"\\>\\<\\/script\\>\\<noscript\\>.*?<\\/noscript\\>
<[^>\\n]+>?|\"[^\"\\n\\\\]*(?:\\\\.[^\"\\n\\\\]*)*\"?
<[^>]+>|&(?:[a-z][a-z]+\\d{0,2}|#\\d\\d\\d{0,4}|#x[\\da-f][\\da-f][\\da-f]{0,3});|[^ 
<\\\\\\\"([A-Za-z]:)?[[:alnum:]_\\\\-\\\\./\\\\\\\\]+\\\\\\\">
<\\\\(script)
<\\/(
<\\/(?!(?:
<\\/*([a-z0-9\\:\\-\\_]+)
<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>
<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>
<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>
<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^>=]+))?)*\\s*\\/?>
<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>
<\\/?(?:
<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>
<\\/?(a|p|abbr|acronym|address|applet|area|b|base|basefont|bdo|big|blockquote|body|br|button|caption|center|cite|code|col|colgroup|dd|del|dfn|dir|div|dl|dt|em|fieldset|font|form|frame|frameset|h6|head|hr|html|i|iframe|img|input|ins|isindex|kbd|label|legend|li|link|map|menu|meta|noframes|noscript|object)[^>]+??>
<\\/?(ins|font|span|div|canvas|noscript|fig\\w+)[ -\\w*= \\w=\\-.:&\\/\\/?!;,%+()#'\"{}\\u4e00-\\u9fa5]*>
<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+|(?:\\{\\{?[^}]*\\}?\\})))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?>
<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{[^}]*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?>
<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{[^}]+\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?>
<\\/?[\\w.:-]+\\s*(?:\\s+(?:[\\w\\.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+|(?:\\{[^}]*\\})))?|\\{\\.{3}\\w+\\}))*\\s*\\/?>
<\\/?[a-z][^]*?>
<\\/?\\w+(?:(?:\\s+\\w+(?:\\s*=\\s*(?:\".*?\"|'.*?'|[^'\">\\s]+))?)*+\\s*|\\s*)\\/?>
<\\/?\\w+>|[^\\w<\\/>
<\\/?style[ -\\w*= \\w=\\-.:&\\/\\/?!;,+()#\"\\S]*>
<\\/jsp:(
<\\/results>\\K
<\\/script>\\s*<link rel=\"stylesheet\" href=\"[/\\\\]{1}html-css-optional-elements\\.[a-f0-9]+\\.css\"><h1>Hello
<\\?OFX\\s+\n                       OFXHEADER=\\\"(?P<ofxheader>\\d+)\\\"\\s+\n                       VERSION=\\\"(?P<version>\\d+)\\\"\\s+\n                       SECURITY=\\\"(?P<security>[\\w]+)\\\"\\s+\n                       OLDFILEUID=\\\"(?P<oldfileuid>[\\w-]+)\\\"\\s+\n                       NEWFILEUID=\\\"(?P<newfileuid>[\\w-]+)\\\"\\s*\n                       \\?>\\s*
<\\?php echo erConfigClassLhConfig::getInstance\\(\\)->getDirLanguage\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)(.*?)\\?\\>
<\\?php echo erConfigClassLhConfig::getInstance\\(\\)->getOverrideValue\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?),(\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)(.*?)\\?\\>
<\\?php echo erConfigClassLhConfig::getInstance\\(\\)->getSetting\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?),(\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)(.*?)\\?\\>
<\\?php echo erLhcoreClassDesign::design\\('([a-zA-Z0-9-\\.-\\/\\_]+)'\\)(.*?)\\?\\>
<\\?php echo erLhcoreClassModelChatConfig::fetch\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)->current_value(.*?)\\?\\>
<\\?php echo erLhcoreClassModule::getExtensionInstance\\('([a-zA-Z0-9-\\.-\\/\\_]+)'\\)->getSettingVariable\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)(.*?)\\?\\>
<\\?php(\\s*)include\\(erLhcoreClassDesign::designtpl\\('([a-zA-Z0-9-\\.-\\/\\_]+)'\\)\\)(.*?)\\?\\>
<\\?php(\\s*)include_once\\(erLhcoreClassDesign::designtpl\\('([a-zA-Z0-9-\\.-\\/\\_]+)'\\)\\)(.*?)\\?\\>
<\\?php.*include\\_shop\\_tpl.*\\((.*)\\).*\\?>
<\\?php.*include\\_tpl.*\\((.*)\\).*\\?>
<\\?xml\n            (   # strict ordering is reqd but we'll be liberal here\n                \\s+version=['\"](?P<ver>.*?)['\"]\n            |   \\s+encoding=['\"](?P<enc>.*?)['\"]\n            )+\n            .*? # other possible junk\n            \\s*\\?>\n        
<\\?xml\\s+.*encoding=\"(?P<encoding>[-_.a-zA-Z0-9]+)\".*\\?>
<\n    (?:(?P<type>int|float|path):)?\n    (?P<name>\\w+)\n    >
<\\p{IsLower}+>([^<]+)<\\/(\\p{IsLower}+)>
<\\Q$key\\E>
<\\Q$loop_name\\E(\\.\\Q$key_match\\E)?>
<\\s*script.*>([^]*)<\\/\\s*script\\s*>
<\\s*template\\s*([^>]*)>([^]*)<\\/\\s*template\\s*>
<\\S++ [^>]++>
<\\\\u[0-9A-F]{4}>
<\\w+(?: 
<<(?:([!@\u00a3\\$%\\^\\&\\*\\(\\)`\\~'\"\\|\\\\\\/;\\:\\.\\,\\+\\=\\-\\_\\{\\}])|([^>\\s]+))(?:\\s*)((?:[^>]|(?:>(?!>)))*)>>
<<<(.*?)\\: \\\\hbox \\{(.*?)\\}>>>
<<<('?)(
<<<(?:(
<>!=:.#&,[];$()^/
<a .+>AS(?P<code>.+?)\\s*</a>\\s*(?P<name>.*)
<a class=\"wiki-link(?P<isedit>-edit)?\" data-wiki-url=\"(?P<url>[^\"]+)\"
<a href=['\\\"](?P<url>http(s)?://.*)['\\\"]>(?P<value>.+)</a>: uploaded
<a href=[\\'\\\"](?P<url>.*?)[\\'\\\"]>(?P<text>.*?)<\\/a>
<a href=\"(?P<href>http://\\w{7}.\\w{3}.\\w{3}.rackcdn.com/\\d{5}/f\\w{4}-\\d{2}-\\d{5}-HTML/image_m/f\\w{4}-\\d{2}-\\d{5}-\\D{1,2}\\d{3}.\\D{3})
<a href=\"(?P<href>http://\\w{7}.\\w{3}.\\w{3}.rackcdn.com/\\d{5}/f\\w{4}-\\d{2}-\\d{5}-r2/image_m/f\\w{4}-\\d{2}-\\d{5}-\\D{1,2}\\d{3}.\\D{3})
<a href=\"(?P<path>[^\"]*)\">[^<]*</a>[^:]*: (?P<title>[^<]*)</td>
<a href=\"(?P<url>[^\"]+)\" class=\"cs-enlarge\">
<a href=\"(?P<url>[^\"]+)\">
<a href=\"/character/(?P<char_link>[^\"]+)\">(?P<char_name>[^<]+)</a>\\n\\t\\t\\t<div class=\"spaceit_pad\"><small>(?P<role>[A-Za-z ]+)</small></div>\\n\\t\\t\\t</div>
<a href=\"/nodes/(?P<key>[\\w.]+)\">(?P<count>[\\d.]+)</a>
<a href=\\\"download.php\\?id=(?P<download_id>\\d+)\\\" style=\\\"background:url\\(/blueGene/images/topic\\.jpg\\)
<a href=relogin.cgi>Log out<.a> \\Q$USER\\E
<a[^>]*href=\"(?P<URL>[^\"]*)\"[^>]*>(?P<LinkText>[^<]*)</a>
<a[^>]+\\bclass=[\"\\']downloadBtn\\b[^>]+\\bhref=([\"\\'])(?P<url>(?:(?!\\1).)+)\\1
<a[^>]+\\bhref=([\"\\'])(?P<href>(?:(?!\\1).)+)\\1[^>]+\\bdata-extension=
<a[^>]+data-quality=\"(?P<format_id>[^\"]+)\"[^>]+href=\"[^\"]+\"[^>]+class=\"[^\"]*quality-btn-active[^\"]*\">(?P<height>[0-9]+)p
<a[^>]+href=([\"\\'])(?P<path>(?:(?!\\1).)+)\\1[^>]+class=[\"\\'][^>]*js-trackrow-albumpage-link
<a[^>]+href=([\"\\'])(?P<url>/video(?:-?[\\d_]+).*?)\\1
<a[^>]+href=([\"\\'])(?P<url>http.+?)\\1
<a[^>]+href=([\\'\"])(?P<link>[^\\'\"]+)\\1
<a[^>]+href=\"(?:https?:)?//space\\.bilibili\\.com/(?P<id>\\d+)\"[^>]*>(?P<name>[^<]+)
<a\\b[^>]+\\bhref=([\"\\'])(?P<path>/raiplay/video/.+?)\\1
<a\\s+href=\"(?P<URL>[^\"]+?)\".+?>(?P<TEXT>.+?)</a>
<ACCTTYPE>(?P<contentend>[<\n\r])
<align left>[\\n\\s]+<\\/align>[\\\\]{2}\\s*
<aside\\s+([^<>]+)>([^]*?)<\\/aside>
<b>Name:&nbsp</b>(?P<title>.*?)<br/>.*?<b>Year:&nbsp</b> *<a href='/year/.*?'>(?P<date>.*?)</a><br/><b>Manufacturer:&nbsp</b> *<a href='/manufacturer/.*?'>(?P<developer>.*?)</a><br/><b>Filename:&nbsp;</b>(?P<filename>.*?)<br/><b>
<blockquote class=\"twitter\\-tweet\"( data\\-lang=\"\\w+(?:\\_|\\-)\\w+\")?
<body.*>([^]*)<\\/body>
<BODY[^>]+?ALINK=(.*?[^\\\\])[\\s|>]
<BODY[^>]+?BACKGROUND=(.*?[^\\\\])[\\s|>]
<BODY[^>]+?BGCOLOR=(.*?[^\\\\])[\\s|>]
<BODY[^>]+?LINK=(.*?[^\\\\])[\\s|>]
<BODY[^>]+?TEXT=(.*?[^\\\\])[\\s|>]
<BODY[^>]+?VLINK=(.*?[^\\\\])[\\s|>]
<body>([^]*)<\\/body>
<br[^>]*>\\R
<cmdtest (?P<name>[\\w\\.]+)\\[(?P<examplenum>\\d+)\\]>$
<code>([^]*?)<\\/code>
<controlfield.*?tag=.001.*?>(?P<recid>\\d+)</controlfield>
<Details>(?P<details>.*)</Details>
<div class=\"block-error\">\\s*<div class=\"heading\">\\s*<div>(?P<msg>.+?)</div>\\s*</div>
<div class=\"button\" title=\"(?P<title>[^\"]*)\"><a href=\"(?P<url>[^\"]+)\">(?P<name>.+?)</a></div>
<div class=\"entry\">(.*?)\\Q\u00a4\u00b5\u00a4\u00f3\u00a4\u00ce\u00a5\u00d5\u00a5\u00a9\u00a5\u00c8\u00a5\u00a2\u00a5\u00eb\u00a5\u00d0\u00a5\u00e0\\E<\\/p>
<div class=\"error\">(?P<error>.*)</div>
<div class=\"jsb_ jsb_VideoPlaylist\" data-jsb=\"(?P<json>[^\"]+)\">
<div[^>]*?ng-controller=(?P<quote>[\"'])(?:Live)?PlayerCtrl(?P=quote).*?>
<div[^>]+class=[\"\\']next[\"\\'][^>]*>\\s*<a[^>]+href=([\"\\'])(?P<url>(?:(?!\\1).)+)\\1
<div[^>]+data-collection=\"(?P<vico_id>\\d+)\"[^>]+data-video=\"(?P<vivi_id>\\d+)\"
<div\\s+id=\"header\"\\s*>((?:(?:(?!<div[^>]*>|</div>).)++|<div[^>]*>(?1)</div>)*)</div>
<doctest (?P<name>[\\w\\.]+)\\[(?P<examplenum>\\d+)\\]>$
<embed[^>]+?src=([\"\\'])(?P<url>https?://(?:www\\.)?ivi\\.ru/video/player.+?)\\1
<embed[^>]src=([\"\\'])(?P<url>http://pics\\.smotri\\.com/(?:player|scrubber_custom8)\\.swf\\?file=v.+?\\1)
<esi:include src=\"(?P<url>[^\"]+?)\"\\s*/>
<font class=\"msg_bad\">(?P<msg_bad>(.|\\s)*?)<\\/font>
<font class=\"msg_info\">(?P<msg_info>(.|\\s)*?)<\\/font>
<font class=\"msg_ok\">(?P<msg_ok>(.|\\s)*?)<\\/font>
<h(\\d)>(.+?)</h(?1)>
<h1[^>]+title=\"(?P<song>[^\"]+)\">[^<]+<span[^>]+title=\"(?P<singer>[^\"]+)\"
<h2>(?P<description>.*?)<\\/h2>
<h3 class=\"r\"><a href=\"/url\\?q=(?P<url>[^\"]+)&[^\"]+\">(?P<title>.*?)</a></h3>.*?<a class=\"[^\"]+\" href=\"/url\\?q=(?P<cacheUrl>http://webcache[^\"]+)\">.*?<span class=\"st\">(?P<content>.*?)</span>
<h3>\\Q$place&nbsp;$year\\E</h3>
<head>(?P<HEAD>.*)</head>(?P<AFTER_HEAD>.*)<body(?P<BODY_ATTRS>.*?)>(?P<BODY>.*)</body>
<head>(?P<inner>.*)</head>
<head>[^]*<\\/head>
<html[\\n|\\r\\n]*.*?[\\n|\\r\\n]*lang=\"(?P<language>\\S+)\"[\\n|\\r\\n]*.*?[\\n|\\r\\n]*>
<html>[^]*<\\/html>
<html>\\s*<link rel=\"stylesheet\" href=\"[/\\\\]{1}html-css-head\\.[a-f0-9]+\\.css\">\\s*<body>
<iframe.+?src=\"(?P<url>.+?)\".*>
<iframe.+src=[\"'](?P<url>[^\"']+)[\"'].+allowfullscreen
<iframe[^>]+?\\bsrc\\s*=\\s*([\"\\'])(?P<url>(?:https?:)?//embed\\.share-videos\\.se/auto/embed/\\d+\\?.*?\\buid=\\d+.*?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:http:)?//(?:www\\.)?tvc\\.ru/video/iframe/id/[^\"]+)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//(?:cache\\.)?vevo\\.com/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?dailymotion\\.[a-z]{2,3}/widget/jukebox\\?.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?xhamster\\.com/xembed\\.php\\?video=\\d+)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//cloud\\.tvigle\\.ru/video/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//media.mtvnservices.com/embed/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//myvi\\.(?:ru/player|tv)/(?:embed/html|flash)/[^\"]+)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//player\\.(?:tna|emp)flix\\.com/video/\\d+)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//player\\.vimeo\\.com/video/\\d+.*?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//rutube\\.ru/embed/[\\da-z]{32}.*?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?://)?embed\\.francetv\\.fr/\\?ue=.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>http://www\\.ustream\\.tv/embed/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://(?:odnoklassniki|ok)\\.ru/videoembed/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://(?:screen|movies)\\.yahoo\\.com/.+?\\.html\\?format=embed)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://(?:test)?player\\.(?:rutv\\.ru|vgtrk\\.com)/(?:iframe/(?:swf|video|live)/id|index/iframe/cast_id)/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://embed(?:-ssl)?\\.ted\\.com/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://embed\\.live\\.huffingtonpost\\.com/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://m(?:lb)?\\.mlb\\.com/shared/video/embed/embed\\.html\\?.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://player\\.cinchcast\\.com/.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://vk\\.com/video_ext\\.php.+?)\\1
<iframe[^>]+?src=([\"\\'])(?P<url>https?://www\\.facebook\\.com/(?:video/embed|plugins/video\\.php).+?)\\1
<iframe[^>]+?src=[\"\\'](?P<url>(?:https?:)?//(?:www\\.)?drtuber\\.com/embed/\\d+)
<iframe[^>]+?src=[\"\\'](?P<url>(?:https?:)?//(?:www\\.)?pornhub\\.com/embed/[\\da-z]+)
<iframe[^>]+?src=[\"\\'](?P<url>(?:https?:)?//(?:www\\.)?vshare\\.io/v/[^/?#&]+)
<iframe[^>]+?src=[\"\\'](?P<url>(?:https?:)?//embed\\.redtube\\.com/\\?.*?\\bid=\\d+)
<iframe[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?expressen\\.se/(?:tvspelare/video|videoplayer/embed)/tv/.+?)\\1
<iframe[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//[^/]+\\.apa\\.at/embed/[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}.*?)\\1
<iframe[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//cdn\\.viqeo\\.tv/embed/*\\?.*?\\bvid=[\\da-f]+.*?)\\1
<iframe[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//embed\\.nexx(?:\\.cloud|cdn\\.com)/\\d+/(?:(?!\\1).)+)\\1
<iframe[^>]+\\bsrc=[\"\\'](?P<url>(?:https?:)?//embed\\.indavideo\\.hu/player/video/[\\da-f]+)
<iframe[^>]+src=(?P<q>[\"\\'])(?P<url>(?:https?:)?//vbox7\\.com/emb/external\\.php.+?)(?P=q)
<iframe[^>]+src=(?P<q1>[\\'\"])(?P<src>(?:https?:)?//streamable\\.com/(?:(?!\\1).+))(?P=q1)
<iframe[^>]+src=(?P<q1>[\\'\"])(?P<url>(?:https?:)?//rudo\\.video/vod/[0-9a-zA-Z]+)(?P=q1)
<iframe[^>]+src=([\"\\'])(?P<url>(?:(?:https?:)?//)?(?:www\\.)?20min\\.ch/videoplayer/videoplayer.html\\?.*?\\bvideoId@\\d+.*?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?instagram\\.com/p/[^/]+/embed.*?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?vod-platform\\.net/[eE]mbed/.+?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//.+?\\.media\\.eagleplatform\\.com/index/player\\?.+?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//graphics8\\.nytimes\\.com/bcvideo/[^/]+/iframe/embed\\.html.+?)\\1>
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//html5-player\\.libsyn\\.com/embed/.+?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//out\\.pladform\\.ru/player\\?.+?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//play\\.arkena\\.com/embed/avp/.+?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//videa\\.hu/player\\?.*?\\bv=.+?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?:)?//www\\.nbcnews\\.com/widget/video-embed/[^\"\\']+)\\1
<iframe[^>]+src=([\"\\'])(?P<url>(?:https?://)?(?:w\\.)?soundcloud\\.com/player.+?)\\1
<iframe[^>]+src=([\"\\'])(?P<url>.+?)\\1
<iframe[^>]+src=([\\'\"])(?P<url>(?:https?:)?//(?:www\\.)?(?:periscope|pscp)\\.tv/(?:(?!\\1).)+)\\1
<iframe[^>]+src=([\\'\"])(?P<url>https?://videomore\\.ru/embed/\\d+)
<iframe[^>]+src=[\"\\'](?P<url>(?:https?:)?//player\\.piksel\\.com/v/[a-z0-9]+)
<iframe[^>]+src=[\"\\'](?P<url>(?:https?://)?tunein\\.com/embed/player/[pst]\\d+)
<iframe[^>]+src=[\"'](?P<url>[^\"']+)[\"']
<iframe[^>]+src=['\\\"](?P<url>https?://www\\.senate\\.gov/isvp/?\\?[^'\\\"]+)['\\\"]
<iframe[^>]+src=\"(?P<url>https?://(?:new\\.)?livestream\\.com/[^\"]+/player[^\"]+)\"
<iframe[^>]+src=\"(?P<url>https?://(?:www\\.)?zapiks\\.fr/index\\.php\\?.+?)\"
<iframe[^>]+src=\"(?P<url>https?://vplayer\\.nbcsports\\.com/[^\"]+)\"
<iframe[^>]+src=\"https?://(?:video\\.google\\.com/get_player\\?.*?docid=|(?:docs|drive)\\.google\\.com/file/d/)(?P<id>[a-zA-Z0-9_-]{28,})
<iframe[^>]+src=\"https?://(?P<host>media\\.clipyou\\.ru)/index/player\\?.*\\brecord_id=(?P<id>\\d+).*\"
<iframe\\b[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?seznamzpravy\\.cz/iframe/player\\?.*?)\\1
<iframe\\b[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//(?:www\\.)?video\\.mediaset\\.it/player/playerIFrame(?:Twitter)?\\.shtml.*?)\\1
<iframe\\b[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//cms\\.springboardplatform\\.com/embed_iframe/\\d+/video/\\d+.*?)\\1
<iframe\\b[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//media\\.joj\\.sk/embed/(?:(?!\\1).)+)\\1
<iframe\\b[^>]+\\bsrc=[\"\\'](?P<url>(?:https?:)?//(?:www\\.)?dailymail\\.co\\.uk/embed/video/\\d+\\.html)
<iframe\\s+class=\"embed-responsive-item\\s+js-embed-iframe\".*src=\"(?P<player_url>.+?)\".*?</iframe>
<img src=\"(?P<link>[^\"]*.jpg)[^\"]*\"
<img src=\"(?P<src>http://\\w{7}.\\w{3}.\\w{3}.rackcdn.com/\\d{5}/f\\w{4}-\\d{2}-\\d{5}-HTML/image_n/f\\w{4}-\\d{2}-\\d{5}-\\D{1,2}\\d{3}.\\D{3})
<img(?:[^>](?!(height|width)=))*+>
<img.+src=['\"](?P<src>.+?)['\"].*>
<img\\s+src=\"((?:https?://[\\w\\.:\\d\\/]+)?\n\t\t\t\t\t/comics/[a-z0-9\\_\\-/]+?/[a-z0-9]+\\.(gif|jpg|png))\"
<input type=\"hidden\" name=\"(?P<key>\\d+)\" value=\"(?P<value>\\w+)\"\\/>
<input type=\"hidden\" name=\"player_type\" value=\"(?P<stream_type>.+?)\">
<input type=\"hidden\"[\\s]+name=\"GALX\"[\\s]+value=\"(?P<galx>[a-zA-Z0-9_-]+)\">
<input type=\"checkbox\" name=\"pay\" value=\"(?P<value>\\w+)\"
<input[^>]+id=([\\'\"])copy-btn-(?P<id>[0-9a-zA-Z]+)\\1
<input\\s+type=\"hidden\"\\s+name=\"file_name\"\\s+value=\"(?P<stream_url>.+?)\">.*?<input\\s+type=\"hidden\"\\s+name=\"media_id\"\\s+value=\"(?P<stream_id>\\d+)\">
<jsp:(
<jsp:directive\\.(
<li class=\"xls\"><a href=\"(.*\\/(\\d{4})\\/(\\d{2})\\/dm(\\d{2})(\\d{2})(?:\\_\\d+)?\\.xls)\"[^\\(]*\\(.+(\\d{2}).+(\\d{2})
<li[^>]*>(.*?(?R)?.*?)<\\/li>
<li>(?P<item>.*)</li>
<link itemprop=\"url\" href=\"(?P<uploader_url>https?://www\\.youtube\\.com/(?:user|channel)/(?P<uploader_id>[^\"]+))\">
<link rel=\"stylesheet\" href=\"[/\\\\]{1}(input\\.[a-f0-9]+\\.css)\">
<link rel=\"stylesheet\" href=\"[/\\\\]{1}html-css\\.[a-f0-9]+\\.css\">
<link[^]*href=\"(.*\\.css)\"
<link\\h+(.+?)\\h*\\/?>
<meta property=\"og:title\" content=\"(?P<title>[^\"]*)\" />
<meta[^>]*http-equiv[^>]*refresh[^>]*content\\s*=\\s*(?P<quote>[\"\\'])(?P<int>(\\d*\\.)?\\d+)\\s*;\\s*url=(?P<url>.*?)(?P=quote)
<meta[^>]+?property=([\"\\'])og:video\\1[^>]+?content=([\"\\'])(?P<url>https?://(?:test)?player\\.(?:rutv\\.ru|vgtrk\\.com)/flash\\d+v/container\\.swf\\?id=.+?\\2)
<meta[^>]+?property=\"og:video\"[^>]+?content=\"http://www\\.vesti\\.ru/i/flvplayer_videoHost\\.swf\\?vid=(?P<id>\\d+)
<meta[^>]+property=\"og:video\"[^>]+content=\"https?://embed\\.5min\\.com/(?P<id>[0-9]+)/?
<meta\\s+property=\"og:video:tag\".*?content=\"yt:stretch=(?P<w>[0-9]+):(?P<h>[0-9]+)\">
<meta\\shttp-equiv=\"content-language\"\\scontent=\"(?P<language>\\S+)\"\\s\\/>
<meta\\sproperty=[\"']og:image[\"']\\scontent=\".+/(?P<stream_id>\\d+)/[^/]+\\.jpg
<nowiki\\s*>([^]*?)<\\/nowiki\\s*>
<npo-player\\smedia-id=[\"'](?P<media_id>[^\"']+)[\"']
<object[^>]+data=([\"\\'])https?://videomore\\.ru/player\\.swf\\?.*config=(?P<url>https?://videomore\\.ru/(?:[^/]+/)+\\d+\\.xml).*\\1
<option.*?>(?P<name>[\\w\\s]+)</option>
<option[^>]+value=([\"\\'])(?P<id>[0-9a-z_]+)(?:#.+?)?\\1[^>]*>(?P<title>[^<]+)
<option[^>]+value=([\"\\'])(?P<url>.+?)\\1[^>]+data-file-download=[^>]+>\\s*(?P<id>.+?)(?:(?:&nbsp;|\\s+)\\((?P<size>.+?)\\))?\\s*<
<option\\b[^>]+\\bvalue=([\"\\'])(?P<url>(?:(?!\\1).)+)\\1[^>]*>\\s*(?P<format>[^<]+?)\\s*<
<oth>((\\R||.)*)</oth>
<p class=\\\"results\\\">The (similarity|relatedness) of (.*?) \\(<a href=\\\"\\#\\\" onclick=\\\"showWindow \\(\\'umls\\_wps\\.cgi\\?wps=(C[0-9]+)(|.*?\\')?\\, \\'\\'\\); return false;\\\">(C[0-9]+)<\\/a> \\) and (.*?) \\(<a href=\\\"\\#\\\" onclick=\\\"showWindow \\(\\'umls\\_wps\\.cgi\\?wps=(C[0-9]+)(|.*?\\')\\, \\'\\'\\); return false;\\\">(C[0-9]+)<\\/a> \\) using (.*?) \\(.*?\\) is (.*?)\\.<\\/p>
<p[ -\\w*= \\w=\\-.:\\/\\/?!;+\"]*>
<p>([^]+?)<\\/p>
<p>[\\s\\h\\v]*</p>
<p>\\s*+(<br\\s*/*>)?\\s*</p>
<p>data1: (
<p>data2: (
<pre class=\"(.*)\">([^\"]*+)<\\/pre>
<pre class=\".*\">([^\"]*+)<\\/pre>
<pre>([^]*?)<\\/pre>
<pre><code class=\"language-(?P<lang>.+?)\">(?P<code>.+?)</code></pre>
<pre><code>([^]*?)<\\/code><\\/pre>
<ref>((\\R||.)*)</ref>
<remark>(?P<msg>[^<>]*)</remark>
<required>\\s(?<vartype>([A-Z]\\w+(\\\\)*){1,})\\s\\$(?<varname>\\w+)
<result ((?:(?!\\/>)[^])+)\\/>
<script *(type=\"text\\/javascript\")? *>(
<script src=\"//player.dacast.com/js/player.js\" id=\"(?P<broadcaster_id>\\d+)_(?P<video_type>[cf])_(?P<video_id>\\d+)\"
<script src=\"[/\\\\]{1}html-css-js\\.[a-f0-9]+\\.js\">
<script([^'\"]|\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*')*?<\\/script>
<script[^]*<\\/script>
<script[^]*src=\"(.*)\"
<script[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//embed\\.cloudflarestream\\.com/embed/[^/]+\\.js\\?.*?\\bvideo=[\\da-f]+?.*?)\\1
<script[^>]+\\bsrc=([\"\\'])(?P<url>(?:https?:)?//player\\.zype\\.com/embed/[\\da-fA-F]+\\.js\\?.*?api_key=.+?)\\1
<script[^>]+data-config=([\"\\'])(?P<url>(?:https?:)?//config\\.playwire\\.com/.+?)\\1
<script\\b[\\s]*type[\\s]*=[\\s]*[\"']text\\/javascript[\"'][\\s]* src=[\"']([^>]*[\\/\\\\]dist[\\/\\\\]b4w.js)[\"'][^>]*>[\\s\\S]*?<\\/script>
<script\\b[^>]+\\bsrc=[\"\\'](?:https?:)?//require\\.nexx(?:\\.cloud|cdn\\.com)/(?P<id>\\d+)
<section[^]+(?=<h3>Stacked)
<source\\s+src=\"(?P<src>[^\"]+)\"\\s+type=\"(?P<type>[^\"]+)\"
<span ([^>]++)>((?:[^<]*+<br \\/>)++[^<]*+)</span>
<span class=\\\"leech\\\" id=\\\"leechStats\\\"><b>(?P<leechers>\\d+)</b>
<span class=\\\"seed\\\" id=\\\"seedStats\\\"><b>(?P<seeders>\\d+)</b>
<span class=\\'alm-search-page matching-text-field-name\\'>(?P<field_name>.*?): </span>
<span data-module=\"(?P<module>[^\"]+)\" data-metric=\"(?P<metric>[^\"]+)\"></span>
<span id=\"keepMeBolded\" class=\"alm-search-page matching-text-highlight\">(?P<word>.*?)</span>
<span id=\\\"tor-hash\\\">(?P<torrent_hash>[a-zA-Z0-9]+)</span>
<span style=\"color:(#[^\"]+)\">([^]*?)<\\/span>
<span[^>]*style=\"color:\\s*(?P<color>#[A-Fa-f0-9]{3,6})\"[^>]*>
<ssi:(?P<tag_id>[a-zA-Z]+)\\s*(?P<params>.*?)>
<style([^'\"]|\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*')*?<\\/style>
<style[^]*<\\/style>
<svg(?:\\s+[a-z0-9-\\:]+=(\"|').*?\\1)*\\s*(?:(\\/)|(>[^]*<\\/svg))>
<symbol(.*?id=(['\"])(.*?)\\2[^]*?<\\/)symbol>
<td (?P<td_tag>[^>]+)>\\n\\t\\t\\t<div (?P<div_tag>[^>]+)><a (?P<a_tag>[^>]+)><img (?P<img_tag>[^>]+)></a></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t</td>
<td class=\"bgcolist2\">(?P<ID>\\d{10})</td>
<td class=\"v\">(?P<handlers>[^<]+)</td>
<td style=\\\"color:darkgreen\\\">Info hash:</td><td><strong>(?P<torrent_hash>[a-fA-F0-9]{40})</strong></td>
<td><table class=\"first last docutils citation\" frame=\"void\" id=\"(?P<tag>[A-Za-z0-9]+)\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">(?P<content>\\[[A-Za-z0-9]+\\])</td><td></td></tr>\n</tbody>\n</table>\n</td>
<template>([^]*?)<\\/template>
<TextView .* text='f\\\\'oo'\\/>
<title>(?P<artist>.*?) - (?P<title>.*?) LYRICS</title>
<title>(?P<artist>.*?) LYRICS - (?P<title>.*?)</title>
<title>(?P<name>.*?)( \\(v[0-9.]*?\\))?<\\/title>
<title>(?P<title>.*?) Letras de Canciones de (?P<artist>.*?)</title>
<title>[^]*?<\\/title>
<tr[^>]*>\\s*\n                                <td[^>]*><a[^>]+>(\\d+)</a></td>\\s* # 1) id\n                                <td[^>]*><b><a[^>]+>(.+?)</a></b></td>\\s* # 2) title\n                                <td[^>]*>(.*?)</td>\\s* # 3) status\n                                <td[^>]*>(.*?)</td>\\s* # 4) severity\n                                <td[^>]*><small>(.*?)</small></td>\\s* # 5) last updated\n                                <td[^>]*>(.*?)</td>\\s* # 6) broken in\n                                <td[^>]*>(.*?)</td>\\s* # 7) fixed in\n                                #</tr>\n                               
<tr\\sclass=\"(?P<odd_even>odd|even)\">\\n\n                                   \\s+<td>(?P<filename>.*?)</td>\\n\n                                   \\s+<td>(?P<size>.*?)</td>\\n\n                                   \\s+<td>(?P<content_type>.*?)</td>\\n\n                                   \\s+<td>(?P<content_encoding>.*?)</td>\\n\n                                </tr>\n                                
<tr>[^]*<td>([^]*)<\\/td>[^]*<td>([^]*)<\\/td>[^]*<td>([^]*)<\\/td>[^]*<td>([^]*)<\\/td>
<tr>\n                        <td>(?P<Project>.*?)</td>\n                        <td>(?P<Spider>.*?)</td>\n                        <td>(?P<Job>.*?)</td>\n                        (?:<td>(?P<PID>.*?)</td>)?\n                        (?:<td>(?P<Start>.*?)</td>)?\n                        (?:<td>(?P<Runtime>.*?)</td>)?\n                        (?:<td>(?P<Finish>.*?)</td>)?\n                        (?:<td>(?P<Log>.*?)</td>)?\n                        (?:<td>(?P<Items>.*?)</td>)?\n                        </tr>\n                    
<U....> \\\\x..\\\\x.. \\|1 # ([^-]*)->(.*)
<URL [^>]++>(?!<s>)
<value\\s*>(?P<rest>[^<>]*)</value\\s*>
<xhdr>((?:(?!<\\/xhdr>)[^])+)
= (?P<min>[0-9.]+)/(?P<avg>[0-9.]+)/(?P<max>[0-9.]+) ms
#NÁZEV?
=(?!
=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)
=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)
=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)
=(?:(\\h\\h)|\\r\\n)
=(?P<estimated_hours>[\\d\\.]+)h
=(?P<prevent_escape>=)?(?P<explicit_space>,)?\\s*(?P<line>.*)
=(\\h\\h)|=\\r\\n
=.*label(_tag)?.*?,\\s*(?<label-title>(['\"].+?['\"]|:[[:alnum:]_]+))
=.*label(_tag)?[^,]+?(?<label-title>(['\"].+?['\"]|:[[:alnum:]_]+))[^,]*$
=.*submit(_tag)?\\s+(?<submit-text>(['\"].+?['\"]|:[[:alnum:]_]+))
=\\?(?P<encoding>.*)\\?B\\?(?P<text>.*)\\?=
=\\?(?P<charset>[^\\?]*)\\?(?P<encoding>[^\\?]*)\\?(?P<text>[^\\?]*)\\?=
=\\?([!
=\\p{Digit}+,
={9} (?P<marker_type>Started|Finished) (?P<name>.*?) \\(results: (?P<result_code>\\d+), elapsed: .*?\\) \\(at (?P<timestamp>.*?)\\)
=~\\s++/
==([a-z0-9\\-\\_]+)==
==\\sdumpstate:\\s(?P<timestamp>\\d+-\\d+-\\d+\\s\\d+:\\d+:\\d+)
=>(?P<actual>.*)
=head[12] \\Q$module\\E\\n\\nThe (.*?) \\(
=head[12] \\Q$module\\E\\n\\nThe standard (.*?) \\(
=head1 \\Q$module\\E\\n\\n(.*?) \\(
=head1 \\Q$module\\E\\n\\nThe (.*?) indicator
=head2 \\Q$module\\E\\n\\n([A-Z][A-Za-z0-9]+ )+
=head2 \\Q$module\\E\\n\\nThe (.*?) stop
=host:\\Q$hname\\E
> ($xx0,$xx1) { p6_from_n(p6_to_n($xx0) 
'> ':' Sigbody_noinv\n        {\n          my $sig = $item{Sigbody_noinv};\n          die \"invocant cannot be optional\" unless $item{Invocant}->{required};\n          $sig->s_invocant( $item{Invocant}->{param} );\n          $return = $sig;\n        }\n\n    Sigbody_noinv: Param(s? /,/)\n        {\n          my @params = @{ $item{'Param(s?)'} };\n          my @slurpies = map { $_->{param} } grep { $_->{slurpy} } @params;\n          my @nonslurpies = grep { !$_->{slurpy} } @params;\n          my @positionals = grep { $_->{style} eq 'positional' } @nonslurpies;\n          my @named = grep { $_->{style} eq 'named' } @nonslurpies;\n\n          my $seen_optional;\n          my $requiredPositionalCount = 0;\n\n          # calculate requiredPositionalCount, and make sure we don't have\n          # :($optional?, $required!) -- that's invalid.\n          for my $param (@positionals) {\n              $seen_optional++ if ! $param->{required};\n              die \"can't place required positional after an optional one\" if\n                  $param->{required} && $seen_optional;\n              $requiredPositionalCount++ if ! $seen_optional;\n          }\n\n          my %slurpies = map { $_->p_sigil => $_ } @slurpies;\n\n          my ( $slurpy_array, $slurpy_hash ) = ( @slurpies{qw(@ %)} );\n\n          croak \"Only one slurpy of every type is allowed\" if keys %slurpies != @slurpies;\n\n          my $sig = Perl6::Signature::Val::Sig->new\n              ( s_requiredPositionalCount => $requiredPositionalCount\n              , s_positionalList          => [ map { $_->{param} } @positionals ]\n              , s_namedList               => [ map { $_->{param} } @named ]\n              , s_requiredNames           => { map { $_->{param}->p_label => 1 } grep { $_->{required} } @named }\n              , ( $slurpy_array ? ( s_slurpyArray => $slurpy_array ) : () ),\n              , ( $slurpy_hash  ? ( s_slurpyHash  => $slurpy_hash  ) : () ),\n              );\n          $return = $sig;\n        }\n\n    Invocant: Param\n\n    Param: ParamType(s? /\\|/)\n           SlurpynessModifier(?)\n           ParamIdentifier <skip:''>\n           OptionalityModifier(?)\n           <skip:'\\s
>(?<tag-content>(?!&.*;)[[:space:][:alnum:][:punct:]]+?)<\\/
>?\\Q$bar\\E<?
>\\Q$bar\\E
>\\Q$project\\E<!--ID:(\\d+)-->
>\\s+\\n    # '> ' marker line from '' input (input not echoed)\n                 \\n                # empty line\n                 (?P<LIST>         # list of groups\n                  (                # consists of repeats of the same pattern:\n                    \\s*\\d+         # group number\n                    \\s+[^\\s]+\\s*:  # group name, separator ':'\n                    \\s*\\d+\\satoms  # number of atoms in group\n                    \\n\n                   )+              # multiple repeats\n                  )
>{$name} ) {\n\t\tcroak \"$name already exists, delete it first.\"\n\t\t\tunless refaddr($obj) == refaddr($self
>v(?P<version>[^<]+)<
0[xX]\\h+
0=\n                       (?P<name>[^_]+)_\n                       (?P<major>\\d+)\\.\n                       (?P<minor>\\d+)
0077\" href=\"(?P<url>[^\"]*)\" >.*?<span class=\"mr6\">[^<]*?</span>(?P<title>.*?)</span>
0x(?:\\h[\\h_]*)?\\h
0x\\h('?\\h)*[lu]*
0x\\h[\\h_]*
0x\\h+
1(?~2)3
1(?P<foo>\\d)
10(#)\\d++
10(?<_1>#)\\d++
11(#)[\\daA]++
11(?<_1>#)[\\daA]++
12(#)[\\da-bA-B]++
12(?<_1>#)[\\da-bA-B]++
123456[/\\\\]unstructured[/\\\\]\\w+[/\\\\]bwa[/\\\\]human.fa
1243*&[]_dsfAd
13(#)[\\da-cA-C]++
13(?<_1>#)[\\da-cA-C]++
14(#)[\\da-dA-D]++
14(?<_1>#)[\\da-dA-D]++
15(#)[\\da-eA-E]++
15(?<_1>#)[\\da-eA-E]++
16(#)\\h++
16(?<_1>#)\\h++
17(#)[\\da-gA-G]++
17(?<_1>#)[\\da-gA-G]++
18(#)[\\da-hA-H]++
18(?<_1>#)[\\da-hA-H]++
19(#)[\\da-iA-I]++
19(?<_1>#)[\\da-iA-I]++
2(#)[0-1]++
2(?<_1>#)[0-1]++
20(#)[\\da-jA-J]++
20(?<_1>#)[\\da-jA-J]++
21(#)[\\da-kA-K]++
21(?<_1>#)[\\da-kA-K]++
22(#)[\\da-lA-L]++
22(?<_1>#)[\\da-lA-L]++
23(#)[\\da-mA-M]++
23(?<_1>#)[\\da-mA-M]++
24(#)[\\da-nA-N]++
24(?<_1>#)[\\da-nA-N]++
25(#)[\\da-oA-O]++
25(?<_1>#)[\\da-oA-O]++
26(#)[\\da-pA-P]++
26(?<_1>#)[\\da-pA-P]++
27(#)[\\da-qA-Q]++
27(?<_1>#)[\\da-qA-Q]++
28(#)[\\da-rA-R]++
28(?<_1>#)[\\da-rA-R]++
29(#)[\\da-sA-S]++
29(?<_1>#)[\\da-sA-S]++
3(#)[0-2]++
3(?<_1>#)[0-2]++
3(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$)
30(#)[\\da-tA-T]++
30(?<_1>#)[\\da-tA-T]++
31(#)[\\da-uA-U]++
31(?<_1>#)[\\da-uA-U]++
31mError: error with properties[^]*code: 'BAD'
31mError[^]*murray: 'rothbard'
32(#)[\\da-vA-V]++
32(?<_1>#)[\\da-vA-V]++
33(#)[\\da-wA-W]++
33(?<_1>#)[\\da-wA-W]++
34(#)[\\da-xA-X]++
34(?<_1>#)[\\da-xA-X]++
35(#)[\\da-yA-Y]++
35(?<_1>#)[\\da-yA-Y]++
36(#)[\\da-zA-Z]++
36(?<_1>#)[\\da-zA-Z]++
4(#)[0-3]++
4(?<_1>#)[0-3]++
5(#)[0-4]++
5(?<_1>#)[0-4]++
500.+\\Q$current_proxy
6(#)[0-5]++
6(?<_1>#)[0-5]++
7(#)[0-6]++
7(?<_1>#)[0-6]++
7\\u[0-9A-F]{4}
8(#)[0-7]++
8(?<_1>#)[0-7]++
9(#)[0-8]++
9(?<_1>#)[0-8]++
9,0,l,bt,(?P<batteryTime>.*)
a (
a href=\"(?P<url>[^\"]*)\" title=.*?(title nowrap\">(?P<title>[^<]*))?<\\/span>
a(?adu:a)a
a(?P<middle>x*)b
a(b
a*+
A:\\s*(?P<elapsed_s>\\d+)\\.\\d\\s*
a?+
a[(]\\\\
a[)]\\\\
a[\\P{Any}]a
A[\ud83d\udca9-\ud83d\udcab]A
A[\\uD83D\\uDCA9-\\uD83D\\uDCAB]A
a[]
a[^\\P{Any}]a
a[^\\P{Any}x]a
a\\\\
a\\/Mordor\\/\\_Sidebar\\.md
a\\C-\\M-Bc
a\\\\\\c2b
a\\C-bc
a\\G{2,3}b\\G++c
a\\hc
a\\Hc
a\\Kb
a\\M-\\cBc
a\\M-\\C-Bc
a\\M-Bc
a\\p{Any}a
a\\P{Any}a
a\\u{41 1F60D}
a\\Xb
a{1,111111111111111111111111111111111111111111111}
a{1,21474836471}
a{1,2147483648}
a{1,999999999999999999999999999999999999999999999}
a{111111111111111111111111111111111111111111111}
a{2,4}{3,6}
a{21474836471,21474836471}
a{21474836471}
a{2147483648,2147483648}
a{2147483648}
a{4}{6}
a{4}+
a{6,8}+
a{999999999999999999999999999999999999999999999}
a|an|(?:(?:
a++
a=control:(?P<trackid>[\\w=\\d]+)
aaaa (?P<num>\\d+) bbbb
ab\\Kcd
ab\\p{Alpha}cd
ab\\p{Blank}
ab\\yef
ab{2,3}*
ab{2}{3}{4}{5}
abak\\-flow\\.([\\w\\d\\-\\_]+)
abc(
abc[]
abc\\\\
abc{3,2}
abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&()*+,-./:;<=>?@\\^_|~
ABSOLUTE\\-VALUE\\-INSERTION\\-\\p{Digit}+
acct\\_
acl=(?P<path>[^\"'*]+)
Active connections: (?P<conn>\\d+)
Active Ordered Broadcast (?P<type>(foreground|background)) #(?P<id>\\d+)
Add correct host key in (?P<HOSTS_FILE>\\S+) to get rid of this message
Add correct host key in (?P<PATH>\\S+) to get rid of this message
add\\s+(?P<name>\\w+)\\s+(?P<network>.*)\\s*
add_handler(\"001\", -> $event {\n      $.inside++;\n      $.servername     = $event<server>;\n      $.curnick        = $event<to>;\n      $:in_login_phase = 0;\n      .
add_handler(\"353\", -> $event {\n      my ($chan, $nicks) = $event<rest> ~~ m:P5
add_handler(\"366\", -> $event {\n      # (Perl 6)++ for new parenthesis rules! :)\n      my $chan = normalize (split \" \", $event<rest>)[0];\n\n      unless defined %:cache353{$chan} {\n\t%:cache353{$chan} = %:channels{$chan}<users>;\n      }\n\n      %:channels{$chan}<users>.delete(%:cache353{$chan}.keys);\n      %:users{$_}<channels>.delete($chan) for %:cache353{$chan}.keys;\n    });\n\n    # We track our status, especially the channels we've joined.\n    # Somebody joined. Update %channels and %users accordingly.\n    .
add_handler(\"INVITE\", -> $event {\n    my ($from, $chan) = $event<from rest>;\n    .
add_handler(\"NICK\", -> $event {\n      if(normalize($event<from_nick>) eq normalize($curnick)) {\n\t$.curnick = $event<object>;\n\tdebug \"Changed nick to \\\"$.curnick\\\".\";\n      }\n\n      my $oldnick = normalize $event<from_nick>;\n      my $newnick = normalize $event<object>;\n      if %:users{$oldnick}<channels> {\n\tfor %:users{$oldnick}<channels>.keys {\n\t  %:channels{$_}<users>.delete($oldnick);\n\t  %:channels{$_}<users>{$newnick}++;\n\t}\n      }\n\n      # The more elegant %users{$newnick} = %users.delete($oldnick) doesn't work\n      # yet in Pugs, because, so it seems, delete stringifies its return values,\n      # but I was unable to work out a test case, and in interactive Pugs delete\n      # seems to work...\n      %:users{$newnick} = %:users{$oldnick};\n      %:users.delete($oldnick);\n    });\n  }\n\n  # Instance methods\n  method channels()            { $:chans.members }\n  method user(Str $nick)       { %:users{normalize $nick} }\n  method channel(Str $channel) { %:channels{normalize $channel} }\n\n  method add_handler(Str $event, Code $callback) {\n    push %:handler{$event}: $callback;\n  }\n\n  method connect() { .
ADD_ONION (?P<keytype>[^ ]+):(?P<keyblob>[^ ]+)(?P<flags> Flags=[^ ]+)? Port=(?P<ports>[^ ]+)
addr:? (
address:? (
Address=(?P<address>[^/]+)\\b/\\b(?P<network>(?:3[0-2]|[12][0-9]|[1-9]))\\b
addWebSeed\\s*\\(\\s*([\"\\'])(?P<url>(?:(?!\\1).)+)\\1
Admin\\\\(.*?)@
adurl=(?P<domain>.*)$
algorithm=\"MD5\
alias (?P<key>.*?)=(?P<value>.*)
alias\\(\\s?(['\\\"][\\-\\_\\/\\w]+['\\\"])\\s?\\)
aliases:\\s*\\[([^]]++)
All configuration parts are assigned to schedulers and their satellites :)
allocation_id: (?P<allocation_id>\\d+).*allocator_name: \"(?P<allocator_name>[^\"]+)\".*
ALTER TABLE\\h+(\\w+?)\\h+ADD\\h+(?:(UNIQUE)|INDEX)\\h+(?:INDEX)?\\h*(\\w+?)\\h*\\((.+)\\)
ALTER TABLE\\h+(\\w+?)\\h+ADD\\h+PRIMARY\\h+KEY\\h+(\\w+?)\\h*\\((.+)\\)
Android ([\\.\\_\\d]+)
android ([a-z\\.\\_\\d]+);
android.*?version\\/([\\.\\_\\d]+).*?safari
android.+[;\\/]\\s*(Xtreme\\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\\s+build
android.+[;\\/]\\s*(Xtreme\\_?)?(V(1[045]|2[015]|30|40|60|7[05]|90))\\s+build
Android[\\s\\_\\-\\/i686]?[\\s\\_\\-\\/](\\d+[\\.\\-\\_]\\d+[\\.\\-\\_]?\\d*)
antiForgeryToken: '(?P<token>.+)'
api\\_key=\\w+
apiBaseUrl:\\s*[\"'](?P<baseurl>[^\"']+)[\"']
app[\\/\\\\]assets
app\\_(?<jsVersion>\\d+)
App\\\\Modules\\\\(.*?)\\\\
ardformatplayerclassic\\(\\'playerbereich\\',\\'(?P<width>[0-9]+)\\',\\'.*\\',\\'(?P<video_id>[0-9]+)\\',\\'(?P<secret>[0-9]+)\\',\\'(?P<thumbnail>.+)\\',\\'\\'\\)
ARG(?P<id>\\d+)
Argument [0-9]+ passed to [a-zA-Z0-9_\\\\]+::[a-zA-Z0-9_]+\\(\\) must be an instance of [a-zA-Z0-9_\\\\]+, [a-zA-Z0-9_\\\\]+ given
-arch \\Q$arch\\E
ARITHMETIC\\-OPERATOR\\-DELETION\\-\\p{Digit}+
ARITHMETIC\\-OPERATOR\\-REPLACEMENT\\-\\p{Digit}+
arn:aws:iam::(?P<account_id>[^:]+):role/(?P<role_name>.+)
arn:aws:kms:(?P<region>[^:]+):(?P<accountid>[^:]+):(?P<keyname>[^:]+)
arn:aws:lambda:(.+):([0-9]+):function:([A-z0-9\\\\-\\\\_]+)($|:[0-9]+)
array<(?<type>[a-zA-Z\\\\]+)>
ASA-(config-)?5-111005: (?P<user>.+) end configuration: OK
asciinema\\.org\\/a\\/(?<asciinema_id>[\\p{Alnum}_\\-]+)$
asdf)
at (.*)(dist[\\/|\\\\]\\w*.js:)(\\d*)(:)(\\d*)
at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)
at \"\\Q$mod_file\\E\" 
at \"\\Q$mod_file\\E\" line
at\\s(?P<function>\\w+)\\s\\((?P<file>.*?):(?P<line>\\d+).*?\\)
attachment;\\s*filename=\"(?P<filename>[^\"]+)\"
ATTRLOC\\_START([\\S\\s]*)ATTRLOC\\_END
auth_log(?P<LOG>.*)\\.png
auth=(?P<auth>.*)
aws (?P<account>\\\\S+) (?P<region>\\\\S+) (?P<command>list instances)
aws (?P<account>\\\\S+) (?P<region>\\\\S+) (?P<command>whois) (?P<name>\\\\S+)
aws (?P<account>\\\\S+) (?P<region>\\\\S+) (?P<command>whoisip) (?P<address>\\\\S+)
aws (?P<command>find) (?P<name>\\\\S+)
aws (?P<command>findip) (?P<address>\\\\S+)
aws (?P<command>list accounts)
aws (?P<command>list regions)
AWS.*(?P<access_key>(?<![A-Z0-9])[A-Z0-9]{20}(?![A-Z0-9]))[:/]
azure[/\\\\]cli[/\\\\]([^/\\\\]+)
b(('.*?(?<!\\\\)')|(\\\".*?(?<!\\\\)\\\"))
b'(?:[^']|\\\\(?:['\\\\nrt0]|x[\\da-fA-F]{2}))'
b(?P<bands>[0-9A]{1,2})
b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'
b?\"(?:[^\\\\]|\\\\.)*?\"
b[\\/|\\\\]b\\.test\\.js
B[\ud83d\udca9-\ud83d\udcab]B
B[\\uD83D\\uDCA9-\\uD83D\\uDCAB]B
b\\/Mordor\\/\\_Sidebar\\.md
background \\s* = \\s* [\\\"']? \\Q$$url[2]\\E ([\\\"'>])\n                       
Bad jmespath expression: Invalid \\\\uXXXX escape.*\\\\uAZ12
bad-1[^]+bad-1
bare@([\\w\\.\\-\\/\\\\]+)
Barryvdh\\Elfinder\\ElfinderServiceProvider::class
basen><char>)<
basen><char>*(?:<
basen><char>]*)<
basen><char>]+)<
bb\\d+.*?version\\/([\\.\\_\\d]+)
BEGIN[^]+?KEY[^]+END[^]+?KEY
beginbfchar(?P<sections>.*?)endbfchar
beginbfrange(?P<sections>.*?)endbfrange
begincodespacerange(?P<sections>.*?)endcodespacerange
beginswith(\\w+)-([\\w\\_]+)
benchmark[\\/\\\\]
BGP neighbor is (?P<neighbor>.*?), remote AS (?P<as>.*?), .*
bigquery/v2/projects/(?P<projectID>.+?)/datasets/(?P<datasetID>.+?)/tables/(?P<tableId>.+?)/insertAll
BINARY\\_PATH\\_NAME.*\\: (.*)$
bitrate: (?P<bitrate>\\d+).* (?P<width>\\d{2,})x(?P<height>\\d{2,}),
blackberry.*?version\\/([\\.\\_\\d]+)
BlackBerry\\d*/(?P<version>[\\d\\.]*)
bless(?=(?:(?:(?:[^\"\\\\]++|\\\\.)*+\"){2})*+(?:[^\"\\\\]++|\\\\.)*+$)
Block #(?P<block_id>\\d+)
bookDescEncodedData\\s=\\s\"(?P<description>[^\",]+)
BOOST_VERSION\\s+(?P<version>\\d+)
bootstrap(\\:|\\/js\\/\\*\\.js: js\\/\\*\\.js)\\s?\\n(\\n|.)*?((cat\\s)(?P<files>.*?))\\s>
boundary=(?P<boundary>[^\\s]+)
boundary=(?P<quote>['\"]?)(.*)(?P=quote)
branding[\\/\\\\]initlogo.png
Build dir:\\s+([\\:\\-\\.0-9a-zA-Z\\\\_]+)
build([/\\\\])
build:(?P<build_type>\\d+):text
Build\\s+fingerprint:\\s+'(?P<build>\\S+)'
Bundle[\\/\\\\]Features.*$
Bundle\\\\([a-zA-Z0-9]+Bundle)\\\\
BYCOL\\-([\\w\\_]+)=(\\w+)
BYDAY=(
BYHOUR=(
BYMINUTE=(
BYMONTH=(
BYMONTHDAY=(
BYSECOND=(
BYSETPOS=(
bytes (?P<first>\\d+)-(?P<last>\\d+)/(?P<size>\\d+)
bytes=(?P<start>\\d+)?-(?P<end>\\d+)?
bytes=\\h*(\\d+)-(\\d*)[\\D.*]?
BYWEEKNO=(
BYYEARDAY=(
C:[\\/\\\\]homepath[\\/\\\\].aws[\\/\\\\]credentials
C:\\\\
C:\\\\(\\w+)\\\\
C:\\\\(WINDOWS|Windows)\\\\(system32|sysnative)
C:\\\\fakepath\\\\
C:\\\\Users\\\\.+?.pyz\\/
C[\ud83d\udca9-\ud83d\udcab]C
C[\\uD83D\\uDCA9-\\uD83D\\uDCAB]C
C[^\\uD800\\uDC00-\\uD800\\uDCAA\\uD80F\\uDCAA-\\uD8FF\\uDCAA\\uDAA0\\uDFFF-\\uDAF0\\uDFFFa-z]C
C-\\\\|c\\\\
C\\u{309a 26a1 26c4 1f300}
C\\u{30b9 30ec 30c3 30c9}
calc(\\(((?:[^\\(\\)]+|(?1))*)\\))
calc(\\((?:[^\\(\\)]+|(?1))*\\))
can_(
cannot handle cmd_\\Q$command\\E event
Can't locate \\Q$cmd_file\\E in \\@INC
Can't locate \\Q$file\\E
Can't locate \\Q$file\\E in \\@INC
Can't locate \\Q$filename\\E\\.pm
Can't locate\\s+(?:file\\s+)?'?\\Q$name\\E'?
CapBnd:\\t\\h{16}
CapEff:\\t\\h{16}
CapInh:\\t\\h{16}
CapPrm:\\t\\h{16}
Car list:.*?(\\_(.*)\\_).*?Client interval
card (?P<card>\\d+)[:].*?[[](?P<description>.*?)[]], device (?P<device>\\d+)[:].*?[[](?P<device_description>.*?)[]]
cat > (?P<filename>.*?) &&.*$
cat:\\s(?P<PATH>.*):\\s(?P<ERROR>.*)
CC([-\\s])(?P<type>[A-Z-]+)\\1(?P<version>[\\d.]+)
cc\\_\\w*\\.
CJK\\K(\\p{Lu})
clang(?P<major>(\\d))?(?P<minor>(\\d))?
class [a-zA-Z]+ extends [a-zA-Z\\\\]+\\s*\\{
class@anonymous\\x00.*?\\.php0x?[0-9a-fA-F]++
class\\=(?:\"|').*(
class\\s+([a-zA-Z0-9_]+)\\s+extends\\s+[\\\\A-Za-z0-9_]*Facade
class=(?:\"|\"[^\"]*?\\s)(
class=([\"\\'])embed-video\\1[^>]+data-video-code=([\"\\'])(?P<code>(?:(?!\\2).)+)\\2
class=[\"\\']embedly-card[\"\\'][^>]href=[\"\\'](?P<url>[^\"\\']+)
class=[\"\\']embedly-embed[\"\\'][^>]src=[\"\\'][^\"\\']*url=(?P<url>[^&]+)
class=[\"']tvp_player[\"'][^>]+data-video-id=[\"'](?P<video_id>\\d+)[\"']
class=\"dm-video-embed_video\" src=\"(?P<dm_url>.*)\"
class=\"playerlist\"([^]+?)\\/table
class=\"wrapper-live-player main-live-player\"><iframe src=\"(?P<dm_url>.*)\"
Classifier: License :: OSI Approved :: (?P<classifier>[^\\r\\n]+)\\r?\\n
--Classpath=\".*?\\\\jruby-jsvc.jar;.*?\\\\commons-daemon.jar;.*?\\\\jruby.jar
client (?P<action>(dis)?connected) '(?P<nick>.*)'\\(id:(?P<clid>\\d+)\\)
Clients waiting: (?P<num>\\d+)
cloudshell_standard:\\s*cloudshell_(?P<name>\\S+)_standard_(?P<version>\\S+)\\.\\w+$
cmd:\\s(?P<data>.*)$
CMSSW_(?P<X>\\d+)_(?P<Y>\\d+)
code); }\n    method is_error    () { HTTP::Status::is_error    (.
code); }\n    method is_success  () { HTTP::Status::is_success  (.
CODE_(?P<code>\\d+)_CODE
Codec profile\\s*:\\s*([\\w\\_\\-\\\\/\\@\\. ]+)\n
Codec profile\\s*:\\s*([\\w\\_\\-\\\\\\/\\@\\. ]+)\\n
Codec\\s*:\\s*([\\w\\_\\-\\\\\\/ ]+)\\n
Codec\\s*:\\s*([\\w\\_\\-\\\\/ ]+)\n
Codec\\s*:\\s*([\\w\\_\\-\\\\/\\. ]+)\n
coding[:=]\\s*(?P<encoding>[-\\w.]+)
collectd (?P<version>.*), http://collectd.org/
color by (
Com.*+
Command failed:[^]*--js_output_file=\\\".*?\\\"\\n
Comment( \\(expected\\))?: (?P<comment_index>\\d+)
comment><comment>       Alert => [\"<font color=\\\"#0000ff\\\">\", \"<
comment><comment>       BaseN => [\"<font color=\\\"#007f00\\\">\", \"<
comment><comment>       BString => [\"<font color=\\\"#c9a7ff\\\">\", \"<
comment><comment>       Comment => [\"<font color=\\\"#7f7f7f\\\"><i>\", \"<
comment><comment>       DataType => [\"<font color=\\\"#0000ff\\\">\", \"<
comment><comment>       Error => [\"<font color=\\\"#ff0000\\\"><b><i>\", \"<
comment><comment>       Function => [\"<font color=\\\"#007f00\\\">\", \"<
comment><comment>       Char => [\"<font color=\\\"#ff00ff\\\">\", \"<
comment><comment>       Keyword => [\"<b>\", \"<
comment><comment>       Others => [\"<font color=\\\"#b03060\\\">\", \"<
comment><comment>       Reserved => [\"<font color=\\\"#9b30ff\\\"><b>\", \"<
comment><comment>       String => [\"<font color=\\\"#ff0000\\\">\", \"<
comment><comment>       Warning => [\"<font color=\\\"#0000ff\\\"><b><i>\", \"<
comment><comment> my $hl = new Syntax::Highlight::Engine::Kate(<
comment><comment>##\t\t\t$n ++;<
compat name=(?P<package>\\S+)
Completed|Processed|Canceled\\_Reversal
components\\\\([A-Z]\\w*)\\\\index\\.tsx
computerized assignment from \"(?P<trigger>[^\"]+)\"
Concrete\\\\Package\\\\(.*)\\\\Controller
config.register_curation_concern :(?!
config_name\\s++[\"'](\\w+)['\"]
config=(?P<url>https?://bl\\.webcaster\\.pro/feed/start/free_[^?&=]+)
configstore-custom-path(\\/|\\\\)foo.json$
configstore-test(\\/|\\\\)config.json$
connectionProfile:[^]*name:.*profileName
console\\.error\\.apply\\(console, \\[\"\\[SERVER\\] (?P<msg>.*)\"\\]\\);
const short *\\*\\n^(
const VERSION = \"(?P<version>[0-9]+\\.[0-9-]\\.[0-9-]+)\"
const VERSION = \"(?P<version>[0-9]+\\.[0-9-]+\\.[0-9-]+)\"
const\\s+(facade)\\s+\\=\\s+('|\\\")(?<name>([A-Z]\\w+(\\\\)*){1,})('|\\\");
constmap.o tls.o ssl_timeoutio.o ndelay.a -L\\/usr\\/local\\/ssl\\/lib -lssl -lcrypto \\\\
constraint\\_unique
Constraints on package \"foo\":[^]+bar 1.0.0
Constraints on package \"foo\":[^]+top level
Constraints on package \"indirect\":[^]+one-of-equal 1.0.0
Constraints on package \"indirect\":[^]+top level
const-string\\s+(?P<const>.*)
contains ([\\w\\-\\_]+)
contains(.+)-([\\w\\_]+)
content = '';\n    @:parts = ();\n    return;\n}\n\nmethod protocol (Str ?$protocol) is rw {\n    return Proxy.new(\n        FETCH => { $:protocol; },\n        STORE => -> Str $val { $:protocol = $val; }\n    );\n}\n\n# XXX this might need to be rewritten\nmethod content (Str ?$content, Bool ?$keep) is rw {\n    return Proxy.new(\n        FETCH => {\n                if (want.List) {\n                    $:content unless $:content.defined;\n                    \n                    my $old = $:content;\n                    $old = $$old if $old.ref eq \"Scalar\";\n                    \n                    return $old;\n                }\n              },\n        STORE => -> Str $content, Bool ?$keep {\n                if (want ~~ List) {\n                    $:content unless $:content.defined;\n                    \n                    my $old = $self.:content;\n                    $old = $$old if $old.ref eq \"Scalar\";\n                }\n                \n                $:content = $content;\n                \n                #@:parts = () if $del;\n                \n                .
content(.*+)
content;\n    \n    return [~] ($:headers.as_string($newline), $newline, ($content.chars && $content !~ 
content\\-?\\_?type
CONTENT\\_(LENGTH|TYPE)
content_type(\"multipart
content_url_encoded\\[(?P<content_url_encoded_name>[^]]*)\\]
content=[\"']([^\"'\\\\]+)[\"']
content=\"showroom:///room\\?room_id=(?P<room_id>\\d+)\"
Content-Disposition: form-data; name=\"(?P<name>.+?)\"(?:; filename=\"(?P<filename>.+?)\")?(?P<headers>(?:\\r|\\n)+?.+?(?:\\r|\\n)+?)?(?P<data>.+)
Content-Disposition:.*\\s+name=(
Content-ID:\\s*([^
Content-Length: (?P<length>\\d+)\r\n
Content-Type:(\\V*)
Controller\\\\(.+)Controller$
Controller\\\\(\\w+)Controller::?(\\w+)$
controller_serial':\\s*'(?P<controller_serial>\\w*)',\\s*'faucet_serial':\\s*'(?P<faucet_serial>\\w*)'
Controllers(\\\\Admin)?\\\\(?P<name>.*)Controller
CONVECTIVE\\sSIGMET\\s(?P<label>[0-9A-Z]+)\\s\nVALID\\sUNTIL\\s(?P<hour>[0-2][0-9])(?P<minute>[0-5][0-9])Z\\s\n(?P<states>[A-Z ]+)\\s\n(?P<from>FROM)?\\s?(?P<locs>[0-9A-Z \\-]+?)\\s\n(?P<dmshg>DMSHG|DVLPG|INTSF)?\\s?(?P<geotype>AREA|LINE|ISOL)?\\s?\n(?P<cutype>EMBD|SEV|SEV\\sEMBD|EMBD\\sSEV)?\\s?TS\\s(?P<width>[0-9]+\\sNM\\sWIDE)?(?P<diameter>D[0-9]+)?\n
cookbooks\\/(?!
Cookie:\\Q$user_name\\E@([\\x21-\\xFF]+).*?((?:\\Q$user_name\\E|\\Q$user_name2\\E)@[\\x21-\\xFF]+\\.txt)
Cookie\\:\\Q$user_name\\E\\@([\\x21-\\xFF]+).*?((?:\\Q$user_name\\E|\\Q$user_name2\\E)\\@[\\x21-\\xFF]+\\.txt)
CoolPad( |\\_)?([.0-9a-zA-Z]+)
copy.*((file|directory|folder)*)?\\s(?P<location>\\\"?(.)*\\\"?)$
Copyright \\(c\\) (?P<first_year>20\\d\\d)(-(?P<last_year>20\\d\\d))?, Lars Asplund lars\\.anders\\.asplund@gmail\\.com
Core\\s\\d+:\\s+[\\+\\-](?P<Temp>\\d+)\\.*\\d*(\u00b0|\\s)C
could not convert (?P<type>\\w+)
Could not find file: \\Q$in
Could not find the file foo in container \\h{64}\\z
Covariance\\_(.*)\\_to\\_(.*)
coveo\\.analytics[\\/\\\\]dist[\\/\\\\].*\\.js
CPU (?P<cpu>\\d+) FREQUENCY: (?P<freq>\\d+) kHZ
CPU:(?P<cpu_id>\\d+) \\[\\d*\\s*EVENTS DROPPED\\]
cpu_frequency(?:_devlib):\\s+state=(?P<freq>\\d+)\\s+cpu_id=(?P<cpu>\\d+)
CREATE TABLE\\s+`(?P<name>\\w+)`
create.* app[/\\\\]basics[/\\\\]mock-project.txt
created (?P<MigrationFilename>.+(?P<Version>\\d{14}).*?)\\s
Created test[/\\\\].tmp[/\\\\]bundled.json from test[/\\\\]files[/\\\\]valid[/\\\\]circular-refs[/\\\\]api.yaml\\n
Created test[/\\\\].tmp[/\\\\]bundled.json from test[/\\\\]files[/\\\\]valid[/\\\\]multi-file[/\\\\]api.yaml\\n
Created test[/\\\\].tmp[/\\\\]bundled.json from test[/\\\\]files[/\\\\]valid[/\\\\]single-file[/\\\\]api.yaml\\n
Created test[/\\\\].tmp[/\\\\]bundled.yaml from test[/\\\\]files[/\\\\]valid[/\\\\]circular-refs[/\\\\]api.yaml\\n
Created test[/\\\\].tmp[/\\\\]bundled.yaml from test[/\\\\]files[/\\\\]valid[/\\\\]multi-file[/\\\\]api.yaml\\n
Created test[/\\\\].tmp[/\\\\]bundled.yaml from test[/\\\\]files[/\\\\]valid[/\\\\]single-file[/\\\\]api.yaml\\n
Created test[/\\\\].tmp[/\\\\]dereferenced.json from test[/\\\\]files[/\\\\]valid[/\\\\]single-file[/\\\\]api.yaml\\n
Created test[/\\\\].tmp[/\\\\]dereferenced.yaml from test[/\\\\]files[/\\\\]valid[/\\\\]single-file[/\\\\]api.yaml\\n
crios\\/([\\.\\_\\d]+).*?safari
Cron <(?P<user>[^@].+)@(?P<host>[^>].+)> (?P<command>.*)
Crop Type #\\s+(?P<num>\\d+)\\s+Date = (?P<doy>\\d+) OFE #\\s+(?P<ofe>\\d+)\\s+yield=\\s+(?P<yield>[0-9\\.]+) \\(kg/m\\*\\*2\\) year= (?P<year>\\d+)
Crop Type #\\s+(?P<num>\\d+)\\s+is (?P<name>[^\\s]+)
CryptoJS\\.AES\\.decrypt\\(.*?,\\s*(['\"])(?P<passphrase>(?:(?!\\1).)*)\\1\\s*?\\);
css\\-([a-zA-Z0-9\\_\\-]+)
cur=(?P<width>\\d+)x(?P<height>\\d+)
Current Alpine Version <strong>(?P<version>[0-9][^<]+)</strong>
cursor\\=.*%3A\\h*
cursor\\=\\h*
CVSS:3.0/AV:(?P<AV>[NALP])/AC:(?P<AC>[LH])/PR:(?P<PR>[NLH])/UI:(?P<UI>[NR])/S:(?P<S>[CU])/C:(?P<C>[HLN])/I:(?P<I>[HLN])/A:(?P<A>[HLN])(?:/RC:(?P<RC>[XCRU]))?/
CX[^\\_]*\\_
D(?P<day1>[0-9])\\-?(?P<day2>[0-9])?
d:[\\/\\\\]homepath[\\/\\\\].aws[\\/\\\\]credentials
D+|E+|F+|G+|H+|K+|M+|S+|W+|X+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++
D+|E+|F+|G+|H+|K+|M+|S+|W+|Z+|a+|d+|h+|k+|m+|s+|w+|y+|z+|''|'[^']++(''[^']*+)*+'|[^'A-Za-z]++
dacast\\('(?P<broadcaster_id>\\d+)_(?P<video_type>[a-z]+)_(?P<video_id>\\d+)', 'replay_content', data\\);
DAT\\_(.*)\\.BINOUT$
DAT\\_(\\w*)\\.OUT$
data-(?P<type>clip|prog)id=[\"\\'](?P<id>\\d+)
data:(?P<mime_type>[^\"]*);(?P<encoding>[^\"]*),(?P<data>[^\"]*)
data:(?P<mimetype>[\\w\\.\\-\\/]+);(?P<encoding>\\w+),(?P<data>.*)
data:(image/.+?)?(;.+?)?,(.*+)
data:image/png;base64, (?P<data>[\\w/+=]+)
data\\[merges\\]\\[(?P<name>\\w+)\\]
data-account=\"(?P<account_id>[0-9]+).*?data-video-id=\"(?P<video_id>[0-9]+)\"
data-bmmr-id=\\\\\"(?P<video_id>.+?)\\\\\"
data-detail-url=\"(?P<url>.*)\" data-rst-id
data-dialog-header=([\"\\'])(?P<title>.+?)\\1[^>]+href=([\"\\'])(?P<href>.+?)\\3[^>]*>(?P<kind>Teaser|Trailer)<
data-holder=\"video(?P<video_id>[0-9]+)\" data-account=\"(?P<account_id>[0-9]+)\"
data-href=\"(?P<href>https://embed.tumblr.com/embed/post/\\w+/\\w+)\"
data-id=(?P<quote>[\"'])(?P<id>\\w+)(?P=quote)
data-json=([\"\\'])(?P<json>{.+?})\\1
data-main-video=\"(?P<video_id>.+?)\"
data-ooyala-video-id\\s*=\\s*[\\'\"](?P<ec>.{32})[\\'\"]
data-quality=((?:\\\\)?[\"\\'])(.+?)\\1[^>]+src=\\1(.+?)\\1
data-react-props\\s*=\\s*(?P<q>[\"'])(?P<data>.*?)(?P=q)
datatype><normal> (<
datatype><normal> ++;<
datatype><normal> = (<
datatype><normal> = [ <
datatype><normal> = [] };<
datatype><normal>([[<
datatype><normal>([]);<
datatype><normal>([<
datatype><normal>(<
datatype><normal>) { <
datatype><normal>) {<
datatype><normal>) || <
datatype><normal>) <
datatype><normal>) = <
datatype><normal>) > <
datatype><normal>) cmp <
datatype><normal>)) { <
datatype><normal>)) {<
datatype><normal>));<
datatype><normal>), <
datatype><normal>);<
datatype><normal>)} <
datatype><normal>)<
datatype><normal>])) {<
datatype><normal>]);<
datatype><normal>]]);<
datatype><normal>} = [];<
datatype><normal>}) {<
datatype><normal>})) {<
datatype><normal>->[<
data-uix-load-more-href=\"/?(?P<more>[^\"]+)\"
dataURL\\s*:\\s*(?P<q>['\"])(?P<url>.*?)(?P=q)
data-users=\"(?P<users>.*)\"\\s*data-params=\"(?P<params>.*)\"
data-video\\s*=\\s*([\"\\'])(?P<data>{.+?})\\1
data-video=\"(?P<video_id>.+?)\"
data-video-id=([\"\\'])?(?P<id>\\d+)
data-video-id=['\"](?P<id>[^'\"]+)['\"]
data-video-iphone-server=\"(?P<server>[^\"]+)\"\\s+data-video-iphone-path=\"(?P<path>[^\"]+)\"
data-video-link=[\"\\'](?P<url>http://m.mlb.com/video/[^\"\\']+)
data-wiki-(?P<name>[a-z]+)=\"(?P<value>[^\"]+)\"
data-zdfplayer-jsb=[\"'](?P<json>{.+?})[\"']
Date:\\s*(?P<year>20\\d\\d)-\\d\\d-\\d\\d
date\\_([0-9]{4})(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])
date\\_day.+date\\_month.+date\\_year
DateTime<(?<type>[a-zA-Z0-9\\,\\.\\s\\-\\:\\/\\\\]+)>
DBD-SQLite-BundledExtensions.\\Q$extension_name\\E\\.(so|dll|dylib)$
dc:[% var %]>\n            [%- END %]\n        [%- END %]\n        <
declare\\s-x\\s(?P<name>\\S+)=\\\"(?P<value>.*)\\\"
decval><normal>) {<
decval><normal>);<
def (?P<command>\\w+)
DEF (?P<part_name>\\S+)
default = (?P<foo>.+)\\n
define\\('(?P<name>.+)'
define\\(\"([A-z0-9\\-_\\/\\\\]+)\",\\[\"dust\\.core\"\\]
define\\(\\s*'isotope\\-layout\\/\\js\\/isotope'(.|\\n)+\\],
delete\\s+from\\s+`?(?P<table>\\w+)`?
DELIMITER ([\\;\\$\\|\\\\]+)
Delivery to the following (?:recipient|recipients) failed permanently\\X*?(\\S+@\\S+\\w)
demos[\\/\\\\]
depth\\:(?P<depth>[1-4])\\;*
desc:\\s(?P<data>.*)$
describe\\((?P<name>(\"[^\"]+\"|'[^']+'))[^{]+\\{
description\\s+=\\s+(?P<description>.*)
DeviceID: (?P<deviceID>[0-9]+)
Diagnostic results saved in: (?P<tarfile>gs:\\/\\/\\S+diagnostic\\.tar)
diff .*a/(?P<origin_filename>.*) b/(?P<result_filename>.*)
diff rules[^]*foo[^]*bar[^]*test-rule[^]*foo-config[^]*bar-config
dir[\\n\\r]+(?P<revision>\\d+)
Dir\\[([0-9.-]*),[([0-9.-]*), ([0-9.-]*), ([0-9.-]*)\\]\\]
Disallow:\\h*(/\\h+|/\\R|/$)
disconnect if $.connected;\n\n    debug \"Connecting to $.host:$.port... \";\n    try { $:socket = connect($.host, $.port) }\n    if($:socket) {\n      try { $:socket.autoflush(1) }\n      $.connected++;\n      $.last_traffic  = time;\n      $.last_autoping = time;\n      debug \"done.\";\n    } else {\n      debug \"failed ($!).\";\n    }\n  }\n\n  method disconnect() {\n    return unless $.connected;\n\n    debug \"Disconnecting from $host:$port... \";\n    try { $:socket.close }\n    # We want to have a sane state when we connect next time.\n    $.connected      = 0;\n    $.inside         = 0;\n    $:chans          = set();\n    $.servername     = undef;\n    $:socket            = undef;\n    $.curnick        = undef;\n    $.curusername    = undef;\n    $.curircname     = undef;\n    $.curhostname    = undef;\n    $.last_traffic   = 0;\n    $.last_autoping  = 0;\n    $:in_login_phase = 0;\n    %:channels       = ();\n    $:queue.clear;\n    $:nickgen.reset;\n    debug \"done.\";\n  }\n\n  method login() {\n    return unless $.connected;\n\n    $:queue.enqueue({\n      # Indicate that we're currently logging in, so our nick_already_used\n      # handler can choose a different nick. $in_login_phase is reset to 0\n      # when we're successfully logged in.\n      $in_login_phase++;\n      $say(\"NICK {$:nickgen.next}\");\n      $say(\"USER $.username * * :$.ircname\");\n    });\n  }\n\n  # Process $queue, wait for input from server and process it\n  method run() {\n    while $.connected {\n      $queue.run;\n      .
DISPLAY\\_NAME.*\\: (.*)$
displayPrint\\(\\'(?P<printId>\\w+)\\'\\)
dist[/\\\\]pages[/\\\\]_document\\.js
dist[/\\\\]pages[/\\\\]_error\\.js
div .*? data-ht=(?P<quote>[\"'])(?P<data>.*?)(?P=quote)
div.*?data-tp=(?P<q>[\"'])(?P<data>.*?)(?P=q)
div>\n[$ if $self->{hidden} $]\n<input type=\"hidden\" name=\"[+ $name +]\" value=\"[+ $value +]\">\n[$endif$]\n<input type=\"hidden\" name=\"_id_[+ $name +]\" value=\"[+ $id +]\">\n[$endsub$]\n\n[# ---------------------------------------------------------------------------\n#\n#   show_control_addons - output additional things after the control\n#]\n\n[$ sub show_control_addons ($self, $req)\n \nmy $datasrc_ctrls  ;\n$datasrc_ctrls = $self -> get_datasource_controls ($req)\n    unless ($self -> {no_datasource_controls}) ;\n\n$][$if $datasrc_ctrls $]\n[$foreach my $ctrl (@$datasrc_ctrls) $]\n<a class=\"cControlAddonA\" href=\"[+ $ctrl->{href} +]\" onClick=\"[+ $ctrl->{onclick} +]\">[$if $ctrl -> {icon} $]<img class=\"cControlAddonImg\" src=\"[+ $ctrl -> {icon} +]\" title=\"[+ $ctrl -> {text} +]\" alt=\"[+ $ctrl -> {text} +]\">[$else$][+ $ctrl -> {text} +][$endif$]<
div>\n[$endif$]  \n[$endsub$]\n  \n\n\n[# ---------------------------------------------------------------------------\n#\n#    show_grid_table_row     Erzeugt eine Grid-Tabelle-Zeile\n#]\n\n[$ sub show_grid_table_row ($self, $req, $i) \n\n    $field = $self -> {fields}[0] ;\n    $id     = $self -> {fullid};\n    $name   = $self -> {name} ;\n    my $jsname = $name ;\n    $jsname =~ s
div>\t\n[$else$]\n  [# Workaround around segfault in Embperl 2.1.1-dev *grmpf* #]\n  <[# #]input\n  class=\"cBase cControl cControlButton\"  name=\"[+ $self->{name} +]\"\n  value=\"[+ $self -> {showvalue}?($self -> {value} || $self->{text}):$self -> form -> convert_label ($self, undef, undef, $req) +]\"\n  title=\"[+ $self -> {showtext}?($self->{text}):$self -> form -> convert_label ($self, undef, undef, $req) +]\"\n  [$if $self -> {onclick} $] onClick=\"[+ do { local $escmode = 0 ; $self -> {onclick} } +]\" [$endif$]\n  [+ do { local $escmode = 0 ; $self -> {eventattrs} } +]\n  [$if $self -> {image} $]\n  type=\"image\" src=\"[+ $self -> {image} +]\"\n  [$else$]\n  type=\"button\"\n  [$endif$]\n  style=\"[+ $self->{style} || 'text-align: center;' +]\"\n  [#    onMouseOver=\"buttonover(this);\" onMouseOut=\"buttonout(this);\" #]\n    [$ foreach my $attr (keys %$button) $]\n      [$ if exists $button->{\"__$attr\".'_escmode'} $]\n        [+ $attr +]=\"[+ do { local $escmode = int $button->{\"__${attr}_escmode\"}; $button->{$attr}; } +]\"\n      [$ else $]\n        [+ $attr +]=\"[+ $button->{$attr} +]\"\n      [$ endif $]\n    [$ endforeach $]>\n  [$endif$]\n[$ endforeach $]\n\n  <
DNS=(?P<address>[\\d.]+)
docker-(?P<id>[^.]+).dockerfile
DoCoMo/1.0/(?P<model>[^/]*)(?:/c(?P<cache>\\d*)|)
DoCoMo/2.0 (?P<model>[^\\(]*)\\(c(?P<cache>\\d*)
doctrine.dbal.logger.profiling.(?P<name>[a-zA-Z0-9]*)
Doctrine\\\\([^\\\\]+)
doctype\\s+(?P<type>[0-9a-z\\.]+)
Document labelled (
does ['\":]([A-Za-z0-9\\_\\/]+)(?:'|\"|$)(?:,\\s*(.*)$)?
Domain\\\\Model\\\\(.*)
Domain\\\\Model\\\\(.+)
Domains\\\\([^\\\\]*)\\\\Jobs
dp\\_month\\_([0-9]+)
dp\\_time\\_([^\\s]+)
Dr\u017eite\u013e dom\u00e9ny\\s+(?P<owner>\\w+-\\d+)
Drupal\\\\(\\w*)Tests\\\\
Drupal\\\\Tests\\\\(\\w+)\\\\(\\w+)
Drupal\\\\Tests\\\\Component\\\\(\\w+)
Drupal\\\\Tests\\\\Core\\\\(\\w+)
duplicate key[^\\)]+\\((?P<fields>[^\\)]+)\\)
Duration: (?P<hour>\\d{2}):(?P<min>\\d{2}):(?P<sec>\\d{2})\\.(?P<ms>\\d{2})
Duration: (?P<hours>\\d+):(?P<minutes>\\d+):(?P<seconds>\\d+)
Duration\\s+: (?P<minute>\\d+)?(?:mn )?(?P<second>\\d+)s
dust\\.register\\(\"([A-z0-9\\-_\\/\\\\]+)\",body_0\\)
dwoo\\.const\\.([a-z0-9\\\\_:]+)
e[(]\\\\
e[)]\\\\
e\\\\
E\\*\\*(?P<varo>.*?(\\({0,1}.*?\\)){0,1})(?=\\+|-|\\*|/|\\*\\*)
e\\p{IsAlpha}
E\\u{30a8 30e9 30fc}
end task(?P<task_name>.*)
END\\ of \\localinstall
endswith(\\w+)-([\\w\\_]+)
engine: \"(?P<engine>\\S+)\"
enq=(?P<enqueueTimeStamp>[\\d-]+\\s+[\\d:]+)
enqueueClockTime=(?P<enqueueTimeStamp>[\\d-]+\\s+[\\d:]+)
enum\\saiTextureType[^{]*?\\{(?P<code>.*?)\\};
erConfigClassLhConfig::getInstance\\(\\)->getDirLanguage\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)
erConfigClassLhConfig::getInstance\\(\\)->getOverrideValue\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?),(\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)
erConfigClassLhConfig::getInstance\\(\\)->getSetting\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?),(\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)
erLhcoreClassModelChatConfig::fetch\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)->current_value
erLhcoreClassModelChatConfig::fetch\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)->data\\['([a-zA-Z0-9-\\.-\\/\\_]+)'\\]
erLhcoreClassModelChatConfig::fetch\\((\\s?)'([a-zA-Z0-9-\\.-\\/\\_]+)'(\\s?)\\)->data_value
ERROR: invocation failed \\(errno \\d+\\), args: \\['.*[/\\\\]tox\\.ini
errorMessage=\"(.*?)(?<!\\\\)\"
ether:? (
Ethernet Address: (?P<mac>.*) \\(Hardware Port: (?P<port>[^/)]+)\\)$
eval\\(function\\(p,a,c,k,e,[d|r]\\)\\{.*?\\}?\\}?return \\w+\\}\\('(.*?[^\\\\])',(\\d+|\\[\\]),(\\d+),'(.*?)'\\.split\\('(.*?)'\\).*?\\)\\)
executeExpect.*node_modules[/\\\\]unexpected[/\\\\]
exercises(?:\\/|\\\\)(\\w+)(?:\\/|\\\\)solution(?:\\/|\\\\)solution\\.js
existing mount at (?P<path>.+)
Exit code from container (?P<container_id>\\w+) is ?: (?P<returncode>\\d+)
expected \\[\"a\
Expected list not to be empty, got `[]`
eXpGetMessage\\((?:'|\")(?P<matches>.*?)(?:'|\")*\\)
export (?P<name>.*)=\"(?P<value>.*)\"
export default ?{[^]*}
extend(\\/|\\\\)application\\.js
f\\u{1,2}bar
fab(\\/|\\\\\\\\|\\\\\\\\\\\\\\\\)index\\.js
facet by (
Failed to find a mapper for #<Namespace::Nested::Mung:0x\\h+>. Did you mean to implement Namespace::Nested::MungMapper\\?
Failed to find a mapper for #<Namespace::Nested::Rye:0x\\h+>. Did you mean to implement MyMappers::Namespace::Nested::RyeMapper\\?
fake[\\/\\\\]\\.jshintrc$
family\\s+(?P<FML>\\d+)\\s+model\\s+(?P<MDL>\\d+)\\s+stepping\\s+(?P<STP>\\d+)
faraday\\_(.*)\\.gemfile
fast\\_send
fct_label=(?P<quot>\"|')(?P<fct_label>.*?)(?P=quot)
ffmpeg version (?P<major>[0-9]{0,3}).(?P<minor>[0-9]{0,3}).(?P<revision>[0-9]{0,3})
fid:? (?P<fid>\\d+)
file:(?:\\s+)?(?:\\'|\\\")(?P<url>[^\\\"']+)(?:\\'|\\\")
file:.*?(?P<q>['\\\"])(?P<url>rtmp://[^\\\"']+)(?P=q),
file:.*?[/\\\\]package-local-dev-dependency$
file:///(?P<type>[a-zA-Z]+)/(?P<commit>\\w+)(?P<path>.+)?
file\\s*:\\s*([\"\\'])(?P<url>(?:(?!\\1).)+)\\1
filename=\"(?P<filename>[^\"]*)\"
filename=\"?(.*?[^\\\\])(\"|;|\\z)
find:\\s(?P<PERMISSION_DENIED>.*Permission denied)
find\\s+\"?(%{buildroot}|\\$b)(\"?\\S?/?)*\\s*.*\\s+-i?name\\s+[\"\\'\\\\\\\\]?\\*\\.la($|.*[^\\\\\\\\]$)
firefox\\/([\\.\\_\\d]+)
FIRMWARE_NAME:([a-zA-Z\\_\\-]+(\\s+[\\d\\.]+)?)
first\\u
first\\u\\x\\z\\8\\9second
first\\u123second
first\\usecond
firstInstallTime=(?P<time>.*)
float><normal>);<
float><normal>])) {<
fo(o
fo[^]*az
fontkit[/\\\\]index.js$
foo - failed[^]Error: failed
foo(
foo(?i:
foo(?m:
foo(A{0,1}+)Abar
foo\\\\(bar|baz)
fooA*+Abar
fooA?+Abar
fooA++Abar
fooA++bar
force-show:(?P<message>.*)
'Form' => Collective\\Html\\FormFacade::class
Format profile\\s*:\\s*([\\w\\_\\-\\\\\\/\\@\\. ]+)\\n
Format profile\\s*:\\s*([\\w\\_\\-\\\\/\\@\\. ]+)\n
Format.?=.?(?P<format>\\w+)
Format\\s*:\\s*([\\w\\_\\-\\\\\\/ ]+)\\n
Format\\s*:\\s*([\\w\\_\\-\\\\\\/\\. ]+)\\n
Format\\s*:\\s*([\\w\\_\\-\\\\/\\. ]+)\n
Foundation\\\\Http\\\\Controllers\\\\(.*?)@
frame=\\s*(?P<frame>\\d+)\\s+fps=\\s*(?P<frame_rate>\\d+\\.?\\d*)\\s+q=\\s*(?P<qscale>\\S+)\\s+\\S*.*size=\\s*(?P<size>\\S+)\\s+time=\\s*(?P<time>\\S+)\\s+bitrate=\\s*(?P<bit_rate>\\S+)
Frames: \\d+ latency: (?P<pct90>\\d+)/(?P<pct95>\\d+)/(?P<pct99>\\d+) Janks: (?P<jank>\\d+)\\((?P<jank_pct>\\d+)%\\)
FRIBIDI_\\U${kind}\\E_([A-Z_]*)$
Friendica '[^']*' (\\d+[\\d\\.\\_\\-\\+abcdehlprstv]*).*
from (?P<count>[0-9]+) stores
from http (
FROM tag [a-z0-9 \\\\-]+ TO (?:tag|vm) [a-z0-9 \\\\-]+ ALLOW (?P<protocol>[a-z]+) \\\\(\\\\s*(?P<ports>PORT [0-9]+(?: AND PORT [0-9]+)*)\\\\s*\\\\)
FROM tag [a-z0-9 \\\\-]+ TO (?:tag|vm) [a-z0-9 \\\\-]+ ALLOW (?P<protocol>[a-z]+) PORT (?P<port>[0-9]+)
from.*\\b\\Q$domain\\E.*[\\[\\(][0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+[\\]\\)].*\\bby\\b
from.*\\b\\Q$domain\\E.*[\\[\\(][0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+[\\]\\)].*by.*\\b\\Q$domain\\E
from\\s+(?P<source>[^\\s]+)
FTDIBUS\\\\(?:.+)\\+(.+?)A?\\\\.+
ftp://(?P<user>.+?):(?P<passwd>.+?)@(?P<host>.+)
func test([\\w$]+)\\s*\\(\\)\\s*\\{[^]*?\\n([ \\t]+)\\/\\/#-example-code\\n([^]+?)\\n\\2\\/\\/#-end-example-code\\n
function \\1\\([^\\)]*\\) \\{
function([^\\(]*)\\(([^\\(\\)]*?)\\)[^\\{]*\\{([^]*)\\}
function[\\s\\t]*modChrome\\_([a-z0-9\\-\\_]*)[\\s\\t]*\\(
function\\s([a-zA-Z\\-\\_0-9]+)
function\\s*+\\([^)]*+\\)\\s*+\\{
function\\s*mpc\\s*=\\s*(?P<data>.*?)\n
function><normal> (<
function><normal>(<
functional\\\\(?!tests)
g/<TheGrammar.StrWhiteSpaceChar>+//;\n    $s ~~ s/^([\\+|\\-]?)0+(<[0..9]>)/$1$2/;\n    return +0 if $s eq \"\";\n    return +$s;\n}\nmulti sub ToNumber(JSX
g;\n}\nclose $fh;\nfor my $key (keys %is_var) {\n\n    # %SIG can also be found as SIG etc. Need at least two word\n    # characters; finding '$^H' with 'H' appears a bit too random.\n    if ($key =~ 
g_rgProfileData = (?P<json>{.*?});[ \t\r]*\n
G0?4(?P<comment>[^*]*)(\\*)?
GAMMA_SOFTWARE-(?P<version>[0-9]{8})
Gateway=(?P<address>[\\d.]+)
gbar\\_(?P<channel>[\\w]+)
GBL-CONFIG-6-DB_COMMIT : Configuration committed by user \\\\'(?P<user>.+?)\\\\'..*
gcc(?P<major>(\\d))?(?P<minor>(\\d))?
gem \"foo\
gen(.statements);\n                $ng.ret(\"$INS\\::p5_make_code( sub \\{ { \n                    (join \"\\n\", map { \n                        \"my \" ~ .
get(?P<name>.*)
gim (?P<application>\\\\S+) (?P<command>recover) (?P<users>.*)
gim (?P<command>list applications)
gim (?P<command>recover) (?P<users>.*)
gim (?P<command>set application) (?P<application>\\\\S+) (?P<key>\\\\S+) (?P<api_key>\\\\S+)
gim (?P<command>set default application) (?P<application>\\\\S+)
git@github\\.com:(?P<owner>\\w+)/(?P<name>[^.]+)\\.git
git@github\\.com:(?P<username>.+)/(?P<repo_name>[^\\.]+)(?:\\.git)?
github (?P<command>invite user) (?P<users>.*)
github (?P<command>list members)
github (?P<command>list nomfa)
github (?P<command>list organizations)
github (?P<command>list owners)
github (?P<command>set default organization) (?P<organization>\\\\S+)
github (?P<command>set organization) (?P<organization>\\\\S+) (?P<login>\\\\S+) (?P<password>\\\\S+)
github (?P<command>set organization) (?P<organization>\\\\S+) (?P<token>\\\\S+)
github (?P<organization>\\\\S+) (?P<command>invite user) (?P<users>.*)
github (?P<organization>\\\\S+) (?P<command>list members)
github (?P<organization>\\\\S+) (?P<command>list nomfa)
github (?P<organization>\\\\S+) (?P<command>list owners)
github.com/([a-zA-Z0-9\\.\\_\\-]+)/([a-zA-Z0-9\\.\\_\\-]+)
github.com[/:](?P<owner>.*)/(?P<name>.*)\\.git
github\\.com\\/([\\w\\d\\-\\_]+)\\/([\\w\\d\\-\\_]+)\\/tree
gl_Position.*(?![^]*gl_Position)
GLFWAPI (?P<return>[\\w\\s\\d\\*]+) (?P<name>[\\w\\d]+)\\((?P<parameters>.*)\\);
global[\\s]+\\$([a-zA-Z0-9\\_\\,\\s\\$]+)\\;
GMT(?P<signal>[+-])(?P<hours>\\d{2}):?(?P<minutes>\\d{2})
GNTP/(?P<version>\\d+\\.\\d+) (?P<messagetype>REGISTER|NOTIFY|SUBSCRIBE|\\-OK|\\-ERROR)
go version go(?P<goVersionNumber>[0-9.]+) (?P<platform>[a-zA-Z0-9]+/[a-zA-Z0-9]+)
Got 20 rows for daily bars table with first day=2015-06-02, last day=2015-06-30, expected 21 rows.\nMissing sessions: [Timestamp('2015-06-15 00:00:00+0000', tz='UTC')]\nExtra sessions: []
gpu(?P<negate>!)?(?P<start>[0-9]+)(?:-(?P<end>[0-9]+))?
GPU\\s+(?P<id>\\d+):\\s+(?P<model>.+)
grep_h($re));\n\n    # find things in the L->R diagonal vector\n    push(@matches, .
grep_hf($re));\n    push(@matches, .
grep_lrf($re));\n    push(@matches, .
grep_rl($re));\n\n    # find things in the vertical vector\n    push(@matches, .
grep_rlf($re));\n    push(@matches, .
grep_vf($re));\n    push(@matches, .
group\\_id\\\"\\:123
GT-P10|SC-01C|SHW-M180S|SGH-T849|SCH-I800|SHW-M180L|SPH-P100|SGH-I987|zt180|HTC(.Flyer|\\_Flyer)|Sprint.ATP51|ViewPad7|pandigital(sprnova|nova)|Ideos.S7|Dell.Streak.7|Advent.Vega|A101IT|A70BHT|MID7015|Next2|nook
gt-p10|sc-01c|shw-m180s|sgh-t849|sch-i800|shw-m180l|sph-p100|sgh-i987|zt180|htc(.flyer|\\_flyer)|sprint.atp51|viewpad7|pandigital(sprnova|nova)|ideos.s7|dell.streak.7|advent.vega|a101it|a70bht|mid7015|next2|nook
gzip:\\s(?P<ERROR_MSG>.*)
gzip:\\s+(?P<FILE_NAME>.*)\\s+already exists
h(?P<n1>e)[a-z]+(?P<n2> )world
h[(]\\\\
h[)]\\\\
H[\\uD83D\\uDCA0-\\uD83D\\uDCAB]
h\\\\
H264-(?P<width>\\d+)x(?P<height>\\d+)
has.*+
hdbref__$CLASS\\__
hdbref__(\\w+?)__$CLASS\\__
header($_.key) = $_.value for pairs %headers;\n}\n\nmethod header (Str $field) is rw {\n    return Proxy.new(\n\tFETCH => { %:headers{$field} },\n\tSTORE => -> Str $val { .
headers\\[(?P<header_name>[^]]*)\\]
heap_tree=(?P<data>\\w+)
hexdump:\\s(?P<ERROR_MSG>.*)
highest\\s+offense.*(?P<status>opening|terminated)
highlight.js/\\K\\d+\\.\\d+\\.\\d+
hint=[\\'\"](?P<likecount>\\d+) Likes / (?P<dislikecount>\\d+) Dislikes
Historical Broadcast (?P<type>(foreground|background)) #(?P<id>\\d+)
hl_lines=(?P<quot>\"|')(?P<hl_lines>.*?)(?P=quot)
hls-url=[\"'](?P<url>[^\"']+)[\"']
Hoa\\\\Consistency::registerShutdownFunction\\(xcallable\\('(.*)'\\)\\)
Holesize (?P<toolid>[0-9]{1,2})\\. = (?P<size>[0-9/.]+) Tolerance = \\+(?P<xtol>[0-9/.]+)/-(?P<ytol>[0-9/.]+) (?P<plated>(PLATED)|(NON_PLATED)|(OPTIONAL)) MILS Quantity = [0-9]+
Holesize (?P<toolid>[0-9]{1,2})\\. = (?P<size>[0-9/.]+) Tolerance = \\+(?P<xtol>[0-9/.]+)/-(?P<ytol>[0-9/.]+) (?P<plated>(PLATED)|(NON_PLATED)|(OPTIONAL)) MM Quantity = [0-9]+
Host: (?P<host>[0-9a-zA-Z\\-\\.\\:]+)\\r\\n
href\\h*=\\h*\"\\h*(.+?)\\h*\"
href\\s*=\\s*\"([^\"]*
href=([\\'\\\"])(
href=\"(
href=\"(.*?
href=\"(.*?)\\\\(.*?)\"
href=\"(/assets/app\\.[a-f0-9]{
href=\"(?P<href>/[^\"]+)\"[^>]*>(?:\\s*<img[^>]+alt=\"[^-]+-\\s(?P<title>[^\"]+)\")?
href=\"(?P<url>.+?)\"
href=\"\\/?(
href=\"http://videos\\.francetv\\.fr/video/(?P<video_id>.+?)(?:@.+?)?\"
hsl\\(\\s*((
hsla\\(\\s*((
Hsp\\_(?:qseq|hseq|csline|midline)
Hsp\\_(?:qseq|hseq|csline|pline|midline)
Hsp\\_(midline|qseq|hseq)
Hsp\\_(qseq|hseq|midline)
HTC[\\w\\-\\.\\_\\ ]*
'Html' => Collective\\Html\\HtmlFacade::class
htspell)\nformtitle(Spell Checking Tool)\nproc(htspellFunction)\ndesc(htspellDesc)\ninit(htspellInit)\nfeedback(htspellFeedback)\nlivefeedback(htspellLive)\n\n##\n\n=head1 NAME\n\nhtspell - an application built using Navegante\n\n=head1 SYNOPSIS\n\nBuild the application:\n\n  $ navegante examples
http(?:s)?://(?:\\w+\\.)?rtl.nl/video/(?P<uuid>.*?)\\Z
http(?:s)?://(\\w+)\\.?olympicchannel.com/../(?P<type>tv|playback)/(livestream-.\\d|.*)/
http(?P<was_secure>s?)://.*okccdn.com.*images/[0-9]*x[0-9]*/[0-9]*x[0-9]*/(?P<tnl>[0-9]*?)x(?P<tnt>[0-9]*?)/(?P<tnr>[0-9]*)x(?P<tnb>[0-9]*)/0/(?P<id>[0-9]*).(:?webp|jpeg)\\?v=\\d+
http(s)?://(?P<account_name>.*?)\\.blob\\.(?P<endpoint_suffix>.*?)/(?P<container_name>.*?)/(?P<blob_name>.*?)\\?(?P<sas_token>.*)
http(s)?://(?P<cdn>\\w+\\.)?afreeca(tv)?\\.com/(?P<username>\\w+)(/\\d+)?
http(s)?://(?P<prefix>\\w+.)?panda.tv/(?P<channel>[^/&?]+)
http(s)?://(\\w+.)?mixer\\.com/(?P<channel>[^/?]+)
http(s)?://(\\w+\\.)?streamingvideoprovider.co.uk/(?P<channel>[^/&?]+)
http(s)?://(www\\.)?(periscope|pscp)\\.tv/[^/]+/(?P<broadcast_id>[\\w\\-\\=]+)
http(s)?://(www\\.)?huya.com/(?P<channel>[^/]+)
http(s)?\\://(embed\\.|www\\.)?(?P<host>nowvideo\\.(ws|sx|ch))/((embed\\.php\\?v\\=)|(video/))(?P<id>\\w+)
http.*\\/\\/(?P<storage>[^.]+).blob.core.windows.net\\/(?P<container>[^/]+)\\/*(?P<blob>.*)
HTTP/(?P<version>\\S+) (?P<status>\\S+) (?P<description>.*)
HTTP/1.1 (?P<code>\\d+) (?P<status>.*)
http://((tfile\\.(me|ru|co|cc))|tfile-home\\.org|www1\\.tfiles\\.cc)/forum/viewtopic\\.php\\?p=(?P<torrent_id>\\d+)
http://(?:playtv\\.fr/television|play\\.tv/live-tv/\\d+)/(?P<channel>[^/]+)/?
http://(star|y)\\.longzhu\\.(?:tv|com)/(m\\/)?(?P<domain>[a-z0-9]+)
http://\\Q$server_hostname\\E:\\d+/\n                         
http://|https://|ftp://|file://|file:\\\\
http://example.com(?P<path>[-A-Za-z0-9\\/\\._]+)
http://ipv6\\.(nnm-club\\.(me|ru|name|tv|lib)|nnmclub\\.to)/forum/viewtopic\\.php\\?p=(?P<torrent_id>\\d+)
http://mangafox.me/manga/[^/]*/(v(?P<volume>[^/]*)/)?c(?P<chapter>[^/]*)
http://replay\\.gulli\\.fr/(?:Direct|.+/(?P<video_id>VOD[0-9]+))
http://rinfo.lagrummet.se/publ/(?P<fs>[\\w-]+fs)/(?P<arsutgava>\\d{4}):(?P<lopnummer>\\w+)
http://rinfo.lagrummet.se/publ/(?P<prop>prop)/(?P<arsutgava>\\d{4}(/\\d{2}|)):(?P<lopnummer>\\w+)
http://rinfo.lagrummet.se/publ/(?P<utr>(sou|ds))/(?P<arsutgava>\\d{4}(/\\d{2}|)):(?P<lopnummer>\\w+)
http://rinfo.lagrummet.se/publ/beslut/(?P<myndighet>\\w+)/(?P<dnr>.*)
http://rinfo.lagrummet.se/publ/rattsfall/(?P<publikation>\\w+)/(?P<arsutgava>\\d+)(s(?P<sidnummer>\\d+)|((:| nr | ref )(?P<lopnummer>\\d+)))
http://rinfo.lagrummet.se/publ/rf/(?P<rf>\\w+)/(?P<arsutgava>\\d+)(/|)(?P<sep>[s:])(_(?P<sidnummer>\\d+)|(?P<lopnummer>\\d+))
http://rinfo.lagrummet.se/publ/sfs/(?P<arsutgava>\\d{4}):(?P<lopnummer>\\w+)#?(k_(?P<kapitel>[0-9a-z]+))?(p_(?P<paragraf>[0-9a-z]+))?
http://rinfo.lagrummet.se/publ/sfs/(?P<law>\\d{4}:\\w+)#?(K(?P<chapter>[0-9a-z]+))?(P(?P<section>[0-9a-z]+))?(S(?P<piece>[0-9a-z]+))?(N(?P<item>[0-9a-z]+))?
http://www.mangahere.co/manga/[^/]*/(v(?P<volume>[^/]*)/)?c(?P<chapter>[^/]*)
http://www.mangapanda.com/((\\d+)-(\\d+)-(\\d+)/)?[^/]+/(chapter-)?(?P<chapter>\\d+)(            .html)?
http://www.mangareader.net/((\\d+)-(\\d+)-(\\d+)/)?[^/]+/(chapter-)?(?P<chapter>\\d+)(            .html)?
http:\\/\\/www.youtube.com\\/watch\\?v=([A-Za-z0-9\\-\\_]{11})
http[s]?:\\/\\/(?P<user>.*):(?P<variable>%.*%)@(.*)
HTTP\\/(?P<version>1\\.[0-9]) (?P<status>[0-9]{3}) (?P<statusPhrase>.*)
HTTP\\/1.1 (?P<code>[0-9]+) (?P<message>.*)
HTTPD\\_ROOT
https://17.live/live/(?P<channel>[^/&?]+)
https://abema\\.tv/(\n        now-on-air/(?P<onair>[^\\?]+)\n        |\n        video/episode/(?P<episode>[^\\?]+)\n        |\n        channels/.+?/slots/(?P<slots>[^\\?]+)\n        )
https://egame\\.qq\\.com/(?P<channel>\\d+)
https://github.com/(
https://github.com/(?P<user>[^/]+)/(?P<repo>[^/$]+)
https://www.wattpad.com/(?P<chapterID>\\d+).*
https://www\\.wattpad\\.com/(?P<chapterId>\\d+).*
https://www\\.wattpad\\.com/story/(?P<storyId>\\d+).*
https:\\/\\/(?:docs|drive)\\.google\\.com\\/(?:a\\/[a-zA-Z0-9\\-\\_\\.]+\\/)?(forms|document|presentation|spreadsheets|file)\\/d\\/([a-zA-Z0-9_-]+)
https:\\/\\/[\\w\\-\\.]*s3-us-west-2\\.amazonaws\\.com([\\w\\-\\.\\_0-9\\/]*)
https:\\/\\/ec2\\.us-west-2\\.amazonaws\\.com([?\\w\\-\\.\\_0-9\\/]*)
https?://((www)|(embed))?\\.divxstage\\.eu/((video/)|(embed\\.php\\?v\\=))(?P<id>\\w+)
https?://(?:(?:www)|(?:embed))?\\.novamov.com/(?:(?:video/)|(?:embed\\.php\\?v\\=))(?P<id>\\w+)
https?://(?:[^/]+\\.)?vimeo.com/(?P<video_id>\\d+)
https?://(?:\\w+\\.)?vk\\.com/video\n        (?:\\?z=video)?(?P<video_id>-?[0-9]*_[0-9]*)\n        
https?://(?:\\w+\\.)?younow\\.com/(?P<channel>[^/&?]+)
https?://(?:player\\.)?tamago\\.live/w/(?P<id>\\d+)
https?://(?:watch\\.)?ustvnow\\.com(?:/(?:watch|guide)/(?P<scode>\\w+))?
https?://(?:www.)?example\\.com/(?P<id>.*?)(?:\\.html)
https?://(?:www.)?gorillavid.in/(?:embed-)?(?P<id>\\w+)(?:\\-\\d+x\\d+)?.html
https?://(?:www.)?itv.com/hub/(?P<stream>.+)
https?://(?:www.)?movreel\\.com/(?:embed/)?(?P<id>\\w+)
https?://(?:www.)?vidbull\\.com/(?:embed-)?(?P<id>\\w+)(?:\\-\\d+x\\d+)?.html
https?://(?:www.)?youwatch.org/(?:embed-)?(?P<id>\\w+)(?:\\-\\d+x\\d+)?
https?://(?:www\\.)?(?:rtbf\\.be/auvio/.*\\?l?id=(?P<video_id>[0-9]+)#?|rtbfradioplayer\\.be/radio/liveradio/.+)
https?://(?:www\\.)?(?P<channel>1tv|ctc|chetv|ctclove|domashny).(?:com|ru)/(?P<live>live|online)?
https?://(?:www\\.)?\n        (?:\n            juicyplay\\.dk\n            |\n            play\\.nova\\.bg\n            |\n            (?:tvplay\\.)?\n                skaties\\.lv\n            |\n            (?:(?:tv3)?play\\.)?\n                tv3\\.(?:dk|ee|lt)\n            |\n            tv6play\\.no\n            |\n            viafree\\.(?:dk|no|se|fi)\n        )\n        /(?:\n            (?:\n                .+/\n            |\n                embed\\?id=\n            )\n            (?P<stream_id>\\d+)\n        )?\n    
https?://(?:www\\.)?bbc.co.uk/iplayer/\n        (\n            episode/(?P<episode_id>\\w+)|\n            live/(?P<channel_name>\\w+)\n        )\n    
https?://(?:www\\.)?goodgame.ru/channel/(?P<user>[^/]+)
https?://(?:www\\.)?metube\\.id/\n                         (?P<type>live|videos)/\\w+(?:/.*)?
https?://(?:www\\.)?mitele\\.es/directo/(?P<channel>\\w+)
https?://(?:www\\.)?nrk\\.no/skole/?\\?.*\\bmediaId=(?P<id>\\d+)
https?://(?:www\\.)?openrec.tv/(?:live|movie)/(?P<id>[^/]+)
https?://(?:www\\.)?thvli\\.vn/live/(?P<channel>[^/]+)
https?://(?:www\\.)?vidio\\.com/(?:en/)?(?P<type>live|watch)/(?P<id>\\d+)-(?P<name>[^/?#&]+)
https?://(m\\.)?live\\.qq\\.com/(?P<room_id>\\d+)
https?://(w+\\.)?(m\\.)?imgur\\.com/((?P<domain>a|album|gallery)/)?(?P<hash>[a-zA-Z0-9]+)$
https?://(www\\.)?cubetv\\.sg/(?P<channel>[^/]{2,})
https?://(www\\.)?github\\.com/(?P<owner>\\w+)/(?P<name>[^.]+)(\\.git)?
https?://(www\\.)?vodlocker.com/(?:embed\\-)?(?P<id>\\w+)(?:\\-\\d+x\\d+.html)?
https?://.+-(?P<size>\\d+p?)\\..+?$
https?://[%:/?#\\[\\]@!$&'\\(\\){}*+,;=\\pL\\pN._~-]+
https?://[^/]++/
https?://github.com/(?P<user>[^/]+)/(?P<repo>[^/]+)
https?://groups.google.com/forum/\\?_escaped_fragment_=forum/(?P<group>[-_\\w]+)%5B(?P<next_first>\\d+)-(?P<next_last>\\d+)%5D
https?://player\\.tvibo\\.com/\\w+/(?P<id>\\d+)
https?://player2\\.majorleaguegaming\\.com/api/v2/player/embed/live/\\?ch=(?P<channel_id>[^\"']+)
https?://pravtor\\.(ru|spb\\.ru)/viewtopic\\.php\\?p=(?P<torrent_id>\\d+)
https?://sketch\\.pixiv\\.net/@?(?P<user>[^/]+)
https?://tvthek\\.orf\\.at/(index\\.php/)?live/(?P<title>[^/]+)/(?P<id>[0-9]+)
https?://tvthek\\.orf\\.at/pro(gram|file)/(?P<showtitle>[^/]+)/(?P<showid>[0-9]+)/(?P<episodetitle>[^/]+)/(?P<epsiodeid>[0-9]+)(/(?P<segmenttitle>[^/]+)/(?P<segmentid>[0-9]+))?
https?://www\\.rte\\.ie/player/[a-z0-9]+/(?:show/[a-z-]+-[0-9]+/(?P<video_id>[0-9]+)|live/(?P<channel_id>[0-9]+))
https?://www\\.vrt\\.be/vrtnu/(?:kanalen/(?P<channel>[^/]+)|\\S+)
https?:\\/\\/(?:[a-zA_Z]{2,3}.)?(?:youtube\\.com\\/watch\\?)((?:[\\w\\d\\-\\_\\=]+&amp;(?:amp;)?)*v(?:&lt;[A-Z]+&gt;)?=([0-9a-zA-Z\\-\\_]+))
https?:\\/\\/([0-9a-z\\_\\.\\-:]+)
https?:\\/\\/\\S+|<a [^>]+>|<img [^>]+>|([^\\s^\\n^\\^^\\A^\\t^\\r<]{
https?:\\/\\/www.youtube.com\\/v\\/(?P<id>[\\w-]+)(?P<timestamp>\\?t=\\d*m?\\d*s?)?
https?:\\/\\/www.youtube.com\\/watch\\?v=(?P<id>[\\w-]+)(?P<timestamp>\\&t=\\d*m?\\d*s?)?
https?:\\/\\/www\\.youtube\\.com\\/playlist\\?list=(?P<id>[\\w-]+)
https?:\\/\\/youtu.be\\/(?P<id>[\\w-]+)(?P<timestamp>\\?t=\\d*m?\\d*s?)?
https?:\\/\\/youtube.com\\/v\\/(?P<id>[\\w-]+)(?P<timestamp>\\?t=\\d*m?\\d*s?)?
https?:\\/\\/youtube.com\\/watch\\?v=(?P<id>[\\w-]+)(?P<timestamp>\\&t=\\d*m?\\d*s?)?
https?\\:\\/\\/garena\\.live\\/(?:(?P<channel_id>\\d+)|(?P<alias>\\w+))
HUAWEI( |\\_)?([.0-9a-zA-Z]+)
HWaddr:? (
hwaddr=([\\h:]+)
HYPERLINK\\s+\\\\l\\s+\"?([^\"]+)\"?\\s*$
hyph_([\\w\\_]+)\\.dic
Chain\\s+(?P<NAME>\\S+)\\s+\\((?P<REFERENCES>\\d+) references\\)$
Chain\\s+(?P<NAME>\\S+)\\s+\\(policy\\s(?P<POLICY>\\S+)\\s+(?P<PACKETS>\\d+)\\s+packets,\\s+(?P<BYTES>\\d+)\\s+bytes\\)$
ChallengeMusics\\\\(.+)
changed '\\u{2603}' to '\\u{6FF}'
changed '\\u{E2}\\u{98}\\u{83}' to '\\u{DB}\\u{BF}'
channel_id\\s*=\\s*(?P<quote>['\"]?)(?P<value>\\d+)(?P=quote)
channel-group\\s\\d+\\smode\\s(?P<value>.+)
chapter=(?P<chapterId>\\d+)$
characters();\n    my $ok = 1;\n    map {\n        my $line = $_;\n        map {\n            my $n = 0;\n            my $t = $line;\n            $n++ while $t =~ s
Charge (?P<charge>\\S+)
charset(()|\\s+)=(()|\\s+)(\\w|\\_|\\.|\\-)+
charset\\s*=\\s*([A-Za-z0-9\\-\\_]+)
charset=(?P<enc>\\S*)
charset=(?P<charset>[\\w-]+)
checkout of branch: (?P<url>.*)\\n
chgrp:\\s(?P<ERROR_MSG>.*)
chmod: changing permissions of\\s(?P<FILENAME>.*):\\s(?P<ERROR>.*) |chmod: cannot access\\s(?P<FILENAME1>.*):  \\s(?P<ERROR1>.*)|chmod: WARNING: can\\'t change|access\\s(?P<FILENAME2>.*)
chown: missing operand after\\s(?P<FILENAME>.*)|chown: cannot access (?P<FILENAME1>.*):\\s*(?P<ERROR>.*)|chown: changing ownership of (?P<FILENAME2>.*):\\s*(?P<ERROR1>.*)
chrome\\/([\\.\\_\\d]+)
chunked 1.0,(?P<metadata_length>\\d+),(?P<body_length>\\d+)(\\n)?
chunked 1.0,(?P<metadata_length>\\d+),(?P<body_length>\\d+)\\n
I expect (
I have an argument (?P<arg>\\d+)
I/(?P<tag>netstats-\\d+)\\(\\s*\\d*\\): (?P<ts>\\d+) \"(?P<package>[^\"]+)\" TX: (?P<tx>\\S+) RX: (?P<rx>\\S+)
i[(]\\\\
i[)]\\\\
i[+]\\\\
i\\\\
i18n:(?P<locale>.+)-shadow-base
i18n\\((([^)']|'([^'\\\\]|\\\\.)*')*)\\)
ia-(?P<type>ta|na|pd) \\\"(?P<id>[^\\\"\\\\]*(?:\\\\.[^\\\"\\\\]*)*)\\\" {(?P<config>[\\s\\S]+?)\\n}
ia(addr|prefix) (?P<ip>[0-9a-f:]+(/[0-9]+)?) {(?P<config>[\\s\\S]+?)\\n\\s+}
iceweasel\\/([\\.\\_\\d]+)
Ico_[UFV](?P<size>\\d+)i?
id(?P<itunes_id>[0-9]+)
id:\\s+(?P<id>[0-9]+)\\n\\s+display_name:\\s+\\\"(?P<name>[A-Za-z]+)\\\"
id\\=(?:\"|')(
id\\s*=\\s*\"vod-player\"\\s+src\\s*=\\s*\"(?P<url>.*?)\"
ID=(?P<ID>.*);Name=(?P<Name>.*);Target=(?P<Target>.*)\\s(?P<start>\\d+)\\s(?P<stop>\\d+)
id=(?P<q>[\"'])dvrid(?P=q)\\svalue=(?P=q)(?P<id>[^\"']+)(?P=q)
id=\"(?P<id>[^\"]+)\"
id=\\\"html_stream\\\" value=\\\"(?P<stream_id>\\w+)\\\"
id=\"resultStats\"[^>]*>(?P<stats>[^<]*)
id=\"video:(?P<internalvideoid>[0-9]+)\"
id=\\'first_map'
id=\\'second_map'
identical.* app[/\\\\]basics[/\\\\]mock-project.txt
iframe.*?src=\"(?P<url>.*?)\"
igenic\\_(\\d+)\\-(\\d+)
ignore[\\/\\\\]dir[\\/\\\\]file\\d\\.js$
ignore[\\/\\\\]file\\d\\.js$
ignore[\\/|\\\\]a.js
image\\?c\\=([A-Za-z0-9\\-\\_]*)\\\"
img id=\"img\" .*? src=\"(?P<link>[^\"]*)\"
IMI.+.Startup-config saved on .+ by (?P<user>.+) via .*
immediate\\(\\h+\\)
import (?P<name>.*)
import.*\\MySvcService\\b.*from '.\\/my-svc.service';
importScripts\\([\\\"\\'\\s]+([a-zA-Z0-9\\/\\_\\-]*\\.js)[\\\"\\'\\s]+\\)
in (?<test_time>
in (?P<function>[a-zA-Z0-9_:]+) \\(
in (?P<function>[a-zA-Z0-9_:]+).*(?:\\.\\./)+(?P<package>(?:\\w+/)+)(?P<file>.+?):(?P<line>\\d+)
in_one\\s*in_two\\s*\\in_three
inc[\\/\\\\](.*)\\.pm$
include:\\s*(?P<filename>.+)$
include[/\\\\]wx[/\\\\](?:$no_platform)$
include\\s*\"(?P<s>.*)\";
inet (?P<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})
inet addr:(?P<IP>\\d+\\.\\d+\\.\\d+\\.\\d+)\\s\\sBcast:(?P<BRD>\\d+\\.\\d+\\.\\d+\\.\\d+)\\s\\sMask:(?P<MASK>\\d+\\.\\d+\\.\\d+\\.\\d+)
inet addr:(?P<IP>\\d+\\.\\d+\\.\\d+\\.\\d+)\\s\\sMask:(?P<MASK>\\d+\\.\\d+\\.\\d+\\.\\d+)
inet6\\saddr:\\s(?P<IP>.*)\\/(?P<MASK>\\d+)\\sScope:(?P<SCOPE>\\S*)
inline(?P<type>Video|Audio|YouTube)Data\\.push\\((?P<json_data>[^)]+)\\);
InputMask: pattern \"\\\\1\\\\A\\\\\\*\\\\\\*\" does not contain any editable characters.
InputMask: pattern ends with a raw \\\\
INSERT INTO \\Q$table
INSERT\\s(?P<write_cmd>.+);?
insert\\s+(ignore\\s+)?(into\\s+)?`?(?P<table>\\w+)`?
install_modules_(?P<name>\\w+)
int_(?P<size>\\d+)$
invoke-\\w+(?P<invoke>.*)
io\\.k8s\\.(?P<codebase>\\S+)\\.pkg\\.(?P<packageType>apis)\\.(?P<group>\\S+)\\.(?P<version>\\S+)\\.(?P<kind>\\S+)
io\\.k8s\\.(?P<codebase>\\S+)\\.pkg\\.(?P<packageType>runtime)\\.(?P<kind>\\S+)
io\\.k8s\\.(?P<codebase>\\S+)\\.pkg\\.(?P<packageType>util)\\.(?P<version>\\S+)\\.(?P<kind>\\S+)
io\\.k8s\\.(?P<codebase>\\S+)\\.pkg\\.(?P<packageType>version)\\.(?P<kind>\\S+)
io\\.k8s\\.(?P<codebase>\\S+)\\.pkg\\.api\\.(?P<version>\\S+)\\.(?P<kind>\\S+)
io\\.k8s\\.api\\.(?P<group>\\S+)\\.(?P<version>\\S+)\\.(?P<kind>\\S+)
io\\.k8s\\.api\\.(?P<packageType>core)\\.(?P<version>\\S+)\\.(?P<kind>\\S+)
Iop_(?P<srcsize>\\d+)(U|S|HI|HL)?to(?P<dstsize>\\d+)
Iop_(Add|Sub|Mul|Xor|Or|And|Div[SU]|Mod)(?P<size>\\d+)$
Iop_(Not|Ctz|Clz)(?P<size>\\d+)$
Iop_(Shl|Shr|Sar)(?P<size>\\d+)$
Iop_Cmp(EQ|NE)(?P<size>\\d+)$
Iop_Cmp(GT|GE|LT|LE)(?P<size>\\d+)[SU]$
Iop_DivMod[SU](?P<fullsize>\\d+)to(?P<halfsize>\\d+)$
Iop_Mull[SU](?P<size>\\d+)$
ip=(?P<host>.*),port=(?P<port>\\d+)
IPA\\K(\\p{Lu})
ip-permission.(*)
IPv4.+: (?P<ip>\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})
iqn\\.\\d{4}-\\d{2}\\.([[:alnum:]-.]+)(:[^,;*&$|\\s]+)$
is (.+) (
isset[\\s]*\\([\\s]*\\$nv\\_Lang
It has (?P<views>[\\d,]+) views
item\\?id=(?P<id>\\d+)
Ity_[IFDV](?P<size>\\d+)
--JavaHome=\"C\\:\\\\Program Files \\(x86\\)\\\\jdk-1\\.7\\.0\"
JisonLexerError:[^]*?Unrecognized text\\.
Job <(?P<jobid>\\d+)> is
join($chan);\n  });\n}\n\n1;\n\n=head1 NAME\n\nNet::IRC::JoinOnInvite - Role which lets your bot join all channels it's\ninvite to\n\n=head1 SYNOPSIS\n\n  use Net::IRC;\n  use Net::IRC::JoinOnInvite;\n\n  my $bot = Net::IRC.new(...);\n  $bot does Net::IRC::JoinOnInvite;\n  # or\n  class MyBot does Net::IRC::JoinOnInvite {...}\n  my $bot = MyBot.new(...);\n\n=head1 DESCRIPTION\n\nC<Net::IRC::JoinOnInvite> is a role which installs a event handler listening\nfor C<INVITE>. When it is triggered, the bot joins the channel it was invited\nto.\n\n=head1 AUTHOR\n\nIngo Blechschmidt E<lt>iblech@web.deE<gt>\n\n=head1 LICENSE\n\nThis program is free software; you can redistribute it and
JOIN(?:\\s+\\w+)?\\s+(?:\\S+\\s+)?(?:
JSQueue\\_(?<flashVersion>\\d+)
jwplayer\\(idplayer\\).playlistItem\\((?P<video_index>[0-9]+)\\)
K(?P<name>[^+]+)\\+(?P<algo>\\d+)\\+(?P<tag>\\d+)\\.private
k:(?P<k>\\d+)/m:(?P<m>\\d+)\\((?P<bitfield>[0-9a-zA-Z+/=]+)\\)
key \\Q$key_id\\E
Key Content.+: (?P<password>.+)
keyword><normal>  (<
keyword><normal> ((<
keyword><normal> (<
keyword><normal> (Dumper(<
keyword><normal>(<
kfk_(?P<process>\\S*)/config/server.properties
kill: \\((?P<Pid>\\d+)\\) - No such process
Killed (?P<Name>[^\\(]+)\\((?P<Pid>\\d+)\\) with signal
l((\\\\V\\{[aiu]\\}|\\\\D\\{\\}|\\\\O\\{\\})+)(\\\\L\\{\\}|\\\\H\\{[ai]\\}|\\\\M\\{\\})
L?'(\\\\.|\\\\[0-7]{1,3}|\\\\x[a-f0-9]{1,2}|[^\\\\'\\n])'
-l\\Q$js_libname\\E\\b
label\\s*=\\s*\"Left justified label\\\\l\"
lace-form>\n\nStarting to lean toward something like\n\n$dom->at('#content')\n  ->content( $self->process_components( $self->content))\n\nor mayb $self->content->process_components( ctx=>$self->formdata, ...)\n\nmight have to move the concept of compoents into Template::Lace::DOM \nto get this right. \n\nOk now if we move components to the DOM we can support \n->attach\n\n==== END\n ----\n\n-- <web-component attr_hash={a=>1,f=>4} attr_array=['$.foo','rr']\n\n=== Form ideas\n-- fill and smart_content for matching input[name= same as class and id.\n  ?this maybe is overloading fill to much perhaps a ->fill_form would be\n  better.\n  \n$dom->form('#login',\n  \\%attrs, sub {\n    $_->ctx($self->fif, sub {\n      \n    },\n  },\n)\n\nmaybe instead some sort of MOP on forms like WWW::Mech\n== END\n\n'ul li' => Repeat {\n  Fill('~', $_),\n  '~@id+' => $_->id,\n  '~@class' => do { $_->completed ? 'completed' : undef },\n  '.update' => $self->uri('
Lagrum: ?(?P<lagrum>.*)
lastUpdateTime=(?P<time>.*)
ld-(?P<linker_version>[\\d.]+).so$
lease (?P<ip>\\d+\\.\\d+\\.\\d+\\.\\d+) {(?P<config>[\\s\\S]+?)\\n}
LEM:(?P<lem>[^ \"]+)
Lenovo[\\ |\\-|\\/|\\_]([.0-9a-zA-Z]+)
Lexical error on line \\d+[^]*?Unrecognized text
Lexical error on line \\d+[^]*?You can only invoke reject\\(\\) in the lexer when the lexer is of the backtracking persuasion
Lexical error on line[^]*?Unrecognized text
li>\n\n\nsub listclass {\n  my ($self, $li) = @_;\n  return $self->completed ? 'completed : undef;\n}\n\n===\n\nsub template {qq[\n  <ol>\n    <view-todo task=$.task 
lib(.*)(?:\\.\\Q$Config{dlext}\\E|\\Q$Config{_a}\\E)
lib(.*)(?:\\.\\Q$Config{dlext}\\E|\\Q$Config{_a}\\E).*
lib([a-zA-Z0-9\\.\\-\\_\\+]+)\\.so(?:\\..*)?
lib([a-zA-Z0-9\\_\\-\\.]*?)\\.(a|dll\\.a)$
lib([a-zA-Z0-9\\_\\-\\.]*?)\\.(so|dylib|bundle|a|dll\\.a)$
License: (?P<license>[^\\r\\n]+)\\r?\\n
LimelightPlayer\\.doLoad(Media|Channel|ChannelList)\\([\"\\'](?P<id>[a-z0-9]{32})
line (?P<line>\\d*)
line (?P<line>\\d+), column\\ (?P<col>\\w+): \"(?P<val>.+)\"
Linear_?B\\K(\\p{Lu})
linebreak[/\\\\]src[/\\\\]linebreaker.js
Link.pm>;\nif ($dist_version < $mods_version ) {\n    warn \"Declared dist version ($dist_version) is less than\\n\",\n\t    \"that derived from module versions ($mods_version)\\n\";\n    $dist_version = $mods_version;\n}\n\nmy %args = (\n   \tmodule_name\t=> 'File::Copy::Link',\n\tdist_version\t=> sprintf(\"%.3f\", $dist_version),\n\tabstract_from\t=> 'lib
link/ether? (
Link: <(.+)>; \\Qrel=\"describedby http://reltype.google.com/openid/xrd-op\"; type=\"application/xrds+xml\"\\E
Link\\sencap:(?P<ENCAP>\\S*)\\s\\sHWaddr\\s(?P<MAC>\\S*)
linux ()([a-z\\.\\_\\d]+)
linux x86\\_64
Listening for connections on port (?P<port>\\d+)
Listening for system connection on port (?P<port>\\d+)
LivePlayer\\(.+[\"'](?P<id>D\\d+)[\"']
LOAD(?P<load>\\d+\\.\\d+)
Local AS is (?P<as>.*?),.*
local\\((.*)\\)\\s*\\=\\s*\\@\\_\\;
locales[\\//\\\\]
locales[\\/\\\\]?[a-zA-Z\\/]*[\\/\\\\]?device_type
locales[\\/\\\\]?[a-zA-Z]*[\\/\\\\]?device_type$
Location: https:\\/\\/www.sk-nic.sk\\/main.jsp;jsessionid=(?P<sessionid>\\w+)
Log: \\[(?P<program>.*)\\] - (?P<msg>.*)
log_entries/(?P<log_entry_id>[A-Z0-9]+)
logging (?P<command>get logs) (?P<channel>\\\\S+) (?P<match>.*) (?P<start_date>\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}) (?P<end_date>\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2})
logging (?P<command>get logs) (?P<channel>\\\\S+) (?P<start_date>\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}) (?P<end_date>\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2})
logging (?P<command>set endpoint) (?P<endpoint>\\\\S+)
Lor[^]?m
ls_-\\w+(?P<path>.*)$
m:([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff-]*)\\s*(\\(((?>[^)(]+|(?2))*)\\))?
M-\\\\
M-\\\\[\\\\MCc]
M-\\\\C-([0-9])
M-\\\\C-([a-zA-Z])
M30X?(?P<x>\\d*\\.?\\d*)?Y?(?P<y>\\d*\\.?\\d*)?
Mac OS X (10[\\.\\_\\d]+)
mac os x.*?([\\.\\_\\d]+)
Mac OS X[\\s\\_\\-\\/](\\d+[\\.\\-\\_]\\d+[\\.\\-\\_]?\\d*)
Mac\\s+OS\\s+X\\s+([\\d]+)(\\.|\\_)([\\d]+)\\D
mage\\.__\\(\\s*(['\"])(.*?[^\\\\])\\1.*?[),]
Magento\\\\[\\w]+\\\\(Test\\\\(Page|Fixture))\\\\
Maghead\\Migration
mailto:(
MAJOR_VERSION.+=.+(?P<value>[\\d])
map\\[(?P<k_type>[^\\]]*)\\](?P<v_type>.*)
MapGen\\:\\:set_([\\w\\d\\_]+)$
Martin D\\u{FC}rst
Martin D\\\\u{FC}rst
matrix\\((?P<a>[0-9.-]+),(?P<b>[0-9.-]+),(?P<c>[0-9.-]+),(?P<d>[0-9.-]+),(?P<e>[0-9.-]+),(?P<f>[0-9.-]+)\\)
Mean \\+- std dev: (?P<mean>[0-9.]+) ms \\+- (?P<mad>[0-9.]+) ms$
meas\\_([0-9]+)$
med\\s+(?P<start>.+)\\s+in\\s+(?P<stop>.+)
mem_heap_B=(?P<data>\\d+)
mem_heap_extra_B=(?P<data>\\d+)
mem_stacks_B=(?P<data>\\d+)
Member of (?P<port_group>\\S+)
MemoryLogRawAllocation.*?step_id: (?P<step_id>[-0123456789]+).*operation: \"(?P<kernel_name>[^\"]+)\".*?num_bytes: (?P<allocated_bytes>\\d+).*allocation_id: (?P<allocation_id>\\d+).*allocator_name: \"(?P<allocator_name>[^\"]+)\".*
MemoryLogStep.*?step_id: (?P<step_id>[-0123456789]+).*
MemoryLogTensorAllocation.*?step_id: (?P<step_id>[-0123456789]+).*kernel_name: \"(?P<kernel_name>[^\"]+)\".*?allocated_bytes: (?P<allocated_bytes>\\d+).*allocator_name: \"(?P<allocator_name>[^\"]+)\".*allocation_id: (?P<allocation_id>\\d+).*
MemoryLogTensorOutput.* step_id: (?P<step_id>[-0123456789]+) kernel_name: \"(?P<kernel_name>[^\"]+).*
MemoryLogTensorOutput.* step_id: (?P<step_id>[-0123456789]+) kernel_name: \"(?P<kernel_name>[^\"]+).*allocated_bytes: (?P<allocated_bytes>\\d+).*allocator_name: \"(?P<allocator_name>[^\"]+)\".*allocation_id: (?P<allocation_id>\\d+).*
menu_link\\_?
MergeTree\\(([\\w+, \\(\\)]+)(?= \\(((?:[^()]|\\((?2)\\))+)\\),)
message\\_type\\\"\\:null
message\\_type\\\"\\:review\\_request
meta\\s+data-id=[\"'](?P<id>[^\"']+)[\"']
metasr\\s([\\d\\.\\_]+)
method=(
Microsoft Visual Studio[\\/\\]2017
MINOR_VERSION.+=.+(?P<value>[\\d])
mkdir:\\scannot\\screate\\sdirectory\\s(?P<PATH>.*):\\s(?P<ERROR>.*)
mobile safari ([\\.\\_\\d]+)
mod-example is now started (pid=
module\\_Zend (Optimizer\\+|OPcache).+?(\\<table[^>]*\\>.+?\\<\\/table\\>).+?(\\<table[^>]*\\>.+?\\<\\/table\\>)
module_classname=(?:([a-z0-9\\\\_]+))
mocha[\\/\\\\]index.js
mojo-index: *\"(?P<idx>[a-z]+)\"
mojo-unique: *\"(?P<uniq>[a-z]+)\"
moment[/\\\\]locale$
moment[\\/\\\\]locale
moment[\\/\\\\]locale$
moment[\\\\]locale$
monaco-editor[/\\\\]esm[/\\\\]vs[/\\\\]editor[/\\\\]editor.(api|main).js
mongodb://(?P<username>[^:@]+):(?P<password>[^:@]+)@.*
month_0] }\n\nour @months_abbr = <Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec>;\nmethod month_abbr returns Str { @months_abbr[.
mount:\\s(?P<ERROR>.*)
mov .* ptr \\[(?P<dst>([(rax)|(rbx)|(rcx)|(rdx)|(rsi)|(rdi)|(r9)|(r10)|(r11)|(r12)|(r13)|(r14)|(r15)]{3}))\\], (?P<src>([(rax)|(rbx)|(rcx)|(rdx)|(rsi)|(rdi)|(r9)|(r10)|(r11)|(r12)|(r13)|(r14)|(r15)]{3}))$
mov dword ptr \\[(?P<dst>([(eax)|(ebx)|(ecx)|(edx)|(esi)|(edi)]{3}))\\], (?P<src>([(eax)|(ebx)|(ecx)|(edx)|(esi)|(edi)]{3}))$
Mozilla/[\\d\\.]* \\((?P<model>[^;]*); .*CPU iPhone OS (?P<version>[\\w_]*) like Mac OS X
Mozilla/[\\d\\.]* \\((?P<model>[^;]*); .*CPU like Mac OS X
Mozilla/[\\d\\.]* \\((?P<model>[^;]*); .*CPU OS (?P<version>[\\w_]*) like Mac OS X
Mozilla/[\\d\\.]* \\(.*(?P<model>Windows|Mac|Linux).*\\) .* Firefox/(?P<version>[\\d\\.]*)
Mozilla/[\\d\\.]* \\(.*(?P<model>Windows|Mac|Linux).*\\) .* Chrome/(?P<version>[\\d\\.]*)
Mozilla/[\\d\\.]* \\(.*(?P<model>Windows|Mac|Linux).*\\) .* Version/(?P<version>[\\d\\.]*) Safari
Mozilla/[\\d\\.]* \\(Android; Linux .*\\) Gecko/\\d* (?P<model>[^/]*)/(?P<version>[\\d\\.]*)
Mozilla/[\\d\\.]* \\(BlackBerry; .*\\) .* Version/(?P<version>[\\d\\.]*)
Mozilla/[\\d\\.]* \\(compatible; MSIE (?P<version>[\\d\\.]*); (?P<model>Windows|Mac|Linux*)
Mozilla/[\\d\\.]* \\(compatible; MSIE [\\d\\.]*; (?P<model>Windows|Mac|Linux) .*Lunascape (?P<version>[^\\)]*)\\)
Mozilla/[\\d\\.]* \\(compatible; MSIE [\\d\\.]*; .* Windows Phone (?P<version>[\\d\\.]*)\\)
Mozilla/[\\d\\.]* \\(compatible; MSIE [\\d\\.]*; Windows Phone OS (?P<version>[\\d\\.]*);
Mozilla/[\\d\\.]* \\(compatible; MSIE [\\d\\.]*;.*(?P<model>Windows|Mac|Linux).*\\) Opera (?P<version>[\\d\\.]*)
Mozilla/[\\d\\.]* \\(Linux; U; Android (?P<version>[^;]*); [^;]*; (?P<model>[^;\\)]*) Build/.*\\)
Mozilla[\\w\\.\\_\\ ]*
mozilla\\/[a-z\\.\\_\\d]+ \\((?:mobile)|(?:tablet)
mp4\\:(?P<path>.*)
m-play-button m-url=\"(?P<url>[^\"]+)\"
msgid \\\"([\\s\\S]*?[^\\\\]|)\\\"
msie ([\\.\\_\\d]+)
mswin32(\\_(\\d+))?
mswin64(\\_(\\d+))?
multipart\\/mixed;\\s*boundary=\"?([A-Za-z0-9'\\(\\)\\+\\_,\\-\\.\\/:=\\?^\\s]+)\"?
Multiple var declaration[^]*---\\^
MyFlags.bits_from_str: invalid input: 'MyFlags(f0'
mysql-\\h+
N[^\\D\\uD800\\uDC00-\\uD800\\uDCAA1-3]N
N[^\\d\\uD800\\uDC00-\\uD800\\uDCAAa-z]N
N[^\\S\\uD800\\uDC00-\\uD800\\uDCAA\\t\\r]N
N[^\\s\\uD800\\uDC00-\\uD800\\uDCAA1-9]N
N[^\\uD83D\\uDCA9-\\uD83D\\uDCAB]N
N[^\\w\\uD800\\uDC00-\\uD800\\uDCAA-]N
N[^\\W\\uD800\\uDC00-\\uD800\\uDCAAa-]N
NAME:\\s+\"(
name\\s?=\\s?['\"](?P<name>[A-Za-z0-9\\._\\-]+)['\"]
name='(?P<name>[^']+)'
name='(?P<name>[^']+)' versionCode='(?P<vcode>[^']+)' versionName='(?P<vname>[^']+)'
name='(?P<permission>[^']+)'
name=[\"']post_key[\"']\\svalue=[\"'](?P<data>[^\"']+)[\"']
name=\"?(.*?[^\\\\])(\"|;|\\z)
name=\"?\\Q$param\\E\"?;\\s+filename=\"?([^\\\"]*)\"?
name=\"regId\"\\svalue=\"(?P<regId>[^\"]*)\"
name=\"urn:afs:[a-z0-9\\-]*#([A-Z]+\\_?[0-9]*)
namespace [a-zA-Z\\\\]+;
namespace +([A-Za-z\\\\]+);
namespace Codeception\\\\Module;
namespace Package\\\\Module
namespace\\s([a-z0-9\\\\]+);
namespace\\s+([\\w\\\\]+)
namespace\\s+([\\w\\\\_-]+)
namespace\\s+[a-z0-9\\\\]+;
Nan::MakeCallback\\(([^,]+),[\\s\\\\]+([^,]+),
NET 2003[\\/\\]VC7
Network Distance:\\s(?P<hop_number>\\d+)\\shops?
new \\\\Twig_SimpleFilter\\('([^']+)',
new \\\\Twig_SimpleFunction\\('([^']+)',
new\\((?P<keyName>[[:alnum:]]+)?(,(?P<curveType>[[:alnum:]]+))?\\)
new\\sSpotify.Web.Login\\(.*?(?P<params>\\{.*\\}),\\s*?\\d+,\\s*?Spotify\\.Web\\.App.*?\\);
ng-table[\\/\\\\]src[\\/\\\\].*\\.html$
nick($:nickgen.next);\n      }\n    });\n\n    # 
no \\Q$program\\E in 
no comment\\/**foo
No\\spasswd\\sentry\\sfor\\suser\\s(?P<USERNAME>.*)
node  \"%~dp0\\\\(.*?)\"
node((\\[((
node@(?P<version>\\d+\\.\\d+\\.\\d+)\\s+\\|\\s+(?P<platform>\\w+)\\s+\\|\\s(?P<arch>ia32|x64)
node_modules(?!(\\/|\\\\).*(weex).*)
node_modules(?!(\\/|\\\\)react-sigma)
node_modules(?![/\\\\]\\.cache)
node_modules([\\\\]+|\\/)+(?!origin)
node_modules(\\/|\\\\)(?!(@feathersjs))
node_modules(\\/|\\\\)(?!(framework7|framework7-vue|template7|dom7)(\\/|\\\\)).*
node_modules(\\/|\\\\)candela(\\/|\\\\)
node_modules(\\/|\\\\)candela(\\/|\\\\).*.js$
node_modules(\\/|\\\\)paraviewweb(\\/|\\\\)
node_modules(\\/|\\\\)vtk.js(\\/|\\\\)
node_modules(\\/|\\\\)vtk\\.js(\\/|\\\\)
node_modules(\\/|\\\\)vtk\\.js(\\/|\\\\).*.glsl$
node_modules(\\/|\\\\)vtk\\.js(\\/|\\\\).*.js$
node_modules(\\/|\\\\)wslink(\\/|\\\\)
node_modules[/\\\\](@[^/\\\\]+?[/\\\\])?[^/\\\\]+?[/\\\\]package\\.json$
node_modules[/\\\\](rc|tty-table)[/\\\\]
node_modules[/\\\\]react[/\\\\]dist[/\\\\].*
node_modules[/\\\\]unexpected(?:-[^/\\\\]+)?[/\\\\]
node_modules[\\/\\\\](angular|elasticsearch-browser)[\\/\\\\]
node_modules[\\/\\\\](mocha|moment)[\\/\\\\]
node_modules[\\/\\\\].*lodash
node_modules[\\/\\\\]metro(-bundler)?$
node_modules[\\/\\\\]react-native[\\/\\\\]local-cli$
node_modules[\\/\\\\]react-native[\\/\\\\]packager$
node_modules[\\/\\\\]rxjs[\\/\\\\](.*)$
node_modules[\\/\\\\]tap[\\/\\\\]
node_modules\\\\json-schema\\\\lib\\\\validate\\.js
node_modules\\\\sinon\\\\
node_modules|[/\\\\]\\.
node_modules|\\.git|[\\/\\\\]\\.
node_modules|\\.git|^\\..+|[\\/\\\\]\\..+
node_modules|utils\\/popper\\.js|utils\\/date.\\js
node-chromelogger(\\/|\\\\)test(\\/|\\\\)test\\.js:[0-9]+:[0-9]+$
Nokia[\\w\\.\\_\\ ]*
NORDICSEMI_TARGET_(?P<target>\\d+)_(?P<key>[a-zA-Z_]+)
normal><normal>\t);<
normal><normal>\t\t\t[<
normal><normal>\t\t]);<
normal><operator>)<
normal><operator>qw(<
nota (?P<rating>\\d+)
nplurals=(?P<nplurals>\\d+)
nplurals=([0-9]*); *plural=(.*)[;\\\\]
number $foo ) = @ARG;\n   
NUMBER\\(+\\d{1}+\\)
NUMBER\\(+\\d{2}+\\)
number\\(+\\d{2}+\\)
nv\\_apply\\_hook[\\s]*\\((\\$module\\_name|\"\"|'')[\\s]*\\,[\\s]*('|\")([a-zA-Z0-9\\_]+)('|\")[\\s]*\\,
o[(]\\\\
o[)]\\\\
o\\\\
o+ \\Kthree
od\\s+(?P<start>.+)\\s+do\\s+(?P<stop>.+)
of (?P<relperiod>this|next|last) (week|month|year)
of 3: age\\_at\\_visit
ok 1 test[/\\\\]fixture[/\\\\]babel[/\\\\]assert\\.js
ok 1 test[/\\\\]fixture[/\\\\]success\\.js
ON (?P<actionType>(DELETE|UPDATE)+) (?P<action>(SET NULL|NO ACTION|CASCADE))
ON .*? (?:USING .*?\\s)?\\(([^]*)\\)
on[a-z]+\\s*=\\s*(?|\"([^\"]+)\"|'([^']+)'|([^\\s><'\"]+))
onclick=(['\"]).*?(?<!\\\\)\\1
onstraints on package \"foo\":[^]+@[^]+@[^]+@
oo(
OO\\.Player\\.create\\([\\'\"].*?[\\'\"],\\s*[\\'\"](?P<ec>.{32})[\\'\"]
OO\\.Player\\.create\\.apply\\(\\s*OO\\.Player\\s*,\\s*op\\(\\s*\\[\\s*[\\'\"][^\\'\"]*[\\'\"]\\s*,\\s*[\\'\"](?P<ec>.{32})[\\'\"]
openbsd ()([a-z\\.\\_\\d]+)
opera ([\\.\\_\\d]+)
opera mini.*?version\\/([\\.\\_\\d]+)
Opera/(?P<version>[\\d\\.]*) \\(.*(?P<model>Windows|Macintosh|Linux).*\\)
Opera/(?P<version>[\\d\\.]*) \\(BlackBerry; (?P<model>[^/]*)
Opera/[\\d\\.]* \\(Android (?P<version>[^;]*); Linux; (?P<model>[^;\\)\\/]*)
opera\\/([\\.\\_\\d]+)
operator><normal> (<
operator><normal> => [<
operator><normal> Dumper(<
operator><normal>) { <
operator><normal>) {<
operator><normal>))  {<
operator><normal>)) {<
operator><normal>);<
operator><normal>)};<
operator><normal>)<
operator><normal>} = [];<
operator><normal>>[<
opios\\/([a-z\\.\\_\\d]+)
or libafsauthent (PIC) not found ...\\n\";\n        if ($ENV{AUTOMATED_TESTING}) { exit 0; }\n        die \"Script terminated ...\\n\";\n    }\n}\nelsif ($Config{usethreads} and $alpha_sys =~ 
or modify it under the same terms as Perl itself\n(Artistic Licence or GNU GPL).\n\n=cut\n\nuse warnings;\nuse strict;\nuse Parse::Lotus123::WK4;\n\nunless (@ARGV) {\n    print STDERR \"wk42csv: no input files\\n\";\n    print STDERR \"Usage: wk42csv [-v] file.dta [otherfile.dta ...]\\n\";\n    print STDERR \" (Parse::Lotus123::WK4 version $Parse::Lotus123::WK4::VERSION)\\n\";\n    exit 1;\n}\n\nmy $verbose    = 0;\nmy $status     = 0;\nmy $longFormat = 0;\nfor my $file (@ARGV) {\n    if ( $file eq '-l' ) {\n        $longFormat = 1;\n        next;\n    }\n    if ( $file eq '-s' ) {\n        $longFormat = 0;\n        next;\n    }\n    unless ( -e $file ) {\n        warn \"$file: file not found\";\n        ++$status;\n        next;\n    }\n    open WK4, '<', $file;\n    my $data = Parse::Lotus123::WK4::parse(*WK4);\n    close WK4;\n    if (!$data) {\n        warn \"$file not understood\";\n        next;\n    }\n    ( my $name = $file ) =~ s
or modify it\nunder the terms of either:\n\na) the GNU General Public License as published by the Free Software\nFoundation; either version 1, or (at your option) any later version,\n\nor\n\nb) the \"Artistic License\" which comes with this module.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See either\nthe GNU General Public License or the Artistic License for more details.\n\nYou should have received a copy of the Artistic License with this\nmodule, in the file ARTISTIC.  If not, I'll be glad to provide one.\n\nYou should also have received a copy of the GNU General Public License\nalong with this program in the file named \"Copying\". If not, write to the\nFree Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n02111-1307, USA or visit their web page on the internet at\nhttp:
orientation=(?P<rotation>[0-3])
os ([\\.\\_\\d]+) like mac os
OS:\\s(?P<os>.*)
OS\\ ([0-9\\.\\-\\_]+)
OS\\s+([\\d\\_]+)
others><char>(<
others><char>)<
others><char>[<
others><char>+)<
our \\$VERSION = \\'([\\d\\.\\_]+b?)\\'
output\\s+:\\s+(?P<mode>.*)\\s+\\n
ov\\((?:iPh OS )?(?:iOS )?([0-9\\_]+)
P((?P<week>\\d+)W)
P((?P<year>\\d+)Y)?((?P<month>\\d+)M)?((?P<day>\\d+)D)?(T((?P<hour>\\d+)H)?((?P<minute>\\d+)M)?((?P<second>\\d+)S)?)?
P(?:(?P<week>\\d+)W)
P(?:(?P<year>\\d+)Y)?(?:(?P<month>\\d+)M)?(?:(?P<day>\\d+)D)?(?:(?P<time>T)(?:(?P<hour>\\d+)H)?(?:(?P<minute>\\d+)M)?(?:(?P<second>\\d+)S)?)?
P(?P<d>\\d+)DT(?P<h>\\d+)H(?P<m>\\d+)M(?P<s>\\d+)S
P(?P<years>\\d+Y)?(?P<months>\\d+M)?(?P<days>\\d+D)?T?(?P<hours>\\d+H)?(?P<minutes>\\d+M)?(?P<seconds>\\d+\\.?\\d*S)?
P(?P<years>\\d+Y)?(?P<months>\\d+M)?(?P<days>\\d+D)?T?(?P<hours>\\d+H)?(?P<minutes>\\d+M)?(?P<seconds>\\d+S)?
P5#/# || ( $dosish && $script ~~ m
P5/([^?]*)(?
P5/[\\015\\012]*$//; # Hack to remove all \"\\r\\n\"s\n      debug_recv $line if $debug_raw;\n      # We record the time the last traffic from the server was seen, so we can\n      # autoping the server if needed.\n      $last_traffic = time;\n\n      if($line ~~ rx
P5/^(?
P5/^([^ \\t
P5/^[@+%]?(.+)/)[0] }\n\t       .grep
P5/^[@+%]?(.+)/)[0] }\n\t\t .grep
P5/^[nN]/;\n            }\n        }\n    }\n\n    #-------------------------------------------------------------------\n    # Close the connection with the server.\n    #-------------------------------------------------------------------\n    _debug(\"  closing connection with FTP server\\n\");\n    $ftp.quit;\n\n    return @uploaded;\n}\n\n#=======================================================================\n#\n# pause_add_files()\n#\n# make an HTTP request to the add_uri form\n#\n#=======================================================================\nsub pause_add_files (*@files) {\n    my $file;\n    my $basename;\n    my $request;\n    my $response;\n    my $agent;\n    my $argref;\n\n\n    _verbose(\"registering upload with PAUSE web server\\n\");\n\n    #-------------------------------------------------------------------\n    # Create the agent we'll use to make the web requests\n    #-------------------------------------------------------------------\n    _debug(\"  creating instance of LWP
P5/^\\s*(=*[^\\s=;,]+)//) {\n                push @current, ~$0;  # 'token' or parameter 'attribute'\n                \n                # a quoted value\n                if ($value ~~ s
Package\\s+(?P<package>\\S+):
Package\\s+\\[(?P<package>\\S+)\\]\\s+\\(.*
packages[/\\\\]
packages[/\\\\]node_modules[/\\\\]\\S*?[/\\\\].*
page/(?P<page>\\d+).*$
Page\\.messaging_box_controller\\.addItems\\(\\[(?P<msg>{.+?})\\]\\)
page=(?P<num>[\\d]+)
PAGEREF\\s+(\\S+)\\s*\\\\h
pages(?:\\/|\\\\)(.*)\\.([^\\\\/]+)$
Palm[\\.\\_\\-][\\w]*
Palm[\\w\\.\\_\\-]*
PalmOS[\\w\\.\\_\\-]*
PalmSource[\\w\\.\\_\\-]*
parameters\\[(?P<parameter_name>[^]]*)\\]
parent branch: (?P<foo>.+)\\n
Parse error on line \\d+[^]*?Expecting \"ZERO\", \"E\", \"T\", got unexpected \"PLUS\"
Parse error on line \\d+[^]*?got unexpected ERR
Parse error on line[^]*?Expecting end of input, got unexpected \"=\"
Parse error on line[^]*?got unexpected \"c\"
Parse error on line[^]*?got unexpected \"d\"
Parse error on line[^]*?got unexpected y
parse($str);\n        \n        given ($self) {\n            my ($protocol, $code, $message);\n            \n            if ($status_line ~~ 
Part\\_[0-9]{2}\\_[a-zA-Z0-9]{13}\\.[a-zA-Z0-9]{13}
PASS __tests__(\\/|\\\\)file1.test.j
PASS __tests__(\\/|\\\\)file1.test.js
PASS __tests__(\\/|\\\\)file2.test.js
PASS __tests__(\\/|\\\\)file3.test.js
PASS __tests__(\\/|\\\\)index.js
password: \"(?P<password>.+)\"
path(\\W+|)=(\\W+|)[\\'\\\"](?P<entry>.*)[\\'\\\"]
path=(.+
pci\\_(?:subsys_)?id=(\\w+):(\\w+)
pclient_([\\d\\.\\_]+)
pdfkit[/\\\\]js[/\\\\]
pending|shipped|chargeback\\_reversal
perl\\_root\\:\\[lib\\.pod\\]
Perl5{^HTTP\\/\\d+\\.\\d+\\s+(\\d+)([^\\x0A]*?\\x0D?\\x0A)+?\\x0D?\\x0A}{}) {\n    my $code = $0;\n\n    # XXX
pf-var-(?<key>.+):\\s*\"\\\\(?<unicode>.*)\";
pgfpath(move|line)to\\{\\\\pgfqpoint\\{(\\-?[0-9]+)pt\\}\\{(\\-?[0-9]+)pt\\}
pgilinux-\\d+-(?P<year>\\d\\d)0?(?P<month>[1-9][0-9]?)
pgrp=([^\\s\\\\]+)
Phase\\s+(?P<phase>\\d+)[\\s\\w\\(\\)]+\\:\\s+(?P<duration>\\d+)
PHP_EVENT_REGISTER_CLASS\\(\"([a-z0-9_]+)\
Physical size: (?P<width>\\d+)x(?P<height>\\d+).*Physical density: (?P<density>\\d+)
picasaweb\\.google\\.[^\\\\]+\\/([^\\\\]+)\\/([^\\\\?]+)
pid=(?P<pid>\\d+)
PING (?P<content>.+)
pip install([\\w -.=:/\"]*) (?P<packagename>\\w+)==(?P<version>\\d.+)\\n
Piwik\\\\Plugins\\\\([a-zA-Z_0-9]+)\\\\
Pixi[\\w\\.\\_\\-]*
Platna do\\s+(?P<expirationDate>\\d+.\\d+.\\d+)
play\\s(?P<song>(\\w|\\s)*)
play\\s(?P<song>(\\w|\\s)*)\\sby\\s(?P<artist>(\\w|\\s)*)
play\\s(?P<song>(\\w|\\s)*)\\sby\\s(?P<artist>(\\w|\\s)*)\\s((off|on|from|album|within|of)\\s)+(the\\s)?(album\\s)?(?P<album>(\\w|\\s)*)
play\\s.*album\\s(called\\s|named\\s)?(?P<album>(\\w|\\s)*)
play\\s.*album\\s(called\\s|named\\s)?(?P<album>(\\w|\\s)*)\\sby\\s(?P<artist>(\\w|\\s)*)
play\\s.*artist\\s(called\\s|named\\s)?(?P<artist>(\\w|\\s)*)
player\\.ooyala\\.com/[^\"?]+[?#][^\"]*?(?:embedCode|ec)=(?P<ec>[^\"&]+)
playlist: \\[{.*?,\"identity\":\"(?P<video_id>.+?)@(?P<catalogue>Ludo|Zouzous)\"
plot (
plug\\_set\\_id\\(([^\\,]*),([^\\)]*)\\)
plugins[/\\\\]([^/\\\\]+)[/\\\\]
plugins\\/[^\\/\\\\]+
plural=(?P<plural>[^;\\n]+)
pod2htm*>;\n\n# write the MANIFEST;\nunshift @files, $root.'MANIFEST';\nwrite_file( $root.\"MANIFEST\", (join\"\\n\", map{ m
Pods[\\/\\\\]React[\\/\\\\]packager$
PokerStars Game #([0-9]+): +([^(]*) \\((
PokerStars Game #([0-9]+): +([^(]*)Hold'em (No |Pot |)Limit \\((
PokerStars Game #([0-9]+): Tournament #([0-9]+), (
PokerStars Game #([0-9]+): Tournament #([0-9]+), (\\$[0-9+$]+) ([^\\-]*) - Level ([IVXL]+) \\((
PokerStars Game #([0-9]+): Tournament #([0-9]+), (Freeroll|(
policyKey\\s*:\\s*(?P<q>['\"])(?P<key>.*?)(?P=q)
polyfills[\\/\\\\]Promise\\.js
port=(?P<port>\\d+).*host=(?P<host>\\S+)
Ports:\\s+(?P<ports>.*)/
Posledna zmena stavu\\s+(?P<lastStateChange>\\d+.\\d+.\\d+)
postfix-(?P<queue>[^/]+)/(?P<process>[^[]+)\\[\\d+\\]:
powerline_tmux_(?P<major>\\d+)\\.(?P<minor>\\d+)(?P<suffix>[a-z]+)?(?:_(?P<mod>plus|minus))?\\.conf
Pre[\\w\\.\\_\\-]*
preview|rc\\d?+
PRIMARY KEY\\s+\\((?P<columns>[`\\w,]+?)\\)
processed: (?P<processed>\\d+); failed: (?P<failed>\\d+); total: (?P<total>\\d+); seconds spent: (?P<seconds_spent>\\d.\\d+)
Processing ((?:\\w+::)*\\w+)#(\\w+)(?: to (\\w+))? \\(for (
Profile[\\w\\.\\_\\ ]*
profile\\_private\\_info
projectVersion\\s*=\\s*(?P<version>[\\d.]+)
protocol;\n        $status_line = \"$proto $status_line\" if $proto.defined;\n        $status_line ~= \" ($status_message)\" if $status_message ne $message;\n        $status_line ~= \" $message\";\n        \n        return ($status_line, ..
protocol;\n        \n        $req_line ~= $protocol if $proto.defined;\n        \n        return ($req_line, ..
psk\\=(?P<password>.+)
Psy[/\\\\]ExecutionLoop
PT(?:(?P<hours>\\d+)H)?(?:(?P<minutes>\\d+)M)?(?:(?P<seconds>\\d+)(?:.(?P<fraction>\\d+))?S)?
PT(?:(\\p{Digit}{1,2})H)?(?:(\\p{Digit}{1,4})M)?(?:(\\p{Digit}{1,5})(?:\\.(\\p{Digit}+?)0*)?S)?
PT(?P<hours>\\d+)H(?P<minutes>\\d+)M(?P<seconds>[^S]+)S
PTMProphet\\_[A-Za-z]+([0-9\\.\\-]+)
public([\\/\\\\])index.php$
python(?P<major_version>\\d).*
q=(?P<quality>[^;]+)
queue '(?P<name>.*?)' \\{(?P<stats>.*?)\\}
r#\"^\\-\\-\\d+\\-\\- memalign\\(al \\d+, size (?P<size>\\d+)\\) = 0x(?P<ptr>\\w+)$
r(?P<length>[whqes])?
R(?P<rcount>[0-9]*)X?(?P<xdelta>[+\\-]?\\d*\\.?\\d*)?Y?(?P<ydelta>[+\\-]?\\d*\\.?\\d*)?
r?u?\\'(.*?)(?<!\\\\)\\'|\"(.*?)(?<!\\\\)\"
rack\\_hoptoad
radical\\\\_value\\\\\\[radical\\\\_nested\\\\\\]
Ran (?P<count>[\\d]+)
Ran (?P<count>[\\d]+) tests in 
Ran (?P<count>[\\d]+) tests with (?P<fail>[\\d]+) failures and (?P<error>[\\d]+) errors
Ran (?P<unittests>[0-9]+) tests
range[:\\s]+(?P<range>[^\\s]+)
Raw packets sent: (?P<SENT_NO>\\d+)\\s+\\((?P<SENT_SIZE>\\S+)\\)\\s+\\|\\s+Rcvd:\\s+(?P<RCVD_NO>\\d+)\\s+\\((?P<RCVD_SIZE>\\S+)\\)
rb_define_(class|module).*?\"(
readline() }\n}\n\n# Support for =\"some_file\"\n# I'm not sure where this is specced, but when I migrated &prefix:<=> from\n# meaning the same as &readline to $obj.shift(), =\"some_file\" worked, so I\n# added the .shift() declaration here.  --iblech\nclass Str {\n    method shift ($self: ) is primitive { =open($self) }\n\n    method trans(Str $self:*%intable) is primitive is safe {\n\n      my sub expand(Str $string) {\n        if ($string ~~ m:P5
readmeio (?P<account>\\\\S+) (?P<command>list changes) (?P<slug>\\\\S+)
readmeio (?P<account>\\\\S+) (?P<command>list pages)
readmeio (?P<command>list accounts)
readmeio (?P<command>list changes) (?P<slug>\\\\S+)
readmeio (?P<command>list pages)
readmeio (?P<command>set account) (?P<account>\\\\S+) (?P<login>\\\\S+) (?P<password>\\\\S+)
readmeio (?P<command>set default account) (?P<account>\\\\S+)
reddit\\.com/(?:u(?:ser)?/(?P<user>.+?)(?:\\Z|#|/)|r/(?P<sub>.+?)(?:/?\\Z|/comments/(?P<id>.+?)(?:/?\\Z|/(?P<title>.+?)(?:/?\\Z|/(?P<cid>.+?)(?:/|#|\\Z)))))
REF\\((\\S+)\\s+(.+)(?:\\s*\\1\\s*(.+))(?<!\\\\)\\)
refunded|chargeback|partial\\_refund
register\\_service
register\\_service\\s*\\(\\s*.*proto\\:\\s*\\\"([^\\\"]*)\\\"
Registr\u00e1tor\\s+(?P<registrar>\\w+-\\d+)
rel\\h*=\\h*\"pingback\"
RELATIONAL\\-OPERATOR\\-REPLACEMENT\\-\\p{Digit}+
relationship:\\((?P<value>[^\\)]*)\\)
remove.* app[/\\\\]basics[/\\\\]does-not-exist.txt
remove.* app[/\\\\]basics[/\\\\]mock-project.txt
RenderPagesVideo\\((?P<q>['\"])(?P<id>\\d+)(?P=q)
REP(?P<repeat_index>\\d+):\n    (?P<internal_linkage>.+)\n    =(?P<lower_multitude>-?\\d+)-(?P<higher_multitude>-?\\d+)
repeatItem\\_\\w*\\$
repeats\\s+(?:\\bon\\s+)?(?:the\\s+)?((?:(?:1|2|3|4|5)(?:st|nd|rd|th)?\\s+
replace\\('\\http:\\/\\/localhost\\/redirected\\/'\\).*?
replace\\s+(into\\s+)?`?(?P<table>\\w+)`?
replSet: \"(?P<replSet>\\S+)\"
requested permissions:\\s*(?P<permissions>(android.permission.+\\s*)+)
require ([\\\"\\'])[a-zA-Z0-9\\.\\-\\_]+\\1\\;[\\r\\n]
require (['\"])(
require\\((\"(?:[^\"\\\\]|\\\\.)+\"|'(?:[^'\\\\]|\\\\.)+')\\)
require\\(\"[\\.\\/\\\\]+(__ui-jar-temp-module-[a-z0-9]+)\"\\)
require\\('\\.\\/\\_styles\\.scss'\\)
require\\s*\\(\\s*([\"'])(.*?[^\\\\])\\1\\s*\\)
REQUIRED\\-CONSTANT\\-REPLACEMENT\\-\\p{Digit}+
reverse)\nformtitle(Read Everything Backwards)\nproc(reverseFunction)\ndesc(reverseDesc)\nquit(exitFunction)\n\n##\n\n=head1 NAME\n\nreverse - an application built using Navegante\n\n=head1 SYNOPSIS\n\nBuild the application:\n\n  $ navegante examples
revision=\"(?P<revision>\\d+)\"
rgb\\((?P<args>[0-9.,-]+)\\)
rgb\\(\\s*((
rgba\\(\\s*((
rhino\\d\\_\\d[^\\.]*\\.jar
rim.*?os\\s*([\\.\\_\\d]+)
rim.*?version\\/([\\.\\_\\d]+)
RJ\\.video(?P<format_id>\\d+[pPkK])\\s*=\\s*([\"\\'])(?P<url>(?:(?!\\2).)+)\\2
ROOT:(?P<root>[^ \"]+)
route\\(\\s?(['\\\"][\\-\\_\\/\\:\\<\\>\\?\\$\\[\\]\\w]+['\\\"])\\s?\\)
route\\s?\\(\\s?(['\\\"][\\-\\_\\/\\:\\<\\>\\?\\$\\[\\]\\w]+['\\\"])\\s?\\)
route\\s?\\(\\s?(['\\\"][\\-\\_\\/\\:\\<\\>\\?\\$\\[\\]\\w]+['\\\"])\\s?\\,?\\s?['\\\"]?(\\w+?)['\\\"]?\\s?\\)
rtt min\\/avg\\/max\\/mdev = (?P<MIN>\\S+)\\/(?P<AVG>\\S+)\\/(?P<MAX>\\S+)\\/(?P<MDEV>\\S+)\\s+(?P<UNIT>\\S+)
rule\\h+id\\h+\\d+
rule\\s+([\\w\\_\\-]+)(\\s*:\\s*(\\w[\\w\\s\\-\\_]+\\w))?\\s*\\{\\s*(meta:\\s*(.*?))?(strings:\\s*(.*?))?\\s*condition:\\s*(.*?)\\s*\\}
run files)\n       - replaced sbl_xbl.spamhaus.org with zen.spamhaus.org\n\n     Apache.pm\n       - added DirectoryIndex index.php declaration to PHP webmail apps in\n         apache
running action (?P<action>.*)
s?[0-9]+\\_([0-9]+)$
s\\/([^\\\\]+)\\/(.*)
s=\\K130
s3 (?P<command>set account) (?P<account>\\\\S+) (?P<region>\\\\S+) (?P<bucket>\\\\S+)
s3([-.](?P<region>\\w{2}-\\w+-\\d{1})|[-.](?P<bucket>[\\w.\\-\\_]+)|)?.amazonaws.com(.cn)?(?P<path>.*)?
s3(\\+\\p{Alnum}+)?(://.*)?
s3://(?P<bucket>[^/]+)/(?P<directory>.+[^/])/*$
s3://(?P<bucket>[^/]+)/(?P<path>.*)
s3://(?P<bucket>[^/]+)/*$
Sampling rate\\s*:\\s*([\\w\\_\\-\\\\/\\@\\. ]+)\n
Samsung[\\w\\.\\_\\-]*
SAMSUNG[\\w\\-\\.\\_\\ ]*
sap\\.ui\\.require\\s*\\(\\s*\\[([^]*)\\]\\s*,\\s*function\\(\\)
sap-ui-theme=[a-z0-9\\-\\_]+
SBN\\.VideoLinkset\\.ooyala\\([\\'\"](?P<ec>.{32})[\\'\"]\\)
scale[:\\s]+(?P<scale>[\\d\\.]+)
scored (?P<score>[0-9]+) out of a possible (?P<max_score>[0-9]+),
script\\_bugtraq\\_id\\(([^\\)]*)\\)
script\\_category\\s*\\((ACT\\_(INIT|SCANNER|SETTINGS|GATHER\\_INFO|ATTACK|MIXED\\_ATTACK|DESTRUCTIVE\\_ATTACK|DENIAL|KILL\\_HOST))\\)
script\\_copyright\\s*\\([^\\\"]*\\\"([^\\\"]*)\\\"
script\\_cve\\_id\\(\\\"([^\\)]*)\\\"\\)
script\\_description\\s*\\(.*english\\:\\s*string\\s*\\(\\s*\\\"\\s*([^\\\"\\)]*)\\\"\\s*\\),?
script\\_description\\s*\\(.*english\\:\\s*string\\s*\\(\\s*\\'\\s*([^\\'\\)]*)\\'\\s*\\),?
script\\_description\\s*\\(\\s*english\\:\\s*[^\\\"]*\\\"\\s*([^\\\"\\)]*)\\\"\\s*,?
script\\_description\\s*\\(\\s*english\\:\\s*[^\\']*\\'\\s*([^\\'\\)]*)\\'\\s*,?
script\\_family\\s*\\(.*english\\:\\s*\\\"([^\\\"]*)\\\"\\s*,?
script\\_id\\(([^\\)]*)\\);
script\\_name\\s*\\(.*english\\:\\s*\\\"([^\\\"]*)\\\"\\s*,?
script\\_summary\\s*\\(.*english\\:\\s*\\\"([^\\\"]*)\\\"\\s*,?
script\\_version\\s*\\(\\s*(\\\"|\\')([^\\1\\)]*)\\1\\s*\\)\\s*\\;
script>\n[#\n<script language=\"javascript\" type=\"text
sdata\\.src.*?=.*?(?P<q>[\\\"'])(?P<url>http.*?)(?P=q)
search-ui[\\/\\\\](src.+\\.ts)
search-ui[\\/\\\\]bin[\\/\\\\]tests[\\/\\\\]unitTests.js
Seat ([0-9]+): (.+) \\((
Seat [0-9]+: (.*) (\\((small blind)|(big blind)|(button)\\) )?showed \\[([^\\]]+)\\] and ((won) \\(
Secret: ([a-z2-7]{
section>\n\npackage MyApp::Lace::Todos;\n\nsub dispatch { \n  my ($self, $name, @args) = @_;\n  return $self->display(@args) if $name eq 'count';\n}\n\nsub display {\n  my ($self, $dom) = @_;\n  $dom->data('person', \n    name => $self->person->name,\n    todos => sub { $self->list_todos($_) },\n  );\n}\n\nsub list_todos {\n  my ($self, $dom) = @_;\n  $dom->repeat(sub {\n    my ($dom, $todo) = @_;\n    $dom->data('todo', name => $todo->name)\n  }, $self->person->todos);\n}\n\n\n===\n\n# We need some way to set the value to a component\nsub process_dom {\n  my ($self, $dom) = @_;\n  $dom->form('#login', sub {\n    $_->input = $self\n      ->ctx\n      ->view('Input', value=>$self->fif->{user}, err=>$self->err->{user})\n  });\n\n} \n\n  $_->input = Helpers->input( value=>$self->fif->{user}, err=>$self->err->{user})\n\n+++++\n=======\n\n\n<section id=\"todos\">\n    <p>\n      Hi there <span data-person='name'>PERSON<
sed:\\s(?P<ERROR>.*)
SELECT (`?(?:
SELECT \"bars\"\\.\\*, array_to_string\\(array_agg\\(\"__spatial_ids_join__\".\"id\"\\), ','\\) AS \"__spatial_ids__\" FROM \"bars\" INNER JOIN \"foos\" AS \"__spatial_ids_join__\" ON \\(ST_intersects\\(ST_SetSRID\\(\"__spatial_ids_join__\".\"the_other_geom\
SELECT \"zortables\"\\.\\*, array_to_string\\(array_agg\\(\"__spatial_ids_join__\".\"id\"\\), ','\\) AS \"__spatial_ids__\" FROM \"zortables\" INNER JOIN \"bars\" AS \"__spatial_ids_join__\" ON \\(ST_intersects\\(ST_SetSRID\\(\"__spatial_ids_join__\".\"the_other_geom\
SELECT +(?:[`\"]?
select((?:(?:(?!\\sfrom\\s)[^()])+|\\(((?:[^()]+|\\((?2)\\))*)\\))*\\s)(from(?:(?:(?!\\slimit\\s|\\sorder by\\s)[^()])+|\\(((?:[^()]+|\\((?4)\\))*)\\))*\\s)(order by(?:(?:(?!\\slimit\\s)[^()])+|\\(((?:[^()]+|\\((?6)\\))*)\\))*\\s)?limit\\s+(\\d+)(?:\\s+offset\\s+(\\d+))?
select((?:(?:(?!\\sfrom\\s)[^()])+|\\(((?:[^()]+|\\((?2)\\))*)\\))*\\s)from((?:(?:(?!\\sunion\\s|\\swhere\\s|\\sgroup by\\s|\\slimit\\s|\\sorder by\\s)[^()])+|\\(((?:[^()]+|\\((?4)\\))*)\\))*)(?=\\swhere\\s|\\sgroup by\\s|\\slimit\\s|\\sorder by\\s|\\sunion\\s|\\)|$)
select\\s.*?\\sfrom\\s+`?(?P<table>\\w+)`?
serve-icon/(\\d+)/(.*+)$
service \"\\.service_locator\\.[^\"]++\"
service\\s(?!class=\"[^\"]+\"\\s+id=\"[^\"]+\")(.*id=\"(?<id>Shopware\\\\[^\"]++)\").*
service-worker[/\\\\]cli
SET\\_UNIFORMS
set=\\+\\[(?P<set>[\\w]+)\\]
settings[/\\\\]?$
--settings=(?P<settings_path>.+)
setuptools-(?P<version>.*).tar.gz
setVideo(?:Url(?P<id>Low|High)|HLS)\\s*\\(\\s*(?P<q>[\"\\'])(?P<url>(?:https?:)?//.+?)(?P=q)
SEVERE WEATHER OUTLOOK POINTS DAY\\s+(?P<day>[0-9])
shared repository: (?P<repository>.*)\\n
shared[\\/\\\\]?[a-zA-Z]*[\\/\\\\]?branding$
shared[\\/\\\\][a-zA-Z]+[\\/\\\\]branding$
sharedUser=SharedUserSetting{\\S+\\s+(?P<label>\\S+)/(?P<uid>\\d+)}
show (
SIGMET (?P<name>[A-Z]*) (?P<num>[0-9]*) VALID (?P<sts>[0-9]{6})/(?P<ets>[0-9]{6})
SIP/2.0 (?P<status_code>[0-9]{3}) (?P<status_message>.+)
SIP/2.0/(?P<protocol>[a-zA-Z]+)[ \t]*(?P<sentby>[^;]+)(?:;(?P<params>.*))
sitemap-(?P<type>\\w*)(-(?P<params>.*))?(\\.(\\w*))?$
size=[^ ]+ time=(?P<hours>[0-9]{2}):(?P<minutes>[0-9]{2}):(?P<seconds>[0-9\\.]{5}) bitrate=
Skipped (?P<numFrames>\\d+) frames!
skipped = \"(?P<skipped>.+)\"
Skipping host (?P<HOST>\\S+) due to host timeout
skserver\\-raw\\_\\d\\d\\d\\d\\-\\d\\d\\-\\d\\dT\\d\\d\\.log
slack (?P<command>delete) (?P<email>\\\\S+)
slack (?P<command>invite) (?P<email>\\\\S+)
slack (?P<command>list nomfa)
slack (?P<command>revoke) (?P<email>\\\\S+)
slack:\\/\\/(.*)@(hooks.slack.com\\/services)\\/([T].*?)\\/([B].*?)\\/(.*)\\/([
smartctl_-a_\\.dev\\.(?P<device>\\w+)$
snapshot-(?P<id>\\d+)
snapshot=(?P<data>\\d+)
SonyEricsson[\\w\\.\\_]*
SonyEricsson[\\w\\-\\.\\_\\ ]*
source.*?(?P<q>[\"'])(?P<stream_url>https?://.*m3u8\\?.*clientKey=.*?)(?P=q)
source.*?\\b(?P<source>BD(-?(25|50|RIP))?|Blu-?Ray ?(3D)?|BRRIP|CAM(RIP)?|DBrip|DTV|DVD\\-?(5|9|(R(IP)?|scr(eener)?))?|[HPS]D?(RIP|TV(RIP)?)?|NTSC|PAL|R5|Ripped |S?VCD|scr(eener)?|SAT(RIP)?|TS|VHS(RIP)?|VOD|WEB-DL)\\b
Source: (?P<name>[^\\s]*)( \\((?P<version>.*)\\))?
sourcedb/(?P<sourcedb>[^\\/]*)/sourceid/(?P<sourceid>[0-9]*)
sources.*?src:\\s\"(?P<url>.*?)\"
spamipfilter\\_([0-9]+)\\-([0-9]+)\\-(2[0-9][0-9][0-9])
span>[$else$][+ $self->{text} +][$endif$]<
Specified configfile '\\Q$configfile\\E' does not exist
src \\s = \\s [\\\"'] \\Q$$url[4]\\E ([\\\"'>])\n                        
src:[\"'](?P<url>[^\"']+\\.(?:m3u8|mp4))[\"']
src[\\/\\\\].+\\.ts$
src[\\/\\\\]file4\\.js$
src[\\/\\\\]lib$
src[\\/\\\\]lib[\\/\\\\]file5\\.js$
src\\\\main\\\\resources\\\\
src=([\"']?)(?P<url>.*?)\\1
src=\"(/assets/app\\.head\\.[a-f0-9]{
src=\"(?P<url>.+?)\"
src=\"(?P<url>[^\"]+)\"
src=\\\\?[\"']+([^\"'\\\\]+)
src='localhost/(?P<encrypted_data>\\S+)/' width=1
SSH_AGENT_PID=(?P<SSH_AGENT_PID>[^;]*);
SSH_AUTH_SOCK=(?P<SSH_AUTH_SOCK>[^;]*);
ssh_host_(?P<type>[a-z0-9]*)_key\\Z
stacktraces(\\/|\\\\)index
stage\\((?P<title>.*)\\)
start task(?P<task_name>.*)
Started (
Started ([A-Z]+) \"([^\"]+)\" for (
Started request handling\\:\\ (
Starting phase\\s+(?P<phase>\\d+)
--StartParams=\".*?\\\\daemon.rb;--dir;C:\\\\MyApp;-e;production;-p;4242\"
startup-config was changed by (?P<user>.+) from telnet client .*
State root mismatch \\(got: 0x(?P<stateroot>[0-9a-f]{64}), expected: 0x00000000000000000000000000000000000000000000000000000000deadc0de\\)
state_context.(?P<element>\\w+)
Statements {3}: 75% \\( 3[\\/|\\\\]4 \\)
Statements {3}: 80% \\( 4[\\/|\\\\]5 \\)
status (?P<status>0x[0-9a-f]+) \\((?P<flags>.*)\\)
Status: (?P<status>.+?) - Rating: (?P<rating>.+?) - Chapters: [0-9,]+ - Word count: (?P<numWords>[0-9,]+?) - Genre: (?P<genre>.+?)$
Stav dom\u00e9ny\\s+(?P<state>\\w+)
--StdError=\"C\\:\\\\MyApp\\\\log\\\\STD.out\"
--StdOutput=\"C\\:\\\\MyApp\\\\log\\\\STD.out\"
steal\\.(production|production\\.[a-zA-Z0-9\\-\\.\\_]*)*js
'steam://friends/joinchat/(?P<steamid>\\d+)'
store_transactions/\">(?P<balance>.*?)</a>
stream_url_(?P<id>[^\\s=]+)\\s*=\\s*([\"\\'])(?P<url>(?:(?!\\2).)+)\\2
streamKey\\\"\\:\\\"([a-z0-9\\_]*?)\\\"\\,
string with trailing \\\\
studio://(?P<experiment>.+)/(?P<artifact>.+)
su:\\s(invalid|unrecognized)\\soption\\s(?P<OPTION>.*)
su:\\sAuthentication\\sfailure(?P<AUTH>.*)|su:\\sPermission denied\\s(?P<PERM>.*)|su:\\sincorrect password\\s(?P<PASS>.*)
Sub\\u{30af 30e9 30b9}
Subject: \\Q$header_subject\\E
SUMMARY.*(?:\\.\\./)+(?P<package>(?:\\w+/)+)(?P<file>.+?):(?P<line>\\d+) ?(?P<function>[a-zA-Z0-9_:]+)?
SW-TOKEN apikey=\"(?P<apikey>\\w+)\"
SYN Stealth Scan Timing: About (?P<DONE>[\\d\\.]+)% done; ETC: (?P<ETC>[\\d:]+) \\((?P<REMAINING>[\\d:]+) remaining\\)
syntax error, (.+) in .+ on line \\d+)$
sys.path.insert\\(0, os.path.join\\(root, '(?P<name>.+)'\\)\\)
System has non-zero total charge: *(?P<qtot>[-+]?\\d*\\.\\d+([eE][-+]\\d+)?)
System.out: iteration: (?P<iteration>[0-9]+)
System.out: Mean: (?P<mean>[0-9\\.]+)\\s+JankP: (?P<junk_p>[0-9\\.]+)\\s+StdDev: (?P<std_dev>[0-9\\.]+)\\s+Count Bad: (?P<count_bad>[0-9]+)\\s+Count Jank: (?P<count_junk>[0-9]+)
systemjs_import\\s+(['\\\"])(?P<app>.*)\\1
T(?P<toolid>[0-9]{1,2}) Holesize (?P<toolid2>[0-9]{1,2})\\. = (?P<size>[0-9/.]+) Tolerance = \\+(?P<xtol>[0-9/.]+)/-(?P<ytol>[0-9/.]+) (?P<plated>(PLATED)|(NON_PLATED)|(OPTIONAL)) MILS Quantity = [0-9]+
T(?P<toolid>[0-9]{1,2}) Holesize (?P<toolid2>[0-9]{1,2})\\. = (?P<size>[0-9/.]+) Tolerance = \\+(?P<xtol>[0-9/.]+)/-(?P<ytol>[0-9/.]+) (?P<plated>(PLATED)|(NON_PLATED)|(OPTIONAL)) MM Quantity = [0-9]+
t(?P<type>[0-9]+)(?:_(?P<id>[a-z0-9]+))?
T\\[(?P<index1>\\-?\\d+)(\\,(?P<index2>\\-?\\d+))?\\](\\[(?P<column>.*)\\])?(\\.(?P<function>.*))?
t\\_?cof
T\\u{23F0 23F3}
table>[$  \n endsub $]\n\n[# ---------------------------------------------------------------------------\n#\n#   show_sub_begin - output begin of sub form\n#]\n\n[$sub show_sub_begin ($self, $req)\n\nmy $span = $self->{width_percent}  ;\n$]\n<!-- sub begin --><
table>\n[$endif$]\n[$endsub$]\n  \n[# ---------------------------------------------------------------------------\n#\n#   show_control - output the control\n#]\n\n[$ sub show_control ($self, $req) \nmy $class = $self -> {class} ||= '' ;\nmy ($attrs, $ctrlid, $name) = $self -> get_std_control_attr($req)  ;\n$]\n\n<textarea type=\"text\" name=\"[+ $self -> {force_name} || $self -> {name} +]\"  [+ do { local $escmode = 0 ; $attrs} +]\n[# [$if $self -> {cols} $]cols=\"[+ $self->{cols} +]\"[$endif$] #]\n[$if $self -> {rows} $]rows=\"[+ $self->{rows} +]\"[$endif$]\n><
tacacs-server host\\s(
tail:\\s(?P<PATH>.*):\\s(?P<ERROR>.*)
td>#]\n    <td class=\"ef-control-box ef-control-box-width-100\">[+ $self->{text} +]<
td><td style=\"width: [+ int((100 - ($tab * 3)) 
template(\\/|\\\\)(dist|node_modules)(\\/|\\\\)
Test \"(?P<test>[a-zA-Z0-9(){}\\[\\]:;&_<>\\-, =]+)\" is skipped
test(\\/|\\\\)egg\\.test\\.js
test(\\_(Hit|Hsp))?\\_
test[/\\\\]core[/\\\\]promises[/\\\\]testPromiseUnhandledRejection.js
test[/\\\\]fixture[/\\\\]__test__[/\\\\]b.js
test[/\\\\]fixture[/\\\\]error\\.js
test[/\\\\]fixture[/\\\\]success\\.js
test[/\\\\]fixture[/\\\\]test[/\\\\]a\\.js
test[/\\\\]fixture[/\\\\]test[/\\\\]aaa[/\\\\]bbb[/\\\\]c.test\\.js
test[/\\\\]fixture[/\\\\]test[/\\\\]aaa[/\\\\]bbb[/\\\\]c\\.js
test[/\\\\]fixture[/\\\\]test[/\\\\]aaa[/\\\\]bbb[/\\\\]c\\.test.js
test[/\\\\]fixture[/\\\\]test[/\\\\]aaa[/\\\\]bbb[/\\\\]ccc[/\\\\]b\\.js
test[/\\\\]fixtures[/\\\\]invalid\\.json: 
test[/\\\\]only[/\\\\]only\\.js
test[/\\\\\\\\]tools[/\\\\\\\\]test
test[\\/\\\\]fixtures[\\/\\\\]invalid.json: Unexpected string
test[\\/\\\\]intern[\\/\\\\]
test[\\/\\\\]stack\\.js:\\w+:\\w+\\)\\n
test[\\\\/]test[/\\\\]not-ok\\.js \\.+ 0/[12]( [0-9.]+m?s)?$
test[\\\\/]test[/\\\\]ok\\.js \\.+ 10/10( [0-9.]+m?s)?$
test[^]*\\.(png|jpg)$
Test\\((?P<func>[\\w_\\.]+)\\)
Test\\(\\<(?P<class>[\\w_\\.]+) testMethod=(?P<method>[\\w_]+)\\>\\)
test_(?P<name>.*).py
tests[/\\\\]
tests[\\/\\\\]bin[\\/\\\\]stackable.js
TEXTURE\\_START([\\S\\s]*)TEXTURE\\_END
the (
the (?P<Event>.*)
the (?P<Event>\\w+\\s\\w+) theory
the card is a (
The configuration parameter 'command_file = /tmp/command' is deprecated and will be ignored. Please configure an external commands capable module as expected (eg external-commands, NSCA, or WS module may suit.
The function (?:\"|')(?P<state_func>.*)(?:\"|') is running as PID (?P<pid>[\\d]+) and was started at (?P<date>.*) with jid (?P<jid>[\\d]+)
The lexer rule\\'s action code section does not compile[^]*?\\n  Erroneous area:\\n2: \"a\" %\\{ return true; \\n\\^\\.\\.\\.\\.\\.\\.\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\n3: \"b\" %\\{ return 1; %\\}\\n\\^\\.\\.\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^
The value \\'9007199254740992\\' cannot be represented by a javascript number\\.
themes(\\/|\\\\)?[a-z0-9_.-]+(\\/|\\\\)?index\\.js$
themes[\\/\\\\]+(.*?)[\\/\\\\].*
there should(| not) be a process called \"([^\"]*)\" running(
This is \\\\n\\.\\\\O \\(\\\\s \\\\m \\\\r\\) \\\\t
This machine benchmarks at (?P<score>\\d+)
This story is No\\. (?P<num>\\d+) in the series \"(?P<series>.+)\"\\.
this\\.src=\\'(?P<pic>.*?)\\'
This\\s*documentation\\s*.*?version\\s*(.*)\\R$
Thread\\s+(?P<thread>\\d+)\\s+(?P<name>\\w+)\\svalue\\s+\\=\\s+(?P<value>\\d+)
time (?P<timecode>[0-9a-f]{8}\\.[0-9a-f]{8}) +(?P<timestamp>\\w{3}, \\w{3} \\d+ .*),
TIME\\.\\.\\.MOT\\.\\.\\.LOC\\s+(?P<ztime>[0-9]{4})Z\\s+(?P<dir>[0-9]{1,3})DEG\\s+(?P<sknt>[0-9]{1,3})KT\\s+(?P<loc>[0-9 ]+)
time_unit:\\s(?P<data>ms|B|i)$
time=(?P<data>\\d+)
time=(?P<hours>\\d+):(?P<minutes>\\d+):(?P<seconds>\\d+)
timeleft: (?P<hours>[\\d]*):(?P<minutes>[\\d]*):(?P<seconds>[\\d]*)
Timestamp(?P<spacing>\\s+)Notes
timestamp\\|(?P<timestamp>(\\d{10}\\.\\d{1,2}))\\|?(?P<meta>.*)$
tinyletter (?P<command>list accounts)
tinyletter (?P<command>list subscribers)
tinyletter (?P<command>list subscribers) (?P<account>\\\\S+)
tinyletter (?P<command>set account) (?P<account>\\\\S+) (?P<login>\\\\S+) (?P<password>\\\\S+)
tinyletter (?P<command>set account) (?P<account>\\\\S+) (?P<login>\\\\S+) (?P<password>\\\\S+) (?P<domains>.*)
tinyletter (?P<command>set allowed domains) (?P<account>\\\\S+) (?P<domains>.*)
tinyletter (?P<command>set default account) (?P<account>\\\\S+)
title>(?P<title>[^<]+)</ti
TKK=(?P<vq>[\\s\\S]+);VERSION_LABEL
TNR:[ \n](?P<tnr>\\d+\\.\\d+)
To: \\Q$header_to\\E
Today, (?P<hour>[0-9]+):(?P<minute>[0-9]+) (?P<am>[APM]+)
token: '(?P<token>\\S+)',
token=(?P<q>[\"'])(?P<token>[^'\"]*?)(?P=q)
tool\\.go:\\d+: undefined: [\\pL_0-9]+\\.([\\pL_0-9]+)
ToolsVersions\\\\([^\\\\]+)$
top:\\s*(?P<ERROR_MSG>.*)
Total dhrystone run time: (?P<time>[0-9.]+)
Total pot (
Total Size: (?P<number>[0-9\\.]+)\\s(?P<unit>[a-zA-Z]+)
total\\s+size\\s+is\\s+(?P<Number>((\\d+)\\,?)+)
Total|?\\d+ Microsoft Corporation. All rights reserved.*
Traceback.*\\n(?:  (.*)\\n){1,}(?P<type>[\\w\\.]+)\\: (?P<message>.*)
tracks/(?P<track_id>[^/]+)
translate[^(]+\\(([+-\\d.]+)
translate\\((?P<x>[0-9.-]+),(?P<y>[0-9.-]+)\\)
trident\\/.*?rv:([\\.\\_\\d]+)
TS(\\s+(?P<loc>( OHD | VC | DSNT\\s+ | \\s+AND\\s+ |\n                                           [NSEW][EW]? (-[NSEW][EW]?)* )+))?\n                                          ( \\s+MOV\\s+(?P<dir>[NSEW][EW]?) )?\\s+
ts3server_(?P<date>\\d{4}-\\d\\d-\\d\\d)__(?P<time>\\d\\d_\\d\\d_\\d\\d.\\d+)_(?P<sid>\\d).log
tt(?P<imdbid>\\d{6,7})$
ttp?:\\\\/\\\\/.+\\.(jpg|gif|png
tussen\\s+(?P<start>.+)\\s+en\\s+(?P<stop>.+)
typedef (?P<signature>void \\(\\*\\s?\\w+\\)\\([\\w\\d\\s\\*,]+\\));
typedef struct (\\w+)\\s({(?P<variables>[^}]+)}\\s)?(?P<name>\\w+);
typeof\\s++\\w++\\s*+[!=]{2,3}+\\s*+['\"]?+undefined
u(?P<userId>\\\\d+)(?P<aidType>[ias])(?P<appId>\\\\d+)
u(['\\\"])(.*?)(?<!\\\\)\\1
u?\\'(?P<name>.*)\\' is a required property
u[(]\\\\
u[)]\\\\
u[+]\\\\
u\\\\
u\\{\\}\\\\iu
u\\+(?:
ubuntu\\d+~(?P<version>\\d+\\.\\d+)
UI_COMMIT: User \\\\'(?P<user>.+?)\\\\' .*
uid=(?P<uid>\\S+)
uid=(?P<UID>\\S+)\\s+gid=(?P<GID>\\S+)\\s+groups=(?P<GROUPS>\\S+)
unable to (?P<Type>decode|recognize) \"(?P<Manifest>.*)\": (?P<Message>.*)
uname:\\s(invalid|unknown)\\soption\\s(?P<OPTION>.*)
uname:\\sextra\\soperand\\s(?P<COMMAND>.*)
UNARY\\-OPERATOR\\-INSERTION\\-\\p{Digit}+
UND(?P<und_index>\\d+):\n    (?P<major>\\d+(\\.\\d*)?):\n    (?P<minor>\\d+(\\.\\d*)?)\n    
unicode-properties[/\\\\]index.js$
uniform\\s*sampler2D\\s*([\\w]*);\\s*\\/\\/\\s*([\\w|\\:\\/\\/|\\.|\\-|\\_]*)
UNIQUE KEY\\s+`(?P<name>\\w+)`\\s+\\(`?(?P<column>[\\w,` ]+)`?\\)
unique\\_violation
Unknown callback \\\"fast_send\\.mistyped\\_header\\\"
unless\\s+[^\\?]++\\?
Unloadable\\u{23F0 23F3}
unoconv\\s+(?P<version>[0-9]\\.[0-9])
Unparsed groups in body '(?P<msg>.*)' while processing
unrelated[\\/\\\\]file.js$
up (?:(?P<days>\\d+) days?,? )?(?P<hours>\\d+):(?P<minutes>\\d{2})
UPDATE `?site`? SET `?value`? = '?(?P<patch>\\d+)'? WHERE `?setting`? = 'sqlpatch'
UPDATE people SET (name|
update\\s+(ignore\\s+)?`?(?P<table>\\w+)`?\\s+set
Uppslagsord: ?(?P<sokord>.*)
uri().defined) ?? .
url[\\s]*\\(((['\"])\\/(
url[\\s]*\\((\\/(
url\\(#(?P<label>\\w+)\\)
url\\((?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)
url\\((?:([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)
url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)
url\\((?P<urls>.[^)]*)\\)
url\\(([\"']?)(?P<url>.*?)(\\1)\\)
url\\(([\"']?)[\\./]*(
url\\(([a-zA-Z0-9/\\_\\-\\.]*\\.\\w+)\\)
url\\((\\\\[^)]*)\\)
url\\([\"' ]?+(?!data:|https?:|\\/\\/)(.*?)[\"' ]?\\)
url\\([\"\\']?(?!data:)(?P<path>[^\\)]*)[\"\\']?\\)
url\\(\\s*((['\"]?)(?:[^)]|(?<=\\\\)\\))+['\"]?)\\s*\\)
url\\(\\s*(?P<quote>[\"\\']?)(?P<replace>cid:(?P<cid>[^\\\\\\')]+))(?P=quote)\\s*\\)
url\\s*\\((?P<quote>['\"]{0,1})(?P<url>[^'\"\\)]+)\\1\\)
url_video_(?P<quality>.+)
url=(?P<raw_url>.*?)(?:&title=)(?P<title>.*?)%
urn:rmap:procedure:(?P<ident>.*)/(?P<lon>[0-9]+),(?P<lat>[0-9]+)/(?P<rep_memo>.*)/(?P<pindicator>[0-9]+),(?P<p1>[0-9]+),(?P<p2>[0-9]+)/(?P<leveltype1>[0-9]+|-),(?P<l1>[0-9]+|-),(?P<leveltype2>[0-9]+|-),(?P<l2>[0-9]+|-)/(?P<var>B[0-9]{5})
Usage:\\s(?P<HELP_MSG>.*)
Usage:\\suseradd\\s\\[options\\]\\sLOGIN(?P<ERROR>.*)
USB\\\\(?:.+)\\\\(.+)
use App\\\\Containers\\\\(?P<containers>[a-zA-Z\\d]*)\\\\
use\\s(?P<database>\\w+);?
use\\s*Psr\\\\Http\\\\Message\\\\ResponseInterface\\s*(;|as\\s*([^;\\s]+)\\s*;)
use\\s+encoding(?:::source)?\\s+(['\"])(?P<encoding>[\\w-]+)\\1
use\\s+Interop\\\\Http\\\\Server(Middleware)?\\\\(DelegateInterface|RequestHandlerInterface)(\\s*)(;|as\\s*([^; ]+)\\s*;)
use\\s+Interop\\\\Http\\\\ServerMiddleware\\\\MiddlewareInterface(\\s*)(;|as\\s*([^;\\s]+)\\s*;)
use\\s+Psr\\\\Http\\\\Server\\\\MiddlewareInterface(.*);\\n?
use\\s+Psr\\\\Http\\\\Server\\\\MiddlewareInterface(\\s*)(?<end>;|as\\s*(?<alias>[^;\\s]+)\\s*;)
Useless suppression of '(?P<error_name>[^']+)'
user: (?P<username>.*?); mac: (?P<macaddress>.*?); 
useradd:\\s(?P<ERROR>.*)
Userdef\\u{23F0 23F3}
userdel:\\s(?P<ERROR>.*)
userdel:\\suser\\s(?P<USER>.*)\\sis\\scurrently\\sused\\sby\\sprocess\\s(?P<PROCESS>.*)
username (?P<user>[^\\s]+) privilege (\\d+)(?: role ([^\\s]+))?(?: (nopassword))?(?: secret (0|5|7|sha512) (.+))?.*$\\n(?:username (?P=user) sshkey (.+)$)?
username=(?P<username>[\\w-]+)&password=(?P<password>[\\w-]+)
using puppet (
USR(?P<users>\\d+)/(?P<max_users>\\d+)
UsrMarshal\\u{23F0 23F3}
v(?P<Major>\\d+)\\.(?P<Minor>\\d+).(?P<Patch>\\d+).*\\+(?P<CommitsAhead>\\d+)
V(?P<version>\\d+)__(?P<description>.+)\\.sql$
v(?P<version>\\d+\\.\\d+(\\.\\d+)?)(-(?P<release>alpha|beta|rc|post)(?P<release_number>\\d+))?(?P<suffix>(-(?P<build>\\d+))?(-(?P<hash>.+))?)
v\\s*=\\s*'((?:[^']|(?<=\\\\)')+)'|v\\s*=\\s*(\\S+)[\\s|}]
V_(?P<study>[^\\W_]+)_(?P<view>[^\\W_]+)(_(?P<type>[^\\W_]+))?
VAL\\_ (\\w+) (\\w+) (\\s*[-+]?[0-9]+\\s+\\\".+?\\\"[^;]*)
valgrind-([0-9])\\.([0-9])\\.([0-9]+)([.-\\w]+)?(\\s+)
value \\s* = \\s* [\\\"'] \\Q$$url[4]\\E ([\\\"'>])\n                       
Value must be in DOMAIN\\\\user style syntax
value\\:(?P<value>.*?)\\;
VALUE\\s+(?P<key>\\S+)\\s+(?P<flags>\\d+)\\s+(?P<bytes>\\d+)(?:\\s+(?P<cas>\\d+))?\\Z
var currentStationKey = \"(?P<radio_id>.+?)\"
var deps = \\[ *({ *name: *(?:(?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\"))) *, *module: *require\\((?:(?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")))\\) *}(?: *, *{name: *(?:(?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\"))) *, *module: *require\\((?:(?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")))\\) *})*)? *];
var deps = { *((?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")) *: *require\\((?:(?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")))\\)(?: *, *(?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")) *: *require\\((?:(?:(?:'(?:(?:(?:\\\\(?=')')|[^'])*)')|(?:\"(?:(?:(?:\\\\(?=\")\")|[^\"])*)\")))\\))*)? *};
var location_data =\\s+?(?P<json>\\[.*\\])\\;
var total_pages = (?P<count>[^;]*?);
var total_pages=(?P<count>[^;]*?);
var[ ]+currentName[^=]+=[ \\t]+(?P<quote>[\"'])(?P<name>\\w+)(?P=quote);
var\\s++\\w++\\s*+=
var\\s+myid\\s+=\\s+'([a-zA-Z0-9]++)'
variable><normal>);<
VARIANCENUMERICAL(\\d+)-([\\w\\_]+)
VARIANCEPERCENT(\\d+)-([\\w\\_]+)
vers\u00e3o=(?P<version>\\d+) (?P<columns>.+)$
version (?P<verstr>[^ ]+) 
VERSION = \"(
Version: (?P<major>\\d)\\.(?P<minor>\\d)\\.(?P<patch>\\d)
version: (?P<version>.+)
Version: (?P<version>\\S+)
version\\/([\\.\\_\\d]+).*?safari
VERSION\\s*=\\s*(?P<q>'|\")(?P<ver>[\\d\\.]+)(?P=q)
VERSION\\s*=\\s*\"(?P<version>\\d*.\\d*.\\d*.*)\"\n
version\\s*=\\s*\"(?P<version>\\d*.\\d*.\\d*.*)\"\n
Version\\s+(?P<version>[^\\s<]+)?
version\\s+(?P<version>\\d+\\.\\d+(\\.\\d+)?)(\\s+protocol\\s+version\\s+(?P<protocol>\\d+))?
Version\\s+\\| (?P<full>(?P<major>[0-9]+)\\.(?P<minor>[0-9]+)\\.(?P<patch>[0-9]+))\\s+
versionCode\\s+(?P<code>\\d+)
versionCode=(?P<versionCode>\\d+)(\\sminSdk=\\S+)?\\stargetSdk=\\d+
versionName\\s+\"(?P<name>[\\d.]+)\"
versionName=(?P<versionName>\\S+)
VID_([0-9a-f]{4})&PID_([0-9a-f]{4})(\\\\(\\w+))?
VID_([0-9a-f]{4})(&PID_([0-9a-f]{4}))?(&MI_(\\d{2}))?(\\\\(\\w+))?
video src=(?P<url>http[^ ]+m3u8[^ ]*)
Video von:\\s*(?P<uploader_id>[^|]*?)\\s*\\|\\s*vom:\\s*(?P<upload_date>[0-9][0-9]\\.[0-9][0-9]\\.[0-9][0-9][0-9][0-9])
videoId=(?P<id>\\d+)[\"']
videoSrc:\\s?[\"'](?P<url>[^\"']+)[\"']
views.(.+?[\\/\\\\])_(.+)\\.\\w+\\.\\w+$
vimlparser: (?P<description>.*): line (?P<line_number>\\d+) col (?P<column_number>\\d+)$
vnd\\.(?P<vendor>[a-zA-Z_-]+)(?:\\.(?P<version>[a-zA-Z0-9]+)(?:\\.(?P<param>[a-zA-Z0-9]+))?)?(?:\\+(?P<format>[a-zA-Z0-9]+))?
Vodafone[\\w\\-\\.\\_\\ ]*
Volume:\\s*(?P<volume>\\d+)\\s*%
vs(\\/|\\\\)editor
vs(\\/|\\\\)editor(\\/|\\\\)common(\\/|\\\\)standalone
vs(\\/|\\\\)editor(\\/|\\\\)editor.api
vs(\\/|\\\\)editor(\\/|\\\\)editor.main
vs(\\/|\\\\)editor(\\/|\\\\)editor.worker
vs(\\/|\\\\)editor(\\/|\\\\)standalone
w[(]\\\\
w[)]\\\\
w\\\\
w= *(?P<length>\\d+)
waf (?P<account>\\\\S+) (?P<region>\\\\S+) (?P<command>block) (?P<addresses>(?:\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}/\\\\d{1,2}\\\\s?)+)
waf (?P<account>\\\\S+) (?P<region>\\\\S+) (?P<command>list)
waf (?P<account>\\\\S+) (?P<region>\\\\S+) (?P<command>unblock) (?P<addresses>(?:\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}/\\\\d{1,2}\\\\s?)+)
waf (?P<command>block) (?P<addresses>(?:\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}/\\\\d{1,2}\\\\s?)+)
waf (?P<command>block) (?P<type>(?i)(header|method|query_string|uri|body)) (?P<value>\\\\S+)
waf (?P<command>list bytematchset$)
waf (?P<command>list ipset$)
waf (?P<command>set current bytematchset) (?P<bytematchset>.*)
waf (?P<command>set default account) (?P<account>\\\\S+)
waf (?P<command>set default ipset) (?P<ipset>.*)
waf (?P<command>set default region) (?P<region>\\\\S+)
waf (?P<command>unblock) (?P<addresses>(?:\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}/\\\\d{1,2}\\\\s?)+)
waf (?P<command>unblock) (?P<type>(?i)(header|method|query_string|uri|body)) (?P<value>\\\\S+)
Warmup 1: ([0-9.]+) ms \\(loops: 1, raw: [0-9.]+ ms\\)\\n\\nValue 1: ([0-9.]+) ms\\nValue 2: ([0-9.]+) ms\\n\\nMetadata:\\n(- .*\\n)+\\nMean \\+- std dev: (?P<mean>[0-9.]+) ms \\+- (?P<mad>[0-9.]+) ms\n$
WARNING: [arbiter-master.alignak.external_command] External command 'command' is not recognized, sorry
WARNING: [arbiter-master.alignak.external_command] Malformed command '[fake] shutdown_program'
WARNING: [arbiter-master.alignak.external_command] The external command 'SHUTDOWN_PROGRAM' is not currently implemented in Alignak.
warning=(?P<warningId>\\d+)
webOS[\\w\\.\\_\\-]*
Websocket error: could not parse message data as JSON: ([^]+)
Websocket\\\\(.+)Websocket$
Welcome \\Q$user\\E
wget:\\s(?P<ERROR>.*)
wgUserName=\"\\Q$self->{'username'}\\E\"
WhatsApp\\+?\\/([0-9\\.]+) (Android|S60Version|WP7)\\/([0-9\\.\\_]+) Device\\/([^\\-]+)\\-(.*)(?:-\\([0-9]+\\.[0-9]+\\))?(?:\\-H[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)?$
which: no \\Q$bindef->{'binary'}\\E in
who($curnick);\n      debug \"Logged in to \\\"$servername\\\" as \\\"$curnick\\\".\";\n    });\n\n    # Nick already used, so we permute our nick.\n    .
Whois\\s+Server\\s+\\(port ([\\d]+)\\)\\: ([\\w\\-\\.\\_]+)
width();\n    for (my $i=0; $i < $width; $i++) {\n        my @new;\n        push(@new, substr($_, $i, 1)) foreach @text;\n        my $line = join('', @new);\n        map {\n            my $n = 0;\n            my $t = $line;\n            $n++ while $t =~ s
window.gtk = '(?P<gtk>\\S+)';
window\\.siteData = (?P<data>.+);
window\\[\"ytInitialData\"\\]\\s*=\\s*(?P<ydata>\\{.*?\\})\\s*;\\s*\\n
Window\\{(?P<id>.+?) (?P<user>.+) (?P<package>.+?)(?:\\/(?P<activity>.+?))?\\}$
windows phone.*?([\\.\\_\\d]+)
windows\\s*(?:nt)?\\s*([\\.\\_\\d]+)
WindVane[\\/\\s]([\\d\\.\\_]+)
WKST=(
wordcounter)\nformtitle(Word Counting Tool)\nproc(wcFunction)\ndesc(wcDesc)\ninit(wcInit)\nlivefeedback(wcLive)\nquit(wcQuit)\n\n##\n\n=head1 NAME\n\nwordcounter - an application built using Navegante\n\n=head1 SYNOPSIS\n\nBuild the application:\n\n  $ navegante examples
WorkFlowyPHP\\\\(WorkFlowy[a-zA-Z]{0,})
workload (?P<id>\\d+) (?P<value>[0-9.]+) (?P<units>[a-zA-Z/]+) (?P<time>[0-9.]+)s
wp-image-(?P<id>\\d+)
written by\\s*(?P<name>.+)\\s\\n
www.|^(http:\\/\\/|\\/|C:\\\\)
www\\.drupal\\.org/node/(?P<number>\\d+)(#.*)?$
www\\.drupal\\.org/project/(?:\\w+)/issues/(?P<number>\\d+)(#.*)?$
x(?P<foo>\\d)
X?(?P<x>[\\d\\s]*)?Y?(?P<y>[\\d\\s]*)?
X509v3 Subject Alternative Name:[^]*X509
xfs_info_(?P<mount>.*)
Xperia(-T)?( |\\_|\\-)?([.0-9a-zA-Z]+)
XXXX([^\\/\\\\]*)$
XXXX[^\\/\\\\]*$
ye\\J
ye\\y
yes:'(?P<ssid>.+)'
Yesterday, (?P<hour>[0-9]+):(?P<minute>[0-9]+) (?P<am>[APM]+)
yhsm://(?P<host>[^:]+)(:(?P<port>\\d+))?/?
ynet - HOT -- ([\"\\']+)(?P<title>.+?)\\1
Yoga( Tablet)?[\\ |\\-|\\/|\\_]([.0-9a-zA-Z]+)
Your job (?P<id>[0-9]*) 
Your job (?P<jobid>\\d+) \\(\"
Your job-array (?P<id>\\S*) 
Yukihiro Matsumoto - \\u{677E 672C 884C 5F18}
zones\\/(?P<zone>\\S+)$
ZTE(-T)?( |\\_|\\-)?([.0-9a-zA-Z]+)
zwischen\\s+(?P<start>.+)\\s+und\\s+(?P<stop>.+)